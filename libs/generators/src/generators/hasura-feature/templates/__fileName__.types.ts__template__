import type {
  <%= className %>InsertInput,
  <%= className %>OnConflict,
  <%= className %>SetInput,
  <%= className %>BoolExp,
  <%= className %>OrderBy,
  <%= className %>SelectColumn,
  <%= className %>PkColumnsInput,
} from '@okampus/shared/graphql';

export type Insert<%= className %>ArgsType = {
  objects: Array<<%= className %>InsertInput>;
  onConflict?: <%= className %>OnConflict;
};

export type InsertOne<%= className %>ArgsType = {
  object: <%= className %>InsertInput;
  onConflict?: <%= className %>OnConflict;
};

export type Update<%= className %>ArgsType = {
  where: <%= className %>BoolExp;
  _set: <%= className %>SetInput;
};

export type Delete<%= className %>ArgsType = {
  where: <%= className %>BoolExp;
};

export type DeleteByPk<%= className %>ArgsType = {
  id: string;
};

export type UpdateByPk<%= className %>ArgsType = {
  pkColumns: <%= className %>PkColumnsInput;
  _set: <%= className %>SetInput;
};

export type Find<%= className %>ArgsType = {
  where: <%= className %>BoolExp;
  orderBy?: Array<<%= className %>OrderBy>;
  distinctOn?: Array<<%= className %>SelectColumn>;
  limit?: number;
  offset?: number;
};

export type FindByPk<%= className %>ArgsType = {
  id: string;
};

export type Aggregate<%= className %>ArgsType = {
  where: <%= className %>BoolExp;
  orderBy?: Array<<%= className %>OrderBy>;
  distinctOn?: Array<<%= className %>SelectColumn>;
  limit?: number;
  offset?: number;
};
