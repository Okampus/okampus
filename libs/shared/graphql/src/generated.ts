import { gql } from '@apollo/client';
import * as Apollo from '@apollo/client';
import type { JSONType } from '@okampus/shared/types';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
const defaultOptions = {} as const;
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string };
  String: { input: string; output: string };
  Boolean: { input: boolean; output: boolean };
  Int: { input: number; output: number };
  Float: { input: number; output: number };
  ActorImageType: { input: any; output: any };
  ActorType: { input: any; output: any };
  ApprovalState: { input: any; output: any };
  ApproximateDate: { input: any; output: any };
  BankAccountType: { input: any; output: any };
  Colors: { input: any; output: any };
  CountryCode: { input: any; output: any };
  EventState: { input: any; output: any };
  LegalUnitType: { input: any; output: any };
  LocationType: { input: any; output: any };
  PaymentMethod: { input: any; output: any };
  ProcessedByType: { input: any; output: any };
  ProcessedVia: { input: any; output: any };
  ProjectType: { input: any; output: any };
  SocialType: { input: any; output: any };
  TagType: { input: any; output: any };
  TeamHistoryType: { input: any; output: any };
  TeamRoleType: { input: any; output: any };
  TeamType: { input: any; output: any };
  TenantRoleType: { input: any; output: any };
  TransactionType: { input: any; output: any };
  bigint: { input: string; output: string };
  jsonb: { input: JSONType; output: JSONType };
  smallint: { input: number; output: number };
  timestamptz: { input: string; output: string };
};

export type Action = {
  __typename?: 'Action';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  eventJoin?: Maybe<EventJoin>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  points?: Maybe<Scalars['smallint']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedBy?: Maybe<User>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  state: Scalars['ApprovalState']['output'];
  team?: Maybe<Team>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  user: User;
  userId: Scalars['bigint']['output'];
};

export type ActionAggregate = {
  __typename?: 'ActionAggregate';
  aggregate?: Maybe<ActionAggregateFields>;
  nodes: Array<Action>;
};

export type ActionAggregateBoolExp = {
  count?: InputMaybe<ActionAggregateBoolExpCount>;
};

export type ActionAggregateFields = {
  __typename?: 'ActionAggregateFields';
  avg?: Maybe<ActionAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ActionMaxFields>;
  min?: Maybe<ActionMinFields>;
  stddev?: Maybe<ActionStddevFields>;
  stddevPop?: Maybe<ActionStddevPopFields>;
  stddevSamp?: Maybe<ActionStddevSampFields>;
  sum?: Maybe<ActionSumFields>;
  varPop?: Maybe<ActionVarPopFields>;
  varSamp?: Maybe<ActionVarSampFields>;
  variance?: Maybe<ActionVarianceFields>;
};

export type ActionAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ActionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ActionAggregateOrderBy = {
  avg?: InputMaybe<ActionAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ActionMaxOrderBy>;
  min?: InputMaybe<ActionMinOrderBy>;
  stddev?: InputMaybe<ActionStddevOrderBy>;
  stddevPop?: InputMaybe<ActionStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ActionStddevSampOrderBy>;
  sum?: InputMaybe<ActionSumOrderBy>;
  varPop?: InputMaybe<ActionVarPopOrderBy>;
  varSamp?: InputMaybe<ActionVarSampOrderBy>;
  variance?: InputMaybe<ActionVarianceOrderBy>;
};

export type ActionArrRelInsertInput = {
  data: Array<ActionInsertInput>;
  onConflict?: InputMaybe<ActionOnConflict>;
};

export type ActionAvgFields = {
  __typename?: 'ActionAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ActionAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionBoolExp = {
  _and?: InputMaybe<Array<ActionBoolExp>>;
  _not?: InputMaybe<ActionBoolExp>;
  _or?: InputMaybe<Array<ActionBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  eventJoin?: InputMaybe<EventJoinBoolExp>;
  eventJoinId?: InputMaybe<BigintComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  points?: InputMaybe<SmallintComparisonExp>;
  processedAt?: InputMaybe<TimestamptzComparisonExp>;
  processedBy?: InputMaybe<UserBoolExp>;
  processedById?: InputMaybe<BigintComparisonExp>;
  project?: InputMaybe<ProjectBoolExp>;
  projectId?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<ApprovalStateComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
  userId?: InputMaybe<BigintComparisonExp>;
};

export enum ActionConstraint {
  ActionPkey = 'action_pkey',
}

export type ActionIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActionInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventJoin?: InputMaybe<EventJoinObjRelInsertInput>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedBy?: InputMaybe<UserObjRelInsertInput>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<ProjectObjRelInsertInput>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActionMaxFields = {
  __typename?: 'ActionMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  points?: Maybe<Scalars['smallint']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ActionMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionMinFields = {
  __typename?: 'ActionMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  points?: Maybe<Scalars['smallint']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ActionMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionMutationResponse = {
  __typename?: 'ActionMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Action>;
};

export type ActionOnConflict = {
  constraint: ActionConstraint;
  updateColumns?: Array<ActionUpdateColumn>;
  where?: InputMaybe<ActionBoolExp>;
};

export type ActionOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventJoin?: InputMaybe<EventJoinOrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedBy?: InputMaybe<UserOrderBy>;
  processedById?: InputMaybe<OrderBy>;
  project?: InputMaybe<ProjectOrderBy>;
  projectId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ActionSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventJoinId = 'eventJoinId',
  Id = 'id',
  Name = 'name',
  Points = 'points',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  ProjectId = 'projectId',
  State = 'state',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
  UserId = 'userId',
}

export type ActionSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActionStddevFields = {
  __typename?: 'ActionStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ActionStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionStddevPopFields = {
  __typename?: 'ActionStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ActionStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionStddevSampFields = {
  __typename?: 'ActionStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ActionStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionStreamCursorInput = {
  initialValue: ActionStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ActionStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActionSumFields = {
  __typename?: 'ActionSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  points?: Maybe<Scalars['smallint']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ActionSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum ActionUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventJoinId = 'eventJoinId',
  Id = 'id',
  Name = 'name',
  Points = 'points',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  ProjectId = 'projectId',
  State = 'state',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
  UserId = 'userId',
}

export type ActionUpdates = {
  _inc?: InputMaybe<ActionIncInput>;
  _set?: InputMaybe<ActionSetInput>;
  where: ActionBoolExp;
};

export type ActionVarPopFields = {
  __typename?: 'ActionVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ActionVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionVarSampFields = {
  __typename?: 'ActionVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ActionVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionVarianceFields = {
  __typename?: 'ActionVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ActionVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type Actor = {
  __typename?: 'Actor';
  actorImages: Array<ActorImage>;
  actorImagesAggregate: ActorImageAggregate;
  actorTags: Array<ActorTag>;
  actorTagsAggregate: ActorTagAggregate;
  avatar?: Maybe<Scalars['String']['output']>;
  bankInfos: Array<BankInfo>;
  bankInfosAggregate: BankInfoAggregate;
  banner?: Maybe<Scalars['String']['output']>;
  bio: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  followers: Array<Follow>;
  followersAggregate: FollowAggregate;
  ical: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  legalUnit?: Maybe<LegalUnit>;
  locations: Array<Location>;
  locationsAggregate: LocationAggregate;
  name: Scalars['String']['output'];
  ownedTags: Array<Tag>;
  ownedTagsAggregate: TagAggregate;
  payedTransactions: Array<Transaction>;
  payedTransactionsAggregate: TransactionAggregate;
  receivedTransactions: Array<Transaction>;
  receivedTransactionsAggregate: TransactionAggregate;
  socials: Array<Social>;
  socialsAggregate: SocialAggregate;
  status: Scalars['String']['output'];
  team?: Maybe<Team>;
  tenant?: Maybe<Tenant>;
  tenantScope?: Maybe<Tenant>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type: Scalars['ActorType']['output'];
  user?: Maybe<User>;
  website?: Maybe<Scalars['String']['output']>;
};

export type ActorActorImagesArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type ActorActorImagesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type ActorActorTagsArgs = {
  distinctOn?: InputMaybe<Array<ActorTagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagOrderBy>>;
  where?: InputMaybe<ActorTagBoolExp>;
};

export type ActorActorTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorTagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagOrderBy>>;
  where?: InputMaybe<ActorTagBoolExp>;
};

export type ActorBankInfosArgs = {
  distinctOn?: InputMaybe<Array<BankInfoSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankInfoOrderBy>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type ActorBankInfosAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankInfoSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankInfoOrderBy>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type ActorFollowersArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type ActorFollowersAggregateArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type ActorLocationsArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type ActorLocationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type ActorOwnedTagsArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type ActorOwnedTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type ActorPayedTransactionsArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type ActorPayedTransactionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type ActorReceivedTransactionsArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type ActorReceivedTransactionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type ActorSocialsArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type ActorSocialsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type ActorAggregate = {
  __typename?: 'ActorAggregate';
  aggregate?: Maybe<ActorAggregateFields>;
  nodes: Array<Actor>;
};

export type ActorAggregateBoolExp = {
  count?: InputMaybe<ActorAggregateBoolExpCount>;
};

export type ActorAggregateFields = {
  __typename?: 'ActorAggregateFields';
  avg?: Maybe<ActorAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ActorMaxFields>;
  min?: Maybe<ActorMinFields>;
  stddev?: Maybe<ActorStddevFields>;
  stddevPop?: Maybe<ActorStddevPopFields>;
  stddevSamp?: Maybe<ActorStddevSampFields>;
  sum?: Maybe<ActorSumFields>;
  varPop?: Maybe<ActorVarPopFields>;
  varSamp?: Maybe<ActorVarSampFields>;
  variance?: Maybe<ActorVarianceFields>;
};

export type ActorAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ActorSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ActorAggregateOrderBy = {
  avg?: InputMaybe<ActorAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ActorMaxOrderBy>;
  min?: InputMaybe<ActorMinOrderBy>;
  stddev?: InputMaybe<ActorStddevOrderBy>;
  stddevPop?: InputMaybe<ActorStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ActorStddevSampOrderBy>;
  sum?: InputMaybe<ActorSumOrderBy>;
  varPop?: InputMaybe<ActorVarPopOrderBy>;
  varSamp?: InputMaybe<ActorVarSampOrderBy>;
  variance?: InputMaybe<ActorVarianceOrderBy>;
};

export type ActorArrRelInsertInput = {
  data: Array<ActorInsertInput>;
  onConflict?: InputMaybe<ActorOnConflict>;
};

export type ActorAvgFields = {
  __typename?: 'ActorAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ActorAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorBoolExp = {
  _and?: InputMaybe<Array<ActorBoolExp>>;
  _not?: InputMaybe<ActorBoolExp>;
  _or?: InputMaybe<Array<ActorBoolExp>>;
  actorImages?: InputMaybe<ActorImageBoolExp>;
  actorImagesAggregate?: InputMaybe<ActorImageAggregateBoolExp>;
  actorTags?: InputMaybe<ActorTagBoolExp>;
  actorTagsAggregate?: InputMaybe<ActorTagAggregateBoolExp>;
  avatar?: InputMaybe<StringComparisonExp>;
  bankInfos?: InputMaybe<BankInfoBoolExp>;
  bankInfosAggregate?: InputMaybe<BankInfoAggregateBoolExp>;
  banner?: InputMaybe<StringComparisonExp>;
  bio?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  email?: InputMaybe<StringComparisonExp>;
  followers?: InputMaybe<FollowBoolExp>;
  followersAggregate?: InputMaybe<FollowAggregateBoolExp>;
  ical?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  legalUnit?: InputMaybe<LegalUnitBoolExp>;
  locations?: InputMaybe<LocationBoolExp>;
  locationsAggregate?: InputMaybe<LocationAggregateBoolExp>;
  name?: InputMaybe<StringComparisonExp>;
  ownedTags?: InputMaybe<TagBoolExp>;
  ownedTagsAggregate?: InputMaybe<TagAggregateBoolExp>;
  payedTransactions?: InputMaybe<TransactionBoolExp>;
  payedTransactionsAggregate?: InputMaybe<TransactionAggregateBoolExp>;
  receivedTransactions?: InputMaybe<TransactionBoolExp>;
  receivedTransactionsAggregate?: InputMaybe<TransactionAggregateBoolExp>;
  socials?: InputMaybe<SocialBoolExp>;
  socialsAggregate?: InputMaybe<SocialAggregateBoolExp>;
  status?: InputMaybe<StringComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<ActorTypeComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
  website?: InputMaybe<StringComparisonExp>;
};

export enum ActorConstraint {
  ActorIcalUnique = 'actor_ical_unique',
  ActorPkey = 'actor_pkey',
}

export type ActorImage = {
  __typename?: 'ActorImage';
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  image: FileUpload;
  imageId: Scalars['bigint']['output'];
  tenantScope?: Maybe<Tenant>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type: Scalars['ActorImageType']['output'];
};

export type ActorImageAggregate = {
  __typename?: 'ActorImageAggregate';
  aggregate?: Maybe<ActorImageAggregateFields>;
  nodes: Array<ActorImage>;
};

export type ActorImageAggregateBoolExp = {
  count?: InputMaybe<ActorImageAggregateBoolExpCount>;
};

export type ActorImageAggregateFields = {
  __typename?: 'ActorImageAggregateFields';
  avg?: Maybe<ActorImageAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ActorImageMaxFields>;
  min?: Maybe<ActorImageMinFields>;
  stddev?: Maybe<ActorImageStddevFields>;
  stddevPop?: Maybe<ActorImageStddevPopFields>;
  stddevSamp?: Maybe<ActorImageStddevSampFields>;
  sum?: Maybe<ActorImageSumFields>;
  varPop?: Maybe<ActorImageVarPopFields>;
  varSamp?: Maybe<ActorImageVarSampFields>;
  variance?: Maybe<ActorImageVarianceFields>;
};

export type ActorImageAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ActorImageSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ActorImageAggregateOrderBy = {
  avg?: InputMaybe<ActorImageAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ActorImageMaxOrderBy>;
  min?: InputMaybe<ActorImageMinOrderBy>;
  stddev?: InputMaybe<ActorImageStddevOrderBy>;
  stddevPop?: InputMaybe<ActorImageStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ActorImageStddevSampOrderBy>;
  sum?: InputMaybe<ActorImageSumOrderBy>;
  varPop?: InputMaybe<ActorImageVarPopOrderBy>;
  varSamp?: InputMaybe<ActorImageVarSampOrderBy>;
  variance?: InputMaybe<ActorImageVarianceOrderBy>;
};

export type ActorImageArrRelInsertInput = {
  data: Array<ActorImageInsertInput>;
  onConflict?: InputMaybe<ActorImageOnConflict>;
};

export type ActorImageAvgFields = {
  __typename?: 'ActorImageAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ActorImageAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorImageBoolExp = {
  _and?: InputMaybe<Array<ActorImageBoolExp>>;
  _not?: InputMaybe<ActorImageBoolExp>;
  _or?: InputMaybe<Array<ActorImageBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  image?: InputMaybe<FileUploadBoolExp>;
  imageId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<ActorImageTypeComparisonExp>;
};

export enum ActorImageConstraint {
  ActorImageImageIdUnique = 'actor_image_image_id_unique',
  ActorImagePkey = 'actor_image_pkey',
}

export type ActorImageIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  imageId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActorImageInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  image?: InputMaybe<FileUploadObjRelInsertInput>;
  imageId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['ActorImageType']['input']>;
};

export type ActorImageMaxFields = {
  __typename?: 'ActorImageMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  imageId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['ActorImageType']['output']>;
};

export type ActorImageMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ActorImageMinFields = {
  __typename?: 'ActorImageMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  imageId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['ActorImageType']['output']>;
};

export type ActorImageMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ActorImageMutationResponse = {
  __typename?: 'ActorImageMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ActorImage>;
};

export type ActorImageObjRelInsertInput = {
  data: ActorImageInsertInput;
  onConflict?: InputMaybe<ActorImageOnConflict>;
};

export type ActorImageOnConflict = {
  constraint: ActorImageConstraint;
  updateColumns?: Array<ActorImageUpdateColumn>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type ActorImageOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  image?: InputMaybe<FileUploadOrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ActorImagePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ActorImageSelectColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  ImageId = 'imageId',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export type ActorImageSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  imageId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['ActorImageType']['input']>;
};

export type ActorImageStddevFields = {
  __typename?: 'ActorImageStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ActorImageStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorImageStddevPopFields = {
  __typename?: 'ActorImageStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ActorImageStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorImageStddevSampFields = {
  __typename?: 'ActorImageStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ActorImageStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorImageStreamCursorInput = {
  initialValue: ActorImageStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ActorImageStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  imageId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['ActorImageType']['input']>;
};

export type ActorImageSumFields = {
  __typename?: 'ActorImageSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  imageId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type ActorImageSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorImageTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['ActorImageType']['input']>;
  _gt?: InputMaybe<Scalars['ActorImageType']['input']>;
  _gte?: InputMaybe<Scalars['ActorImageType']['input']>;
  _in?: InputMaybe<Array<Scalars['ActorImageType']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['ActorImageType']['input']>;
  _lte?: InputMaybe<Scalars['ActorImageType']['input']>;
  _neq?: InputMaybe<Scalars['ActorImageType']['input']>;
  _nin?: InputMaybe<Array<Scalars['ActorImageType']['input']>>;
};

export enum ActorImageUpdateColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  ImageId = 'imageId',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export type ActorImageUpdates = {
  _inc?: InputMaybe<ActorImageIncInput>;
  _set?: InputMaybe<ActorImageSetInput>;
  where: ActorImageBoolExp;
};

export type ActorImageVarPopFields = {
  __typename?: 'ActorImageVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ActorImageVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorImageVarSampFields = {
  __typename?: 'ActorImageVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ActorImageVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorImageVarianceFields = {
  __typename?: 'ActorImageVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ActorImageVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActorInsertInput = {
  actorImages?: InputMaybe<ActorImageArrRelInsertInput>;
  actorTags?: InputMaybe<ActorTagArrRelInsertInput>;
  avatar?: InputMaybe<Scalars['String']['input']>;
  bankInfos?: InputMaybe<BankInfoArrRelInsertInput>;
  banner?: InputMaybe<Scalars['String']['input']>;
  bio?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  followers?: InputMaybe<FollowArrRelInsertInput>;
  ical?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  legalUnit?: InputMaybe<LegalUnitObjRelInsertInput>;
  locations?: InputMaybe<LocationArrRelInsertInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  ownedTags?: InputMaybe<TagArrRelInsertInput>;
  payedTransactions?: InputMaybe<TransactionArrRelInsertInput>;
  receivedTransactions?: InputMaybe<TransactionArrRelInsertInput>;
  socials?: InputMaybe<SocialArrRelInsertInput>;
  status?: InputMaybe<Scalars['String']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['ActorType']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
  website?: InputMaybe<Scalars['String']['input']>;
};

export type ActorMaxFields = {
  __typename?: 'ActorMaxFields';
  avatar?: Maybe<Scalars['String']['output']>;
  banner?: Maybe<Scalars['String']['output']>;
  bio?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  ical?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['ActorType']['output']>;
  website?: Maybe<Scalars['String']['output']>;
};

export type ActorMaxOrderBy = {
  avatar?: InputMaybe<OrderBy>;
  banner?: InputMaybe<OrderBy>;
  bio?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  email?: InputMaybe<OrderBy>;
  ical?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  website?: InputMaybe<OrderBy>;
};

export type ActorMinFields = {
  __typename?: 'ActorMinFields';
  avatar?: Maybe<Scalars['String']['output']>;
  banner?: Maybe<Scalars['String']['output']>;
  bio?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  ical?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['ActorType']['output']>;
  website?: Maybe<Scalars['String']['output']>;
};

export type ActorMinOrderBy = {
  avatar?: InputMaybe<OrderBy>;
  banner?: InputMaybe<OrderBy>;
  bio?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  email?: InputMaybe<OrderBy>;
  ical?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  website?: InputMaybe<OrderBy>;
};

export type ActorMutationResponse = {
  __typename?: 'ActorMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Actor>;
};

export type ActorObjRelInsertInput = {
  data: ActorInsertInput;
  onConflict?: InputMaybe<ActorOnConflict>;
};

export type ActorOnConflict = {
  constraint: ActorConstraint;
  updateColumns?: Array<ActorUpdateColumn>;
  where?: InputMaybe<ActorBoolExp>;
};

export type ActorOrderBy = {
  actorImagesAggregate?: InputMaybe<ActorImageAggregateOrderBy>;
  actorTagsAggregate?: InputMaybe<ActorTagAggregateOrderBy>;
  avatar?: InputMaybe<OrderBy>;
  bankInfosAggregate?: InputMaybe<BankInfoAggregateOrderBy>;
  banner?: InputMaybe<OrderBy>;
  bio?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  email?: InputMaybe<OrderBy>;
  followersAggregate?: InputMaybe<FollowAggregateOrderBy>;
  ical?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnit?: InputMaybe<LegalUnitOrderBy>;
  locationsAggregate?: InputMaybe<LocationAggregateOrderBy>;
  name?: InputMaybe<OrderBy>;
  ownedTagsAggregate?: InputMaybe<TagAggregateOrderBy>;
  payedTransactionsAggregate?: InputMaybe<TransactionAggregateOrderBy>;
  receivedTransactionsAggregate?: InputMaybe<TransactionAggregateOrderBy>;
  socialsAggregate?: InputMaybe<SocialAggregateOrderBy>;
  status?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
  website?: InputMaybe<OrderBy>;
};

export type ActorPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ActorSelectColumn {
  Avatar = 'avatar',
  Banner = 'banner',
  Bio = 'bio',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Email = 'email',
  Ical = 'ical',
  Id = 'id',
  Name = 'name',
  Status = 'status',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
  Website = 'website',
}

export type ActorSetInput = {
  avatar?: InputMaybe<Scalars['String']['input']>;
  banner?: InputMaybe<Scalars['String']['input']>;
  bio?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  ical?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['ActorType']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

export type ActorStddevFields = {
  __typename?: 'ActorStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ActorStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorStddevPopFields = {
  __typename?: 'ActorStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ActorStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorStddevSampFields = {
  __typename?: 'ActorStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ActorStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorStreamCursorInput = {
  initialValue: ActorStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ActorStreamCursorValueInput = {
  avatar?: InputMaybe<Scalars['String']['input']>;
  banner?: InputMaybe<Scalars['String']['input']>;
  bio?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  ical?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['ActorType']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

export type ActorSumFields = {
  __typename?: 'ActorSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type ActorSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorTag = {
  __typename?: 'ActorTag';
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  tag: Tag;
  tagId: Scalars['bigint']['output'];
};

export type ActorTagAggregate = {
  __typename?: 'ActorTagAggregate';
  aggregate?: Maybe<ActorTagAggregateFields>;
  nodes: Array<ActorTag>;
};

export type ActorTagAggregateBoolExp = {
  count?: InputMaybe<ActorTagAggregateBoolExpCount>;
};

export type ActorTagAggregateFields = {
  __typename?: 'ActorTagAggregateFields';
  avg?: Maybe<ActorTagAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ActorTagMaxFields>;
  min?: Maybe<ActorTagMinFields>;
  stddev?: Maybe<ActorTagStddevFields>;
  stddevPop?: Maybe<ActorTagStddevPopFields>;
  stddevSamp?: Maybe<ActorTagStddevSampFields>;
  sum?: Maybe<ActorTagSumFields>;
  varPop?: Maybe<ActorTagVarPopFields>;
  varSamp?: Maybe<ActorTagVarSampFields>;
  variance?: Maybe<ActorTagVarianceFields>;
};

export type ActorTagAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ActorTagSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ActorTagAggregateOrderBy = {
  avg?: InputMaybe<ActorTagAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ActorTagMaxOrderBy>;
  min?: InputMaybe<ActorTagMinOrderBy>;
  stddev?: InputMaybe<ActorTagStddevOrderBy>;
  stddevPop?: InputMaybe<ActorTagStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ActorTagStddevSampOrderBy>;
  sum?: InputMaybe<ActorTagSumOrderBy>;
  varPop?: InputMaybe<ActorTagVarPopOrderBy>;
  varSamp?: InputMaybe<ActorTagVarSampOrderBy>;
  variance?: InputMaybe<ActorTagVarianceOrderBy>;
};

export type ActorTagArrRelInsertInput = {
  data: Array<ActorTagInsertInput>;
  onConflict?: InputMaybe<ActorTagOnConflict>;
};

export type ActorTagAvgFields = {
  __typename?: 'ActorTagAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ActorTagAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagBoolExp = {
  _and?: InputMaybe<Array<ActorTagBoolExp>>;
  _not?: InputMaybe<ActorTagBoolExp>;
  _or?: InputMaybe<Array<ActorTagBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  tag?: InputMaybe<TagBoolExp>;
  tagId?: InputMaybe<BigintComparisonExp>;
};

export enum ActorTagConstraint {
  ActorTagPkey = 'actor_tag_pkey',
}

export type ActorTagIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActorTagInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  tag?: InputMaybe<TagObjRelInsertInput>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActorTagMaxFields = {
  __typename?: 'ActorTagMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type ActorTagMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagMinFields = {
  __typename?: 'ActorTagMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type ActorTagMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagMutationResponse = {
  __typename?: 'ActorTagMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ActorTag>;
};

export type ActorTagOnConflict = {
  constraint: ActorTagConstraint;
  updateColumns?: Array<ActorTagUpdateColumn>;
  where?: InputMaybe<ActorTagBoolExp>;
};

export type ActorTagOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  tag?: InputMaybe<TagOrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagPkColumnsInput = {
  actorId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export enum ActorTagSelectColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  TagId = 'tagId',
}

export type ActorTagSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActorTagStddevFields = {
  __typename?: 'ActorTagStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ActorTagStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagStddevPopFields = {
  __typename?: 'ActorTagStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ActorTagStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagStddevSampFields = {
  __typename?: 'ActorTagStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ActorTagStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagStreamCursorInput = {
  initialValue: ActorTagStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ActorTagStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActorTagSumFields = {
  __typename?: 'ActorTagSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type ActorTagSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export enum ActorTagUpdateColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  TagId = 'tagId',
}

export type ActorTagUpdates = {
  _inc?: InputMaybe<ActorTagIncInput>;
  _set?: InputMaybe<ActorTagSetInput>;
  where: ActorTagBoolExp;
};

export type ActorTagVarPopFields = {
  __typename?: 'ActorTagVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ActorTagVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagVarSampFields = {
  __typename?: 'ActorTagVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ActorTagVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagVarianceFields = {
  __typename?: 'ActorTagVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ActorTagVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['ActorType']['input']>;
  _gt?: InputMaybe<Scalars['ActorType']['input']>;
  _gte?: InputMaybe<Scalars['ActorType']['input']>;
  _in?: InputMaybe<Array<Scalars['ActorType']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['ActorType']['input']>;
  _lte?: InputMaybe<Scalars['ActorType']['input']>;
  _neq?: InputMaybe<Scalars['ActorType']['input']>;
  _nin?: InputMaybe<Array<Scalars['ActorType']['input']>>;
};

export enum ActorUpdateColumn {
  Avatar = 'avatar',
  Banner = 'banner',
  Bio = 'bio',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Email = 'email',
  Ical = 'ical',
  Id = 'id',
  Name = 'name',
  Status = 'status',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
  Website = 'website',
}

export type ActorUpdates = {
  _inc?: InputMaybe<ActorIncInput>;
  _set?: InputMaybe<ActorSetInput>;
  where: ActorBoolExp;
};

export type ActorVarPopFields = {
  __typename?: 'ActorVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ActorVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorVarSampFields = {
  __typename?: 'ActorVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ActorVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ActorVarianceFields = {
  __typename?: 'ActorVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ActorVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type Address = {
  __typename?: 'Address';
  bankInfos: Array<BankInfo>;
  bankInfosAggregate: BankInfoAggregate;
  category: Scalars['String']['output'];
  city: Scalars['String']['output'];
  country: Scalars['CountryCode']['output'];
  createdAt: Scalars['timestamptz']['output'];
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  geoapifyId: Scalars['String']['output'];
  latitude?: Maybe<Scalars['Float']['output']>;
  locations: Array<Location>;
  locationsAggregate: LocationAggregate;
  longitude?: Maybe<Scalars['Float']['output']>;
  name: Scalars['String']['output'];
  state: Scalars['String']['output'];
  street: Scalars['String']['output'];
  streetNumber: Scalars['String']['output'];
  zip: Scalars['String']['output'];
};

export type AddressBankInfosArgs = {
  distinctOn?: InputMaybe<Array<BankInfoSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankInfoOrderBy>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type AddressBankInfosAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankInfoSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankInfoOrderBy>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type AddressLocationsArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type AddressLocationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type AddressAggregate = {
  __typename?: 'AddressAggregate';
  aggregate?: Maybe<AddressAggregateFields>;
  nodes: Array<Address>;
};

export type AddressAggregateFields = {
  __typename?: 'AddressAggregateFields';
  avg?: Maybe<AddressAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<AddressMaxFields>;
  min?: Maybe<AddressMinFields>;
  stddev?: Maybe<AddressStddevFields>;
  stddevPop?: Maybe<AddressStddevPopFields>;
  stddevSamp?: Maybe<AddressStddevSampFields>;
  sum?: Maybe<AddressSumFields>;
  varPop?: Maybe<AddressVarPopFields>;
  varSamp?: Maybe<AddressVarSampFields>;
  variance?: Maybe<AddressVarianceFields>;
};

export type AddressAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<AddressSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AddressAvgFields = {
  __typename?: 'AddressAvgFields';
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AddressBoolExp = {
  _and?: InputMaybe<Array<AddressBoolExp>>;
  _not?: InputMaybe<AddressBoolExp>;
  _or?: InputMaybe<Array<AddressBoolExp>>;
  bankInfos?: InputMaybe<BankInfoBoolExp>;
  bankInfosAggregate?: InputMaybe<BankInfoAggregateBoolExp>;
  category?: InputMaybe<StringComparisonExp>;
  city?: InputMaybe<StringComparisonExp>;
  country?: InputMaybe<CountryCodeComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  geoapifyId?: InputMaybe<StringComparisonExp>;
  latitude?: InputMaybe<FloatComparisonExp>;
  locations?: InputMaybe<LocationBoolExp>;
  locationsAggregate?: InputMaybe<LocationAggregateBoolExp>;
  longitude?: InputMaybe<FloatComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  state?: InputMaybe<StringComparisonExp>;
  street?: InputMaybe<StringComparisonExp>;
  streetNumber?: InputMaybe<StringComparisonExp>;
  zip?: InputMaybe<StringComparisonExp>;
};

export enum AddressConstraint {
  AddressPkey = 'address_pkey',
}

export type AddressIncInput = {
  latitude?: InputMaybe<Scalars['Float']['input']>;
  longitude?: InputMaybe<Scalars['Float']['input']>;
};

export type AddressInsertInput = {
  bankInfos?: InputMaybe<BankInfoArrRelInsertInput>;
  category?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['CountryCode']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  geoapifyId?: InputMaybe<Scalars['String']['input']>;
  latitude?: InputMaybe<Scalars['Float']['input']>;
  locations?: InputMaybe<LocationArrRelInsertInput>;
  longitude?: InputMaybe<Scalars['Float']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  street?: InputMaybe<Scalars['String']['input']>;
  streetNumber?: InputMaybe<Scalars['String']['input']>;
  zip?: InputMaybe<Scalars['String']['input']>;
};

export type AddressMaxFields = {
  __typename?: 'AddressMaxFields';
  category?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['CountryCode']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  geoapifyId?: Maybe<Scalars['String']['output']>;
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  street?: Maybe<Scalars['String']['output']>;
  streetNumber?: Maybe<Scalars['String']['output']>;
  zip?: Maybe<Scalars['String']['output']>;
};

export type AddressMinFields = {
  __typename?: 'AddressMinFields';
  category?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['CountryCode']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  geoapifyId?: Maybe<Scalars['String']['output']>;
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  street?: Maybe<Scalars['String']['output']>;
  streetNumber?: Maybe<Scalars['String']['output']>;
  zip?: Maybe<Scalars['String']['output']>;
};

export type AddressMutationResponse = {
  __typename?: 'AddressMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Address>;
};

export type AddressObjRelInsertInput = {
  data: AddressInsertInput;
  onConflict?: InputMaybe<AddressOnConflict>;
};

export type AddressOnConflict = {
  constraint: AddressConstraint;
  updateColumns?: Array<AddressUpdateColumn>;
  where?: InputMaybe<AddressBoolExp>;
};

export type AddressOrderBy = {
  bankInfosAggregate?: InputMaybe<BankInfoAggregateOrderBy>;
  category?: InputMaybe<OrderBy>;
  city?: InputMaybe<OrderBy>;
  country?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  geoapifyId?: InputMaybe<OrderBy>;
  latitude?: InputMaybe<OrderBy>;
  locationsAggregate?: InputMaybe<LocationAggregateOrderBy>;
  longitude?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  street?: InputMaybe<OrderBy>;
  streetNumber?: InputMaybe<OrderBy>;
  zip?: InputMaybe<OrderBy>;
};

export type AddressPkColumnsInput = {
  geoapifyId: Scalars['String']['input'];
};

export enum AddressSelectColumn {
  Category = 'category',
  City = 'city',
  Country = 'country',
  CreatedAt = 'createdAt',
  DeletedAt = 'deletedAt',
  GeoapifyId = 'geoapifyId',
  Latitude = 'latitude',
  Longitude = 'longitude',
  Name = 'name',
  State = 'state',
  Street = 'street',
  StreetNumber = 'streetNumber',
  Zip = 'zip',
}

export type AddressSetInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['CountryCode']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  geoapifyId?: InputMaybe<Scalars['String']['input']>;
  latitude?: InputMaybe<Scalars['Float']['input']>;
  longitude?: InputMaybe<Scalars['Float']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  street?: InputMaybe<Scalars['String']['input']>;
  streetNumber?: InputMaybe<Scalars['String']['input']>;
  zip?: InputMaybe<Scalars['String']['input']>;
};

export type AddressStddevFields = {
  __typename?: 'AddressStddevFields';
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AddressStddevPopFields = {
  __typename?: 'AddressStddevPopFields';
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AddressStddevSampFields = {
  __typename?: 'AddressStddevSampFields';
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AddressStreamCursorInput = {
  initialValue: AddressStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type AddressStreamCursorValueInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['CountryCode']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  geoapifyId?: InputMaybe<Scalars['String']['input']>;
  latitude?: InputMaybe<Scalars['Float']['input']>;
  longitude?: InputMaybe<Scalars['Float']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  street?: InputMaybe<Scalars['String']['input']>;
  streetNumber?: InputMaybe<Scalars['String']['input']>;
  zip?: InputMaybe<Scalars['String']['input']>;
};

export type AddressSumFields = {
  __typename?: 'AddressSumFields';
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export enum AddressUpdateColumn {
  Category = 'category',
  City = 'city',
  Country = 'country',
  CreatedAt = 'createdAt',
  DeletedAt = 'deletedAt',
  GeoapifyId = 'geoapifyId',
  Latitude = 'latitude',
  Longitude = 'longitude',
  Name = 'name',
  State = 'state',
  Street = 'street',
  StreetNumber = 'streetNumber',
  Zip = 'zip',
}

export type AddressUpdates = {
  _inc?: InputMaybe<AddressIncInput>;
  _set?: InputMaybe<AddressSetInput>;
  where: AddressBoolExp;
};

export type AddressVarPopFields = {
  __typename?: 'AddressVarPopFields';
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AddressVarSampFields = {
  __typename?: 'AddressVarSampFields';
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AddressVarianceFields = {
  __typename?: 'AddressVarianceFields';
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AdminRole = {
  __typename?: 'AdminRole';
  canCreateTenant: Scalars['Boolean']['output'];
  canDeleteTenantEntities: Scalars['Boolean']['output'];
  canManageTenantEntities: Scalars['Boolean']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  tenant?: Maybe<Tenant>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  user: User;
  userId: Scalars['bigint']['output'];
};

export type AdminRoleAggregate = {
  __typename?: 'AdminRoleAggregate';
  aggregate?: Maybe<AdminRoleAggregateFields>;
  nodes: Array<AdminRole>;
};

export type AdminRoleAggregateBoolExp = {
  bool_and?: InputMaybe<AdminRoleAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<AdminRoleAggregateBoolExpBool_Or>;
  count?: InputMaybe<AdminRoleAggregateBoolExpCount>;
};

export type AdminRoleAggregateFields = {
  __typename?: 'AdminRoleAggregateFields';
  avg?: Maybe<AdminRoleAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<AdminRoleMaxFields>;
  min?: Maybe<AdminRoleMinFields>;
  stddev?: Maybe<AdminRoleStddevFields>;
  stddevPop?: Maybe<AdminRoleStddevPopFields>;
  stddevSamp?: Maybe<AdminRoleStddevSampFields>;
  sum?: Maybe<AdminRoleSumFields>;
  varPop?: Maybe<AdminRoleVarPopFields>;
  varSamp?: Maybe<AdminRoleVarSampFields>;
  variance?: Maybe<AdminRoleVarianceFields>;
};

export type AdminRoleAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<AdminRoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AdminRoleAggregateOrderBy = {
  avg?: InputMaybe<AdminRoleAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<AdminRoleMaxOrderBy>;
  min?: InputMaybe<AdminRoleMinOrderBy>;
  stddev?: InputMaybe<AdminRoleStddevOrderBy>;
  stddevPop?: InputMaybe<AdminRoleStddevPopOrderBy>;
  stddevSamp?: InputMaybe<AdminRoleStddevSampOrderBy>;
  sum?: InputMaybe<AdminRoleSumOrderBy>;
  varPop?: InputMaybe<AdminRoleVarPopOrderBy>;
  varSamp?: InputMaybe<AdminRoleVarSampOrderBy>;
  variance?: InputMaybe<AdminRoleVarianceOrderBy>;
};

export type AdminRoleArrRelInsertInput = {
  data: Array<AdminRoleInsertInput>;
  onConflict?: InputMaybe<AdminRoleOnConflict>;
};

export type AdminRoleAvgFields = {
  __typename?: 'AdminRoleAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type AdminRoleAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type AdminRoleBoolExp = {
  _and?: InputMaybe<Array<AdminRoleBoolExp>>;
  _not?: InputMaybe<AdminRoleBoolExp>;
  _or?: InputMaybe<Array<AdminRoleBoolExp>>;
  canCreateTenant?: InputMaybe<BooleanComparisonExp>;
  canDeleteTenantEntities?: InputMaybe<BooleanComparisonExp>;
  canManageTenantEntities?: InputMaybe<BooleanComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
  userId?: InputMaybe<BigintComparisonExp>;
};

export enum AdminRoleConstraint {
  AdminRolePkey = 'admin_role_pkey',
}

export type AdminRoleIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type AdminRoleInsertInput = {
  canCreateTenant?: InputMaybe<Scalars['Boolean']['input']>;
  canDeleteTenantEntities?: InputMaybe<Scalars['Boolean']['input']>;
  canManageTenantEntities?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type AdminRoleMaxFields = {
  __typename?: 'AdminRoleMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type AdminRoleMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type AdminRoleMinFields = {
  __typename?: 'AdminRoleMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type AdminRoleMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type AdminRoleMutationResponse = {
  __typename?: 'AdminRoleMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<AdminRole>;
};

export type AdminRoleOnConflict = {
  constraint: AdminRoleConstraint;
  updateColumns?: Array<AdminRoleUpdateColumn>;
  where?: InputMaybe<AdminRoleBoolExp>;
};

export type AdminRoleOrderBy = {
  canCreateTenant?: InputMaybe<OrderBy>;
  canDeleteTenantEntities?: InputMaybe<OrderBy>;
  canManageTenantEntities?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type AdminRolePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum AdminRoleSelectColumn {
  CanCreateTenant = 'canCreateTenant',
  CanDeleteTenantEntities = 'canDeleteTenantEntities',
  CanManageTenantEntities = 'canManageTenantEntities',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  TenantId = 'tenantId',
  UserId = 'userId',
}

export enum AdminRoleSelectColumnAdminRoleAggregateBoolExpBool_AndArgumentsColumns {
  CanCreateTenant = 'canCreateTenant',
  CanDeleteTenantEntities = 'canDeleteTenantEntities',
  CanManageTenantEntities = 'canManageTenantEntities',
}

export enum AdminRoleSelectColumnAdminRoleAggregateBoolExpBool_OrArgumentsColumns {
  CanCreateTenant = 'canCreateTenant',
  CanDeleteTenantEntities = 'canDeleteTenantEntities',
  CanManageTenantEntities = 'canManageTenantEntities',
}

export type AdminRoleSetInput = {
  canCreateTenant?: InputMaybe<Scalars['Boolean']['input']>;
  canDeleteTenantEntities?: InputMaybe<Scalars['Boolean']['input']>;
  canManageTenantEntities?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type AdminRoleStddevFields = {
  __typename?: 'AdminRoleStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type AdminRoleStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type AdminRoleStddevPopFields = {
  __typename?: 'AdminRoleStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type AdminRoleStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type AdminRoleStddevSampFields = {
  __typename?: 'AdminRoleStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type AdminRoleStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type AdminRoleStreamCursorInput = {
  initialValue: AdminRoleStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type AdminRoleStreamCursorValueInput = {
  canCreateTenant?: InputMaybe<Scalars['Boolean']['input']>;
  canDeleteTenantEntities?: InputMaybe<Scalars['Boolean']['input']>;
  canManageTenantEntities?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type AdminRoleSumFields = {
  __typename?: 'AdminRoleSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type AdminRoleSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum AdminRoleUpdateColumn {
  CanCreateTenant = 'canCreateTenant',
  CanDeleteTenantEntities = 'canDeleteTenantEntities',
  CanManageTenantEntities = 'canManageTenantEntities',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  TenantId = 'tenantId',
  UserId = 'userId',
}

export type AdminRoleUpdates = {
  _inc?: InputMaybe<AdminRoleIncInput>;
  _set?: InputMaybe<AdminRoleSetInput>;
  where: AdminRoleBoolExp;
};

export type AdminRoleVarPopFields = {
  __typename?: 'AdminRoleVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type AdminRoleVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type AdminRoleVarSampFields = {
  __typename?: 'AdminRoleVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type AdminRoleVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type AdminRoleVarianceFields = {
  __typename?: 'AdminRoleVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type AdminRoleVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ApprovalStateComparisonExp = {
  _eq?: InputMaybe<Scalars['ApprovalState']['input']>;
  _gt?: InputMaybe<Scalars['ApprovalState']['input']>;
  _gte?: InputMaybe<Scalars['ApprovalState']['input']>;
  _in?: InputMaybe<Array<Scalars['ApprovalState']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['ApprovalState']['input']>;
  _lte?: InputMaybe<Scalars['ApprovalState']['input']>;
  _neq?: InputMaybe<Scalars['ApprovalState']['input']>;
  _nin?: InputMaybe<Array<Scalars['ApprovalState']['input']>>;
};

export type ApproximateDateComparisonExp = {
  _eq?: InputMaybe<Scalars['ApproximateDate']['input']>;
  _gt?: InputMaybe<Scalars['ApproximateDate']['input']>;
  _gte?: InputMaybe<Scalars['ApproximateDate']['input']>;
  _in?: InputMaybe<Array<Scalars['ApproximateDate']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['ApproximateDate']['input']>;
  _lte?: InputMaybe<Scalars['ApproximateDate']['input']>;
  _neq?: InputMaybe<Scalars['ApproximateDate']['input']>;
  _nin?: InputMaybe<Array<Scalars['ApproximateDate']['input']>>;
};

export type BankAccount = {
  __typename?: 'BankAccount';
  bankInfo?: Maybe<BankInfo>;
  bankInfoId?: Maybe<Scalars['bigint']['output']>;
  childrenAccounts: Array<BankAccount>;
  childrenAccountsAggregate: BankAccountAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  name?: Maybe<Scalars['String']['output']>;
  parent?: Maybe<BankAccount>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  transactions: Array<Transaction>;
  transactionsAggregate: TransactionAggregate;
  type: Scalars['BankAccountType']['output'];
  user?: Maybe<User>;
};

export type BankAccountChildrenAccountsArgs = {
  distinctOn?: InputMaybe<Array<BankAccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankAccountOrderBy>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type BankAccountChildrenAccountsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankAccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankAccountOrderBy>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type BankAccountTransactionsArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type BankAccountTransactionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type BankAccountAggregate = {
  __typename?: 'BankAccountAggregate';
  aggregate?: Maybe<BankAccountAggregateFields>;
  nodes: Array<BankAccount>;
};

export type BankAccountAggregateBoolExp = {
  count?: InputMaybe<BankAccountAggregateBoolExpCount>;
};

export type BankAccountAggregateFields = {
  __typename?: 'BankAccountAggregateFields';
  avg?: Maybe<BankAccountAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<BankAccountMaxFields>;
  min?: Maybe<BankAccountMinFields>;
  stddev?: Maybe<BankAccountStddevFields>;
  stddevPop?: Maybe<BankAccountStddevPopFields>;
  stddevSamp?: Maybe<BankAccountStddevSampFields>;
  sum?: Maybe<BankAccountSumFields>;
  varPop?: Maybe<BankAccountVarPopFields>;
  varSamp?: Maybe<BankAccountVarSampFields>;
  variance?: Maybe<BankAccountVarianceFields>;
};

export type BankAccountAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<BankAccountSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BankAccountAggregateOrderBy = {
  avg?: InputMaybe<BankAccountAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<BankAccountMaxOrderBy>;
  min?: InputMaybe<BankAccountMinOrderBy>;
  stddev?: InputMaybe<BankAccountStddevOrderBy>;
  stddevPop?: InputMaybe<BankAccountStddevPopOrderBy>;
  stddevSamp?: InputMaybe<BankAccountStddevSampOrderBy>;
  sum?: InputMaybe<BankAccountSumOrderBy>;
  varPop?: InputMaybe<BankAccountVarPopOrderBy>;
  varSamp?: InputMaybe<BankAccountVarSampOrderBy>;
  variance?: InputMaybe<BankAccountVarianceOrderBy>;
};

export type BankAccountArrRelInsertInput = {
  data: Array<BankAccountInsertInput>;
  onConflict?: InputMaybe<BankAccountOnConflict>;
};

export type BankAccountAvgFields = {
  __typename?: 'BankAccountAvgFields';
  bankInfoId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type BankAccountAvgOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankAccountBoolExp = {
  _and?: InputMaybe<Array<BankAccountBoolExp>>;
  _not?: InputMaybe<BankAccountBoolExp>;
  _or?: InputMaybe<Array<BankAccountBoolExp>>;
  bankInfo?: InputMaybe<BankInfoBoolExp>;
  bankInfoId?: InputMaybe<BigintComparisonExp>;
  childrenAccounts?: InputMaybe<BankAccountBoolExp>;
  childrenAccountsAggregate?: InputMaybe<BankAccountAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  parent?: InputMaybe<BankAccountBoolExp>;
  parentId?: InputMaybe<BigintComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  transactions?: InputMaybe<TransactionBoolExp>;
  transactionsAggregate?: InputMaybe<TransactionAggregateBoolExp>;
  type?: InputMaybe<BankAccountTypeComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
};

export enum BankAccountConstraint {
  BankAccountPkey = 'bank_account_pkey',
}

export type BankAccountIncInput = {
  bankInfoId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type BankAccountInsertInput = {
  bankInfo?: InputMaybe<BankInfoObjRelInsertInput>;
  bankInfoId?: InputMaybe<Scalars['bigint']['input']>;
  childrenAccounts?: InputMaybe<BankAccountArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  parent?: InputMaybe<BankAccountObjRelInsertInput>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  transactions?: InputMaybe<TransactionArrRelInsertInput>;
  type?: InputMaybe<Scalars['BankAccountType']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
};

export type BankAccountMaxFields = {
  __typename?: 'BankAccountMaxFields';
  bankInfoId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['BankAccountType']['output']>;
};

export type BankAccountMaxOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type BankAccountMinFields = {
  __typename?: 'BankAccountMinFields';
  bankInfoId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['BankAccountType']['output']>;
};

export type BankAccountMinOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type BankAccountMutationResponse = {
  __typename?: 'BankAccountMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<BankAccount>;
};

export type BankAccountObjRelInsertInput = {
  data: BankAccountInsertInput;
  onConflict?: InputMaybe<BankAccountOnConflict>;
};

export type BankAccountOnConflict = {
  constraint: BankAccountConstraint;
  updateColumns?: Array<BankAccountUpdateColumn>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type BankAccountOrderBy = {
  bankInfo?: InputMaybe<BankInfoOrderBy>;
  bankInfoId?: InputMaybe<OrderBy>;
  childrenAccountsAggregate?: InputMaybe<BankAccountAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  parent?: InputMaybe<BankAccountOrderBy>;
  parentId?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionsAggregate?: InputMaybe<TransactionAggregateOrderBy>;
  type?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
};

export type BankAccountPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum BankAccountSelectColumn {
  BankInfoId = 'bankInfoId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Name = 'name',
  ParentId = 'parentId',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export type BankAccountSetInput = {
  bankInfoId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['BankAccountType']['input']>;
};

export type BankAccountStddevFields = {
  __typename?: 'BankAccountStddevFields';
  bankInfoId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type BankAccountStddevOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankAccountStddevPopFields = {
  __typename?: 'BankAccountStddevPopFields';
  bankInfoId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type BankAccountStddevPopOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankAccountStddevSampFields = {
  __typename?: 'BankAccountStddevSampFields';
  bankInfoId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type BankAccountStddevSampOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankAccountStreamCursorInput = {
  initialValue: BankAccountStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type BankAccountStreamCursorValueInput = {
  bankInfoId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['BankAccountType']['input']>;
};

export type BankAccountSumFields = {
  __typename?: 'BankAccountSumFields';
  bankInfoId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type BankAccountSumOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankAccountTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['BankAccountType']['input']>;
  _gt?: InputMaybe<Scalars['BankAccountType']['input']>;
  _gte?: InputMaybe<Scalars['BankAccountType']['input']>;
  _in?: InputMaybe<Array<Scalars['BankAccountType']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['BankAccountType']['input']>;
  _lte?: InputMaybe<Scalars['BankAccountType']['input']>;
  _neq?: InputMaybe<Scalars['BankAccountType']['input']>;
  _nin?: InputMaybe<Array<Scalars['BankAccountType']['input']>>;
};

export enum BankAccountUpdateColumn {
  BankInfoId = 'bankInfoId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Name = 'name',
  ParentId = 'parentId',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export type BankAccountUpdates = {
  _inc?: InputMaybe<BankAccountIncInput>;
  _set?: InputMaybe<BankAccountSetInput>;
  where: BankAccountBoolExp;
};

export type BankAccountVarPopFields = {
  __typename?: 'BankAccountVarPopFields';
  bankInfoId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type BankAccountVarPopOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankAccountVarSampFields = {
  __typename?: 'BankAccountVarSampFields';
  bankInfoId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type BankAccountVarSampOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankAccountVarianceFields = {
  __typename?: 'BankAccountVarianceFields';
  bankInfoId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type BankAccountVarianceOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankInfo = {
  __typename?: 'BankInfo';
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  bank: LegalUnit;
  bankAccounts: Array<BankAccount>;
  bankAccountsAggregate: BankAccountAggregate;
  bankId: Scalars['bigint']['output'];
  bicSwift: Scalars['String']['output'];
  branchAddress: Address;
  branchAddressId: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  expenses: Array<Expense>;
  expensesAggregate: ExpenseAggregate;
  holderName: Scalars['String']['output'];
  iban: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  tenantScope?: Maybe<Tenant>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type BankInfoBankAccountsArgs = {
  distinctOn?: InputMaybe<Array<BankAccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankAccountOrderBy>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type BankInfoBankAccountsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankAccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankAccountOrderBy>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type BankInfoExpensesArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type BankInfoExpensesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type BankInfoAggregate = {
  __typename?: 'BankInfoAggregate';
  aggregate?: Maybe<BankInfoAggregateFields>;
  nodes: Array<BankInfo>;
};

export type BankInfoAggregateBoolExp = {
  count?: InputMaybe<BankInfoAggregateBoolExpCount>;
};

export type BankInfoAggregateFields = {
  __typename?: 'BankInfoAggregateFields';
  avg?: Maybe<BankInfoAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<BankInfoMaxFields>;
  min?: Maybe<BankInfoMinFields>;
  stddev?: Maybe<BankInfoStddevFields>;
  stddevPop?: Maybe<BankInfoStddevPopFields>;
  stddevSamp?: Maybe<BankInfoStddevSampFields>;
  sum?: Maybe<BankInfoSumFields>;
  varPop?: Maybe<BankInfoVarPopFields>;
  varSamp?: Maybe<BankInfoVarSampFields>;
  variance?: Maybe<BankInfoVarianceFields>;
};

export type BankInfoAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<BankInfoSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BankInfoAggregateOrderBy = {
  avg?: InputMaybe<BankInfoAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<BankInfoMaxOrderBy>;
  min?: InputMaybe<BankInfoMinOrderBy>;
  stddev?: InputMaybe<BankInfoStddevOrderBy>;
  stddevPop?: InputMaybe<BankInfoStddevPopOrderBy>;
  stddevSamp?: InputMaybe<BankInfoStddevSampOrderBy>;
  sum?: InputMaybe<BankInfoSumOrderBy>;
  varPop?: InputMaybe<BankInfoVarPopOrderBy>;
  varSamp?: InputMaybe<BankInfoVarSampOrderBy>;
  variance?: InputMaybe<BankInfoVarianceOrderBy>;
};

export type BankInfoArrRelInsertInput = {
  data: Array<BankInfoInsertInput>;
  onConflict?: InputMaybe<BankInfoOnConflict>;
};

export type BankInfoAvgFields = {
  __typename?: 'BankInfoAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type BankInfoAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankInfoBoolExp = {
  _and?: InputMaybe<Array<BankInfoBoolExp>>;
  _not?: InputMaybe<BankInfoBoolExp>;
  _or?: InputMaybe<Array<BankInfoBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  bank?: InputMaybe<LegalUnitBoolExp>;
  bankAccounts?: InputMaybe<BankAccountBoolExp>;
  bankAccountsAggregate?: InputMaybe<BankAccountAggregateBoolExp>;
  bankId?: InputMaybe<BigintComparisonExp>;
  bicSwift?: InputMaybe<StringComparisonExp>;
  branchAddress?: InputMaybe<AddressBoolExp>;
  branchAddressId?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  expenses?: InputMaybe<ExpenseBoolExp>;
  expensesAggregate?: InputMaybe<ExpenseAggregateBoolExp>;
  holderName?: InputMaybe<StringComparisonExp>;
  iban?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum BankInfoConstraint {
  BankInfoPkey = 'bank_info_pkey',
}

export type BankInfoIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type BankInfoInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bank?: InputMaybe<LegalUnitObjRelInsertInput>;
  bankAccounts?: InputMaybe<BankAccountArrRelInsertInput>;
  bankId?: InputMaybe<Scalars['bigint']['input']>;
  bicSwift?: InputMaybe<Scalars['String']['input']>;
  branchAddress?: InputMaybe<AddressObjRelInsertInput>;
  branchAddressId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  expenses?: InputMaybe<ExpenseArrRelInsertInput>;
  holderName?: InputMaybe<Scalars['String']['input']>;
  iban?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type BankInfoMaxFields = {
  __typename?: 'BankInfoMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  bankId?: Maybe<Scalars['bigint']['output']>;
  bicSwift?: Maybe<Scalars['String']['output']>;
  branchAddressId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  holderName?: Maybe<Scalars['String']['output']>;
  iban?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type BankInfoMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankId?: InputMaybe<OrderBy>;
  bicSwift?: InputMaybe<OrderBy>;
  branchAddressId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  holderName?: InputMaybe<OrderBy>;
  iban?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankInfoMinFields = {
  __typename?: 'BankInfoMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  bankId?: Maybe<Scalars['bigint']['output']>;
  bicSwift?: Maybe<Scalars['String']['output']>;
  branchAddressId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  holderName?: Maybe<Scalars['String']['output']>;
  iban?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type BankInfoMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankId?: InputMaybe<OrderBy>;
  bicSwift?: InputMaybe<OrderBy>;
  branchAddressId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  holderName?: InputMaybe<OrderBy>;
  iban?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankInfoMutationResponse = {
  __typename?: 'BankInfoMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<BankInfo>;
};

export type BankInfoObjRelInsertInput = {
  data: BankInfoInsertInput;
  onConflict?: InputMaybe<BankInfoOnConflict>;
};

export type BankInfoOnConflict = {
  constraint: BankInfoConstraint;
  updateColumns?: Array<BankInfoUpdateColumn>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type BankInfoOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  bank?: InputMaybe<LegalUnitOrderBy>;
  bankAccountsAggregate?: InputMaybe<BankAccountAggregateOrderBy>;
  bankId?: InputMaybe<OrderBy>;
  bicSwift?: InputMaybe<OrderBy>;
  branchAddress?: InputMaybe<AddressOrderBy>;
  branchAddressId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  expensesAggregate?: InputMaybe<ExpenseAggregateOrderBy>;
  holderName?: InputMaybe<OrderBy>;
  iban?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankInfoPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum BankInfoSelectColumn {
  ActorId = 'actorId',
  BankId = 'bankId',
  BicSwift = 'bicSwift',
  BranchAddressId = 'branchAddressId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HolderName = 'holderName',
  Iban = 'iban',
  Id = 'id',
  TenantScopeId = 'tenantScopeId',
}

export type BankInfoSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankId?: InputMaybe<Scalars['bigint']['input']>;
  bicSwift?: InputMaybe<Scalars['String']['input']>;
  branchAddressId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  holderName?: InputMaybe<Scalars['String']['input']>;
  iban?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type BankInfoStddevFields = {
  __typename?: 'BankInfoStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type BankInfoStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankInfoStddevPopFields = {
  __typename?: 'BankInfoStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type BankInfoStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankInfoStddevSampFields = {
  __typename?: 'BankInfoStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type BankInfoStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankInfoStreamCursorInput = {
  initialValue: BankInfoStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type BankInfoStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankId?: InputMaybe<Scalars['bigint']['input']>;
  bicSwift?: InputMaybe<Scalars['String']['input']>;
  branchAddressId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  holderName?: InputMaybe<Scalars['String']['input']>;
  iban?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type BankInfoSumFields = {
  __typename?: 'BankInfoSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  bankId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type BankInfoSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum BankInfoUpdateColumn {
  ActorId = 'actorId',
  BankId = 'bankId',
  BicSwift = 'bicSwift',
  BranchAddressId = 'branchAddressId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HolderName = 'holderName',
  Iban = 'iban',
  Id = 'id',
  TenantScopeId = 'tenantScopeId',
}

export type BankInfoUpdates = {
  _inc?: InputMaybe<BankInfoIncInput>;
  _set?: InputMaybe<BankInfoSetInput>;
  where: BankInfoBoolExp;
};

export type BankInfoVarPopFields = {
  __typename?: 'BankInfoVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type BankInfoVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankInfoVarSampFields = {
  __typename?: 'BankInfoVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type BankInfoVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BankInfoVarianceFields = {
  __typename?: 'BankInfoVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type BankInfoVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type BigintComparisonExp = {
  _eq?: InputMaybe<Scalars['bigint']['input']>;
  _gt?: InputMaybe<Scalars['bigint']['input']>;
  _gte?: InputMaybe<Scalars['bigint']['input']>;
  _in?: InputMaybe<Array<Scalars['bigint']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['bigint']['input']>;
  _lte?: InputMaybe<Scalars['bigint']['input']>;
  _neq?: InputMaybe<Scalars['bigint']['input']>;
  _nin?: InputMaybe<Array<Scalars['bigint']['input']>>;
};

export type BooleanComparisonExp = {
  _eq?: InputMaybe<Scalars['Boolean']['input']>;
  _gt?: InputMaybe<Scalars['Boolean']['input']>;
  _gte?: InputMaybe<Scalars['Boolean']['input']>;
  _in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Boolean']['input']>;
  _lte?: InputMaybe<Scalars['Boolean']['input']>;
  _neq?: InputMaybe<Scalars['Boolean']['input']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']['input']>>;
};

export type Campus = {
  __typename?: 'Campus';
  campusCluster: CampusCluster;
  campusClusterId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  location: Location;
  locationId: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type CampusAggregate = {
  __typename?: 'CampusAggregate';
  aggregate?: Maybe<CampusAggregateFields>;
  nodes: Array<Campus>;
};

export type CampusAggregateBoolExp = {
  count?: InputMaybe<CampusAggregateBoolExpCount>;
};

export type CampusAggregateFields = {
  __typename?: 'CampusAggregateFields';
  avg?: Maybe<CampusAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CampusMaxFields>;
  min?: Maybe<CampusMinFields>;
  stddev?: Maybe<CampusStddevFields>;
  stddevPop?: Maybe<CampusStddevPopFields>;
  stddevSamp?: Maybe<CampusStddevSampFields>;
  sum?: Maybe<CampusSumFields>;
  varPop?: Maybe<CampusVarPopFields>;
  varSamp?: Maybe<CampusVarSampFields>;
  variance?: Maybe<CampusVarianceFields>;
};

export type CampusAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<CampusSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CampusAggregateOrderBy = {
  avg?: InputMaybe<CampusAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<CampusMaxOrderBy>;
  min?: InputMaybe<CampusMinOrderBy>;
  stddev?: InputMaybe<CampusStddevOrderBy>;
  stddevPop?: InputMaybe<CampusStddevPopOrderBy>;
  stddevSamp?: InputMaybe<CampusStddevSampOrderBy>;
  sum?: InputMaybe<CampusSumOrderBy>;
  varPop?: InputMaybe<CampusVarPopOrderBy>;
  varSamp?: InputMaybe<CampusVarSampOrderBy>;
  variance?: InputMaybe<CampusVarianceOrderBy>;
};

export type CampusArrRelInsertInput = {
  data: Array<CampusInsertInput>;
  onConflict?: InputMaybe<CampusOnConflict>;
};

export type CampusAvgFields = {
  __typename?: 'CampusAvgFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type CampusAvgOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusBoolExp = {
  _and?: InputMaybe<Array<CampusBoolExp>>;
  _not?: InputMaybe<CampusBoolExp>;
  _or?: InputMaybe<Array<CampusBoolExp>>;
  campusCluster?: InputMaybe<CampusClusterBoolExp>;
  campusClusterId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  location?: InputMaybe<LocationBoolExp>;
  locationId?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  slug?: InputMaybe<StringComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export type CampusCluster = {
  __typename?: 'CampusCluster';
  campuses: Array<Campus>;
  campusesAggregate: CampusAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type CampusClusterCampusesArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type CampusClusterCampusesAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type CampusClusterAggregate = {
  __typename?: 'CampusClusterAggregate';
  aggregate?: Maybe<CampusClusterAggregateFields>;
  nodes: Array<CampusCluster>;
};

export type CampusClusterAggregateBoolExp = {
  count?: InputMaybe<CampusClusterAggregateBoolExpCount>;
};

export type CampusClusterAggregateFields = {
  __typename?: 'CampusClusterAggregateFields';
  avg?: Maybe<CampusClusterAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CampusClusterMaxFields>;
  min?: Maybe<CampusClusterMinFields>;
  stddev?: Maybe<CampusClusterStddevFields>;
  stddevPop?: Maybe<CampusClusterStddevPopFields>;
  stddevSamp?: Maybe<CampusClusterStddevSampFields>;
  sum?: Maybe<CampusClusterSumFields>;
  varPop?: Maybe<CampusClusterVarPopFields>;
  varSamp?: Maybe<CampusClusterVarSampFields>;
  variance?: Maybe<CampusClusterVarianceFields>;
};

export type CampusClusterAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<CampusClusterSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CampusClusterAggregateOrderBy = {
  avg?: InputMaybe<CampusClusterAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<CampusClusterMaxOrderBy>;
  min?: InputMaybe<CampusClusterMinOrderBy>;
  stddev?: InputMaybe<CampusClusterStddevOrderBy>;
  stddevPop?: InputMaybe<CampusClusterStddevPopOrderBy>;
  stddevSamp?: InputMaybe<CampusClusterStddevSampOrderBy>;
  sum?: InputMaybe<CampusClusterSumOrderBy>;
  varPop?: InputMaybe<CampusClusterVarPopOrderBy>;
  varSamp?: InputMaybe<CampusClusterVarSampOrderBy>;
  variance?: InputMaybe<CampusClusterVarianceOrderBy>;
};

export type CampusClusterArrRelInsertInput = {
  data: Array<CampusClusterInsertInput>;
  onConflict?: InputMaybe<CampusClusterOnConflict>;
};

export type CampusClusterAvgFields = {
  __typename?: 'CampusClusterAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type CampusClusterAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusClusterBoolExp = {
  _and?: InputMaybe<Array<CampusClusterBoolExp>>;
  _not?: InputMaybe<CampusClusterBoolExp>;
  _or?: InputMaybe<Array<CampusClusterBoolExp>>;
  campuses?: InputMaybe<CampusBoolExp>;
  campusesAggregate?: InputMaybe<CampusAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  slug?: InputMaybe<StringComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum CampusClusterConstraint {
  CampusClusterPkey = 'campus_cluster_pkey',
}

export type CampusClusterIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusClusterInsertInput = {
  campuses?: InputMaybe<CampusArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusClusterMaxFields = {
  __typename?: 'CampusClusterMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type CampusClusterMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusClusterMinFields = {
  __typename?: 'CampusClusterMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type CampusClusterMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusClusterMutationResponse = {
  __typename?: 'CampusClusterMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<CampusCluster>;
};

export type CampusClusterObjRelInsertInput = {
  data: CampusClusterInsertInput;
  onConflict?: InputMaybe<CampusClusterOnConflict>;
};

export type CampusClusterOnConflict = {
  constraint: CampusClusterConstraint;
  updateColumns?: Array<CampusClusterUpdateColumn>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type CampusClusterOrderBy = {
  campusesAggregate?: InputMaybe<CampusAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusClusterPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum CampusClusterSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  Slug = 'slug',
  TenantScopeId = 'tenantScopeId',
}

export type CampusClusterSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusClusterStddevFields = {
  __typename?: 'CampusClusterStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type CampusClusterStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusClusterStddevPopFields = {
  __typename?: 'CampusClusterStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type CampusClusterStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusClusterStddevSampFields = {
  __typename?: 'CampusClusterStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type CampusClusterStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusClusterStreamCursorInput = {
  initialValue: CampusClusterStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type CampusClusterStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusClusterSumFields = {
  __typename?: 'CampusClusterSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type CampusClusterSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum CampusClusterUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  Slug = 'slug',
  TenantScopeId = 'tenantScopeId',
}

export type CampusClusterUpdates = {
  _inc?: InputMaybe<CampusClusterIncInput>;
  _set?: InputMaybe<CampusClusterSetInput>;
  where: CampusClusterBoolExp;
};

export type CampusClusterVarPopFields = {
  __typename?: 'CampusClusterVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type CampusClusterVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusClusterVarSampFields = {
  __typename?: 'CampusClusterVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type CampusClusterVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusClusterVarianceFields = {
  __typename?: 'CampusClusterVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type CampusClusterVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum CampusConstraint {
  CampusPkey = 'campus_pkey',
}

export type CampusIncInput = {
  campusClusterId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusInsertInput = {
  campusCluster?: InputMaybe<CampusClusterObjRelInsertInput>;
  campusClusterId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  location?: InputMaybe<LocationObjRelInsertInput>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusMaxFields = {
  __typename?: 'CampusMaxFields';
  campusClusterId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type CampusMaxOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusMinFields = {
  __typename?: 'CampusMinFields';
  campusClusterId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type CampusMinOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusMutationResponse = {
  __typename?: 'CampusMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Campus>;
};

export type CampusOnConflict = {
  constraint: CampusConstraint;
  updateColumns?: Array<CampusUpdateColumn>;
  where?: InputMaybe<CampusBoolExp>;
};

export type CampusOrderBy = {
  campusCluster?: InputMaybe<CampusClusterOrderBy>;
  campusClusterId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  location?: InputMaybe<LocationOrderBy>;
  locationId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum CampusSelectColumn {
  CampusClusterId = 'campusClusterId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  LocationId = 'locationId',
  Name = 'name',
  Slug = 'slug',
  TenantScopeId = 'tenantScopeId',
}

export type CampusSetInput = {
  campusClusterId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusStddevFields = {
  __typename?: 'CampusStddevFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type CampusStddevOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusStddevPopFields = {
  __typename?: 'CampusStddevPopFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type CampusStddevPopOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusStddevSampFields = {
  __typename?: 'CampusStddevSampFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type CampusStddevSampOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusStreamCursorInput = {
  initialValue: CampusStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type CampusStreamCursorValueInput = {
  campusClusterId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusSumFields = {
  __typename?: 'CampusSumFields';
  campusClusterId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type CampusSumOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum CampusUpdateColumn {
  CampusClusterId = 'campusClusterId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  LocationId = 'locationId',
  Name = 'name',
  Slug = 'slug',
  TenantScopeId = 'tenantScopeId',
}

export type CampusUpdates = {
  _inc?: InputMaybe<CampusIncInput>;
  _set?: InputMaybe<CampusSetInput>;
  where: CampusBoolExp;
};

export type CampusVarPopFields = {
  __typename?: 'CampusVarPopFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type CampusVarPopOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusVarSampFields = {
  __typename?: 'CampusVarSampFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type CampusVarSampOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type CampusVarianceFields = {
  __typename?: 'CampusVarianceFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type CampusVarianceOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ColorsComparisonExp = {
  _eq?: InputMaybe<Scalars['Colors']['input']>;
  _gt?: InputMaybe<Scalars['Colors']['input']>;
  _gte?: InputMaybe<Scalars['Colors']['input']>;
  _in?: InputMaybe<Array<Scalars['Colors']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Colors']['input']>;
  _lte?: InputMaybe<Scalars['Colors']['input']>;
  _neq?: InputMaybe<Scalars['Colors']['input']>;
  _nin?: InputMaybe<Array<Scalars['Colors']['input']>>;
};

export type CountryCodeComparisonExp = {
  _eq?: InputMaybe<Scalars['CountryCode']['input']>;
  _gt?: InputMaybe<Scalars['CountryCode']['input']>;
  _gte?: InputMaybe<Scalars['CountryCode']['input']>;
  _in?: InputMaybe<Array<Scalars['CountryCode']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['CountryCode']['input']>;
  _lte?: InputMaybe<Scalars['CountryCode']['input']>;
  _neq?: InputMaybe<Scalars['CountryCode']['input']>;
  _nin?: InputMaybe<Array<Scalars['CountryCode']['input']>>;
};

export enum CursorOrdering {
  Asc = 'ASC',
  Desc = 'DESC',
}

export type Event = {
  __typename?: 'Event';
  approvalSubmission?: Maybe<FormSubmission>;
  approvalSubmissionId?: Maybe<Scalars['bigint']['output']>;
  banner?: Maybe<FileUpload>;
  bannerId?: Maybe<Scalars['bigint']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  end: Scalars['timestamptz']['output'];
  eventApprovals: Array<EventApproval>;
  eventApprovalsAggregate: EventApprovalAggregate;
  eventFavorites: Array<EventFavorite>;
  eventFavoritesAggregate: EventFavoriteAggregate;
  eventJoins: Array<EventJoin>;
  eventJoinsAggregate: EventJoinAggregate;
  eventOrganizes: Array<EventOrganize>;
  eventOrganizesAggregate: EventOrganizeAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isAutoAcceptingJoins: Scalars['Boolean']['output'];
  isPrivate: Scalars['Boolean']['output'];
  isTemplate: Scalars['Boolean']['output'];
  joinForm?: Maybe<Form>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  location: Location;
  locationId: Scalars['bigint']['output'];
  maxParticipants?: Maybe<Scalars['smallint']['output']>;
  meta: Scalars['jsonb']['output'];
  name: Scalars['String']['output'];
  nextApprovalStep?: Maybe<EventApprovalStep>;
  nextApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  pointsAwardedForAttendance: Scalars['Float']['output'];
  price: Scalars['Float']['output'];
  slug: Scalars['String']['output'];
  start: Scalars['timestamptz']['output'];
  state: Scalars['EventState']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  transactions: Array<Transaction>;
  transactionsAggregate: TransactionAggregate;
};

export type EventEventApprovalsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type EventEventApprovalsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type EventEventFavoritesArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type EventEventFavoritesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type EventEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type EventEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type EventEventOrganizesArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type EventEventOrganizesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type EventMetaArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

export type EventTransactionsArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type EventTransactionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type EventAggregate = {
  __typename?: 'EventAggregate';
  aggregate?: Maybe<EventAggregateFields>;
  nodes: Array<Event>;
};

export type EventAggregateBoolExp = {
  bool_and?: InputMaybe<EventAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<EventAggregateBoolExpBool_Or>;
  count?: InputMaybe<EventAggregateBoolExpCount>;
};

export type EventAggregateFields = {
  __typename?: 'EventAggregateFields';
  avg?: Maybe<EventAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventMaxFields>;
  min?: Maybe<EventMinFields>;
  stddev?: Maybe<EventStddevFields>;
  stddevPop?: Maybe<EventStddevPopFields>;
  stddevSamp?: Maybe<EventStddevSampFields>;
  sum?: Maybe<EventSumFields>;
  varPop?: Maybe<EventVarPopFields>;
  varSamp?: Maybe<EventVarSampFields>;
  variance?: Maybe<EventVarianceFields>;
};

export type EventAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventAggregateOrderBy = {
  avg?: InputMaybe<EventAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventMaxOrderBy>;
  min?: InputMaybe<EventMinOrderBy>;
  stddev?: InputMaybe<EventStddevOrderBy>;
  stddevPop?: InputMaybe<EventStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventStddevSampOrderBy>;
  sum?: InputMaybe<EventSumOrderBy>;
  varPop?: InputMaybe<EventVarPopOrderBy>;
  varSamp?: InputMaybe<EventVarSampOrderBy>;
  variance?: InputMaybe<EventVarianceOrderBy>;
};

export type EventAppendInput = {
  meta?: InputMaybe<Scalars['jsonb']['input']>;
};

export type EventApproval = {
  __typename?: 'EventApproval';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  event?: Maybe<Event>;
  eventApprovalStep?: Maybe<EventApprovalStep>;
  eventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isApproved: Scalars['Boolean']['output'];
  message: Scalars['String']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type EventApprovalAggregate = {
  __typename?: 'EventApprovalAggregate';
  aggregate?: Maybe<EventApprovalAggregateFields>;
  nodes: Array<EventApproval>;
};

export type EventApprovalAggregateBoolExp = {
  bool_and?: InputMaybe<EventApprovalAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<EventApprovalAggregateBoolExpBool_Or>;
  count?: InputMaybe<EventApprovalAggregateBoolExpCount>;
};

export type EventApprovalAggregateFields = {
  __typename?: 'EventApprovalAggregateFields';
  avg?: Maybe<EventApprovalAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventApprovalMaxFields>;
  min?: Maybe<EventApprovalMinFields>;
  stddev?: Maybe<EventApprovalStddevFields>;
  stddevPop?: Maybe<EventApprovalStddevPopFields>;
  stddevSamp?: Maybe<EventApprovalStddevSampFields>;
  sum?: Maybe<EventApprovalSumFields>;
  varPop?: Maybe<EventApprovalVarPopFields>;
  varSamp?: Maybe<EventApprovalVarSampFields>;
  variance?: Maybe<EventApprovalVarianceFields>;
};

export type EventApprovalAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventApprovalSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventApprovalAggregateOrderBy = {
  avg?: InputMaybe<EventApprovalAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventApprovalMaxOrderBy>;
  min?: InputMaybe<EventApprovalMinOrderBy>;
  stddev?: InputMaybe<EventApprovalStddevOrderBy>;
  stddevPop?: InputMaybe<EventApprovalStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventApprovalStddevSampOrderBy>;
  sum?: InputMaybe<EventApprovalSumOrderBy>;
  varPop?: InputMaybe<EventApprovalVarPopOrderBy>;
  varSamp?: InputMaybe<EventApprovalVarSampOrderBy>;
  variance?: InputMaybe<EventApprovalVarianceOrderBy>;
};

export type EventApprovalArrRelInsertInput = {
  data: Array<EventApprovalInsertInput>;
  onConflict?: InputMaybe<EventApprovalOnConflict>;
};

export type EventApprovalAvgFields = {
  __typename?: 'EventApprovalAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalBoolExp = {
  _and?: InputMaybe<Array<EventApprovalBoolExp>>;
  _not?: InputMaybe<EventApprovalBoolExp>;
  _or?: InputMaybe<Array<EventApprovalBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  event?: InputMaybe<EventBoolExp>;
  eventApprovalStep?: InputMaybe<EventApprovalStepBoolExp>;
  eventApprovalStepId?: InputMaybe<BigintComparisonExp>;
  eventId?: InputMaybe<BigintComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isApproved?: InputMaybe<BooleanComparisonExp>;
  message?: InputMaybe<StringComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum EventApprovalConstraint {
  EventApprovalPkey = 'event_approval_pkey',
}

export type EventApprovalIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  event?: InputMaybe<EventObjRelInsertInput>;
  eventApprovalStep?: InputMaybe<EventApprovalStepObjRelInsertInput>;
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isApproved?: InputMaybe<Scalars['Boolean']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalMaxFields = {
  __typename?: 'EventApprovalMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  message?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalMinFields = {
  __typename?: 'EventApprovalMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  message?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalMutationResponse = {
  __typename?: 'EventApprovalMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventApproval>;
};

export type EventApprovalOnConflict = {
  constraint: EventApprovalConstraint;
  updateColumns?: Array<EventApprovalUpdateColumn>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type EventApprovalOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  event?: InputMaybe<EventOrderBy>;
  eventApprovalStep?: InputMaybe<EventApprovalStepOrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isApproved?: InputMaybe<OrderBy>;
  message?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum EventApprovalSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventApprovalStepId = 'eventApprovalStepId',
  EventId = 'eventId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsApproved = 'isApproved',
  Message = 'message',
  TenantScopeId = 'tenantScopeId',
}

export enum EventApprovalSelectColumnEventApprovalAggregateBoolExpBool_AndArgumentsColumns {
  IsApproved = 'isApproved',
}

export enum EventApprovalSelectColumnEventApprovalAggregateBoolExpBool_OrArgumentsColumns {
  IsApproved = 'isApproved',
}

export type EventApprovalSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isApproved?: InputMaybe<Scalars['Boolean']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStddevFields = {
  __typename?: 'EventApprovalStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalStddevPopFields = {
  __typename?: 'EventApprovalStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalStddevSampFields = {
  __typename?: 'EventApprovalStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalStep = {
  __typename?: 'EventApprovalStep';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  eventApprovalValidators: Array<EventApprovalValidator>;
  eventApprovalValidatorsAggregate: EventApprovalValidatorAggregate;
  eventApprovals: Array<EventApproval>;
  eventApprovalsAggregate: EventApprovalAggregate;
  events: Array<Event>;
  eventsAggregate: EventAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  nextSteps: Array<EventApprovalStep>;
  nextStepsAggregate: EventApprovalStepAggregate;
  order: Scalars['Int']['output'];
  previousStep?: Maybe<EventApprovalStep>;
  previousStepId?: Maybe<Scalars['bigint']['output']>;
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type EventApprovalStepEventApprovalValidatorsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalValidatorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalValidatorOrderBy>>;
  where?: InputMaybe<EventApprovalValidatorBoolExp>;
};

export type EventApprovalStepEventApprovalValidatorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalValidatorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalValidatorOrderBy>>;
  where?: InputMaybe<EventApprovalValidatorBoolExp>;
};

export type EventApprovalStepEventApprovalsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type EventApprovalStepEventApprovalsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type EventApprovalStepEventsArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type EventApprovalStepEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type EventApprovalStepNextStepsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type EventApprovalStepNextStepsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type EventApprovalStepAggregate = {
  __typename?: 'EventApprovalStepAggregate';
  aggregate?: Maybe<EventApprovalStepAggregateFields>;
  nodes: Array<EventApprovalStep>;
};

export type EventApprovalStepAggregateBoolExp = {
  count?: InputMaybe<EventApprovalStepAggregateBoolExpCount>;
};

export type EventApprovalStepAggregateFields = {
  __typename?: 'EventApprovalStepAggregateFields';
  avg?: Maybe<EventApprovalStepAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventApprovalStepMaxFields>;
  min?: Maybe<EventApprovalStepMinFields>;
  stddev?: Maybe<EventApprovalStepStddevFields>;
  stddevPop?: Maybe<EventApprovalStepStddevPopFields>;
  stddevSamp?: Maybe<EventApprovalStepStddevSampFields>;
  sum?: Maybe<EventApprovalStepSumFields>;
  varPop?: Maybe<EventApprovalStepVarPopFields>;
  varSamp?: Maybe<EventApprovalStepVarSampFields>;
  variance?: Maybe<EventApprovalStepVarianceFields>;
};

export type EventApprovalStepAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventApprovalStepAggregateOrderBy = {
  avg?: InputMaybe<EventApprovalStepAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventApprovalStepMaxOrderBy>;
  min?: InputMaybe<EventApprovalStepMinOrderBy>;
  stddev?: InputMaybe<EventApprovalStepStddevOrderBy>;
  stddevPop?: InputMaybe<EventApprovalStepStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventApprovalStepStddevSampOrderBy>;
  sum?: InputMaybe<EventApprovalStepSumOrderBy>;
  varPop?: InputMaybe<EventApprovalStepVarPopOrderBy>;
  varSamp?: InputMaybe<EventApprovalStepVarSampOrderBy>;
  variance?: InputMaybe<EventApprovalStepVarianceOrderBy>;
};

export type EventApprovalStepArrRelInsertInput = {
  data: Array<EventApprovalStepInsertInput>;
  onConflict?: InputMaybe<EventApprovalStepOnConflict>;
};

export type EventApprovalStepAvgFields = {
  __typename?: 'EventApprovalStepAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  previousStepId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepBoolExp = {
  _and?: InputMaybe<Array<EventApprovalStepBoolExp>>;
  _not?: InputMaybe<EventApprovalStepBoolExp>;
  _or?: InputMaybe<Array<EventApprovalStepBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  eventApprovalValidators?: InputMaybe<EventApprovalValidatorBoolExp>;
  eventApprovalValidatorsAggregate?: InputMaybe<EventApprovalValidatorAggregateBoolExp>;
  eventApprovals?: InputMaybe<EventApprovalBoolExp>;
  eventApprovalsAggregate?: InputMaybe<EventApprovalAggregateBoolExp>;
  events?: InputMaybe<EventBoolExp>;
  eventsAggregate?: InputMaybe<EventAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  nextSteps?: InputMaybe<EventApprovalStepBoolExp>;
  nextStepsAggregate?: InputMaybe<EventApprovalStepAggregateBoolExp>;
  order?: InputMaybe<IntComparisonExp>;
  previousStep?: InputMaybe<EventApprovalStepBoolExp>;
  previousStepId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum EventApprovalStepConstraint {
  EventApprovalStepPkey = 'event_approval_step_pkey',
}

export type EventApprovalStepIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  previousStepId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventApprovalValidators?: InputMaybe<EventApprovalValidatorArrRelInsertInput>;
  eventApprovals?: InputMaybe<EventApprovalArrRelInsertInput>;
  events?: InputMaybe<EventArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nextSteps?: InputMaybe<EventApprovalStepArrRelInsertInput>;
  order?: InputMaybe<Scalars['Int']['input']>;
  previousStep?: InputMaybe<EventApprovalStepObjRelInsertInput>;
  previousStepId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepMaxFields = {
  __typename?: 'EventApprovalStepMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  previousStepId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalStepMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepMinFields = {
  __typename?: 'EventApprovalStepMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  previousStepId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalStepMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepMutationResponse = {
  __typename?: 'EventApprovalStepMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventApprovalStep>;
};

export type EventApprovalStepObjRelInsertInput = {
  data: EventApprovalStepInsertInput;
  onConflict?: InputMaybe<EventApprovalStepOnConflict>;
};

export type EventApprovalStepOnConflict = {
  constraint: EventApprovalStepConstraint;
  updateColumns?: Array<EventApprovalStepUpdateColumn>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type EventApprovalStepOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventApprovalValidatorsAggregate?: InputMaybe<EventApprovalValidatorAggregateOrderBy>;
  eventApprovalsAggregate?: InputMaybe<EventApprovalAggregateOrderBy>;
  eventsAggregate?: InputMaybe<EventAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  nextStepsAggregate?: InputMaybe<EventApprovalStepAggregateOrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStep?: InputMaybe<EventApprovalStepOrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum EventApprovalStepSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  Order = 'order',
  PreviousStepId = 'previousStepId',
  TenantScopeId = 'tenantScopeId',
}

export type EventApprovalStepSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  previousStepId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepStddevFields = {
  __typename?: 'EventApprovalStepStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  previousStepId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepStddevPopFields = {
  __typename?: 'EventApprovalStepStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  previousStepId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepStddevSampFields = {
  __typename?: 'EventApprovalStepStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  previousStepId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepStreamCursorInput = {
  initialValue: EventApprovalStepStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventApprovalStepStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  previousStepId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepSumFields = {
  __typename?: 'EventApprovalStepSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  previousStepId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalStepSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum EventApprovalStepUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  Order = 'order',
  PreviousStepId = 'previousStepId',
  TenantScopeId = 'tenantScopeId',
}

export type EventApprovalStepUpdates = {
  _inc?: InputMaybe<EventApprovalStepIncInput>;
  _set?: InputMaybe<EventApprovalStepSetInput>;
  where: EventApprovalStepBoolExp;
};

export type EventApprovalStepVarPopFields = {
  __typename?: 'EventApprovalStepVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  previousStepId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepVarSampFields = {
  __typename?: 'EventApprovalStepVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  previousStepId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepVarianceFields = {
  __typename?: 'EventApprovalStepVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  previousStepId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalStreamCursorInput = {
  initialValue: EventApprovalStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventApprovalStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isApproved?: InputMaybe<Scalars['Boolean']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalSumFields = {
  __typename?: 'EventApprovalSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum EventApprovalUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventApprovalStepId = 'eventApprovalStepId',
  EventId = 'eventId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsApproved = 'isApproved',
  Message = 'message',
  TenantScopeId = 'tenantScopeId',
}

export type EventApprovalUpdates = {
  _inc?: InputMaybe<EventApprovalIncInput>;
  _set?: InputMaybe<EventApprovalSetInput>;
  where: EventApprovalBoolExp;
};

export type EventApprovalValidator = {
  __typename?: 'EventApprovalValidator';
  canValidate: Scalars['Boolean']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventApprovalStep: EventApprovalStep;
  id: Scalars['bigint']['output'];
  isNotified: Scalars['Boolean']['output'];
  stepId: Scalars['bigint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  user: User;
  userId: Scalars['bigint']['output'];
};

export type EventApprovalValidatorAggregate = {
  __typename?: 'EventApprovalValidatorAggregate';
  aggregate?: Maybe<EventApprovalValidatorAggregateFields>;
  nodes: Array<EventApprovalValidator>;
};

export type EventApprovalValidatorAggregateBoolExp = {
  bool_and?: InputMaybe<EventApprovalValidatorAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<EventApprovalValidatorAggregateBoolExpBool_Or>;
  count?: InputMaybe<EventApprovalValidatorAggregateBoolExpCount>;
};

export type EventApprovalValidatorAggregateFields = {
  __typename?: 'EventApprovalValidatorAggregateFields';
  avg?: Maybe<EventApprovalValidatorAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventApprovalValidatorMaxFields>;
  min?: Maybe<EventApprovalValidatorMinFields>;
  stddev?: Maybe<EventApprovalValidatorStddevFields>;
  stddevPop?: Maybe<EventApprovalValidatorStddevPopFields>;
  stddevSamp?: Maybe<EventApprovalValidatorStddevSampFields>;
  sum?: Maybe<EventApprovalValidatorSumFields>;
  varPop?: Maybe<EventApprovalValidatorVarPopFields>;
  varSamp?: Maybe<EventApprovalValidatorVarSampFields>;
  variance?: Maybe<EventApprovalValidatorVarianceFields>;
};

export type EventApprovalValidatorAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventApprovalValidatorSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventApprovalValidatorAggregateOrderBy = {
  avg?: InputMaybe<EventApprovalValidatorAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventApprovalValidatorMaxOrderBy>;
  min?: InputMaybe<EventApprovalValidatorMinOrderBy>;
  stddev?: InputMaybe<EventApprovalValidatorStddevOrderBy>;
  stddevPop?: InputMaybe<EventApprovalValidatorStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventApprovalValidatorStddevSampOrderBy>;
  sum?: InputMaybe<EventApprovalValidatorSumOrderBy>;
  varPop?: InputMaybe<EventApprovalValidatorVarPopOrderBy>;
  varSamp?: InputMaybe<EventApprovalValidatorVarSampOrderBy>;
  variance?: InputMaybe<EventApprovalValidatorVarianceOrderBy>;
};

export type EventApprovalValidatorArrRelInsertInput = {
  data: Array<EventApprovalValidatorInsertInput>;
  onConflict?: InputMaybe<EventApprovalValidatorOnConflict>;
};

export type EventApprovalValidatorAvgFields = {
  __typename?: 'EventApprovalValidatorAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stepId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalValidatorAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  stepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventApprovalValidatorBoolExp = {
  _and?: InputMaybe<Array<EventApprovalValidatorBoolExp>>;
  _not?: InputMaybe<EventApprovalValidatorBoolExp>;
  _or?: InputMaybe<Array<EventApprovalValidatorBoolExp>>;
  canValidate?: InputMaybe<BooleanComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  eventApprovalStep?: InputMaybe<EventApprovalStepBoolExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isNotified?: InputMaybe<BooleanComparisonExp>;
  stepId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
  userId?: InputMaybe<BigintComparisonExp>;
};

export enum EventApprovalValidatorConstraint {
  EventApprovalValidatorPkey = 'event_approval_validator_pkey',
}

export type EventApprovalValidatorIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  stepId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalValidatorInsertInput = {
  canValidate?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventApprovalStep?: InputMaybe<EventApprovalStepObjRelInsertInput>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isNotified?: InputMaybe<Scalars['Boolean']['input']>;
  stepId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalValidatorMaxFields = {
  __typename?: 'EventApprovalValidatorMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  stepId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalValidatorMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  stepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventApprovalValidatorMinFields = {
  __typename?: 'EventApprovalValidatorMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  stepId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalValidatorMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  stepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventApprovalValidatorMutationResponse = {
  __typename?: 'EventApprovalValidatorMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventApprovalValidator>;
};

export type EventApprovalValidatorOnConflict = {
  constraint: EventApprovalValidatorConstraint;
  updateColumns?: Array<EventApprovalValidatorUpdateColumn>;
  where?: InputMaybe<EventApprovalValidatorBoolExp>;
};

export type EventApprovalValidatorOrderBy = {
  canValidate?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventApprovalStep?: InputMaybe<EventApprovalStepOrderBy>;
  id?: InputMaybe<OrderBy>;
  isNotified?: InputMaybe<OrderBy>;
  stepId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventApprovalValidatorPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum EventApprovalValidatorSelectColumn {
  CanValidate = 'canValidate',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  IsNotified = 'isNotified',
  StepId = 'stepId',
  TenantScopeId = 'tenantScopeId',
  UserId = 'userId',
}

export enum EventApprovalValidatorSelectColumnEventApprovalValidatorAggregateBoolExpBool_AndArgumentsColumns {
  CanValidate = 'canValidate',
  IsNotified = 'isNotified',
}

export enum EventApprovalValidatorSelectColumnEventApprovalValidatorAggregateBoolExpBool_OrArgumentsColumns {
  CanValidate = 'canValidate',
  IsNotified = 'isNotified',
}

export type EventApprovalValidatorSetInput = {
  canValidate?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isNotified?: InputMaybe<Scalars['Boolean']['input']>;
  stepId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalValidatorStddevFields = {
  __typename?: 'EventApprovalValidatorStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stepId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalValidatorStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  stepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventApprovalValidatorStddevPopFields = {
  __typename?: 'EventApprovalValidatorStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stepId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalValidatorStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  stepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventApprovalValidatorStddevSampFields = {
  __typename?: 'EventApprovalValidatorStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stepId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalValidatorStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  stepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventApprovalValidatorStreamCursorInput = {
  initialValue: EventApprovalValidatorStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventApprovalValidatorStreamCursorValueInput = {
  canValidate?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isNotified?: InputMaybe<Scalars['Boolean']['input']>;
  stepId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalValidatorSumFields = {
  __typename?: 'EventApprovalValidatorSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  stepId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalValidatorSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  stepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum EventApprovalValidatorUpdateColumn {
  CanValidate = 'canValidate',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  IsNotified = 'isNotified',
  StepId = 'stepId',
  TenantScopeId = 'tenantScopeId',
  UserId = 'userId',
}

export type EventApprovalValidatorUpdates = {
  _inc?: InputMaybe<EventApprovalValidatorIncInput>;
  _set?: InputMaybe<EventApprovalValidatorSetInput>;
  where: EventApprovalValidatorBoolExp;
};

export type EventApprovalValidatorVarPopFields = {
  __typename?: 'EventApprovalValidatorVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stepId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalValidatorVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  stepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventApprovalValidatorVarSampFields = {
  __typename?: 'EventApprovalValidatorVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stepId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalValidatorVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  stepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventApprovalValidatorVarianceFields = {
  __typename?: 'EventApprovalValidatorVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stepId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalValidatorVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  stepId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventApprovalVarPopFields = {
  __typename?: 'EventApprovalVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalVarSampFields = {
  __typename?: 'EventApprovalVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventApprovalVarianceFields = {
  __typename?: 'EventApprovalVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventArrRelInsertInput = {
  data: Array<EventInsertInput>;
  onConflict?: InputMaybe<EventOnConflict>;
};

export type EventAvgFields = {
  __typename?: 'EventAvgFields';
  approvalSubmissionId?: Maybe<Scalars['Float']['output']>;
  bannerId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  maxParticipants?: Maybe<Scalars['Float']['output']>;
  nextApprovalStepId?: Maybe<Scalars['Float']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventAvgOrderBy = {
  approvalSubmissionId?: InputMaybe<OrderBy>;
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventBoolExp = {
  _and?: InputMaybe<Array<EventBoolExp>>;
  _not?: InputMaybe<EventBoolExp>;
  _or?: InputMaybe<Array<EventBoolExp>>;
  approvalSubmission?: InputMaybe<FormSubmissionBoolExp>;
  approvalSubmissionId?: InputMaybe<BigintComparisonExp>;
  banner?: InputMaybe<FileUploadBoolExp>;
  bannerId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  end?: InputMaybe<TimestamptzComparisonExp>;
  eventApprovals?: InputMaybe<EventApprovalBoolExp>;
  eventApprovalsAggregate?: InputMaybe<EventApprovalAggregateBoolExp>;
  eventFavorites?: InputMaybe<EventFavoriteBoolExp>;
  eventFavoritesAggregate?: InputMaybe<EventFavoriteAggregateBoolExp>;
  eventJoins?: InputMaybe<EventJoinBoolExp>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  eventOrganizes?: InputMaybe<EventOrganizeBoolExp>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isAutoAcceptingJoins?: InputMaybe<BooleanComparisonExp>;
  isPrivate?: InputMaybe<BooleanComparisonExp>;
  isTemplate?: InputMaybe<BooleanComparisonExp>;
  joinForm?: InputMaybe<FormBoolExp>;
  joinFormId?: InputMaybe<BigintComparisonExp>;
  location?: InputMaybe<LocationBoolExp>;
  locationId?: InputMaybe<BigintComparisonExp>;
  maxParticipants?: InputMaybe<SmallintComparisonExp>;
  meta?: InputMaybe<JsonbComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  nextApprovalStep?: InputMaybe<EventApprovalStepBoolExp>;
  nextApprovalStepId?: InputMaybe<BigintComparisonExp>;
  pointsAwardedForAttendance?: InputMaybe<FloatComparisonExp>;
  price?: InputMaybe<FloatComparisonExp>;
  slug?: InputMaybe<StringComparisonExp>;
  start?: InputMaybe<TimestamptzComparisonExp>;
  state?: InputMaybe<EventStateComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  transactions?: InputMaybe<TransactionBoolExp>;
  transactionsAggregate?: InputMaybe<TransactionAggregateBoolExp>;
};

export enum EventConstraint {
  EventEventApprovalSubmissionIdUnique = 'event_event_approval_submission_id_unique',
  EventJoinFormIdUnique = 'event_join_form_id_unique',
  EventPkey = 'event_pkey',
  EventSlugUnique = 'event_slug_unique',
}

export type EventDeleteAtPathInput = {
  meta?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type EventDeleteElemInput = {
  meta?: InputMaybe<Scalars['Int']['input']>;
};

export type EventDeleteKeyInput = {
  meta?: InputMaybe<Scalars['String']['input']>;
};

export type EventFavorite = {
  __typename?: 'EventFavorite';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  event: Event;
  eventId: Scalars['bigint']['output'];
  id: Scalars['bigint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type EventFavoriteAggregate = {
  __typename?: 'EventFavoriteAggregate';
  aggregate?: Maybe<EventFavoriteAggregateFields>;
  nodes: Array<EventFavorite>;
};

export type EventFavoriteAggregateBoolExp = {
  count?: InputMaybe<EventFavoriteAggregateBoolExpCount>;
};

export type EventFavoriteAggregateFields = {
  __typename?: 'EventFavoriteAggregateFields';
  avg?: Maybe<EventFavoriteAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventFavoriteMaxFields>;
  min?: Maybe<EventFavoriteMinFields>;
  stddev?: Maybe<EventFavoriteStddevFields>;
  stddevPop?: Maybe<EventFavoriteStddevPopFields>;
  stddevSamp?: Maybe<EventFavoriteStddevSampFields>;
  sum?: Maybe<EventFavoriteSumFields>;
  varPop?: Maybe<EventFavoriteVarPopFields>;
  varSamp?: Maybe<EventFavoriteVarSampFields>;
  variance?: Maybe<EventFavoriteVarianceFields>;
};

export type EventFavoriteAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventFavoriteAggregateOrderBy = {
  avg?: InputMaybe<EventFavoriteAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventFavoriteMaxOrderBy>;
  min?: InputMaybe<EventFavoriteMinOrderBy>;
  stddev?: InputMaybe<EventFavoriteStddevOrderBy>;
  stddevPop?: InputMaybe<EventFavoriteStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventFavoriteStddevSampOrderBy>;
  sum?: InputMaybe<EventFavoriteSumOrderBy>;
  varPop?: InputMaybe<EventFavoriteVarPopOrderBy>;
  varSamp?: InputMaybe<EventFavoriteVarSampOrderBy>;
  variance?: InputMaybe<EventFavoriteVarianceOrderBy>;
};

export type EventFavoriteArrRelInsertInput = {
  data: Array<EventFavoriteInsertInput>;
  onConflict?: InputMaybe<EventFavoriteOnConflict>;
};

export type EventFavoriteAvgFields = {
  __typename?: 'EventFavoriteAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventFavoriteAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventFavoriteBoolExp = {
  _and?: InputMaybe<Array<EventFavoriteBoolExp>>;
  _not?: InputMaybe<EventFavoriteBoolExp>;
  _or?: InputMaybe<Array<EventFavoriteBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  event?: InputMaybe<EventBoolExp>;
  eventId?: InputMaybe<BigintComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum EventFavoriteConstraint {
  EventFavoritePkey = 'event_favorite_pkey',
}

export type EventFavoriteIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventFavoriteInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  event?: InputMaybe<EventObjRelInsertInput>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventFavoriteMaxFields = {
  __typename?: 'EventFavoriteMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventFavoriteMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventFavoriteMinFields = {
  __typename?: 'EventFavoriteMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventFavoriteMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventFavoriteMutationResponse = {
  __typename?: 'EventFavoriteMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventFavorite>;
};

export type EventFavoriteOnConflict = {
  constraint: EventFavoriteConstraint;
  updateColumns?: Array<EventFavoriteUpdateColumn>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type EventFavoriteOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  event?: InputMaybe<EventOrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventFavoritePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum EventFavoriteSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventId = 'eventId',
  Id = 'id',
  TenantScopeId = 'tenantScopeId',
}

export type EventFavoriteSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventFavoriteStddevFields = {
  __typename?: 'EventFavoriteStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventFavoriteStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventFavoriteStddevPopFields = {
  __typename?: 'EventFavoriteStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventFavoriteStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventFavoriteStddevSampFields = {
  __typename?: 'EventFavoriteStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventFavoriteStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventFavoriteStreamCursorInput = {
  initialValue: EventFavoriteStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventFavoriteStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventFavoriteSumFields = {
  __typename?: 'EventFavoriteSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventFavoriteSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum EventFavoriteUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventId = 'eventId',
  Id = 'id',
  TenantScopeId = 'tenantScopeId',
}

export type EventFavoriteUpdates = {
  _inc?: InputMaybe<EventFavoriteIncInput>;
  _set?: InputMaybe<EventFavoriteSetInput>;
  where: EventFavoriteBoolExp;
};

export type EventFavoriteVarPopFields = {
  __typename?: 'EventFavoriteVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventFavoriteVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventFavoriteVarSampFields = {
  __typename?: 'EventFavoriteVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventFavoriteVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventFavoriteVarianceFields = {
  __typename?: 'EventFavoriteVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventFavoriteVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventIncInput = {
  approvalSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  maxParticipants?: InputMaybe<Scalars['smallint']['input']>;
  nextApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  pointsAwardedForAttendance?: InputMaybe<Scalars['Float']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventInsertInput = {
  approvalSubmission?: InputMaybe<FormSubmissionObjRelInsertInput>;
  approvalSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  banner?: InputMaybe<FileUploadObjRelInsertInput>;
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['timestamptz']['input']>;
  eventApprovals?: InputMaybe<EventApprovalArrRelInsertInput>;
  eventFavorites?: InputMaybe<EventFavoriteArrRelInsertInput>;
  eventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  eventOrganizes?: InputMaybe<EventOrganizeArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAutoAcceptingJoins?: InputMaybe<Scalars['Boolean']['input']>;
  isPrivate?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  joinForm?: InputMaybe<FormObjRelInsertInput>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  location?: InputMaybe<LocationObjRelInsertInput>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  maxParticipants?: InputMaybe<Scalars['smallint']['input']>;
  meta?: InputMaybe<Scalars['jsonb']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nextApprovalStep?: InputMaybe<EventApprovalStepObjRelInsertInput>;
  nextApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  pointsAwardedForAttendance?: InputMaybe<Scalars['Float']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['EventState']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  transactions?: InputMaybe<TransactionArrRelInsertInput>;
};

export type EventJoin = {
  __typename?: 'EventJoin';
  actions: Array<Action>;
  actionsAggregate: ActionAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  event: Event;
  eventId: Scalars['bigint']['output'];
  id: Scalars['bigint']['output'];
  isPresent?: Maybe<Scalars['Boolean']['output']>;
  joinFormSubmission?: Maybe<FormSubmission>;
  joinFormSubmissionId?: Maybe<Scalars['bigint']['output']>;
  joinedBy: User;
  joinedById: Scalars['bigint']['output'];
  missionJoin?: Maybe<MissionJoin>;
  missionJoinId?: Maybe<Scalars['bigint']['output']>;
  missionJoins: Array<MissionJoin>;
  missionJoinsAggregate: MissionJoinAggregate;
  participationProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  participationProcessedBy?: Maybe<User>;
  participationProcessedById?: Maybe<Scalars['bigint']['output']>;
  participationProcessedVia?: Maybe<Scalars['ProcessedVia']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedBy?: Maybe<User>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  qrCode?: Maybe<FileUpload>;
  qrCodeId?: Maybe<Scalars['bigint']['output']>;
  state: Scalars['ApprovalState']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type EventJoinActionsArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type EventJoinActionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type EventJoinMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type EventJoinMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type EventJoinAggregate = {
  __typename?: 'EventJoinAggregate';
  aggregate?: Maybe<EventJoinAggregateFields>;
  nodes: Array<EventJoin>;
};

export type EventJoinAggregateBoolExp = {
  bool_and?: InputMaybe<EventJoinAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<EventJoinAggregateBoolExpBool_Or>;
  count?: InputMaybe<EventJoinAggregateBoolExpCount>;
};

export type EventJoinAggregateFields = {
  __typename?: 'EventJoinAggregateFields';
  avg?: Maybe<EventJoinAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventJoinMaxFields>;
  min?: Maybe<EventJoinMinFields>;
  stddev?: Maybe<EventJoinStddevFields>;
  stddevPop?: Maybe<EventJoinStddevPopFields>;
  stddevSamp?: Maybe<EventJoinStddevSampFields>;
  sum?: Maybe<EventJoinSumFields>;
  varPop?: Maybe<EventJoinVarPopFields>;
  varSamp?: Maybe<EventJoinVarSampFields>;
  variance?: Maybe<EventJoinVarianceFields>;
};

export type EventJoinAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventJoinSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventJoinAggregateOrderBy = {
  avg?: InputMaybe<EventJoinAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventJoinMaxOrderBy>;
  min?: InputMaybe<EventJoinMinOrderBy>;
  stddev?: InputMaybe<EventJoinStddevOrderBy>;
  stddevPop?: InputMaybe<EventJoinStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventJoinStddevSampOrderBy>;
  sum?: InputMaybe<EventJoinSumOrderBy>;
  varPop?: InputMaybe<EventJoinVarPopOrderBy>;
  varSamp?: InputMaybe<EventJoinVarSampOrderBy>;
  variance?: InputMaybe<EventJoinVarianceOrderBy>;
};

export type EventJoinArrRelInsertInput = {
  data: Array<EventJoinInsertInput>;
  onConflict?: InputMaybe<EventJoinOnConflict>;
};

export type EventJoinAvgFields = {
  __typename?: 'EventJoinAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionJoinId?: Maybe<Scalars['Float']['output']>;
  participationProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  qrCodeId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventJoinAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventJoinBoolExp = {
  _and?: InputMaybe<Array<EventJoinBoolExp>>;
  _not?: InputMaybe<EventJoinBoolExp>;
  _or?: InputMaybe<Array<EventJoinBoolExp>>;
  actions?: InputMaybe<ActionBoolExp>;
  actionsAggregate?: InputMaybe<ActionAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  event?: InputMaybe<EventBoolExp>;
  eventId?: InputMaybe<BigintComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isPresent?: InputMaybe<BooleanComparisonExp>;
  joinFormSubmission?: InputMaybe<FormSubmissionBoolExp>;
  joinFormSubmissionId?: InputMaybe<BigintComparisonExp>;
  joinedBy?: InputMaybe<UserBoolExp>;
  joinedById?: InputMaybe<BigintComparisonExp>;
  missionJoin?: InputMaybe<MissionJoinBoolExp>;
  missionJoinId?: InputMaybe<BigintComparisonExp>;
  missionJoins?: InputMaybe<MissionJoinBoolExp>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  participationProcessedAt?: InputMaybe<TimestamptzComparisonExp>;
  participationProcessedBy?: InputMaybe<UserBoolExp>;
  participationProcessedById?: InputMaybe<BigintComparisonExp>;
  participationProcessedVia?: InputMaybe<ProcessedViaComparisonExp>;
  processedAt?: InputMaybe<TimestamptzComparisonExp>;
  processedBy?: InputMaybe<UserBoolExp>;
  processedById?: InputMaybe<BigintComparisonExp>;
  qrCode?: InputMaybe<FileUploadBoolExp>;
  qrCodeId?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<ApprovalStateComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum EventJoinConstraint {
  EventJoinFormSubmissionIdUnique = 'event_join_form_submission_id_unique',
  EventJoinPkey = 'event_join_pkey',
}

export type EventJoinIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinFormSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  missionJoinId?: InputMaybe<Scalars['bigint']['input']>;
  participationProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  qrCodeId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventJoinInsertInput = {
  actions?: InputMaybe<ActionArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  event?: InputMaybe<EventObjRelInsertInput>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPresent?: InputMaybe<Scalars['Boolean']['input']>;
  joinFormSubmission?: InputMaybe<FormSubmissionObjRelInsertInput>;
  joinFormSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  joinedBy?: InputMaybe<UserObjRelInsertInput>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  missionJoin?: InputMaybe<MissionJoinObjRelInsertInput>;
  missionJoinId?: InputMaybe<Scalars['bigint']['input']>;
  missionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  participationProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  participationProcessedBy?: InputMaybe<UserObjRelInsertInput>;
  participationProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  participationProcessedVia?: InputMaybe<Scalars['ProcessedVia']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedBy?: InputMaybe<UserObjRelInsertInput>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  qrCode?: InputMaybe<FileUploadObjRelInsertInput>;
  qrCodeId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventJoinMaxFields = {
  __typename?: 'EventJoinMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  missionJoinId?: Maybe<Scalars['bigint']['output']>;
  participationProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  participationProcessedById?: Maybe<Scalars['bigint']['output']>;
  participationProcessedVia?: Maybe<Scalars['ProcessedVia']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  qrCodeId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventJoinMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedAt?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  participationProcessedVia?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventJoinMinFields = {
  __typename?: 'EventJoinMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  missionJoinId?: Maybe<Scalars['bigint']['output']>;
  participationProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  participationProcessedById?: Maybe<Scalars['bigint']['output']>;
  participationProcessedVia?: Maybe<Scalars['ProcessedVia']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  qrCodeId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventJoinMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedAt?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  participationProcessedVia?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventJoinMutationResponse = {
  __typename?: 'EventJoinMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventJoin>;
};

export type EventJoinObjRelInsertInput = {
  data: EventJoinInsertInput;
  onConflict?: InputMaybe<EventJoinOnConflict>;
};

export type EventJoinOnConflict = {
  constraint: EventJoinConstraint;
  updateColumns?: Array<EventJoinUpdateColumn>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type EventJoinOrderBy = {
  actionsAggregate?: InputMaybe<ActionAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  event?: InputMaybe<EventOrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isPresent?: InputMaybe<OrderBy>;
  joinFormSubmission?: InputMaybe<FormSubmissionOrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedBy?: InputMaybe<UserOrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoin?: InputMaybe<MissionJoinOrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  participationProcessedAt?: InputMaybe<OrderBy>;
  participationProcessedBy?: InputMaybe<UserOrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  participationProcessedVia?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedBy?: InputMaybe<UserOrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCode?: InputMaybe<FileUploadOrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventJoinPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum EventJoinSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventId = 'eventId',
  Id = 'id',
  IsPresent = 'isPresent',
  JoinFormSubmissionId = 'joinFormSubmissionId',
  JoinedById = 'joinedById',
  MissionJoinId = 'missionJoinId',
  ParticipationProcessedAt = 'participationProcessedAt',
  ParticipationProcessedById = 'participationProcessedById',
  ParticipationProcessedVia = 'participationProcessedVia',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  QrCodeId = 'qrCodeId',
  State = 'state',
  TenantScopeId = 'tenantScopeId',
}

export enum EventJoinSelectColumnEventJoinAggregateBoolExpBool_AndArgumentsColumns {
  IsPresent = 'isPresent',
}

export enum EventJoinSelectColumnEventJoinAggregateBoolExpBool_OrArgumentsColumns {
  IsPresent = 'isPresent',
}

export type EventJoinSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPresent?: InputMaybe<Scalars['Boolean']['input']>;
  joinFormSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  missionJoinId?: InputMaybe<Scalars['bigint']['input']>;
  participationProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  participationProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  participationProcessedVia?: InputMaybe<Scalars['ProcessedVia']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  qrCodeId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventJoinStddevFields = {
  __typename?: 'EventJoinStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionJoinId?: Maybe<Scalars['Float']['output']>;
  participationProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  qrCodeId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventJoinStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventJoinStddevPopFields = {
  __typename?: 'EventJoinStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionJoinId?: Maybe<Scalars['Float']['output']>;
  participationProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  qrCodeId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventJoinStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventJoinStddevSampFields = {
  __typename?: 'EventJoinStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionJoinId?: Maybe<Scalars['Float']['output']>;
  participationProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  qrCodeId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventJoinStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventJoinStreamCursorInput = {
  initialValue: EventJoinStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventJoinStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPresent?: InputMaybe<Scalars['Boolean']['input']>;
  joinFormSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  missionJoinId?: InputMaybe<Scalars['bigint']['input']>;
  participationProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  participationProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  participationProcessedVia?: InputMaybe<Scalars['ProcessedVia']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  qrCodeId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventJoinSumFields = {
  __typename?: 'EventJoinSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  missionJoinId?: Maybe<Scalars['bigint']['output']>;
  participationProcessedById?: Maybe<Scalars['bigint']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  qrCodeId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventJoinSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum EventJoinUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventId = 'eventId',
  Id = 'id',
  IsPresent = 'isPresent',
  JoinFormSubmissionId = 'joinFormSubmissionId',
  JoinedById = 'joinedById',
  MissionJoinId = 'missionJoinId',
  ParticipationProcessedAt = 'participationProcessedAt',
  ParticipationProcessedById = 'participationProcessedById',
  ParticipationProcessedVia = 'participationProcessedVia',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  QrCodeId = 'qrCodeId',
  State = 'state',
  TenantScopeId = 'tenantScopeId',
}

export type EventJoinUpdates = {
  _inc?: InputMaybe<EventJoinIncInput>;
  _set?: InputMaybe<EventJoinSetInput>;
  where: EventJoinBoolExp;
};

export type EventJoinVarPopFields = {
  __typename?: 'EventJoinVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionJoinId?: Maybe<Scalars['Float']['output']>;
  participationProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  qrCodeId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventJoinVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventJoinVarSampFields = {
  __typename?: 'EventJoinVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionJoinId?: Maybe<Scalars['Float']['output']>;
  participationProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  qrCodeId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventJoinVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventJoinVarianceFields = {
  __typename?: 'EventJoinVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionJoinId?: Maybe<Scalars['Float']['output']>;
  participationProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  qrCodeId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventJoinVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventMaxFields = {
  __typename?: 'EventMaxFields';
  approvalSubmissionId?: Maybe<Scalars['bigint']['output']>;
  bannerId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  end?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  maxParticipants?: Maybe<Scalars['smallint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nextApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  start?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['EventState']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventMaxOrderBy = {
  approvalSubmissionId?: InputMaybe<OrderBy>;
  bannerId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  end?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  nextApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  start?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventMinFields = {
  __typename?: 'EventMinFields';
  approvalSubmissionId?: Maybe<Scalars['bigint']['output']>;
  bannerId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  end?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  maxParticipants?: Maybe<Scalars['smallint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nextApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  start?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['EventState']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventMinOrderBy = {
  approvalSubmissionId?: InputMaybe<OrderBy>;
  bannerId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  end?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  nextApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  start?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventMutationResponse = {
  __typename?: 'EventMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Event>;
};

export type EventObjRelInsertInput = {
  data: EventInsertInput;
  onConflict?: InputMaybe<EventOnConflict>;
};

export type EventOnConflict = {
  constraint: EventConstraint;
  updateColumns?: Array<EventUpdateColumn>;
  where?: InputMaybe<EventBoolExp>;
};

export type EventOrderBy = {
  approvalSubmission?: InputMaybe<FormSubmissionOrderBy>;
  approvalSubmissionId?: InputMaybe<OrderBy>;
  banner?: InputMaybe<FileUploadOrderBy>;
  bannerId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  end?: InputMaybe<OrderBy>;
  eventApprovalsAggregate?: InputMaybe<EventApprovalAggregateOrderBy>;
  eventFavoritesAggregate?: InputMaybe<EventFavoriteAggregateOrderBy>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isAutoAcceptingJoins?: InputMaybe<OrderBy>;
  isPrivate?: InputMaybe<OrderBy>;
  isTemplate?: InputMaybe<OrderBy>;
  joinForm?: InputMaybe<FormOrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  location?: InputMaybe<LocationOrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  meta?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  nextApprovalStep?: InputMaybe<EventApprovalStepOrderBy>;
  nextApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  start?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionsAggregate?: InputMaybe<TransactionAggregateOrderBy>;
};

export type EventOrganize = {
  __typename?: 'EventOrganize';
  createdAt: Scalars['timestamptz']['output'];
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  event: Event;
  eventId: Scalars['bigint']['output'];
  eventSupervisors: Array<EventSupervisor>;
  eventSupervisorsAggregate: EventSupervisorAggregate;
  id: Scalars['bigint']['output'];
  missions: Array<Mission>;
  missionsAggregate: MissionAggregate;
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  user?: Maybe<User>;
};

export type EventOrganizeEventSupervisorsArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type EventOrganizeEventSupervisorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type EventOrganizeMissionsArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type EventOrganizeMissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type EventOrganizeAggregate = {
  __typename?: 'EventOrganizeAggregate';
  aggregate?: Maybe<EventOrganizeAggregateFields>;
  nodes: Array<EventOrganize>;
};

export type EventOrganizeAggregateBoolExp = {
  count?: InputMaybe<EventOrganizeAggregateBoolExpCount>;
};

export type EventOrganizeAggregateFields = {
  __typename?: 'EventOrganizeAggregateFields';
  avg?: Maybe<EventOrganizeAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventOrganizeMaxFields>;
  min?: Maybe<EventOrganizeMinFields>;
  stddev?: Maybe<EventOrganizeStddevFields>;
  stddevPop?: Maybe<EventOrganizeStddevPopFields>;
  stddevSamp?: Maybe<EventOrganizeStddevSampFields>;
  sum?: Maybe<EventOrganizeSumFields>;
  varPop?: Maybe<EventOrganizeVarPopFields>;
  varSamp?: Maybe<EventOrganizeVarSampFields>;
  variance?: Maybe<EventOrganizeVarianceFields>;
};

export type EventOrganizeAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventOrganizeAggregateOrderBy = {
  avg?: InputMaybe<EventOrganizeAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventOrganizeMaxOrderBy>;
  min?: InputMaybe<EventOrganizeMinOrderBy>;
  stddev?: InputMaybe<EventOrganizeStddevOrderBy>;
  stddevPop?: InputMaybe<EventOrganizeStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventOrganizeStddevSampOrderBy>;
  sum?: InputMaybe<EventOrganizeSumOrderBy>;
  varPop?: InputMaybe<EventOrganizeVarPopOrderBy>;
  varSamp?: InputMaybe<EventOrganizeVarSampOrderBy>;
  variance?: InputMaybe<EventOrganizeVarianceOrderBy>;
};

export type EventOrganizeArrRelInsertInput = {
  data: Array<EventOrganizeInsertInput>;
  onConflict?: InputMaybe<EventOrganizeOnConflict>;
};

export type EventOrganizeAvgFields = {
  __typename?: 'EventOrganizeAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventOrganizeAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventOrganizeBoolExp = {
  _and?: InputMaybe<Array<EventOrganizeBoolExp>>;
  _not?: InputMaybe<EventOrganizeBoolExp>;
  _or?: InputMaybe<Array<EventOrganizeBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  event?: InputMaybe<EventBoolExp>;
  eventId?: InputMaybe<BigintComparisonExp>;
  eventSupervisors?: InputMaybe<EventSupervisorBoolExp>;
  eventSupervisorsAggregate?: InputMaybe<EventSupervisorAggregateBoolExp>;
  id?: InputMaybe<BigintComparisonExp>;
  missions?: InputMaybe<MissionBoolExp>;
  missionsAggregate?: InputMaybe<MissionAggregateBoolExp>;
  project?: InputMaybe<ProjectBoolExp>;
  projectId?: InputMaybe<BigintComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
};

export enum EventOrganizeConstraint {
  EventOrganizePkey = 'event_organize_pkey',
}

export type EventOrganizeIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventOrganizeInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  event?: InputMaybe<EventObjRelInsertInput>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  eventSupervisors?: InputMaybe<EventSupervisorArrRelInsertInput>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  missions?: InputMaybe<MissionArrRelInsertInput>;
  project?: InputMaybe<ProjectObjRelInsertInput>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
};

export type EventOrganizeMaxFields = {
  __typename?: 'EventOrganizeMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventOrganizeMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventOrganizeMinFields = {
  __typename?: 'EventOrganizeMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventOrganizeMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventOrganizeMutationResponse = {
  __typename?: 'EventOrganizeMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventOrganize>;
};

export type EventOrganizeObjRelInsertInput = {
  data: EventOrganizeInsertInput;
  onConflict?: InputMaybe<EventOrganizeOnConflict>;
};

export type EventOrganizeOnConflict = {
  constraint: EventOrganizeConstraint;
  updateColumns?: Array<EventOrganizeUpdateColumn>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type EventOrganizeOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  event?: InputMaybe<EventOrderBy>;
  eventId?: InputMaybe<OrderBy>;
  eventSupervisorsAggregate?: InputMaybe<EventSupervisorAggregateOrderBy>;
  id?: InputMaybe<OrderBy>;
  missionsAggregate?: InputMaybe<MissionAggregateOrderBy>;
  project?: InputMaybe<ProjectOrderBy>;
  projectId?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
};

export type EventOrganizePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum EventOrganizeSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventId = 'eventId',
  Id = 'id',
  ProjectId = 'projectId',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
}

export type EventOrganizeSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventOrganizeStddevFields = {
  __typename?: 'EventOrganizeStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventOrganizeStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventOrganizeStddevPopFields = {
  __typename?: 'EventOrganizeStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventOrganizeStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventOrganizeStddevSampFields = {
  __typename?: 'EventOrganizeStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventOrganizeStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventOrganizeStreamCursorInput = {
  initialValue: EventOrganizeStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventOrganizeStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventOrganizeSumFields = {
  __typename?: 'EventOrganizeSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventOrganizeSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum EventOrganizeUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventId = 'eventId',
  Id = 'id',
  ProjectId = 'projectId',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
}

export type EventOrganizeUpdates = {
  _inc?: InputMaybe<EventOrganizeIncInput>;
  _set?: InputMaybe<EventOrganizeSetInput>;
  where: EventOrganizeBoolExp;
};

export type EventOrganizeVarPopFields = {
  __typename?: 'EventOrganizeVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventOrganizeVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventOrganizeVarSampFields = {
  __typename?: 'EventOrganizeVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventOrganizeVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventOrganizeVarianceFields = {
  __typename?: 'EventOrganizeVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventOrganizeVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export type EventPrependInput = {
  meta?: InputMaybe<Scalars['jsonb']['input']>;
};

export enum EventSelectColumn {
  ApprovalSubmissionId = 'approvalSubmissionId',
  BannerId = 'bannerId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  End = 'end',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsAutoAcceptingJoins = 'isAutoAcceptingJoins',
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
  JoinFormId = 'joinFormId',
  LocationId = 'locationId',
  MaxParticipants = 'maxParticipants',
  Meta = 'meta',
  Name = 'name',
  NextApprovalStepId = 'nextApprovalStepId',
  PointsAwardedForAttendance = 'pointsAwardedForAttendance',
  Price = 'price',
  Slug = 'slug',
  Start = 'start',
  State = 'state',
  TenantScopeId = 'tenantScopeId',
}

export enum EventSelectColumnEventAggregateBoolExpBool_AndArgumentsColumns {
  IsAutoAcceptingJoins = 'isAutoAcceptingJoins',
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
}

export enum EventSelectColumnEventAggregateBoolExpBool_OrArgumentsColumns {
  IsAutoAcceptingJoins = 'isAutoAcceptingJoins',
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
}

export type EventSetInput = {
  approvalSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAutoAcceptingJoins?: InputMaybe<Scalars['Boolean']['input']>;
  isPrivate?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  maxParticipants?: InputMaybe<Scalars['smallint']['input']>;
  meta?: InputMaybe<Scalars['jsonb']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nextApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  pointsAwardedForAttendance?: InputMaybe<Scalars['Float']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['EventState']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventStateComparisonExp = {
  _eq?: InputMaybe<Scalars['EventState']['input']>;
  _gt?: InputMaybe<Scalars['EventState']['input']>;
  _gte?: InputMaybe<Scalars['EventState']['input']>;
  _in?: InputMaybe<Array<Scalars['EventState']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['EventState']['input']>;
  _lte?: InputMaybe<Scalars['EventState']['input']>;
  _neq?: InputMaybe<Scalars['EventState']['input']>;
  _nin?: InputMaybe<Array<Scalars['EventState']['input']>>;
};

export type EventStddevFields = {
  __typename?: 'EventStddevFields';
  approvalSubmissionId?: Maybe<Scalars['Float']['output']>;
  bannerId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  maxParticipants?: Maybe<Scalars['Float']['output']>;
  nextApprovalStepId?: Maybe<Scalars['Float']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventStddevOrderBy = {
  approvalSubmissionId?: InputMaybe<OrderBy>;
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventStddevPopFields = {
  __typename?: 'EventStddevPopFields';
  approvalSubmissionId?: Maybe<Scalars['Float']['output']>;
  bannerId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  maxParticipants?: Maybe<Scalars['Float']['output']>;
  nextApprovalStepId?: Maybe<Scalars['Float']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventStddevPopOrderBy = {
  approvalSubmissionId?: InputMaybe<OrderBy>;
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventStddevSampFields = {
  __typename?: 'EventStddevSampFields';
  approvalSubmissionId?: Maybe<Scalars['Float']['output']>;
  bannerId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  maxParticipants?: Maybe<Scalars['Float']['output']>;
  nextApprovalStepId?: Maybe<Scalars['Float']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventStddevSampOrderBy = {
  approvalSubmissionId?: InputMaybe<OrderBy>;
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventStreamCursorInput = {
  initialValue: EventStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventStreamCursorValueInput = {
  approvalSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAutoAcceptingJoins?: InputMaybe<Scalars['Boolean']['input']>;
  isPrivate?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  maxParticipants?: InputMaybe<Scalars['smallint']['input']>;
  meta?: InputMaybe<Scalars['jsonb']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nextApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  pointsAwardedForAttendance?: InputMaybe<Scalars['Float']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['EventState']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventSumFields = {
  __typename?: 'EventSumFields';
  approvalSubmissionId?: Maybe<Scalars['bigint']['output']>;
  bannerId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  maxParticipants?: Maybe<Scalars['smallint']['output']>;
  nextApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type EventSumOrderBy = {
  approvalSubmissionId?: InputMaybe<OrderBy>;
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventSupervisor = {
  __typename?: 'EventSupervisor';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventOrganize: EventOrganize;
  eventOrganizeId: Scalars['bigint']['output'];
  id: Scalars['bigint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  title?: Maybe<Scalars['String']['output']>;
  user: User;
  userId: Scalars['bigint']['output'];
};

export type EventSupervisorAggregate = {
  __typename?: 'EventSupervisorAggregate';
  aggregate?: Maybe<EventSupervisorAggregateFields>;
  nodes: Array<EventSupervisor>;
};

export type EventSupervisorAggregateBoolExp = {
  count?: InputMaybe<EventSupervisorAggregateBoolExpCount>;
};

export type EventSupervisorAggregateFields = {
  __typename?: 'EventSupervisorAggregateFields';
  avg?: Maybe<EventSupervisorAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventSupervisorMaxFields>;
  min?: Maybe<EventSupervisorMinFields>;
  stddev?: Maybe<EventSupervisorStddevFields>;
  stddevPop?: Maybe<EventSupervisorStddevPopFields>;
  stddevSamp?: Maybe<EventSupervisorStddevSampFields>;
  sum?: Maybe<EventSupervisorSumFields>;
  varPop?: Maybe<EventSupervisorVarPopFields>;
  varSamp?: Maybe<EventSupervisorVarSampFields>;
  variance?: Maybe<EventSupervisorVarianceFields>;
};

export type EventSupervisorAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventSupervisorAggregateOrderBy = {
  avg?: InputMaybe<EventSupervisorAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventSupervisorMaxOrderBy>;
  min?: InputMaybe<EventSupervisorMinOrderBy>;
  stddev?: InputMaybe<EventSupervisorStddevOrderBy>;
  stddevPop?: InputMaybe<EventSupervisorStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventSupervisorStddevSampOrderBy>;
  sum?: InputMaybe<EventSupervisorSumOrderBy>;
  varPop?: InputMaybe<EventSupervisorVarPopOrderBy>;
  varSamp?: InputMaybe<EventSupervisorVarSampOrderBy>;
  variance?: InputMaybe<EventSupervisorVarianceOrderBy>;
};

export type EventSupervisorArrRelInsertInput = {
  data: Array<EventSupervisorInsertInput>;
  onConflict?: InputMaybe<EventSupervisorOnConflict>;
};

export type EventSupervisorAvgFields = {
  __typename?: 'EventSupervisorAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventSupervisorAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorBoolExp = {
  _and?: InputMaybe<Array<EventSupervisorBoolExp>>;
  _not?: InputMaybe<EventSupervisorBoolExp>;
  _or?: InputMaybe<Array<EventSupervisorBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  eventOrganize?: InputMaybe<EventOrganizeBoolExp>;
  eventOrganizeId?: InputMaybe<BigintComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  title?: InputMaybe<StringComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
  userId?: InputMaybe<BigintComparisonExp>;
};

export enum EventSupervisorConstraint {
  EventSupervisorPkey = 'event_supervisor_pkey',
}

export type EventSupervisorIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventOrganizeId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventSupervisorInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventOrganize?: InputMaybe<EventOrganizeObjRelInsertInput>;
  eventOrganizeId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventSupervisorMaxFields = {
  __typename?: 'EventSupervisorMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventOrganizeId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type EventSupervisorMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  title?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorMinFields = {
  __typename?: 'EventSupervisorMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventOrganizeId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type EventSupervisorMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  title?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorMutationResponse = {
  __typename?: 'EventSupervisorMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventSupervisor>;
};

export type EventSupervisorOnConflict = {
  constraint: EventSupervisorConstraint;
  updateColumns?: Array<EventSupervisorUpdateColumn>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type EventSupervisorOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventOrganize?: InputMaybe<EventOrganizeOrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  title?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum EventSupervisorSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventOrganizeId = 'eventOrganizeId',
  Id = 'id',
  TenantScopeId = 'tenantScopeId',
  Title = 'title',
  UserId = 'userId',
}

export type EventSupervisorSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventOrganizeId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventSupervisorStddevFields = {
  __typename?: 'EventSupervisorStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventSupervisorStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorStddevPopFields = {
  __typename?: 'EventSupervisorStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventSupervisorStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorStddevSampFields = {
  __typename?: 'EventSupervisorStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventSupervisorStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorStreamCursorInput = {
  initialValue: EventSupervisorStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventSupervisorStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventOrganizeId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventSupervisorSumFields = {
  __typename?: 'EventSupervisorSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventOrganizeId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type EventSupervisorSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum EventSupervisorUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventOrganizeId = 'eventOrganizeId',
  Id = 'id',
  TenantScopeId = 'tenantScopeId',
  Title = 'title',
  UserId = 'userId',
}

export type EventSupervisorUpdates = {
  _inc?: InputMaybe<EventSupervisorIncInput>;
  _set?: InputMaybe<EventSupervisorSetInput>;
  where: EventSupervisorBoolExp;
};

export type EventSupervisorVarPopFields = {
  __typename?: 'EventSupervisorVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventSupervisorVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorVarSampFields = {
  __typename?: 'EventSupervisorVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventSupervisorVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorVarianceFields = {
  __typename?: 'EventSupervisorVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventSupervisorVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum EventUpdateColumn {
  ApprovalSubmissionId = 'approvalSubmissionId',
  BannerId = 'bannerId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  End = 'end',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsAutoAcceptingJoins = 'isAutoAcceptingJoins',
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
  JoinFormId = 'joinFormId',
  LocationId = 'locationId',
  MaxParticipants = 'maxParticipants',
  Meta = 'meta',
  Name = 'name',
  NextApprovalStepId = 'nextApprovalStepId',
  PointsAwardedForAttendance = 'pointsAwardedForAttendance',
  Price = 'price',
  Slug = 'slug',
  Start = 'start',
  State = 'state',
  TenantScopeId = 'tenantScopeId',
}

export type EventUpdates = {
  _append?: InputMaybe<EventAppendInput>;
  _deleteAtPath?: InputMaybe<EventDeleteAtPathInput>;
  _deleteElem?: InputMaybe<EventDeleteElemInput>;
  _deleteKey?: InputMaybe<EventDeleteKeyInput>;
  _inc?: InputMaybe<EventIncInput>;
  _prepend?: InputMaybe<EventPrependInput>;
  _set?: InputMaybe<EventSetInput>;
  where: EventBoolExp;
};

export type EventVarPopFields = {
  __typename?: 'EventVarPopFields';
  approvalSubmissionId?: Maybe<Scalars['Float']['output']>;
  bannerId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  maxParticipants?: Maybe<Scalars['Float']['output']>;
  nextApprovalStepId?: Maybe<Scalars['Float']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventVarPopOrderBy = {
  approvalSubmissionId?: InputMaybe<OrderBy>;
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventVarSampFields = {
  __typename?: 'EventVarSampFields';
  approvalSubmissionId?: Maybe<Scalars['Float']['output']>;
  bannerId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  maxParticipants?: Maybe<Scalars['Float']['output']>;
  nextApprovalStepId?: Maybe<Scalars['Float']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventVarSampOrderBy = {
  approvalSubmissionId?: InputMaybe<OrderBy>;
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type EventVarianceFields = {
  __typename?: 'EventVarianceFields';
  approvalSubmissionId?: Maybe<Scalars['Float']['output']>;
  bannerId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  maxParticipants?: Maybe<Scalars['Float']['output']>;
  nextApprovalStepId?: Maybe<Scalars['Float']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type EventVarianceOrderBy = {
  approvalSubmissionId?: InputMaybe<OrderBy>;
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type Expense = {
  __typename?: 'Expense';
  bankInfo: BankInfo;
  bankInfoId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  expenseItems: Array<ExpenseItem>;
  expenseItemsAggregate: ExpenseItemAggregate;
  expenseReportId: Scalars['bigint']['output'];
  fileUpload: FileUpload;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  lastNotifiedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedBy?: Maybe<User>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  state: Scalars['ApprovalState']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  transaction?: Maybe<Transaction>;
  transactions: Array<Transaction>;
  transactionsAggregate: TransactionAggregate;
};

export type ExpenseExpenseItemsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type ExpenseExpenseItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type ExpenseTransactionsArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type ExpenseTransactionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type ExpenseAggregate = {
  __typename?: 'ExpenseAggregate';
  aggregate?: Maybe<ExpenseAggregateFields>;
  nodes: Array<Expense>;
};

export type ExpenseAggregateBoolExp = {
  count?: InputMaybe<ExpenseAggregateBoolExpCount>;
};

export type ExpenseAggregateFields = {
  __typename?: 'ExpenseAggregateFields';
  avg?: Maybe<ExpenseAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ExpenseMaxFields>;
  min?: Maybe<ExpenseMinFields>;
  stddev?: Maybe<ExpenseStddevFields>;
  stddevPop?: Maybe<ExpenseStddevPopFields>;
  stddevSamp?: Maybe<ExpenseStddevSampFields>;
  sum?: Maybe<ExpenseSumFields>;
  varPop?: Maybe<ExpenseVarPopFields>;
  varSamp?: Maybe<ExpenseVarSampFields>;
  variance?: Maybe<ExpenseVarianceFields>;
};

export type ExpenseAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ExpenseSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ExpenseAggregateOrderBy = {
  avg?: InputMaybe<ExpenseAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ExpenseMaxOrderBy>;
  min?: InputMaybe<ExpenseMinOrderBy>;
  stddev?: InputMaybe<ExpenseStddevOrderBy>;
  stddevPop?: InputMaybe<ExpenseStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ExpenseStddevSampOrderBy>;
  sum?: InputMaybe<ExpenseSumOrderBy>;
  varPop?: InputMaybe<ExpenseVarPopOrderBy>;
  varSamp?: InputMaybe<ExpenseVarSampOrderBy>;
  variance?: InputMaybe<ExpenseVarianceOrderBy>;
};

export type ExpenseArrRelInsertInput = {
  data: Array<ExpenseInsertInput>;
  onConflict?: InputMaybe<ExpenseOnConflict>;
};

export type ExpenseAvgFields = {
  __typename?: 'ExpenseAvgFields';
  bankInfoId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseReportId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseAvgOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ExpenseBoolExp = {
  _and?: InputMaybe<Array<ExpenseBoolExp>>;
  _not?: InputMaybe<ExpenseBoolExp>;
  _or?: InputMaybe<Array<ExpenseBoolExp>>;
  bankInfo?: InputMaybe<BankInfoBoolExp>;
  bankInfoId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  expenseItems?: InputMaybe<ExpenseItemBoolExp>;
  expenseItemsAggregate?: InputMaybe<ExpenseItemAggregateBoolExp>;
  expenseReportId?: InputMaybe<BigintComparisonExp>;
  fileUpload?: InputMaybe<FileUploadBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  lastNotifiedAt?: InputMaybe<TimestamptzComparisonExp>;
  processedAt?: InputMaybe<TimestamptzComparisonExp>;
  processedBy?: InputMaybe<UserBoolExp>;
  processedById?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<ApprovalStateComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  transaction?: InputMaybe<TransactionBoolExp>;
  transactions?: InputMaybe<TransactionBoolExp>;
  transactionsAggregate?: InputMaybe<TransactionAggregateBoolExp>;
};

export enum ExpenseConstraint {
  ExpensePkey = 'expense_pkey',
}

export type ExpenseIncInput = {
  bankInfoId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  expenseReportId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseInsertInput = {
  bankInfo?: InputMaybe<BankInfoObjRelInsertInput>;
  bankInfoId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  expenseItems?: InputMaybe<ExpenseItemArrRelInsertInput>;
  expenseReportId?: InputMaybe<Scalars['bigint']['input']>;
  fileUpload?: InputMaybe<FileUploadObjRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  lastNotifiedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedBy?: InputMaybe<UserObjRelInsertInput>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  transaction?: InputMaybe<TransactionObjRelInsertInput>;
  transactions?: InputMaybe<TransactionArrRelInsertInput>;
};

export type ExpenseItem = {
  __typename?: 'ExpenseItem';
  company?: Maybe<LegalUnit>;
  companyId?: Maybe<Scalars['bigint']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  expense?: Maybe<Expense>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  expenseItemAttachments: Array<ExpenseItemAttachments>;
  expenseItemAttachmentsAggregate: ExpenseItemAttachmentsAggregate;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  payedAt?: Maybe<Scalars['timestamptz']['output']>;
  quantity: Scalars['smallint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  unitCost: Scalars['Float']['output'];
};

export type ExpenseItemExpenseItemAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type ExpenseItemExpenseItemAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type ExpenseItemAggregate = {
  __typename?: 'ExpenseItemAggregate';
  aggregate?: Maybe<ExpenseItemAggregateFields>;
  nodes: Array<ExpenseItem>;
};

export type ExpenseItemAggregateBoolExp = {
  count?: InputMaybe<ExpenseItemAggregateBoolExpCount>;
};

export type ExpenseItemAggregateFields = {
  __typename?: 'ExpenseItemAggregateFields';
  avg?: Maybe<ExpenseItemAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ExpenseItemMaxFields>;
  min?: Maybe<ExpenseItemMinFields>;
  stddev?: Maybe<ExpenseItemStddevFields>;
  stddevPop?: Maybe<ExpenseItemStddevPopFields>;
  stddevSamp?: Maybe<ExpenseItemStddevSampFields>;
  sum?: Maybe<ExpenseItemSumFields>;
  varPop?: Maybe<ExpenseItemVarPopFields>;
  varSamp?: Maybe<ExpenseItemVarSampFields>;
  variance?: Maybe<ExpenseItemVarianceFields>;
};

export type ExpenseItemAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ExpenseItemAggregateOrderBy = {
  avg?: InputMaybe<ExpenseItemAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ExpenseItemMaxOrderBy>;
  min?: InputMaybe<ExpenseItemMinOrderBy>;
  stddev?: InputMaybe<ExpenseItemStddevOrderBy>;
  stddevPop?: InputMaybe<ExpenseItemStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ExpenseItemStddevSampOrderBy>;
  sum?: InputMaybe<ExpenseItemSumOrderBy>;
  varPop?: InputMaybe<ExpenseItemVarPopOrderBy>;
  varSamp?: InputMaybe<ExpenseItemVarSampOrderBy>;
  variance?: InputMaybe<ExpenseItemVarianceOrderBy>;
};

export type ExpenseItemArrRelInsertInput = {
  data: Array<ExpenseItemInsertInput>;
  onConflict?: InputMaybe<ExpenseItemOnConflict>;
};

export type ExpenseItemAttachments = {
  __typename?: 'ExpenseItemAttachments';
  attachment: FileUpload;
  expenseItem: ExpenseItem;
  expenseItemId: Scalars['bigint']['output'];
  fileUploadId: Scalars['bigint']['output'];
};

export type ExpenseItemAttachmentsAggregate = {
  __typename?: 'ExpenseItemAttachmentsAggregate';
  aggregate?: Maybe<ExpenseItemAttachmentsAggregateFields>;
  nodes: Array<ExpenseItemAttachments>;
};

export type ExpenseItemAttachmentsAggregateBoolExp = {
  count?: InputMaybe<ExpenseItemAttachmentsAggregateBoolExpCount>;
};

export type ExpenseItemAttachmentsAggregateFields = {
  __typename?: 'ExpenseItemAttachmentsAggregateFields';
  avg?: Maybe<ExpenseItemAttachmentsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ExpenseItemAttachmentsMaxFields>;
  min?: Maybe<ExpenseItemAttachmentsMinFields>;
  stddev?: Maybe<ExpenseItemAttachmentsStddevFields>;
  stddevPop?: Maybe<ExpenseItemAttachmentsStddevPopFields>;
  stddevSamp?: Maybe<ExpenseItemAttachmentsStddevSampFields>;
  sum?: Maybe<ExpenseItemAttachmentsSumFields>;
  varPop?: Maybe<ExpenseItemAttachmentsVarPopFields>;
  varSamp?: Maybe<ExpenseItemAttachmentsVarSampFields>;
  variance?: Maybe<ExpenseItemAttachmentsVarianceFields>;
};

export type ExpenseItemAttachmentsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ExpenseItemAttachmentsAggregateOrderBy = {
  avg?: InputMaybe<ExpenseItemAttachmentsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ExpenseItemAttachmentsMaxOrderBy>;
  min?: InputMaybe<ExpenseItemAttachmentsMinOrderBy>;
  stddev?: InputMaybe<ExpenseItemAttachmentsStddevOrderBy>;
  stddevPop?: InputMaybe<ExpenseItemAttachmentsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ExpenseItemAttachmentsStddevSampOrderBy>;
  sum?: InputMaybe<ExpenseItemAttachmentsSumOrderBy>;
  varPop?: InputMaybe<ExpenseItemAttachmentsVarPopOrderBy>;
  varSamp?: InputMaybe<ExpenseItemAttachmentsVarSampOrderBy>;
  variance?: InputMaybe<ExpenseItemAttachmentsVarianceOrderBy>;
};

export type ExpenseItemAttachmentsArrRelInsertInput = {
  data: Array<ExpenseItemAttachmentsInsertInput>;
  onConflict?: InputMaybe<ExpenseItemAttachmentsOnConflict>;
};

export type ExpenseItemAttachmentsAvgFields = {
  __typename?: 'ExpenseItemAttachmentsAvgFields';
  expenseItemId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAttachmentsAvgOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsBoolExp = {
  _and?: InputMaybe<Array<ExpenseItemAttachmentsBoolExp>>;
  _not?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
  _or?: InputMaybe<Array<ExpenseItemAttachmentsBoolExp>>;
  attachment?: InputMaybe<FileUploadBoolExp>;
  expenseItem?: InputMaybe<ExpenseItemBoolExp>;
  expenseItemId?: InputMaybe<BigintComparisonExp>;
  fileUploadId?: InputMaybe<BigintComparisonExp>;
};

export enum ExpenseItemAttachmentsConstraint {
  ExpenseItemAttachmentsFileUploadIdUnique = 'expense_item_attachments_file_upload_id_unique',
  ExpenseItemAttachmentsPkey = 'expense_item_attachments_pkey',
}

export type ExpenseItemAttachmentsIncInput = {
  expenseItemId?: InputMaybe<Scalars['bigint']['input']>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseItemAttachmentsInsertInput = {
  attachment?: InputMaybe<FileUploadObjRelInsertInput>;
  expenseItem?: InputMaybe<ExpenseItemObjRelInsertInput>;
  expenseItemId?: InputMaybe<Scalars['bigint']['input']>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseItemAttachmentsMaxFields = {
  __typename?: 'ExpenseItemAttachmentsMaxFields';
  expenseItemId?: Maybe<Scalars['bigint']['output']>;
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
};

export type ExpenseItemAttachmentsMaxOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsMinFields = {
  __typename?: 'ExpenseItemAttachmentsMinFields';
  expenseItemId?: Maybe<Scalars['bigint']['output']>;
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
};

export type ExpenseItemAttachmentsMinOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsMutationResponse = {
  __typename?: 'ExpenseItemAttachmentsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ExpenseItemAttachments>;
};

export type ExpenseItemAttachmentsOnConflict = {
  constraint: ExpenseItemAttachmentsConstraint;
  updateColumns?: Array<ExpenseItemAttachmentsUpdateColumn>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type ExpenseItemAttachmentsOrderBy = {
  attachment?: InputMaybe<FileUploadOrderBy>;
  expenseItem?: InputMaybe<ExpenseItemOrderBy>;
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsPkColumnsInput = {
  expenseItemId: Scalars['bigint']['input'];
  fileUploadId: Scalars['bigint']['input'];
};

export enum ExpenseItemAttachmentsSelectColumn {
  ExpenseItemId = 'expenseItemId',
  FileUploadId = 'fileUploadId',
}

export type ExpenseItemAttachmentsSetInput = {
  expenseItemId?: InputMaybe<Scalars['bigint']['input']>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseItemAttachmentsStddevFields = {
  __typename?: 'ExpenseItemAttachmentsStddevFields';
  expenseItemId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAttachmentsStddevOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsStddevPopFields = {
  __typename?: 'ExpenseItemAttachmentsStddevPopFields';
  expenseItemId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAttachmentsStddevPopOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsStddevSampFields = {
  __typename?: 'ExpenseItemAttachmentsStddevSampFields';
  expenseItemId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAttachmentsStddevSampOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsStreamCursorInput = {
  initialValue: ExpenseItemAttachmentsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ExpenseItemAttachmentsStreamCursorValueInput = {
  expenseItemId?: InputMaybe<Scalars['bigint']['input']>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseItemAttachmentsSumFields = {
  __typename?: 'ExpenseItemAttachmentsSumFields';
  expenseItemId?: Maybe<Scalars['bigint']['output']>;
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
};

export type ExpenseItemAttachmentsSumOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export enum ExpenseItemAttachmentsUpdateColumn {
  ExpenseItemId = 'expenseItemId',
  FileUploadId = 'fileUploadId',
}

export type ExpenseItemAttachmentsUpdates = {
  _inc?: InputMaybe<ExpenseItemAttachmentsIncInput>;
  _set?: InputMaybe<ExpenseItemAttachmentsSetInput>;
  where: ExpenseItemAttachmentsBoolExp;
};

export type ExpenseItemAttachmentsVarPopFields = {
  __typename?: 'ExpenseItemAttachmentsVarPopFields';
  expenseItemId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAttachmentsVarPopOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsVarSampFields = {
  __typename?: 'ExpenseItemAttachmentsVarSampFields';
  expenseItemId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAttachmentsVarSampOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsVarianceFields = {
  __typename?: 'ExpenseItemAttachmentsVarianceFields';
  expenseItemId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAttachmentsVarianceOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAvgFields = {
  __typename?: 'ExpenseItemAvgFields';
  companyId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAvgOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemBoolExp = {
  _and?: InputMaybe<Array<ExpenseItemBoolExp>>;
  _not?: InputMaybe<ExpenseItemBoolExp>;
  _or?: InputMaybe<Array<ExpenseItemBoolExp>>;
  company?: InputMaybe<LegalUnitBoolExp>;
  companyId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  expense?: InputMaybe<ExpenseBoolExp>;
  expenseId?: InputMaybe<BigintComparisonExp>;
  expenseItemAttachments?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
  expenseItemAttachmentsAggregate?: InputMaybe<ExpenseItemAttachmentsAggregateBoolExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  payedAt?: InputMaybe<TimestamptzComparisonExp>;
  quantity?: InputMaybe<SmallintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  unitCost?: InputMaybe<FloatComparisonExp>;
};

export enum ExpenseItemConstraint {
  ExpenseItemPkey = 'expense_item_pkey',
}

export type ExpenseItemIncInput = {
  companyId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  unitCost?: InputMaybe<Scalars['Float']['input']>;
};

export type ExpenseItemInsertInput = {
  company?: InputMaybe<LegalUnitObjRelInsertInput>;
  companyId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  expense?: InputMaybe<ExpenseObjRelInsertInput>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  expenseItemAttachments?: InputMaybe<ExpenseItemAttachmentsArrRelInsertInput>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  payedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  unitCost?: InputMaybe<Scalars['Float']['input']>;
};

export type ExpenseItemMaxFields = {
  __typename?: 'ExpenseItemMaxFields';
  companyId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  payedAt?: Maybe<Scalars['timestamptz']['output']>;
  quantity?: Maybe<Scalars['smallint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemMaxOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  payedAt?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemMinFields = {
  __typename?: 'ExpenseItemMinFields';
  companyId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  payedAt?: Maybe<Scalars['timestamptz']['output']>;
  quantity?: Maybe<Scalars['smallint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemMinOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  payedAt?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemMutationResponse = {
  __typename?: 'ExpenseItemMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ExpenseItem>;
};

export type ExpenseItemObjRelInsertInput = {
  data: ExpenseItemInsertInput;
  onConflict?: InputMaybe<ExpenseItemOnConflict>;
};

export type ExpenseItemOnConflict = {
  constraint: ExpenseItemConstraint;
  updateColumns?: Array<ExpenseItemUpdateColumn>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type ExpenseItemOrderBy = {
  company?: InputMaybe<LegalUnitOrderBy>;
  companyId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  expense?: InputMaybe<ExpenseOrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  expenseItemAttachmentsAggregate?: InputMaybe<ExpenseItemAttachmentsAggregateOrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  payedAt?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ExpenseItemSelectColumn {
  CompanyId = 'companyId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExpenseId = 'expenseId',
  Id = 'id',
  Name = 'name',
  PayedAt = 'payedAt',
  Quantity = 'quantity',
  TenantScopeId = 'tenantScopeId',
  UnitCost = 'unitCost',
}

export type ExpenseItemSetInput = {
  companyId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  payedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  unitCost?: InputMaybe<Scalars['Float']['input']>;
};

export type ExpenseItemStddevFields = {
  __typename?: 'ExpenseItemStddevFields';
  companyId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemStddevOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemStddevPopFields = {
  __typename?: 'ExpenseItemStddevPopFields';
  companyId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemStddevPopOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemStddevSampFields = {
  __typename?: 'ExpenseItemStddevSampFields';
  companyId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemStddevSampOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemStreamCursorInput = {
  initialValue: ExpenseItemStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ExpenseItemStreamCursorValueInput = {
  companyId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  payedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  unitCost?: InputMaybe<Scalars['Float']['input']>;
};

export type ExpenseItemSumFields = {
  __typename?: 'ExpenseItemSumFields';
  companyId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  quantity?: Maybe<Scalars['smallint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemSumOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export enum ExpenseItemUpdateColumn {
  CompanyId = 'companyId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExpenseId = 'expenseId',
  Id = 'id',
  Name = 'name',
  PayedAt = 'payedAt',
  Quantity = 'quantity',
  TenantScopeId = 'tenantScopeId',
  UnitCost = 'unitCost',
}

export type ExpenseItemUpdates = {
  _inc?: InputMaybe<ExpenseItemIncInput>;
  _set?: InputMaybe<ExpenseItemSetInput>;
  where: ExpenseItemBoolExp;
};

export type ExpenseItemVarPopFields = {
  __typename?: 'ExpenseItemVarPopFields';
  companyId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemVarPopOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemVarSampFields = {
  __typename?: 'ExpenseItemVarSampFields';
  companyId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemVarSampOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemVarianceFields = {
  __typename?: 'ExpenseItemVarianceFields';
  companyId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemVarianceOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseMaxFields = {
  __typename?: 'ExpenseMaxFields';
  bankInfoId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  expenseReportId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  lastNotifiedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type ExpenseMaxOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  lastNotifiedAt?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ExpenseMinFields = {
  __typename?: 'ExpenseMinFields';
  bankInfoId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  expenseReportId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  lastNotifiedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type ExpenseMinOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  lastNotifiedAt?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ExpenseMutationResponse = {
  __typename?: 'ExpenseMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Expense>;
};

export type ExpenseObjRelInsertInput = {
  data: ExpenseInsertInput;
  onConflict?: InputMaybe<ExpenseOnConflict>;
};

export type ExpenseOnConflict = {
  constraint: ExpenseConstraint;
  updateColumns?: Array<ExpenseUpdateColumn>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type ExpenseOrderBy = {
  bankInfo?: InputMaybe<BankInfoOrderBy>;
  bankInfoId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  expenseItemsAggregate?: InputMaybe<ExpenseItemAggregateOrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  fileUpload?: InputMaybe<FileUploadOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  lastNotifiedAt?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedBy?: InputMaybe<UserOrderBy>;
  processedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transaction?: InputMaybe<TransactionOrderBy>;
  transactionsAggregate?: InputMaybe<TransactionAggregateOrderBy>;
};

export type ExpensePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ExpenseSelectColumn {
  BankInfoId = 'bankInfoId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExpenseReportId = 'expenseReportId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  LastNotifiedAt = 'lastNotifiedAt',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  State = 'state',
  TenantScopeId = 'tenantScopeId',
}

export type ExpenseSetInput = {
  bankInfoId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  expenseReportId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  lastNotifiedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseStddevFields = {
  __typename?: 'ExpenseStddevFields';
  bankInfoId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseReportId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseStddevOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ExpenseStddevPopFields = {
  __typename?: 'ExpenseStddevPopFields';
  bankInfoId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseReportId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseStddevPopOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ExpenseStddevSampFields = {
  __typename?: 'ExpenseStddevSampFields';
  bankInfoId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseReportId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseStddevSampOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ExpenseStreamCursorInput = {
  initialValue: ExpenseStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ExpenseStreamCursorValueInput = {
  bankInfoId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  expenseReportId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  lastNotifiedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseSumFields = {
  __typename?: 'ExpenseSumFields';
  bankInfoId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  expenseReportId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type ExpenseSumOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum ExpenseUpdateColumn {
  BankInfoId = 'bankInfoId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExpenseReportId = 'expenseReportId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  LastNotifiedAt = 'lastNotifiedAt',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  State = 'state',
  TenantScopeId = 'tenantScopeId',
}

export type ExpenseUpdates = {
  _inc?: InputMaybe<ExpenseIncInput>;
  _set?: InputMaybe<ExpenseSetInput>;
  where: ExpenseBoolExp;
};

export type ExpenseVarPopFields = {
  __typename?: 'ExpenseVarPopFields';
  bankInfoId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseReportId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseVarPopOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ExpenseVarSampFields = {
  __typename?: 'ExpenseVarSampFields';
  bankInfoId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseReportId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseVarSampOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ExpenseVarianceFields = {
  __typename?: 'ExpenseVarianceFields';
  bankInfoId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseReportId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseVarianceOrderBy = {
  bankInfoId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FileUpload = {
  __typename?: 'FileUpload';
  actorImage?: Maybe<ActorImage>;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventJoins: Array<EventJoin>;
  eventJoinsAggregate: EventJoinAggregate;
  events: Array<Event>;
  eventsAggregate: EventAggregate;
  expenseItemAttachments: Array<ExpenseItemAttachments>;
  expenseItemAttachmentsAggregate: ExpenseItemAttachmentsAggregate;
  expenses: Array<Expense>;
  expensesAggregate: ExpenseAggregate;
  generatedDocumentGrantAllocateId?: Maybe<Scalars['bigint']['output']>;
  generatedDocumentGrantId?: Maybe<Scalars['bigint']['output']>;
  grantAllocateAttachments: Array<GrantAllocateAttachments>;
  grantAllocateAttachmentsAggregate: GrantAllocateAttachmentsAggregate;
  grantAllocates: Array<GrantAllocate>;
  grantAllocatesAggregate: GrantAllocateAggregate;
  grantAttachments: Array<GrantAttachments>;
  grantAttachmentsAggregate: GrantAttachmentsAggregate;
  grants: Array<Grant>;
  grantsAggregate: GrantAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  linkedFormSubmissionId?: Maybe<Scalars['bigint']['output']>;
  locationImages: Array<LocationImages>;
  locationImagesAggregate: LocationImagesAggregate;
  name: Scalars['String']['output'];
  projects: Array<Project>;
  projectsAggregate: ProjectAggregate;
  signatureGrantAllocateId?: Maybe<Scalars['bigint']['output']>;
  signatureGrantId?: Maybe<Scalars['bigint']['output']>;
  signatureGrants: Array<Grant>;
  signatureGrantsAggregate: GrantAggregate;
  signedGrantAllocates: Array<GrantAllocate>;
  signedGrantAllocatesAggregate: GrantAllocateAggregate;
  size: Scalars['Int']['output'];
  teams: Array<Team>;
  teamsAggregate: TeamAggregate;
  tenantScope?: Maybe<Tenant>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  transactionAttachments: Array<TransactionAttachments>;
  transactionAttachmentsAggregate: TransactionAttachmentsAggregate;
  type: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type FileUploadEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type FileUploadEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type FileUploadEventsArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type FileUploadEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type FileUploadExpenseItemAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type FileUploadExpenseItemAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type FileUploadExpensesArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type FileUploadExpensesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type FileUploadGrantAllocateAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type FileUploadGrantAllocateAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type FileUploadGrantAllocatesArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type FileUploadGrantAllocatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type FileUploadGrantAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type FileUploadGrantAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type FileUploadGrantsArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type FileUploadGrantsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type FileUploadLocationImagesArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type FileUploadLocationImagesAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type FileUploadProjectsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type FileUploadProjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type FileUploadSignatureGrantsArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type FileUploadSignatureGrantsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type FileUploadSignedGrantAllocatesArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type FileUploadSignedGrantAllocatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type FileUploadTeamsArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type FileUploadTeamsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type FileUploadTransactionAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<TransactionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionAttachmentsOrderBy>>;
  where?: InputMaybe<TransactionAttachmentsBoolExp>;
};

export type FileUploadTransactionAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionAttachmentsOrderBy>>;
  where?: InputMaybe<TransactionAttachmentsBoolExp>;
};

export type FileUploadAggregate = {
  __typename?: 'FileUploadAggregate';
  aggregate?: Maybe<FileUploadAggregateFields>;
  nodes: Array<FileUpload>;
};

export type FileUploadAggregateBoolExp = {
  count?: InputMaybe<FileUploadAggregateBoolExpCount>;
};

export type FileUploadAggregateFields = {
  __typename?: 'FileUploadAggregateFields';
  avg?: Maybe<FileUploadAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FileUploadMaxFields>;
  min?: Maybe<FileUploadMinFields>;
  stddev?: Maybe<FileUploadStddevFields>;
  stddevPop?: Maybe<FileUploadStddevPopFields>;
  stddevSamp?: Maybe<FileUploadStddevSampFields>;
  sum?: Maybe<FileUploadSumFields>;
  varPop?: Maybe<FileUploadVarPopFields>;
  varSamp?: Maybe<FileUploadVarSampFields>;
  variance?: Maybe<FileUploadVarianceFields>;
};

export type FileUploadAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FileUploadSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FileUploadAggregateOrderBy = {
  avg?: InputMaybe<FileUploadAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<FileUploadMaxOrderBy>;
  min?: InputMaybe<FileUploadMinOrderBy>;
  stddev?: InputMaybe<FileUploadStddevOrderBy>;
  stddevPop?: InputMaybe<FileUploadStddevPopOrderBy>;
  stddevSamp?: InputMaybe<FileUploadStddevSampOrderBy>;
  sum?: InputMaybe<FileUploadSumOrderBy>;
  varPop?: InputMaybe<FileUploadVarPopOrderBy>;
  varSamp?: InputMaybe<FileUploadVarSampOrderBy>;
  variance?: InputMaybe<FileUploadVarianceOrderBy>;
};

export type FileUploadArrRelInsertInput = {
  data: Array<FileUploadInsertInput>;
  onConflict?: InputMaybe<FileUploadOnConflict>;
};

export type FileUploadAvgFields = {
  __typename?: 'FileUploadAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentGrantAllocateId?: Maybe<Scalars['Float']['output']>;
  generatedDocumentGrantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  linkedFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  signatureGrantAllocateId?: Maybe<Scalars['Float']['output']>;
  signatureGrantId?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FileUploadAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentGrantAllocateId?: InputMaybe<OrderBy>;
  generatedDocumentGrantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  linkedFormSubmissionId?: InputMaybe<OrderBy>;
  signatureGrantAllocateId?: InputMaybe<OrderBy>;
  signatureGrantId?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FileUploadBoolExp = {
  _and?: InputMaybe<Array<FileUploadBoolExp>>;
  _not?: InputMaybe<FileUploadBoolExp>;
  _or?: InputMaybe<Array<FileUploadBoolExp>>;
  actorImage?: InputMaybe<ActorImageBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  eventJoins?: InputMaybe<EventJoinBoolExp>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  events?: InputMaybe<EventBoolExp>;
  eventsAggregate?: InputMaybe<EventAggregateBoolExp>;
  expenseItemAttachments?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
  expenseItemAttachmentsAggregate?: InputMaybe<ExpenseItemAttachmentsAggregateBoolExp>;
  expenses?: InputMaybe<ExpenseBoolExp>;
  expensesAggregate?: InputMaybe<ExpenseAggregateBoolExp>;
  generatedDocumentGrantAllocateId?: InputMaybe<BigintComparisonExp>;
  generatedDocumentGrantId?: InputMaybe<BigintComparisonExp>;
  grantAllocateAttachments?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
  grantAllocateAttachmentsAggregate?: InputMaybe<GrantAllocateAttachmentsAggregateBoolExp>;
  grantAllocates?: InputMaybe<GrantAllocateBoolExp>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateBoolExp>;
  grantAttachments?: InputMaybe<GrantAttachmentsBoolExp>;
  grantAttachmentsAggregate?: InputMaybe<GrantAttachmentsAggregateBoolExp>;
  grants?: InputMaybe<GrantBoolExp>;
  grantsAggregate?: InputMaybe<GrantAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  linkedFormSubmissionId?: InputMaybe<BigintComparisonExp>;
  locationImages?: InputMaybe<LocationImagesBoolExp>;
  locationImagesAggregate?: InputMaybe<LocationImagesAggregateBoolExp>;
  name?: InputMaybe<StringComparisonExp>;
  projects?: InputMaybe<ProjectBoolExp>;
  projectsAggregate?: InputMaybe<ProjectAggregateBoolExp>;
  signatureGrantAllocateId?: InputMaybe<BigintComparisonExp>;
  signatureGrantId?: InputMaybe<BigintComparisonExp>;
  signatureGrants?: InputMaybe<GrantBoolExp>;
  signatureGrantsAggregate?: InputMaybe<GrantAggregateBoolExp>;
  signedGrantAllocates?: InputMaybe<GrantAllocateBoolExp>;
  signedGrantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateBoolExp>;
  size?: InputMaybe<IntComparisonExp>;
  teams?: InputMaybe<TeamBoolExp>;
  teamsAggregate?: InputMaybe<TeamAggregateBoolExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  transactionAttachments?: InputMaybe<TransactionAttachmentsBoolExp>;
  transactionAttachmentsAggregate?: InputMaybe<TransactionAttachmentsAggregateBoolExp>;
  type?: InputMaybe<StringComparisonExp>;
  url?: InputMaybe<StringComparisonExp>;
};

export enum FileUploadConstraint {
  FileUploadPkey = 'file_upload_pkey',
  FileUploadUrlUnique = 'file_upload_url_unique',
}

export type FileUploadIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  generatedDocumentGrantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
  generatedDocumentGrantId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  linkedFormSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  signatureGrantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
  signatureGrantId?: InputMaybe<Scalars['bigint']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FileUploadInsertInput = {
  actorImage?: InputMaybe<ActorImageObjRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  events?: InputMaybe<EventArrRelInsertInput>;
  expenseItemAttachments?: InputMaybe<ExpenseItemAttachmentsArrRelInsertInput>;
  expenses?: InputMaybe<ExpenseArrRelInsertInput>;
  generatedDocumentGrantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
  generatedDocumentGrantId?: InputMaybe<Scalars['bigint']['input']>;
  grantAllocateAttachments?: InputMaybe<GrantAllocateAttachmentsArrRelInsertInput>;
  grantAllocates?: InputMaybe<GrantAllocateArrRelInsertInput>;
  grantAttachments?: InputMaybe<GrantAttachmentsArrRelInsertInput>;
  grants?: InputMaybe<GrantArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  linkedFormSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  locationImages?: InputMaybe<LocationImagesArrRelInsertInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  projects?: InputMaybe<ProjectArrRelInsertInput>;
  signatureGrantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
  signatureGrantId?: InputMaybe<Scalars['bigint']['input']>;
  signatureGrants?: InputMaybe<GrantArrRelInsertInput>;
  signedGrantAllocates?: InputMaybe<GrantAllocateArrRelInsertInput>;
  size?: InputMaybe<Scalars['Int']['input']>;
  teams?: InputMaybe<TeamArrRelInsertInput>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  transactionAttachments?: InputMaybe<TransactionAttachmentsArrRelInsertInput>;
  type?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type FileUploadMaxFields = {
  __typename?: 'FileUploadMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  generatedDocumentGrantAllocateId?: Maybe<Scalars['bigint']['output']>;
  generatedDocumentGrantId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  linkedFormSubmissionId?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  signatureGrantAllocateId?: Maybe<Scalars['bigint']['output']>;
  signatureGrantId?: Maybe<Scalars['bigint']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type FileUploadMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  generatedDocumentGrantAllocateId?: InputMaybe<OrderBy>;
  generatedDocumentGrantId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  linkedFormSubmissionId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  signatureGrantAllocateId?: InputMaybe<OrderBy>;
  signatureGrantId?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  url?: InputMaybe<OrderBy>;
};

export type FileUploadMinFields = {
  __typename?: 'FileUploadMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  generatedDocumentGrantAllocateId?: Maybe<Scalars['bigint']['output']>;
  generatedDocumentGrantId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  linkedFormSubmissionId?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  signatureGrantAllocateId?: Maybe<Scalars['bigint']['output']>;
  signatureGrantId?: Maybe<Scalars['bigint']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type FileUploadMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  generatedDocumentGrantAllocateId?: InputMaybe<OrderBy>;
  generatedDocumentGrantId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  linkedFormSubmissionId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  signatureGrantAllocateId?: InputMaybe<OrderBy>;
  signatureGrantId?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  url?: InputMaybe<OrderBy>;
};

export type FileUploadMutationResponse = {
  __typename?: 'FileUploadMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<FileUpload>;
};

export type FileUploadObjRelInsertInput = {
  data: FileUploadInsertInput;
  onConflict?: InputMaybe<FileUploadOnConflict>;
};

export type FileUploadOnConflict = {
  constraint: FileUploadConstraint;
  updateColumns?: Array<FileUploadUpdateColumn>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type FileUploadOrderBy = {
  actorImage?: InputMaybe<ActorImageOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  eventsAggregate?: InputMaybe<EventAggregateOrderBy>;
  expenseItemAttachmentsAggregate?: InputMaybe<ExpenseItemAttachmentsAggregateOrderBy>;
  expensesAggregate?: InputMaybe<ExpenseAggregateOrderBy>;
  generatedDocumentGrantAllocateId?: InputMaybe<OrderBy>;
  generatedDocumentGrantId?: InputMaybe<OrderBy>;
  grantAllocateAttachmentsAggregate?: InputMaybe<GrantAllocateAttachmentsAggregateOrderBy>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateOrderBy>;
  grantAttachmentsAggregate?: InputMaybe<GrantAttachmentsAggregateOrderBy>;
  grantsAggregate?: InputMaybe<GrantAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  linkedFormSubmissionId?: InputMaybe<OrderBy>;
  locationImagesAggregate?: InputMaybe<LocationImagesAggregateOrderBy>;
  name?: InputMaybe<OrderBy>;
  projectsAggregate?: InputMaybe<ProjectAggregateOrderBy>;
  signatureGrantAllocateId?: InputMaybe<OrderBy>;
  signatureGrantId?: InputMaybe<OrderBy>;
  signatureGrantsAggregate?: InputMaybe<GrantAggregateOrderBy>;
  signedGrantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateOrderBy>;
  size?: InputMaybe<OrderBy>;
  teamsAggregate?: InputMaybe<TeamAggregateOrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionAttachmentsAggregate?: InputMaybe<TransactionAttachmentsAggregateOrderBy>;
  type?: InputMaybe<OrderBy>;
  url?: InputMaybe<OrderBy>;
};

export type FileUploadPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum FileUploadSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  GeneratedDocumentGrantAllocateId = 'generatedDocumentGrantAllocateId',
  GeneratedDocumentGrantId = 'generatedDocumentGrantId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  LinkedFormSubmissionId = 'linkedFormSubmissionId',
  Name = 'name',
  SignatureGrantAllocateId = 'signatureGrantAllocateId',
  SignatureGrantId = 'signatureGrantId',
  Size = 'size',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
  Url = 'url',
}

export type FileUploadSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  generatedDocumentGrantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
  generatedDocumentGrantId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  linkedFormSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  signatureGrantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
  signatureGrantId?: InputMaybe<Scalars['bigint']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type FileUploadStddevFields = {
  __typename?: 'FileUploadStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentGrantAllocateId?: Maybe<Scalars['Float']['output']>;
  generatedDocumentGrantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  linkedFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  signatureGrantAllocateId?: Maybe<Scalars['Float']['output']>;
  signatureGrantId?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FileUploadStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentGrantAllocateId?: InputMaybe<OrderBy>;
  generatedDocumentGrantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  linkedFormSubmissionId?: InputMaybe<OrderBy>;
  signatureGrantAllocateId?: InputMaybe<OrderBy>;
  signatureGrantId?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FileUploadStddevPopFields = {
  __typename?: 'FileUploadStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentGrantAllocateId?: Maybe<Scalars['Float']['output']>;
  generatedDocumentGrantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  linkedFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  signatureGrantAllocateId?: Maybe<Scalars['Float']['output']>;
  signatureGrantId?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FileUploadStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentGrantAllocateId?: InputMaybe<OrderBy>;
  generatedDocumentGrantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  linkedFormSubmissionId?: InputMaybe<OrderBy>;
  signatureGrantAllocateId?: InputMaybe<OrderBy>;
  signatureGrantId?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FileUploadStddevSampFields = {
  __typename?: 'FileUploadStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentGrantAllocateId?: Maybe<Scalars['Float']['output']>;
  generatedDocumentGrantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  linkedFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  signatureGrantAllocateId?: Maybe<Scalars['Float']['output']>;
  signatureGrantId?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FileUploadStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentGrantAllocateId?: InputMaybe<OrderBy>;
  generatedDocumentGrantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  linkedFormSubmissionId?: InputMaybe<OrderBy>;
  signatureGrantAllocateId?: InputMaybe<OrderBy>;
  signatureGrantId?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FileUploadStreamCursorInput = {
  initialValue: FileUploadStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type FileUploadStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  generatedDocumentGrantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
  generatedDocumentGrantId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  linkedFormSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  signatureGrantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
  signatureGrantId?: InputMaybe<Scalars['bigint']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type FileUploadSumFields = {
  __typename?: 'FileUploadSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  generatedDocumentGrantAllocateId?: Maybe<Scalars['bigint']['output']>;
  generatedDocumentGrantId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  linkedFormSubmissionId?: Maybe<Scalars['bigint']['output']>;
  signatureGrantAllocateId?: Maybe<Scalars['bigint']['output']>;
  signatureGrantId?: Maybe<Scalars['bigint']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type FileUploadSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentGrantAllocateId?: InputMaybe<OrderBy>;
  generatedDocumentGrantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  linkedFormSubmissionId?: InputMaybe<OrderBy>;
  signatureGrantAllocateId?: InputMaybe<OrderBy>;
  signatureGrantId?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum FileUploadUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  GeneratedDocumentGrantAllocateId = 'generatedDocumentGrantAllocateId',
  GeneratedDocumentGrantId = 'generatedDocumentGrantId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  LinkedFormSubmissionId = 'linkedFormSubmissionId',
  Name = 'name',
  SignatureGrantAllocateId = 'signatureGrantAllocateId',
  SignatureGrantId = 'signatureGrantId',
  Size = 'size',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
  Url = 'url',
}

export type FileUploadUpdates = {
  _inc?: InputMaybe<FileUploadIncInput>;
  _set?: InputMaybe<FileUploadSetInput>;
  where: FileUploadBoolExp;
};

export type FileUploadVarPopFields = {
  __typename?: 'FileUploadVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentGrantAllocateId?: Maybe<Scalars['Float']['output']>;
  generatedDocumentGrantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  linkedFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  signatureGrantAllocateId?: Maybe<Scalars['Float']['output']>;
  signatureGrantId?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FileUploadVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentGrantAllocateId?: InputMaybe<OrderBy>;
  generatedDocumentGrantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  linkedFormSubmissionId?: InputMaybe<OrderBy>;
  signatureGrantAllocateId?: InputMaybe<OrderBy>;
  signatureGrantId?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FileUploadVarSampFields = {
  __typename?: 'FileUploadVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentGrantAllocateId?: Maybe<Scalars['Float']['output']>;
  generatedDocumentGrantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  linkedFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  signatureGrantAllocateId?: Maybe<Scalars['Float']['output']>;
  signatureGrantId?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FileUploadVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentGrantAllocateId?: InputMaybe<OrderBy>;
  generatedDocumentGrantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  linkedFormSubmissionId?: InputMaybe<OrderBy>;
  signatureGrantAllocateId?: InputMaybe<OrderBy>;
  signatureGrantId?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FileUploadVarianceFields = {
  __typename?: 'FileUploadVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentGrantAllocateId?: Maybe<Scalars['Float']['output']>;
  generatedDocumentGrantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  linkedFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  signatureGrantAllocateId?: Maybe<Scalars['Float']['output']>;
  signatureGrantId?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FileUploadVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentGrantAllocateId?: InputMaybe<OrderBy>;
  generatedDocumentGrantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  linkedFormSubmissionId?: InputMaybe<OrderBy>;
  signatureGrantAllocateId?: InputMaybe<OrderBy>;
  signatureGrantId?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FloatComparisonExp = {
  _eq?: InputMaybe<Scalars['Float']['input']>;
  _gt?: InputMaybe<Scalars['Float']['input']>;
  _gte?: InputMaybe<Scalars['Float']['input']>;
  _in?: InputMaybe<Array<Scalars['Float']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Float']['input']>;
  _lte?: InputMaybe<Scalars['Float']['input']>;
  _neq?: InputMaybe<Scalars['Float']['input']>;
  _nin?: InputMaybe<Array<Scalars['Float']['input']>>;
};

export type Follow = {
  __typename?: 'Follow';
  actor: Actor;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  followedActorId: Scalars['bigint']['output'];
  id: Scalars['bigint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type FollowAggregate = {
  __typename?: 'FollowAggregate';
  aggregate?: Maybe<FollowAggregateFields>;
  nodes: Array<Follow>;
};

export type FollowAggregateBoolExp = {
  count?: InputMaybe<FollowAggregateBoolExpCount>;
};

export type FollowAggregateFields = {
  __typename?: 'FollowAggregateFields';
  avg?: Maybe<FollowAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FollowMaxFields>;
  min?: Maybe<FollowMinFields>;
  stddev?: Maybe<FollowStddevFields>;
  stddevPop?: Maybe<FollowStddevPopFields>;
  stddevSamp?: Maybe<FollowStddevSampFields>;
  sum?: Maybe<FollowSumFields>;
  varPop?: Maybe<FollowVarPopFields>;
  varSamp?: Maybe<FollowVarSampFields>;
  variance?: Maybe<FollowVarianceFields>;
};

export type FollowAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FollowSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FollowAggregateOrderBy = {
  avg?: InputMaybe<FollowAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<FollowMaxOrderBy>;
  min?: InputMaybe<FollowMinOrderBy>;
  stddev?: InputMaybe<FollowStddevOrderBy>;
  stddevPop?: InputMaybe<FollowStddevPopOrderBy>;
  stddevSamp?: InputMaybe<FollowStddevSampOrderBy>;
  sum?: InputMaybe<FollowSumOrderBy>;
  varPop?: InputMaybe<FollowVarPopOrderBy>;
  varSamp?: InputMaybe<FollowVarSampOrderBy>;
  variance?: InputMaybe<FollowVarianceOrderBy>;
};

export type FollowArrRelInsertInput = {
  data: Array<FollowInsertInput>;
  onConflict?: InputMaybe<FollowOnConflict>;
};

export type FollowAvgFields = {
  __typename?: 'FollowAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  followedActorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FollowAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FollowBoolExp = {
  _and?: InputMaybe<Array<FollowBoolExp>>;
  _not?: InputMaybe<FollowBoolExp>;
  _or?: InputMaybe<Array<FollowBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  followedActorId?: InputMaybe<BigintComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum FollowConstraint {
  FollowPkey = 'follow_pkey',
}

export type FollowIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  followedActorId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FollowInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  followedActorId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FollowMaxFields = {
  __typename?: 'FollowMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  followedActorId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type FollowMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FollowMinFields = {
  __typename?: 'FollowMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  followedActorId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type FollowMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FollowMutationResponse = {
  __typename?: 'FollowMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Follow>;
};

export type FollowOnConflict = {
  constraint: FollowConstraint;
  updateColumns?: Array<FollowUpdateColumn>;
  where?: InputMaybe<FollowBoolExp>;
};

export type FollowOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FollowPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum FollowSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FollowedActorId = 'followedActorId',
  Id = 'id',
  TenantScopeId = 'tenantScopeId',
}

export type FollowSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  followedActorId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FollowStddevFields = {
  __typename?: 'FollowStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  followedActorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FollowStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FollowStddevPopFields = {
  __typename?: 'FollowStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  followedActorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FollowStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FollowStddevSampFields = {
  __typename?: 'FollowStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  followedActorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FollowStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FollowStreamCursorInput = {
  initialValue: FollowStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type FollowStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  followedActorId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FollowSumFields = {
  __typename?: 'FollowSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  followedActorId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type FollowSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum FollowUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FollowedActorId = 'followedActorId',
  Id = 'id',
  TenantScopeId = 'tenantScopeId',
}

export type FollowUpdates = {
  _inc?: InputMaybe<FollowIncInput>;
  _set?: InputMaybe<FollowSetInput>;
  where: FollowBoolExp;
};

export type FollowVarPopFields = {
  __typename?: 'FollowVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  followedActorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FollowVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FollowVarSampFields = {
  __typename?: 'FollowVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  followedActorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FollowVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FollowVarianceFields = {
  __typename?: 'FollowVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  followedActorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FollowVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type Form = {
  __typename?: 'Form';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  events: Array<Event>;
  eventsAggregate: EventAggregate;
  formSubmissions: Array<FormSubmission>;
  formSubmissionsAggregate: FormSubmissionAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isAllowingEditingAnswers: Scalars['Boolean']['output'];
  isAllowingMultipleAnswers: Scalars['Boolean']['output'];
  isEnabled: Scalars['Boolean']['output'];
  isLocked: Scalars['Boolean']['output'];
  schema: Scalars['jsonb']['output'];
  team?: Maybe<Team>;
  tenantById?: Maybe<Tenant>;
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type FormEventsArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type FormEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type FormFormSubmissionsArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type FormFormSubmissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type FormSchemaArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

export type FormAggregate = {
  __typename?: 'FormAggregate';
  aggregate?: Maybe<FormAggregateFields>;
  nodes: Array<Form>;
};

export type FormAggregateBoolExp = {
  bool_and?: InputMaybe<FormAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<FormAggregateBoolExpBool_Or>;
  count?: InputMaybe<FormAggregateBoolExpCount>;
};

export type FormAggregateFields = {
  __typename?: 'FormAggregateFields';
  avg?: Maybe<FormAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FormMaxFields>;
  min?: Maybe<FormMinFields>;
  stddev?: Maybe<FormStddevFields>;
  stddevPop?: Maybe<FormStddevPopFields>;
  stddevSamp?: Maybe<FormStddevSampFields>;
  sum?: Maybe<FormSumFields>;
  varPop?: Maybe<FormVarPopFields>;
  varSamp?: Maybe<FormVarSampFields>;
  variance?: Maybe<FormVarianceFields>;
};

export type FormAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FormSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FormAggregateOrderBy = {
  avg?: InputMaybe<FormAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<FormMaxOrderBy>;
  min?: InputMaybe<FormMinOrderBy>;
  stddev?: InputMaybe<FormStddevOrderBy>;
  stddevPop?: InputMaybe<FormStddevPopOrderBy>;
  stddevSamp?: InputMaybe<FormStddevSampOrderBy>;
  sum?: InputMaybe<FormSumOrderBy>;
  varPop?: InputMaybe<FormVarPopOrderBy>;
  varSamp?: InputMaybe<FormVarSampOrderBy>;
  variance?: InputMaybe<FormVarianceOrderBy>;
};

export type FormAppendInput = {
  schema?: InputMaybe<Scalars['jsonb']['input']>;
};

export type FormArrRelInsertInput = {
  data: Array<FormInsertInput>;
  onConflict?: InputMaybe<FormOnConflict>;
};

export type FormAvgFields = {
  __typename?: 'FormAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FormAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormBoolExp = {
  _and?: InputMaybe<Array<FormBoolExp>>;
  _not?: InputMaybe<FormBoolExp>;
  _or?: InputMaybe<Array<FormBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  events?: InputMaybe<EventBoolExp>;
  eventsAggregate?: InputMaybe<EventAggregateBoolExp>;
  formSubmissions?: InputMaybe<FormSubmissionBoolExp>;
  formSubmissionsAggregate?: InputMaybe<FormSubmissionAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isAllowingEditingAnswers?: InputMaybe<BooleanComparisonExp>;
  isAllowingMultipleAnswers?: InputMaybe<BooleanComparisonExp>;
  isEnabled?: InputMaybe<BooleanComparisonExp>;
  isLocked?: InputMaybe<BooleanComparisonExp>;
  schema?: InputMaybe<JsonbComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  tenantById?: InputMaybe<TenantBoolExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum FormConstraint {
  FormPkey = 'form_pkey',
}

export type FormDeleteAtPathInput = {
  schema?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type FormDeleteElemInput = {
  schema?: InputMaybe<Scalars['Int']['input']>;
};

export type FormDeleteKeyInput = {
  schema?: InputMaybe<Scalars['String']['input']>;
};

export type FormIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  events?: InputMaybe<EventArrRelInsertInput>;
  formSubmissions?: InputMaybe<FormSubmissionArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAllowingEditingAnswers?: InputMaybe<Scalars['Boolean']['input']>;
  isAllowingMultipleAnswers?: InputMaybe<Scalars['Boolean']['input']>;
  isEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  isLocked?: InputMaybe<Scalars['Boolean']['input']>;
  schema?: InputMaybe<Scalars['jsonb']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  tenantById?: InputMaybe<TenantObjRelInsertInput>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormMaxFields = {
  __typename?: 'FormMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type FormMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormMinFields = {
  __typename?: 'FormMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type FormMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormMutationResponse = {
  __typename?: 'FormMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Form>;
};

export type FormObjRelInsertInput = {
  data: FormInsertInput;
  onConflict?: InputMaybe<FormOnConflict>;
};

export type FormOnConflict = {
  constraint: FormConstraint;
  updateColumns?: Array<FormUpdateColumn>;
  where?: InputMaybe<FormBoolExp>;
};

export type FormOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventsAggregate?: InputMaybe<EventAggregateOrderBy>;
  formSubmissionsAggregate?: InputMaybe<FormSubmissionAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isAllowingEditingAnswers?: InputMaybe<OrderBy>;
  isAllowingMultipleAnswers?: InputMaybe<OrderBy>;
  isEnabled?: InputMaybe<OrderBy>;
  isLocked?: InputMaybe<OrderBy>;
  schema?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  tenantById?: InputMaybe<TenantOrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export type FormPrependInput = {
  schema?: InputMaybe<Scalars['jsonb']['input']>;
};

export enum FormSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsAllowingEditingAnswers = 'isAllowingEditingAnswers',
  IsAllowingMultipleAnswers = 'isAllowingMultipleAnswers',
  IsEnabled = 'isEnabled',
  IsLocked = 'isLocked',
  Schema = 'schema',
  TenantScopeId = 'tenantScopeId',
}

export enum FormSelectColumnFormAggregateBoolExpBool_AndArgumentsColumns {
  IsAllowingEditingAnswers = 'isAllowingEditingAnswers',
  IsAllowingMultipleAnswers = 'isAllowingMultipleAnswers',
  IsEnabled = 'isEnabled',
  IsLocked = 'isLocked',
}

export enum FormSelectColumnFormAggregateBoolExpBool_OrArgumentsColumns {
  IsAllowingEditingAnswers = 'isAllowingEditingAnswers',
  IsAllowingMultipleAnswers = 'isAllowingMultipleAnswers',
  IsEnabled = 'isEnabled',
  IsLocked = 'isLocked',
}

export type FormSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAllowingEditingAnswers?: InputMaybe<Scalars['Boolean']['input']>;
  isAllowingMultipleAnswers?: InputMaybe<Scalars['Boolean']['input']>;
  isEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  isLocked?: InputMaybe<Scalars['Boolean']['input']>;
  schema?: InputMaybe<Scalars['jsonb']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormStddevFields = {
  __typename?: 'FormStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FormStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormStddevPopFields = {
  __typename?: 'FormStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FormStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormStddevSampFields = {
  __typename?: 'FormStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FormStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormStreamCursorInput = {
  initialValue: FormStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type FormStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAllowingEditingAnswers?: InputMaybe<Scalars['Boolean']['input']>;
  isAllowingMultipleAnswers?: InputMaybe<Scalars['Boolean']['input']>;
  isEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  isLocked?: InputMaybe<Scalars['Boolean']['input']>;
  schema?: InputMaybe<Scalars['jsonb']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormSubmission = {
  __typename?: 'FormSubmission';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  form: Form;
  formId: Scalars['bigint']['output'];
  id: Scalars['bigint']['output'];
  submission: Scalars['jsonb']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type FormSubmissionSubmissionArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

export type FormSubmissionAggregate = {
  __typename?: 'FormSubmissionAggregate';
  aggregate?: Maybe<FormSubmissionAggregateFields>;
  nodes: Array<FormSubmission>;
};

export type FormSubmissionAggregateBoolExp = {
  count?: InputMaybe<FormSubmissionAggregateBoolExpCount>;
};

export type FormSubmissionAggregateFields = {
  __typename?: 'FormSubmissionAggregateFields';
  avg?: Maybe<FormSubmissionAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FormSubmissionMaxFields>;
  min?: Maybe<FormSubmissionMinFields>;
  stddev?: Maybe<FormSubmissionStddevFields>;
  stddevPop?: Maybe<FormSubmissionStddevPopFields>;
  stddevSamp?: Maybe<FormSubmissionStddevSampFields>;
  sum?: Maybe<FormSubmissionSumFields>;
  varPop?: Maybe<FormSubmissionVarPopFields>;
  varSamp?: Maybe<FormSubmissionVarSampFields>;
  variance?: Maybe<FormSubmissionVarianceFields>;
};

export type FormSubmissionAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FormSubmissionAggregateOrderBy = {
  avg?: InputMaybe<FormSubmissionAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<FormSubmissionMaxOrderBy>;
  min?: InputMaybe<FormSubmissionMinOrderBy>;
  stddev?: InputMaybe<FormSubmissionStddevOrderBy>;
  stddevPop?: InputMaybe<FormSubmissionStddevPopOrderBy>;
  stddevSamp?: InputMaybe<FormSubmissionStddevSampOrderBy>;
  sum?: InputMaybe<FormSubmissionSumOrderBy>;
  varPop?: InputMaybe<FormSubmissionVarPopOrderBy>;
  varSamp?: InputMaybe<FormSubmissionVarSampOrderBy>;
  variance?: InputMaybe<FormSubmissionVarianceOrderBy>;
};

export type FormSubmissionAppendInput = {
  submission?: InputMaybe<Scalars['jsonb']['input']>;
};

export type FormSubmissionArrRelInsertInput = {
  data: Array<FormSubmissionInsertInput>;
  onConflict?: InputMaybe<FormSubmissionOnConflict>;
};

export type FormSubmissionAvgFields = {
  __typename?: 'FormSubmissionAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  formId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormSubmissionBoolExp = {
  _and?: InputMaybe<Array<FormSubmissionBoolExp>>;
  _not?: InputMaybe<FormSubmissionBoolExp>;
  _or?: InputMaybe<Array<FormSubmissionBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  form?: InputMaybe<FormBoolExp>;
  formId?: InputMaybe<BigintComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  submission?: InputMaybe<JsonbComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum FormSubmissionConstraint {
  FormSubmissionPkey = 'form_submission_pkey',
}

export type FormSubmissionDeleteAtPathInput = {
  submission?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type FormSubmissionDeleteElemInput = {
  submission?: InputMaybe<Scalars['Int']['input']>;
};

export type FormSubmissionDeleteKeyInput = {
  submission?: InputMaybe<Scalars['String']['input']>;
};

export type FormSubmissionIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  formId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormSubmissionInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  form?: InputMaybe<FormObjRelInsertInput>;
  formId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  submission?: InputMaybe<Scalars['jsonb']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormSubmissionMaxFields = {
  __typename?: 'FormSubmissionMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  formId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type FormSubmissionMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormSubmissionMinFields = {
  __typename?: 'FormSubmissionMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  formId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type FormSubmissionMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormSubmissionMutationResponse = {
  __typename?: 'FormSubmissionMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<FormSubmission>;
};

export type FormSubmissionObjRelInsertInput = {
  data: FormSubmissionInsertInput;
  onConflict?: InputMaybe<FormSubmissionOnConflict>;
};

export type FormSubmissionOnConflict = {
  constraint: FormSubmissionConstraint;
  updateColumns?: Array<FormSubmissionUpdateColumn>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type FormSubmissionOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  form?: InputMaybe<FormOrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  submission?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormSubmissionPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export type FormSubmissionPrependInput = {
  submission?: InputMaybe<Scalars['jsonb']['input']>;
};

export enum FormSubmissionSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FormId = 'formId',
  Id = 'id',
  Submission = 'submission',
  TenantScopeId = 'tenantScopeId',
}

export type FormSubmissionSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  formId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  submission?: InputMaybe<Scalars['jsonb']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormSubmissionStddevFields = {
  __typename?: 'FormSubmissionStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  formId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormSubmissionStddevPopFields = {
  __typename?: 'FormSubmissionStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  formId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormSubmissionStddevSampFields = {
  __typename?: 'FormSubmissionStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  formId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormSubmissionStreamCursorInput = {
  initialValue: FormSubmissionStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type FormSubmissionStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  formId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  submission?: InputMaybe<Scalars['jsonb']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormSubmissionSumFields = {
  __typename?: 'FormSubmissionSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  formId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type FormSubmissionSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum FormSubmissionUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FormId = 'formId',
  Id = 'id',
  Submission = 'submission',
  TenantScopeId = 'tenantScopeId',
}

export type FormSubmissionUpdates = {
  _append?: InputMaybe<FormSubmissionAppendInput>;
  _deleteAtPath?: InputMaybe<FormSubmissionDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FormSubmissionDeleteElemInput>;
  _deleteKey?: InputMaybe<FormSubmissionDeleteKeyInput>;
  _inc?: InputMaybe<FormSubmissionIncInput>;
  _prepend?: InputMaybe<FormSubmissionPrependInput>;
  _set?: InputMaybe<FormSubmissionSetInput>;
  where: FormSubmissionBoolExp;
};

export type FormSubmissionVarPopFields = {
  __typename?: 'FormSubmissionVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  formId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormSubmissionVarSampFields = {
  __typename?: 'FormSubmissionVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  formId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormSubmissionVarianceFields = {
  __typename?: 'FormSubmissionVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  formId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormSumFields = {
  __typename?: 'FormSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type FormSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum FormUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsAllowingEditingAnswers = 'isAllowingEditingAnswers',
  IsAllowingMultipleAnswers = 'isAllowingMultipleAnswers',
  IsEnabled = 'isEnabled',
  IsLocked = 'isLocked',
  Schema = 'schema',
  TenantScopeId = 'tenantScopeId',
}

export type FormUpdates = {
  _append?: InputMaybe<FormAppendInput>;
  _deleteAtPath?: InputMaybe<FormDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FormDeleteElemInput>;
  _deleteKey?: InputMaybe<FormDeleteKeyInput>;
  _inc?: InputMaybe<FormIncInput>;
  _prepend?: InputMaybe<FormPrependInput>;
  _set?: InputMaybe<FormSetInput>;
  where: FormBoolExp;
};

export type FormVarPopFields = {
  __typename?: 'FormVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FormVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormVarSampFields = {
  __typename?: 'FormVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FormVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type FormVarianceFields = {
  __typename?: 'FormVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type FormVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type Grant = {
  __typename?: 'Grant';
  askedAmount: Scalars['Float']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  generatedDocument?: Maybe<FileUpload>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  grantAllocates: Array<GrantAllocate>;
  grantAllocatesAggregate: GrantAllocateAggregate;
  grantAttachments: Array<GrantAttachments>;
  grantAttachmentsAggregate: GrantAttachmentsAggregate;
  id: Scalars['bigint']['output'];
  projects: Array<Project>;
  projectsAggregate: ProjectAggregate;
  receivedAmount: Scalars['Float']['output'];
  receivedAmountProcessed?: Maybe<User>;
  receivedAmountProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signature?: Maybe<FileUpload>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  state: Scalars['ApprovalState']['output'];
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type GrantGrantAllocatesArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type GrantGrantAllocatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type GrantGrantAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type GrantGrantAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type GrantProjectsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type GrantProjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type GrantAggregate = {
  __typename?: 'GrantAggregate';
  aggregate?: Maybe<GrantAggregateFields>;
  nodes: Array<Grant>;
};

export type GrantAggregateBoolExp = {
  count?: InputMaybe<GrantAggregateBoolExpCount>;
};

export type GrantAggregateFields = {
  __typename?: 'GrantAggregateFields';
  avg?: Maybe<GrantAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<GrantMaxFields>;
  min?: Maybe<GrantMinFields>;
  stddev?: Maybe<GrantStddevFields>;
  stddevPop?: Maybe<GrantStddevPopFields>;
  stddevSamp?: Maybe<GrantStddevSampFields>;
  sum?: Maybe<GrantSumFields>;
  varPop?: Maybe<GrantVarPopFields>;
  varSamp?: Maybe<GrantVarSampFields>;
  variance?: Maybe<GrantVarianceFields>;
};

export type GrantAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<GrantSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type GrantAggregateOrderBy = {
  avg?: InputMaybe<GrantAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<GrantMaxOrderBy>;
  min?: InputMaybe<GrantMinOrderBy>;
  stddev?: InputMaybe<GrantStddevOrderBy>;
  stddevPop?: InputMaybe<GrantStddevPopOrderBy>;
  stddevSamp?: InputMaybe<GrantStddevSampOrderBy>;
  sum?: InputMaybe<GrantSumOrderBy>;
  varPop?: InputMaybe<GrantVarPopOrderBy>;
  varSamp?: InputMaybe<GrantVarSampOrderBy>;
  variance?: InputMaybe<GrantVarianceOrderBy>;
};

export type GrantAllocate = {
  __typename?: 'GrantAllocate';
  askedAmount: Scalars['Float']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  fileUpload?: Maybe<FileUpload>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  grant: Grant;
  grantAllocateAttachments: Array<GrantAllocateAttachments>;
  grantAllocateAttachmentsAggregate: GrantAllocateAttachmentsAggregate;
  grantId: Scalars['bigint']['output'];
  id: Scalars['bigint']['output'];
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  receivedAmountProcessedBy?: Maybe<User>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signature?: Maybe<FileUpload>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  state: Scalars['ApprovalState']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  transaction?: Maybe<Transaction>;
  transactionId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAllocateGrantAllocateAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type GrantAllocateGrantAllocateAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type GrantAllocateAggregate = {
  __typename?: 'GrantAllocateAggregate';
  aggregate?: Maybe<GrantAllocateAggregateFields>;
  nodes: Array<GrantAllocate>;
};

export type GrantAllocateAggregateBoolExp = {
  count?: InputMaybe<GrantAllocateAggregateBoolExpCount>;
};

export type GrantAllocateAggregateFields = {
  __typename?: 'GrantAllocateAggregateFields';
  avg?: Maybe<GrantAllocateAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<GrantAllocateMaxFields>;
  min?: Maybe<GrantAllocateMinFields>;
  stddev?: Maybe<GrantAllocateStddevFields>;
  stddevPop?: Maybe<GrantAllocateStddevPopFields>;
  stddevSamp?: Maybe<GrantAllocateStddevSampFields>;
  sum?: Maybe<GrantAllocateSumFields>;
  varPop?: Maybe<GrantAllocateVarPopFields>;
  varSamp?: Maybe<GrantAllocateVarSampFields>;
  variance?: Maybe<GrantAllocateVarianceFields>;
};

export type GrantAllocateAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type GrantAllocateAggregateOrderBy = {
  avg?: InputMaybe<GrantAllocateAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<GrantAllocateMaxOrderBy>;
  min?: InputMaybe<GrantAllocateMinOrderBy>;
  stddev?: InputMaybe<GrantAllocateStddevOrderBy>;
  stddevPop?: InputMaybe<GrantAllocateStddevPopOrderBy>;
  stddevSamp?: InputMaybe<GrantAllocateStddevSampOrderBy>;
  sum?: InputMaybe<GrantAllocateSumOrderBy>;
  varPop?: InputMaybe<GrantAllocateVarPopOrderBy>;
  varSamp?: InputMaybe<GrantAllocateVarSampOrderBy>;
  variance?: InputMaybe<GrantAllocateVarianceOrderBy>;
};

export type GrantAllocateArrRelInsertInput = {
  data: Array<GrantAllocateInsertInput>;
  onConflict?: InputMaybe<GrantAllocateOnConflict>;
};

export type GrantAllocateAttachments = {
  __typename?: 'GrantAllocateAttachments';
  attachment: FileUpload;
  fileUploadId: Scalars['bigint']['output'];
  grantAllocate: GrantAllocate;
  grantAllocateId: Scalars['bigint']['output'];
};

export type GrantAllocateAttachmentsAggregate = {
  __typename?: 'GrantAllocateAttachmentsAggregate';
  aggregate?: Maybe<GrantAllocateAttachmentsAggregateFields>;
  nodes: Array<GrantAllocateAttachments>;
};

export type GrantAllocateAttachmentsAggregateBoolExp = {
  count?: InputMaybe<GrantAllocateAttachmentsAggregateBoolExpCount>;
};

export type GrantAllocateAttachmentsAggregateFields = {
  __typename?: 'GrantAllocateAttachmentsAggregateFields';
  avg?: Maybe<GrantAllocateAttachmentsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<GrantAllocateAttachmentsMaxFields>;
  min?: Maybe<GrantAllocateAttachmentsMinFields>;
  stddev?: Maybe<GrantAllocateAttachmentsStddevFields>;
  stddevPop?: Maybe<GrantAllocateAttachmentsStddevPopFields>;
  stddevSamp?: Maybe<GrantAllocateAttachmentsStddevSampFields>;
  sum?: Maybe<GrantAllocateAttachmentsSumFields>;
  varPop?: Maybe<GrantAllocateAttachmentsVarPopFields>;
  varSamp?: Maybe<GrantAllocateAttachmentsVarSampFields>;
  variance?: Maybe<GrantAllocateAttachmentsVarianceFields>;
};

export type GrantAllocateAttachmentsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type GrantAllocateAttachmentsAggregateOrderBy = {
  avg?: InputMaybe<GrantAllocateAttachmentsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<GrantAllocateAttachmentsMaxOrderBy>;
  min?: InputMaybe<GrantAllocateAttachmentsMinOrderBy>;
  stddev?: InputMaybe<GrantAllocateAttachmentsStddevOrderBy>;
  stddevPop?: InputMaybe<GrantAllocateAttachmentsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<GrantAllocateAttachmentsStddevSampOrderBy>;
  sum?: InputMaybe<GrantAllocateAttachmentsSumOrderBy>;
  varPop?: InputMaybe<GrantAllocateAttachmentsVarPopOrderBy>;
  varSamp?: InputMaybe<GrantAllocateAttachmentsVarSampOrderBy>;
  variance?: InputMaybe<GrantAllocateAttachmentsVarianceOrderBy>;
};

export type GrantAllocateAttachmentsArrRelInsertInput = {
  data: Array<GrantAllocateAttachmentsInsertInput>;
  onConflict?: InputMaybe<GrantAllocateAttachmentsOnConflict>;
};

export type GrantAllocateAttachmentsAvgFields = {
  __typename?: 'GrantAllocateAttachmentsAvgFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantAllocateId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAttachmentsAvgOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsBoolExp = {
  _and?: InputMaybe<Array<GrantAllocateAttachmentsBoolExp>>;
  _not?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
  _or?: InputMaybe<Array<GrantAllocateAttachmentsBoolExp>>;
  attachment?: InputMaybe<FileUploadBoolExp>;
  fileUploadId?: InputMaybe<BigintComparisonExp>;
  grantAllocate?: InputMaybe<GrantAllocateBoolExp>;
  grantAllocateId?: InputMaybe<BigintComparisonExp>;
};

export enum GrantAllocateAttachmentsConstraint {
  GrantAllocateAttachmentsPkey = 'grant_allocate_attachments_pkey',
}

export type GrantAllocateAttachmentsIncInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateAttachmentsInsertInput = {
  attachment?: InputMaybe<FileUploadObjRelInsertInput>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grantAllocate?: InputMaybe<GrantAllocateObjRelInsertInput>;
  grantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateAttachmentsMaxFields = {
  __typename?: 'GrantAllocateAttachmentsMaxFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  grantAllocateId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAllocateAttachmentsMaxOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsMinFields = {
  __typename?: 'GrantAllocateAttachmentsMinFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  grantAllocateId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAllocateAttachmentsMinOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsMutationResponse = {
  __typename?: 'GrantAllocateAttachmentsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<GrantAllocateAttachments>;
};

export type GrantAllocateAttachmentsOnConflict = {
  constraint: GrantAllocateAttachmentsConstraint;
  updateColumns?: Array<GrantAllocateAttachmentsUpdateColumn>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type GrantAllocateAttachmentsOrderBy = {
  attachment?: InputMaybe<FileUploadOrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocate?: InputMaybe<GrantAllocateOrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsPkColumnsInput = {
  fileUploadId: Scalars['bigint']['input'];
  grantAllocateId: Scalars['bigint']['input'];
};

export enum GrantAllocateAttachmentsSelectColumn {
  FileUploadId = 'fileUploadId',
  GrantAllocateId = 'grantAllocateId',
}

export type GrantAllocateAttachmentsSetInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateAttachmentsStddevFields = {
  __typename?: 'GrantAllocateAttachmentsStddevFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantAllocateId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAttachmentsStddevOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsStddevPopFields = {
  __typename?: 'GrantAllocateAttachmentsStddevPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantAllocateId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAttachmentsStddevPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsStddevSampFields = {
  __typename?: 'GrantAllocateAttachmentsStddevSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantAllocateId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAttachmentsStddevSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsStreamCursorInput = {
  initialValue: GrantAllocateAttachmentsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type GrantAllocateAttachmentsStreamCursorValueInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateAttachmentsSumFields = {
  __typename?: 'GrantAllocateAttachmentsSumFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  grantAllocateId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAllocateAttachmentsSumOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export enum GrantAllocateAttachmentsUpdateColumn {
  FileUploadId = 'fileUploadId',
  GrantAllocateId = 'grantAllocateId',
}

export type GrantAllocateAttachmentsUpdates = {
  _inc?: InputMaybe<GrantAllocateAttachmentsIncInput>;
  _set?: InputMaybe<GrantAllocateAttachmentsSetInput>;
  where: GrantAllocateAttachmentsBoolExp;
};

export type GrantAllocateAttachmentsVarPopFields = {
  __typename?: 'GrantAllocateAttachmentsVarPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantAllocateId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAttachmentsVarPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsVarSampFields = {
  __typename?: 'GrantAllocateAttachmentsVarSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantAllocateId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAttachmentsVarSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsVarianceFields = {
  __typename?: 'GrantAllocateAttachmentsVarianceFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantAllocateId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAttachmentsVarianceOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAvgFields = {
  __typename?: 'GrantAllocateAvgFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  transactionId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAvgOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type GrantAllocateBoolExp = {
  _and?: InputMaybe<Array<GrantAllocateBoolExp>>;
  _not?: InputMaybe<GrantAllocateBoolExp>;
  _or?: InputMaybe<Array<GrantAllocateBoolExp>>;
  askedAmount?: InputMaybe<FloatComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  fileUpload?: InputMaybe<FileUploadBoolExp>;
  generatedDocumentId?: InputMaybe<BigintComparisonExp>;
  grant?: InputMaybe<GrantBoolExp>;
  grantAllocateAttachments?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
  grantAllocateAttachmentsAggregate?: InputMaybe<GrantAllocateAttachmentsAggregateBoolExp>;
  grantId?: InputMaybe<BigintComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  receivedAmount?: InputMaybe<FloatComparisonExp>;
  receivedAmountProcessedAt?: InputMaybe<TimestamptzComparisonExp>;
  receivedAmountProcessedBy?: InputMaybe<UserBoolExp>;
  receivedAmountProcessedById?: InputMaybe<BigintComparisonExp>;
  signature?: InputMaybe<FileUploadBoolExp>;
  signatureId?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<ApprovalStateComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  transaction?: InputMaybe<TransactionBoolExp>;
  transactionId?: InputMaybe<BigintComparisonExp>;
};

export enum GrantAllocateConstraint {
  GrantAllocateGeneratedDocumentIdUnique = 'grant_allocate_generated_document_id_unique',
  GrantAllocatePkey = 'grant_allocate_pkey',
  GrantAllocateSignatureIdUnique = 'grant_allocate_signature_id_unique',
}

export type GrantAllocateIncInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  transactionId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateInsertInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  fileUpload?: InputMaybe<FileUploadObjRelInsertInput>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  grant?: InputMaybe<GrantObjRelInsertInput>;
  grantAllocateAttachments?: InputMaybe<GrantAllocateAttachmentsArrRelInsertInput>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  receivedAmountProcessedBy?: InputMaybe<UserObjRelInsertInput>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signature?: InputMaybe<FileUploadObjRelInsertInput>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  transaction?: InputMaybe<TransactionObjRelInsertInput>;
  transactionId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateMaxFields = {
  __typename?: 'GrantAllocateMaxFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  transactionId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAllocateMaxOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedAt?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type GrantAllocateMinFields = {
  __typename?: 'GrantAllocateMinFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  transactionId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAllocateMinOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedAt?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type GrantAllocateMutationResponse = {
  __typename?: 'GrantAllocateMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<GrantAllocate>;
};

export type GrantAllocateObjRelInsertInput = {
  data: GrantAllocateInsertInput;
  onConflict?: InputMaybe<GrantAllocateOnConflict>;
};

export type GrantAllocateOnConflict = {
  constraint: GrantAllocateConstraint;
  updateColumns?: Array<GrantAllocateUpdateColumn>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type GrantAllocateOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  fileUpload?: InputMaybe<FileUploadOrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grant?: InputMaybe<GrantOrderBy>;
  grantAllocateAttachmentsAggregate?: InputMaybe<GrantAllocateAttachmentsAggregateOrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedAt?: InputMaybe<OrderBy>;
  receivedAmountProcessedBy?: InputMaybe<UserOrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signature?: InputMaybe<FileUploadOrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transaction?: InputMaybe<TransactionOrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type GrantAllocatePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum GrantAllocateSelectColumn {
  AskedAmount = 'askedAmount',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  GeneratedDocumentId = 'generatedDocumentId',
  GrantId = 'grantId',
  Id = 'id',
  ReceivedAmount = 'receivedAmount',
  ReceivedAmountProcessedAt = 'receivedAmountProcessedAt',
  ReceivedAmountProcessedById = 'receivedAmountProcessedById',
  SignatureId = 'signatureId',
  State = 'state',
  TenantScopeId = 'tenantScopeId',
  TransactionId = 'transactionId',
}

export type GrantAllocateSetInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  transactionId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateStddevFields = {
  __typename?: 'GrantAllocateStddevFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  transactionId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateStddevOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type GrantAllocateStddevPopFields = {
  __typename?: 'GrantAllocateStddevPopFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  transactionId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateStddevPopOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type GrantAllocateStddevSampFields = {
  __typename?: 'GrantAllocateStddevSampFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  transactionId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateStddevSampOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type GrantAllocateStreamCursorInput = {
  initialValue: GrantAllocateStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type GrantAllocateStreamCursorValueInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  transactionId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateSumFields = {
  __typename?: 'GrantAllocateSumFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  transactionId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAllocateSumOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export enum GrantAllocateUpdateColumn {
  AskedAmount = 'askedAmount',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  GeneratedDocumentId = 'generatedDocumentId',
  GrantId = 'grantId',
  Id = 'id',
  ReceivedAmount = 'receivedAmount',
  ReceivedAmountProcessedAt = 'receivedAmountProcessedAt',
  ReceivedAmountProcessedById = 'receivedAmountProcessedById',
  SignatureId = 'signatureId',
  State = 'state',
  TenantScopeId = 'tenantScopeId',
  TransactionId = 'transactionId',
}

export type GrantAllocateUpdates = {
  _inc?: InputMaybe<GrantAllocateIncInput>;
  _set?: InputMaybe<GrantAllocateSetInput>;
  where: GrantAllocateBoolExp;
};

export type GrantAllocateVarPopFields = {
  __typename?: 'GrantAllocateVarPopFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  transactionId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateVarPopOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type GrantAllocateVarSampFields = {
  __typename?: 'GrantAllocateVarSampFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  transactionId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateVarSampOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type GrantAllocateVarianceFields = {
  __typename?: 'GrantAllocateVarianceFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  transactionId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateVarianceOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type GrantArrRelInsertInput = {
  data: Array<GrantInsertInput>;
  onConflict?: InputMaybe<GrantOnConflict>;
};

export type GrantAttachments = {
  __typename?: 'GrantAttachments';
  attachment: FileUpload;
  fileUploadId: Scalars['bigint']['output'];
  grant: Grant;
  grantId: Scalars['bigint']['output'];
};

export type GrantAttachmentsAggregate = {
  __typename?: 'GrantAttachmentsAggregate';
  aggregate?: Maybe<GrantAttachmentsAggregateFields>;
  nodes: Array<GrantAttachments>;
};

export type GrantAttachmentsAggregateBoolExp = {
  count?: InputMaybe<GrantAttachmentsAggregateBoolExpCount>;
};

export type GrantAttachmentsAggregateFields = {
  __typename?: 'GrantAttachmentsAggregateFields';
  avg?: Maybe<GrantAttachmentsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<GrantAttachmentsMaxFields>;
  min?: Maybe<GrantAttachmentsMinFields>;
  stddev?: Maybe<GrantAttachmentsStddevFields>;
  stddevPop?: Maybe<GrantAttachmentsStddevPopFields>;
  stddevSamp?: Maybe<GrantAttachmentsStddevSampFields>;
  sum?: Maybe<GrantAttachmentsSumFields>;
  varPop?: Maybe<GrantAttachmentsVarPopFields>;
  varSamp?: Maybe<GrantAttachmentsVarSampFields>;
  variance?: Maybe<GrantAttachmentsVarianceFields>;
};

export type GrantAttachmentsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type GrantAttachmentsAggregateOrderBy = {
  avg?: InputMaybe<GrantAttachmentsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<GrantAttachmentsMaxOrderBy>;
  min?: InputMaybe<GrantAttachmentsMinOrderBy>;
  stddev?: InputMaybe<GrantAttachmentsStddevOrderBy>;
  stddevPop?: InputMaybe<GrantAttachmentsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<GrantAttachmentsStddevSampOrderBy>;
  sum?: InputMaybe<GrantAttachmentsSumOrderBy>;
  varPop?: InputMaybe<GrantAttachmentsVarPopOrderBy>;
  varSamp?: InputMaybe<GrantAttachmentsVarSampOrderBy>;
  variance?: InputMaybe<GrantAttachmentsVarianceOrderBy>;
};

export type GrantAttachmentsArrRelInsertInput = {
  data: Array<GrantAttachmentsInsertInput>;
  onConflict?: InputMaybe<GrantAttachmentsOnConflict>;
};

export type GrantAttachmentsAvgFields = {
  __typename?: 'GrantAttachmentsAvgFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAttachmentsAvgOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsBoolExp = {
  _and?: InputMaybe<Array<GrantAttachmentsBoolExp>>;
  _not?: InputMaybe<GrantAttachmentsBoolExp>;
  _or?: InputMaybe<Array<GrantAttachmentsBoolExp>>;
  attachment?: InputMaybe<FileUploadBoolExp>;
  fileUploadId?: InputMaybe<BigintComparisonExp>;
  grant?: InputMaybe<GrantBoolExp>;
  grantId?: InputMaybe<BigintComparisonExp>;
};

export enum GrantAttachmentsConstraint {
  GrantAttachmentsPkey = 'grant_attachments_pkey',
}

export type GrantAttachmentsIncInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAttachmentsInsertInput = {
  attachment?: InputMaybe<FileUploadObjRelInsertInput>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grant?: InputMaybe<GrantObjRelInsertInput>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAttachmentsMaxFields = {
  __typename?: 'GrantAttachmentsMaxFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAttachmentsMaxOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsMinFields = {
  __typename?: 'GrantAttachmentsMinFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAttachmentsMinOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsMutationResponse = {
  __typename?: 'GrantAttachmentsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<GrantAttachments>;
};

export type GrantAttachmentsOnConflict = {
  constraint: GrantAttachmentsConstraint;
  updateColumns?: Array<GrantAttachmentsUpdateColumn>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type GrantAttachmentsOrderBy = {
  attachment?: InputMaybe<FileUploadOrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  grant?: InputMaybe<GrantOrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsPkColumnsInput = {
  fileUploadId: Scalars['bigint']['input'];
  grantId: Scalars['bigint']['input'];
};

export enum GrantAttachmentsSelectColumn {
  FileUploadId = 'fileUploadId',
  GrantId = 'grantId',
}

export type GrantAttachmentsSetInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAttachmentsStddevFields = {
  __typename?: 'GrantAttachmentsStddevFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAttachmentsStddevOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsStddevPopFields = {
  __typename?: 'GrantAttachmentsStddevPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAttachmentsStddevPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsStddevSampFields = {
  __typename?: 'GrantAttachmentsStddevSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAttachmentsStddevSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsStreamCursorInput = {
  initialValue: GrantAttachmentsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type GrantAttachmentsStreamCursorValueInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAttachmentsSumFields = {
  __typename?: 'GrantAttachmentsSumFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAttachmentsSumOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export enum GrantAttachmentsUpdateColumn {
  FileUploadId = 'fileUploadId',
  GrantId = 'grantId',
}

export type GrantAttachmentsUpdates = {
  _inc?: InputMaybe<GrantAttachmentsIncInput>;
  _set?: InputMaybe<GrantAttachmentsSetInput>;
  where: GrantAttachmentsBoolExp;
};

export type GrantAttachmentsVarPopFields = {
  __typename?: 'GrantAttachmentsVarPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAttachmentsVarPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsVarSampFields = {
  __typename?: 'GrantAttachmentsVarSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAttachmentsVarSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsVarianceFields = {
  __typename?: 'GrantAttachmentsVarianceFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAttachmentsVarianceOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAvgFields = {
  __typename?: 'GrantAvgFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAvgOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type GrantBoolExp = {
  _and?: InputMaybe<Array<GrantBoolExp>>;
  _not?: InputMaybe<GrantBoolExp>;
  _or?: InputMaybe<Array<GrantBoolExp>>;
  askedAmount?: InputMaybe<FloatComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  generatedDocument?: InputMaybe<FileUploadBoolExp>;
  generatedDocumentId?: InputMaybe<BigintComparisonExp>;
  grantAllocates?: InputMaybe<GrantAllocateBoolExp>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateBoolExp>;
  grantAttachments?: InputMaybe<GrantAttachmentsBoolExp>;
  grantAttachmentsAggregate?: InputMaybe<GrantAttachmentsAggregateBoolExp>;
  id?: InputMaybe<BigintComparisonExp>;
  projects?: InputMaybe<ProjectBoolExp>;
  projectsAggregate?: InputMaybe<ProjectAggregateBoolExp>;
  receivedAmount?: InputMaybe<FloatComparisonExp>;
  receivedAmountProcessed?: InputMaybe<UserBoolExp>;
  receivedAmountProcessedAt?: InputMaybe<TimestamptzComparisonExp>;
  receivedAmountProcessedById?: InputMaybe<BigintComparisonExp>;
  signature?: InputMaybe<FileUploadBoolExp>;
  signatureId?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<ApprovalStateComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum GrantConstraint {
  GrantGeneratedDocumentIdUnique = 'grant_generated_document_id_unique',
  GrantPkey = 'grant_pkey',
  GrantSignatureIdUnique = 'grant_signature_id_unique',
}

export type GrantIncInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantInsertInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  generatedDocument?: InputMaybe<FileUploadObjRelInsertInput>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  grantAllocates?: InputMaybe<GrantAllocateArrRelInsertInput>;
  grantAttachments?: InputMaybe<GrantAttachmentsArrRelInsertInput>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projects?: InputMaybe<ProjectArrRelInsertInput>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessed?: InputMaybe<UserObjRelInsertInput>;
  receivedAmountProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signature?: InputMaybe<FileUploadObjRelInsertInput>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantMaxFields = {
  __typename?: 'GrantMaxFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantMaxOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedAt?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type GrantMinFields = {
  __typename?: 'GrantMinFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantMinOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedAt?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type GrantMutationResponse = {
  __typename?: 'GrantMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Grant>;
};

export type GrantObjRelInsertInput = {
  data: GrantInsertInput;
  onConflict?: InputMaybe<GrantOnConflict>;
};

export type GrantOnConflict = {
  constraint: GrantConstraint;
  updateColumns?: Array<GrantUpdateColumn>;
  where?: InputMaybe<GrantBoolExp>;
};

export type GrantOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  generatedDocument?: InputMaybe<FileUploadOrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateOrderBy>;
  grantAttachmentsAggregate?: InputMaybe<GrantAttachmentsAggregateOrderBy>;
  id?: InputMaybe<OrderBy>;
  projectsAggregate?: InputMaybe<ProjectAggregateOrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessed?: InputMaybe<UserOrderBy>;
  receivedAmountProcessedAt?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signature?: InputMaybe<FileUploadOrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type GrantPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum GrantSelectColumn {
  AskedAmount = 'askedAmount',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  GeneratedDocumentId = 'generatedDocumentId',
  Id = 'id',
  ReceivedAmount = 'receivedAmount',
  ReceivedAmountProcessedAt = 'receivedAmountProcessedAt',
  ReceivedAmountProcessedById = 'receivedAmountProcessedById',
  SignatureId = 'signatureId',
  State = 'state',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
}

export type GrantSetInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantStddevFields = {
  __typename?: 'GrantStddevFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type GrantStddevOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type GrantStddevPopFields = {
  __typename?: 'GrantStddevPopFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type GrantStddevPopOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type GrantStddevSampFields = {
  __typename?: 'GrantStddevSampFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type GrantStddevSampOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type GrantStreamCursorInput = {
  initialValue: GrantStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type GrantStreamCursorValueInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantSumFields = {
  __typename?: 'GrantSumFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantSumOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum GrantUpdateColumn {
  AskedAmount = 'askedAmount',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  GeneratedDocumentId = 'generatedDocumentId',
  Id = 'id',
  ReceivedAmount = 'receivedAmount',
  ReceivedAmountProcessedAt = 'receivedAmountProcessedAt',
  ReceivedAmountProcessedById = 'receivedAmountProcessedById',
  SignatureId = 'signatureId',
  State = 'state',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
}

export type GrantUpdates = {
  _inc?: InputMaybe<GrantIncInput>;
  _set?: InputMaybe<GrantSetInput>;
  where: GrantBoolExp;
};

export type GrantVarPopFields = {
  __typename?: 'GrantVarPopFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type GrantVarPopOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type GrantVarSampFields = {
  __typename?: 'GrantVarSampFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type GrantVarSampOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type GrantVarianceFields = {
  __typename?: 'GrantVarianceFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type GrantVarianceOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type IntComparisonExp = {
  _eq?: InputMaybe<Scalars['Int']['input']>;
  _gt?: InputMaybe<Scalars['Int']['input']>;
  _gte?: InputMaybe<Scalars['Int']['input']>;
  _in?: InputMaybe<Array<Scalars['Int']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Int']['input']>;
  _lte?: InputMaybe<Scalars['Int']['input']>;
  _neq?: InputMaybe<Scalars['Int']['input']>;
  _nin?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type JsonbCastExp = {
  String?: InputMaybe<StringComparisonExp>;
};

export type JsonbComparisonExp = {
  _cast?: InputMaybe<JsonbCastExp>;
  _containedIn?: InputMaybe<Scalars['jsonb']['input']>;
  _contains?: InputMaybe<Scalars['jsonb']['input']>;
  _eq?: InputMaybe<Scalars['jsonb']['input']>;
  _gt?: InputMaybe<Scalars['jsonb']['input']>;
  _gte?: InputMaybe<Scalars['jsonb']['input']>;
  _hasKey?: InputMaybe<Scalars['String']['input']>;
  _hasKeysAll?: InputMaybe<Array<Scalars['String']['input']>>;
  _hasKeysAny?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['jsonb']['input']>;
  _lte?: InputMaybe<Scalars['jsonb']['input']>;
  _neq?: InputMaybe<Scalars['jsonb']['input']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']['input']>>;
};

export type LegalUnit = {
  __typename?: 'LegalUnit';
  activityCategory?: Maybe<Scalars['String']['output']>;
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  bankCode?: Maybe<Scalars['Int']['output']>;
  bankInfos: Array<BankInfo>;
  bankInfosAggregate: BankInfoAggregate;
  bankLocationCode?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  expenseItems: Array<ExpenseItem>;
  expenseItemsAggregate: ExpenseItemAggregate;
  grandFundTeams: Array<Team>;
  grandFundTeamsAggregate: TeamAggregate;
  id: Scalars['bigint']['output'];
  isFranchise: Scalars['Boolean']['output'];
  isFranchiseBrand: Scalars['Boolean']['output'];
  legalCategory?: Maybe<Scalars['String']['output']>;
  legalName: Scalars['String']['output'];
  legalUnits: Array<LegalUnit>;
  legalUnitsAggregate: LegalUnitAggregate;
  location?: Maybe<Location>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  nic?: Maybe<Scalars['String']['output']>;
  parent?: Maybe<LegalUnit>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  siren?: Maybe<Scalars['String']['output']>;
  slug: Scalars['String']['output'];
  type: Scalars['LegalUnitType']['output'];
};

export type LegalUnitBankInfosArgs = {
  distinctOn?: InputMaybe<Array<BankInfoSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankInfoOrderBy>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type LegalUnitBankInfosAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankInfoSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankInfoOrderBy>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type LegalUnitExpenseItemsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type LegalUnitExpenseItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type LegalUnitGrandFundTeamsArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type LegalUnitGrandFundTeamsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type LegalUnitLegalUnitsArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type LegalUnitLegalUnitsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type LegalUnitAggregate = {
  __typename?: 'LegalUnitAggregate';
  aggregate?: Maybe<LegalUnitAggregateFields>;
  nodes: Array<LegalUnit>;
};

export type LegalUnitAggregateBoolExp = {
  bool_and?: InputMaybe<LegalUnitAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<LegalUnitAggregateBoolExpBool_Or>;
  count?: InputMaybe<LegalUnitAggregateBoolExpCount>;
};

export type LegalUnitAggregateFields = {
  __typename?: 'LegalUnitAggregateFields';
  avg?: Maybe<LegalUnitAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<LegalUnitMaxFields>;
  min?: Maybe<LegalUnitMinFields>;
  stddev?: Maybe<LegalUnitStddevFields>;
  stddevPop?: Maybe<LegalUnitStddevPopFields>;
  stddevSamp?: Maybe<LegalUnitStddevSampFields>;
  sum?: Maybe<LegalUnitSumFields>;
  varPop?: Maybe<LegalUnitVarPopFields>;
  varSamp?: Maybe<LegalUnitVarSampFields>;
  variance?: Maybe<LegalUnitVarianceFields>;
};

export type LegalUnitAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<LegalUnitSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LegalUnitAggregateOrderBy = {
  avg?: InputMaybe<LegalUnitAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<LegalUnitMaxOrderBy>;
  min?: InputMaybe<LegalUnitMinOrderBy>;
  stddev?: InputMaybe<LegalUnitStddevOrderBy>;
  stddevPop?: InputMaybe<LegalUnitStddevPopOrderBy>;
  stddevSamp?: InputMaybe<LegalUnitStddevSampOrderBy>;
  sum?: InputMaybe<LegalUnitSumOrderBy>;
  varPop?: InputMaybe<LegalUnitVarPopOrderBy>;
  varSamp?: InputMaybe<LegalUnitVarSampOrderBy>;
  variance?: InputMaybe<LegalUnitVarianceOrderBy>;
};

export type LegalUnitArrRelInsertInput = {
  data: Array<LegalUnitInsertInput>;
  onConflict?: InputMaybe<LegalUnitOnConflict>;
};

export type LegalUnitAvgFields = {
  __typename?: 'LegalUnitAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankCode?: Maybe<Scalars['Float']['output']>;
  bankLocationCode?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type LegalUnitBoolExp = {
  _and?: InputMaybe<Array<LegalUnitBoolExp>>;
  _not?: InputMaybe<LegalUnitBoolExp>;
  _or?: InputMaybe<Array<LegalUnitBoolExp>>;
  activityCategory?: InputMaybe<StringComparisonExp>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  bankCode?: InputMaybe<IntComparisonExp>;
  bankInfos?: InputMaybe<BankInfoBoolExp>;
  bankInfosAggregate?: InputMaybe<BankInfoAggregateBoolExp>;
  bankLocationCode?: InputMaybe<IntComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  expenseItems?: InputMaybe<ExpenseItemBoolExp>;
  expenseItemsAggregate?: InputMaybe<ExpenseItemAggregateBoolExp>;
  grandFundTeams?: InputMaybe<TeamBoolExp>;
  grandFundTeamsAggregate?: InputMaybe<TeamAggregateBoolExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isFranchise?: InputMaybe<BooleanComparisonExp>;
  isFranchiseBrand?: InputMaybe<BooleanComparisonExp>;
  legalCategory?: InputMaybe<StringComparisonExp>;
  legalName?: InputMaybe<StringComparisonExp>;
  legalUnits?: InputMaybe<LegalUnitBoolExp>;
  legalUnitsAggregate?: InputMaybe<LegalUnitAggregateBoolExp>;
  location?: InputMaybe<LocationBoolExp>;
  locationId?: InputMaybe<BigintComparisonExp>;
  nic?: InputMaybe<StringComparisonExp>;
  parent?: InputMaybe<LegalUnitBoolExp>;
  parentId?: InputMaybe<BigintComparisonExp>;
  siren?: InputMaybe<StringComparisonExp>;
  slug?: InputMaybe<StringComparisonExp>;
  type?: InputMaybe<LegalUnitTypeComparisonExp>;
};

export enum LegalUnitConstraint {
  LegalUnitActorIdUnique = 'legal_unit_actor_id_unique',
  LegalUnitPkey = 'legal_unit_pkey',
  LegalUnitSlugUnique = 'legal_unit_slug_unique',
}

export type LegalUnitIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankCode?: InputMaybe<Scalars['Int']['input']>;
  bankLocationCode?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
};

export type LegalUnitInsertInput = {
  activityCategory?: InputMaybe<Scalars['String']['input']>;
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankCode?: InputMaybe<Scalars['Int']['input']>;
  bankInfos?: InputMaybe<BankInfoArrRelInsertInput>;
  bankLocationCode?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  expenseItems?: InputMaybe<ExpenseItemArrRelInsertInput>;
  grandFundTeams?: InputMaybe<TeamArrRelInsertInput>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isFranchise?: InputMaybe<Scalars['Boolean']['input']>;
  isFranchiseBrand?: InputMaybe<Scalars['Boolean']['input']>;
  legalCategory?: InputMaybe<Scalars['String']['input']>;
  legalName?: InputMaybe<Scalars['String']['input']>;
  legalUnits?: InputMaybe<LegalUnitArrRelInsertInput>;
  location?: InputMaybe<LocationObjRelInsertInput>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  nic?: InputMaybe<Scalars['String']['input']>;
  parent?: InputMaybe<LegalUnitObjRelInsertInput>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  siren?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['LegalUnitType']['input']>;
};

export type LegalUnitMaxFields = {
  __typename?: 'LegalUnitMaxFields';
  activityCategory?: Maybe<Scalars['String']['output']>;
  actorId?: Maybe<Scalars['bigint']['output']>;
  bankCode?: Maybe<Scalars['Int']['output']>;
  bankLocationCode?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  legalCategory?: Maybe<Scalars['String']['output']>;
  legalName?: Maybe<Scalars['String']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  nic?: Maybe<Scalars['String']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  siren?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['LegalUnitType']['output']>;
};

export type LegalUnitMaxOrderBy = {
  activityCategory?: InputMaybe<OrderBy>;
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalCategory?: InputMaybe<OrderBy>;
  legalName?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  nic?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  siren?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type LegalUnitMinFields = {
  __typename?: 'LegalUnitMinFields';
  activityCategory?: Maybe<Scalars['String']['output']>;
  actorId?: Maybe<Scalars['bigint']['output']>;
  bankCode?: Maybe<Scalars['Int']['output']>;
  bankLocationCode?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  legalCategory?: Maybe<Scalars['String']['output']>;
  legalName?: Maybe<Scalars['String']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  nic?: Maybe<Scalars['String']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  siren?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['LegalUnitType']['output']>;
};

export type LegalUnitMinOrderBy = {
  activityCategory?: InputMaybe<OrderBy>;
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalCategory?: InputMaybe<OrderBy>;
  legalName?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  nic?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  siren?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type LegalUnitMutationResponse = {
  __typename?: 'LegalUnitMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<LegalUnit>;
};

export type LegalUnitObjRelInsertInput = {
  data: LegalUnitInsertInput;
  onConflict?: InputMaybe<LegalUnitOnConflict>;
};

export type LegalUnitOnConflict = {
  constraint: LegalUnitConstraint;
  updateColumns?: Array<LegalUnitUpdateColumn>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type LegalUnitOrderBy = {
  activityCategory?: InputMaybe<OrderBy>;
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  bankInfosAggregate?: InputMaybe<BankInfoAggregateOrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  expenseItemsAggregate?: InputMaybe<ExpenseItemAggregateOrderBy>;
  grandFundTeamsAggregate?: InputMaybe<TeamAggregateOrderBy>;
  id?: InputMaybe<OrderBy>;
  isFranchise?: InputMaybe<OrderBy>;
  isFranchiseBrand?: InputMaybe<OrderBy>;
  legalCategory?: InputMaybe<OrderBy>;
  legalName?: InputMaybe<OrderBy>;
  legalUnitsAggregate?: InputMaybe<LegalUnitAggregateOrderBy>;
  location?: InputMaybe<LocationOrderBy>;
  locationId?: InputMaybe<OrderBy>;
  nic?: InputMaybe<OrderBy>;
  parent?: InputMaybe<LegalUnitOrderBy>;
  parentId?: InputMaybe<OrderBy>;
  siren?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type LegalUnitPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum LegalUnitSelectColumn {
  ActivityCategory = 'activityCategory',
  ActorId = 'actorId',
  BankCode = 'bankCode',
  BankLocationCode = 'bankLocationCode',
  CreatedAt = 'createdAt',
  DeletedAt = 'deletedAt',
  Id = 'id',
  IsFranchise = 'isFranchise',
  IsFranchiseBrand = 'isFranchiseBrand',
  LegalCategory = 'legalCategory',
  LegalName = 'legalName',
  LocationId = 'locationId',
  Nic = 'nic',
  ParentId = 'parentId',
  Siren = 'siren',
  Slug = 'slug',
  Type = 'type',
}

export enum LegalUnitSelectColumnLegalUnitAggregateBoolExpBool_AndArgumentsColumns {
  IsFranchise = 'isFranchise',
  IsFranchiseBrand = 'isFranchiseBrand',
}

export enum LegalUnitSelectColumnLegalUnitAggregateBoolExpBool_OrArgumentsColumns {
  IsFranchise = 'isFranchise',
  IsFranchiseBrand = 'isFranchiseBrand',
}

export type LegalUnitSetInput = {
  activityCategory?: InputMaybe<Scalars['String']['input']>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankCode?: InputMaybe<Scalars['Int']['input']>;
  bankLocationCode?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isFranchise?: InputMaybe<Scalars['Boolean']['input']>;
  isFranchiseBrand?: InputMaybe<Scalars['Boolean']['input']>;
  legalCategory?: InputMaybe<Scalars['String']['input']>;
  legalName?: InputMaybe<Scalars['String']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  nic?: InputMaybe<Scalars['String']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  siren?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['LegalUnitType']['input']>;
};

export type LegalUnitStddevFields = {
  __typename?: 'LegalUnitStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankCode?: Maybe<Scalars['Float']['output']>;
  bankLocationCode?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type LegalUnitStddevPopFields = {
  __typename?: 'LegalUnitStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankCode?: Maybe<Scalars['Float']['output']>;
  bankLocationCode?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type LegalUnitStddevSampFields = {
  __typename?: 'LegalUnitStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankCode?: Maybe<Scalars['Float']['output']>;
  bankLocationCode?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type LegalUnitStreamCursorInput = {
  initialValue: LegalUnitStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type LegalUnitStreamCursorValueInput = {
  activityCategory?: InputMaybe<Scalars['String']['input']>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankCode?: InputMaybe<Scalars['Int']['input']>;
  bankLocationCode?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isFranchise?: InputMaybe<Scalars['Boolean']['input']>;
  isFranchiseBrand?: InputMaybe<Scalars['Boolean']['input']>;
  legalCategory?: InputMaybe<Scalars['String']['input']>;
  legalName?: InputMaybe<Scalars['String']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  nic?: InputMaybe<Scalars['String']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  siren?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['LegalUnitType']['input']>;
};

export type LegalUnitSumFields = {
  __typename?: 'LegalUnitSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  bankCode?: Maybe<Scalars['Int']['output']>;
  bankLocationCode?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
};

export type LegalUnitSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type LegalUnitTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['LegalUnitType']['input']>;
  _gt?: InputMaybe<Scalars['LegalUnitType']['input']>;
  _gte?: InputMaybe<Scalars['LegalUnitType']['input']>;
  _in?: InputMaybe<Array<Scalars['LegalUnitType']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['LegalUnitType']['input']>;
  _lte?: InputMaybe<Scalars['LegalUnitType']['input']>;
  _neq?: InputMaybe<Scalars['LegalUnitType']['input']>;
  _nin?: InputMaybe<Array<Scalars['LegalUnitType']['input']>>;
};

export enum LegalUnitUpdateColumn {
  ActivityCategory = 'activityCategory',
  ActorId = 'actorId',
  BankCode = 'bankCode',
  BankLocationCode = 'bankLocationCode',
  CreatedAt = 'createdAt',
  DeletedAt = 'deletedAt',
  Id = 'id',
  IsFranchise = 'isFranchise',
  IsFranchiseBrand = 'isFranchiseBrand',
  LegalCategory = 'legalCategory',
  LegalName = 'legalName',
  LocationId = 'locationId',
  Nic = 'nic',
  ParentId = 'parentId',
  Siren = 'siren',
  Slug = 'slug',
  Type = 'type',
}

export type LegalUnitUpdates = {
  _inc?: InputMaybe<LegalUnitIncInput>;
  _set?: InputMaybe<LegalUnitSetInput>;
  where: LegalUnitBoolExp;
};

export type LegalUnitVarPopFields = {
  __typename?: 'LegalUnitVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankCode?: Maybe<Scalars['Float']['output']>;
  bankLocationCode?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type LegalUnitVarSampFields = {
  __typename?: 'LegalUnitVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankCode?: Maybe<Scalars['Float']['output']>;
  bankLocationCode?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type LegalUnitVarianceFields = {
  __typename?: 'LegalUnitVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankCode?: Maybe<Scalars['Float']['output']>;
  bankLocationCode?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type Location = {
  __typename?: 'Location';
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  address?: Maybe<Address>;
  campuses: Array<Campus>;
  campusesAggregate: CampusAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  details: Scalars['String']['output'];
  events: Array<Event>;
  eventsAggregate: EventAggregate;
  geoapifyId?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  legalUnits: Array<LegalUnit>;
  legalUnitsAggregate: LegalUnitAggregate;
  link: Scalars['String']['output'];
  locationImages: Array<LocationImages>;
  locationImagesAggregate: LocationImagesAggregate;
  name: Scalars['String']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  transactions: Array<Transaction>;
  transactionsAggregate: TransactionAggregate;
  type: Scalars['LocationType']['output'];
  user?: Maybe<User>;
};

export type LocationCampusesArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type LocationCampusesAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type LocationEventsArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type LocationEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type LocationLegalUnitsArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type LocationLegalUnitsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type LocationLocationImagesArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type LocationLocationImagesAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type LocationTransactionsArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type LocationTransactionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type LocationAggregate = {
  __typename?: 'LocationAggregate';
  aggregate?: Maybe<LocationAggregateFields>;
  nodes: Array<Location>;
};

export type LocationAggregateBoolExp = {
  count?: InputMaybe<LocationAggregateBoolExpCount>;
};

export type LocationAggregateFields = {
  __typename?: 'LocationAggregateFields';
  avg?: Maybe<LocationAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<LocationMaxFields>;
  min?: Maybe<LocationMinFields>;
  stddev?: Maybe<LocationStddevFields>;
  stddevPop?: Maybe<LocationStddevPopFields>;
  stddevSamp?: Maybe<LocationStddevSampFields>;
  sum?: Maybe<LocationSumFields>;
  varPop?: Maybe<LocationVarPopFields>;
  varSamp?: Maybe<LocationVarSampFields>;
  variance?: Maybe<LocationVarianceFields>;
};

export type LocationAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<LocationSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LocationAggregateOrderBy = {
  avg?: InputMaybe<LocationAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<LocationMaxOrderBy>;
  min?: InputMaybe<LocationMinOrderBy>;
  stddev?: InputMaybe<LocationStddevOrderBy>;
  stddevPop?: InputMaybe<LocationStddevPopOrderBy>;
  stddevSamp?: InputMaybe<LocationStddevSampOrderBy>;
  sum?: InputMaybe<LocationSumOrderBy>;
  varPop?: InputMaybe<LocationVarPopOrderBy>;
  varSamp?: InputMaybe<LocationVarSampOrderBy>;
  variance?: InputMaybe<LocationVarianceOrderBy>;
};

export type LocationArrRelInsertInput = {
  data: Array<LocationInsertInput>;
  onConflict?: InputMaybe<LocationOnConflict>;
};

export type LocationAvgFields = {
  __typename?: 'LocationAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type LocationAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type LocationBoolExp = {
  _and?: InputMaybe<Array<LocationBoolExp>>;
  _not?: InputMaybe<LocationBoolExp>;
  _or?: InputMaybe<Array<LocationBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  address?: InputMaybe<AddressBoolExp>;
  campuses?: InputMaybe<CampusBoolExp>;
  campusesAggregate?: InputMaybe<CampusAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  details?: InputMaybe<StringComparisonExp>;
  events?: InputMaybe<EventBoolExp>;
  eventsAggregate?: InputMaybe<EventAggregateBoolExp>;
  geoapifyId?: InputMaybe<StringComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  legalUnits?: InputMaybe<LegalUnitBoolExp>;
  legalUnitsAggregate?: InputMaybe<LegalUnitAggregateBoolExp>;
  link?: InputMaybe<StringComparisonExp>;
  locationImages?: InputMaybe<LocationImagesBoolExp>;
  locationImagesAggregate?: InputMaybe<LocationImagesAggregateBoolExp>;
  name?: InputMaybe<StringComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  transactions?: InputMaybe<TransactionBoolExp>;
  transactionsAggregate?: InputMaybe<TransactionAggregateBoolExp>;
  type?: InputMaybe<LocationTypeComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
};

export enum LocationConstraint {
  LocationPkey = 'location_pkey',
}

export type LocationImages = {
  __typename?: 'LocationImages';
  fileUpload: FileUpload;
  fileUploadId: Scalars['bigint']['output'];
  location: Location;
  locationId: Scalars['bigint']['output'];
};

export type LocationImagesAggregate = {
  __typename?: 'LocationImagesAggregate';
  aggregate?: Maybe<LocationImagesAggregateFields>;
  nodes: Array<LocationImages>;
};

export type LocationImagesAggregateBoolExp = {
  count?: InputMaybe<LocationImagesAggregateBoolExpCount>;
};

export type LocationImagesAggregateFields = {
  __typename?: 'LocationImagesAggregateFields';
  avg?: Maybe<LocationImagesAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<LocationImagesMaxFields>;
  min?: Maybe<LocationImagesMinFields>;
  stddev?: Maybe<LocationImagesStddevFields>;
  stddevPop?: Maybe<LocationImagesStddevPopFields>;
  stddevSamp?: Maybe<LocationImagesStddevSampFields>;
  sum?: Maybe<LocationImagesSumFields>;
  varPop?: Maybe<LocationImagesVarPopFields>;
  varSamp?: Maybe<LocationImagesVarSampFields>;
  variance?: Maybe<LocationImagesVarianceFields>;
};

export type LocationImagesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<LocationImagesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LocationImagesAggregateOrderBy = {
  avg?: InputMaybe<LocationImagesAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<LocationImagesMaxOrderBy>;
  min?: InputMaybe<LocationImagesMinOrderBy>;
  stddev?: InputMaybe<LocationImagesStddevOrderBy>;
  stddevPop?: InputMaybe<LocationImagesStddevPopOrderBy>;
  stddevSamp?: InputMaybe<LocationImagesStddevSampOrderBy>;
  sum?: InputMaybe<LocationImagesSumOrderBy>;
  varPop?: InputMaybe<LocationImagesVarPopOrderBy>;
  varSamp?: InputMaybe<LocationImagesVarSampOrderBy>;
  variance?: InputMaybe<LocationImagesVarianceOrderBy>;
};

export type LocationImagesArrRelInsertInput = {
  data: Array<LocationImagesInsertInput>;
  onConflict?: InputMaybe<LocationImagesOnConflict>;
};

export type LocationImagesAvgFields = {
  __typename?: 'LocationImagesAvgFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LocationImagesAvgOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesBoolExp = {
  _and?: InputMaybe<Array<LocationImagesBoolExp>>;
  _not?: InputMaybe<LocationImagesBoolExp>;
  _or?: InputMaybe<Array<LocationImagesBoolExp>>;
  fileUpload?: InputMaybe<FileUploadBoolExp>;
  fileUploadId?: InputMaybe<BigintComparisonExp>;
  location?: InputMaybe<LocationBoolExp>;
  locationId?: InputMaybe<BigintComparisonExp>;
};

export enum LocationImagesConstraint {
  LocationImageFileUploadIdUnique = 'location_image_file_upload_id_unique',
  LocationImagesPkey = 'location_images_pkey',
}

export type LocationImagesIncInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
};

export type LocationImagesInsertInput = {
  fileUpload?: InputMaybe<FileUploadObjRelInsertInput>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  location?: InputMaybe<LocationObjRelInsertInput>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
};

export type LocationImagesMaxFields = {
  __typename?: 'LocationImagesMaxFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
};

export type LocationImagesMaxOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesMinFields = {
  __typename?: 'LocationImagesMinFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
};

export type LocationImagesMinOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesMutationResponse = {
  __typename?: 'LocationImagesMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<LocationImages>;
};

export type LocationImagesOnConflict = {
  constraint: LocationImagesConstraint;
  updateColumns?: Array<LocationImagesUpdateColumn>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type LocationImagesOrderBy = {
  fileUpload?: InputMaybe<FileUploadOrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  location?: InputMaybe<LocationOrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesPkColumnsInput = {
  fileUploadId: Scalars['bigint']['input'];
  locationId: Scalars['bigint']['input'];
};

export enum LocationImagesSelectColumn {
  FileUploadId = 'fileUploadId',
  LocationId = 'locationId',
}

export type LocationImagesSetInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
};

export type LocationImagesStddevFields = {
  __typename?: 'LocationImagesStddevFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LocationImagesStddevOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesStddevPopFields = {
  __typename?: 'LocationImagesStddevPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LocationImagesStddevPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesStddevSampFields = {
  __typename?: 'LocationImagesStddevSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LocationImagesStddevSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesStreamCursorInput = {
  initialValue: LocationImagesStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type LocationImagesStreamCursorValueInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
};

export type LocationImagesSumFields = {
  __typename?: 'LocationImagesSumFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
};

export type LocationImagesSumOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export enum LocationImagesUpdateColumn {
  FileUploadId = 'fileUploadId',
  LocationId = 'locationId',
}

export type LocationImagesUpdates = {
  _inc?: InputMaybe<LocationImagesIncInput>;
  _set?: InputMaybe<LocationImagesSetInput>;
  where: LocationImagesBoolExp;
};

export type LocationImagesVarPopFields = {
  __typename?: 'LocationImagesVarPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LocationImagesVarPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesVarSampFields = {
  __typename?: 'LocationImagesVarSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LocationImagesVarSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesVarianceFields = {
  __typename?: 'LocationImagesVarianceFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LocationImagesVarianceOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type LocationInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  address?: InputMaybe<AddressObjRelInsertInput>;
  campuses?: InputMaybe<CampusArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  details?: InputMaybe<Scalars['String']['input']>;
  events?: InputMaybe<EventArrRelInsertInput>;
  geoapifyId?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  legalUnits?: InputMaybe<LegalUnitArrRelInsertInput>;
  link?: InputMaybe<Scalars['String']['input']>;
  locationImages?: InputMaybe<LocationImagesArrRelInsertInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  transactions?: InputMaybe<TransactionArrRelInsertInput>;
  type?: InputMaybe<Scalars['LocationType']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
};

export type LocationMaxFields = {
  __typename?: 'LocationMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  details?: Maybe<Scalars['String']['output']>;
  geoapifyId?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  link?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['LocationType']['output']>;
};

export type LocationMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  details?: InputMaybe<OrderBy>;
  geoapifyId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  link?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type LocationMinFields = {
  __typename?: 'LocationMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  details?: Maybe<Scalars['String']['output']>;
  geoapifyId?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  link?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['LocationType']['output']>;
};

export type LocationMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  details?: InputMaybe<OrderBy>;
  geoapifyId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  link?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type LocationMutationResponse = {
  __typename?: 'LocationMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Location>;
};

export type LocationObjRelInsertInput = {
  data: LocationInsertInput;
  onConflict?: InputMaybe<LocationOnConflict>;
};

export type LocationOnConflict = {
  constraint: LocationConstraint;
  updateColumns?: Array<LocationUpdateColumn>;
  where?: InputMaybe<LocationBoolExp>;
};

export type LocationOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  address?: InputMaybe<AddressOrderBy>;
  campusesAggregate?: InputMaybe<CampusAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  details?: InputMaybe<OrderBy>;
  eventsAggregate?: InputMaybe<EventAggregateOrderBy>;
  geoapifyId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitsAggregate?: InputMaybe<LegalUnitAggregateOrderBy>;
  link?: InputMaybe<OrderBy>;
  locationImagesAggregate?: InputMaybe<LocationImagesAggregateOrderBy>;
  name?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionsAggregate?: InputMaybe<TransactionAggregateOrderBy>;
  type?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
};

export type LocationPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum LocationSelectColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Details = 'details',
  GeoapifyId = 'geoapifyId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Link = 'link',
  Name = 'name',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export type LocationSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  details?: InputMaybe<Scalars['String']['input']>;
  geoapifyId?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  link?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['LocationType']['input']>;
};

export type LocationStddevFields = {
  __typename?: 'LocationStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type LocationStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type LocationStddevPopFields = {
  __typename?: 'LocationStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type LocationStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type LocationStddevSampFields = {
  __typename?: 'LocationStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type LocationStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type LocationStreamCursorInput = {
  initialValue: LocationStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type LocationStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  details?: InputMaybe<Scalars['String']['input']>;
  geoapifyId?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  link?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['LocationType']['input']>;
};

export type LocationSumFields = {
  __typename?: 'LocationSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type LocationSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type LocationTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['LocationType']['input']>;
  _gt?: InputMaybe<Scalars['LocationType']['input']>;
  _gte?: InputMaybe<Scalars['LocationType']['input']>;
  _in?: InputMaybe<Array<Scalars['LocationType']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['LocationType']['input']>;
  _lte?: InputMaybe<Scalars['LocationType']['input']>;
  _neq?: InputMaybe<Scalars['LocationType']['input']>;
  _nin?: InputMaybe<Array<Scalars['LocationType']['input']>>;
};

export enum LocationUpdateColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Details = 'details',
  GeoapifyId = 'geoapifyId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Link = 'link',
  Name = 'name',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export type LocationUpdates = {
  _inc?: InputMaybe<LocationIncInput>;
  _set?: InputMaybe<LocationSetInput>;
  where: LocationBoolExp;
};

export type LocationVarPopFields = {
  __typename?: 'LocationVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type LocationVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type LocationVarSampFields = {
  __typename?: 'LocationVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type LocationVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type LocationVarianceFields = {
  __typename?: 'LocationVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type LocationVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type Mission = {
  __typename?: 'Mission';
  color: Scalars['Colors']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  eventOrganize?: Maybe<EventOrganize>;
  eventOrganizeId?: Maybe<Scalars['bigint']['output']>;
  id: Scalars['bigint']['output'];
  isAutoAcceptingMembers: Scalars['Boolean']['output'];
  isTemplate: Scalars['Boolean']['output'];
  missionJoins: Array<MissionJoin>;
  missionJoinsAggregate: MissionJoinAggregate;
  name: Scalars['String']['output'];
  pointsMaximum: Scalars['smallint']['output'];
  pointsMinimum: Scalars['smallint']['output'];
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  quantity: Scalars['smallint']['output'];
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type MissionMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type MissionMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type MissionAggregate = {
  __typename?: 'MissionAggregate';
  aggregate?: Maybe<MissionAggregateFields>;
  nodes: Array<Mission>;
};

export type MissionAggregateBoolExp = {
  bool_and?: InputMaybe<MissionAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<MissionAggregateBoolExpBool_Or>;
  count?: InputMaybe<MissionAggregateBoolExpCount>;
};

export type MissionAggregateFields = {
  __typename?: 'MissionAggregateFields';
  avg?: Maybe<MissionAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<MissionMaxFields>;
  min?: Maybe<MissionMinFields>;
  stddev?: Maybe<MissionStddevFields>;
  stddevPop?: Maybe<MissionStddevPopFields>;
  stddevSamp?: Maybe<MissionStddevSampFields>;
  sum?: Maybe<MissionSumFields>;
  varPop?: Maybe<MissionVarPopFields>;
  varSamp?: Maybe<MissionVarSampFields>;
  variance?: Maybe<MissionVarianceFields>;
};

export type MissionAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<MissionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MissionAggregateOrderBy = {
  avg?: InputMaybe<MissionAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<MissionMaxOrderBy>;
  min?: InputMaybe<MissionMinOrderBy>;
  stddev?: InputMaybe<MissionStddevOrderBy>;
  stddevPop?: InputMaybe<MissionStddevPopOrderBy>;
  stddevSamp?: InputMaybe<MissionStddevSampOrderBy>;
  sum?: InputMaybe<MissionSumOrderBy>;
  varPop?: InputMaybe<MissionVarPopOrderBy>;
  varSamp?: InputMaybe<MissionVarSampOrderBy>;
  variance?: InputMaybe<MissionVarianceOrderBy>;
};

export type MissionArrRelInsertInput = {
  data: Array<MissionInsertInput>;
  onConflict?: InputMaybe<MissionOnConflict>;
};

export type MissionAvgFields = {
  __typename?: 'MissionAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pointsMaximum?: Maybe<Scalars['Float']['output']>;
  pointsMinimum?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type MissionAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionBoolExp = {
  _and?: InputMaybe<Array<MissionBoolExp>>;
  _not?: InputMaybe<MissionBoolExp>;
  _or?: InputMaybe<Array<MissionBoolExp>>;
  color?: InputMaybe<ColorsComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  eventOrganize?: InputMaybe<EventOrganizeBoolExp>;
  eventOrganizeId?: InputMaybe<BigintComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isAutoAcceptingMembers?: InputMaybe<BooleanComparisonExp>;
  isTemplate?: InputMaybe<BooleanComparisonExp>;
  missionJoins?: InputMaybe<MissionJoinBoolExp>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  name?: InputMaybe<StringComparisonExp>;
  pointsMaximum?: InputMaybe<SmallintComparisonExp>;
  pointsMinimum?: InputMaybe<SmallintComparisonExp>;
  project?: InputMaybe<ProjectBoolExp>;
  projectId?: InputMaybe<BigintComparisonExp>;
  quantity?: InputMaybe<SmallintComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum MissionConstraint {
  MissionPkey = 'mission_pkey',
}

export type MissionIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventOrganizeId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  pointsMaximum?: InputMaybe<Scalars['smallint']['input']>;
  pointsMinimum?: InputMaybe<Scalars['smallint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionInsertInput = {
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventOrganize?: InputMaybe<EventOrganizeObjRelInsertInput>;
  eventOrganizeId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAutoAcceptingMembers?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  missionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  pointsMaximum?: InputMaybe<Scalars['smallint']['input']>;
  pointsMinimum?: InputMaybe<Scalars['smallint']['input']>;
  project?: InputMaybe<ProjectObjRelInsertInput>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionJoin = {
  __typename?: 'MissionJoin';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventJoin?: Maybe<EventJoin>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  id: Scalars['bigint']['output'];
  joinedBy: User;
  joinedById: Scalars['bigint']['output'];
  mission: Mission;
  missionId: Scalars['bigint']['output'];
  points?: Maybe<Scalars['smallint']['output']>;
  pointsProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  pointsProcessedById?: Maybe<Scalars['bigint']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedBy?: Maybe<User>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  state: Scalars['ApprovalState']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  user?: Maybe<User>;
};

export type MissionJoinAggregate = {
  __typename?: 'MissionJoinAggregate';
  aggregate?: Maybe<MissionJoinAggregateFields>;
  nodes: Array<MissionJoin>;
};

export type MissionJoinAggregateBoolExp = {
  count?: InputMaybe<MissionJoinAggregateBoolExpCount>;
};

export type MissionJoinAggregateFields = {
  __typename?: 'MissionJoinAggregateFields';
  avg?: Maybe<MissionJoinAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<MissionJoinMaxFields>;
  min?: Maybe<MissionJoinMinFields>;
  stddev?: Maybe<MissionJoinStddevFields>;
  stddevPop?: Maybe<MissionJoinStddevPopFields>;
  stddevSamp?: Maybe<MissionJoinStddevSampFields>;
  sum?: Maybe<MissionJoinSumFields>;
  varPop?: Maybe<MissionJoinVarPopFields>;
  varSamp?: Maybe<MissionJoinVarSampFields>;
  variance?: Maybe<MissionJoinVarianceFields>;
};

export type MissionJoinAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<MissionJoinSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MissionJoinAggregateOrderBy = {
  avg?: InputMaybe<MissionJoinAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<MissionJoinMaxOrderBy>;
  min?: InputMaybe<MissionJoinMinOrderBy>;
  stddev?: InputMaybe<MissionJoinStddevOrderBy>;
  stddevPop?: InputMaybe<MissionJoinStddevPopOrderBy>;
  stddevSamp?: InputMaybe<MissionJoinStddevSampOrderBy>;
  sum?: InputMaybe<MissionJoinSumOrderBy>;
  varPop?: InputMaybe<MissionJoinVarPopOrderBy>;
  varSamp?: InputMaybe<MissionJoinVarSampOrderBy>;
  variance?: InputMaybe<MissionJoinVarianceOrderBy>;
};

export type MissionJoinArrRelInsertInput = {
  data: Array<MissionJoinInsertInput>;
  onConflict?: InputMaybe<MissionJoinOnConflict>;
};

export type MissionJoinAvgFields = {
  __typename?: 'MissionJoinAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type MissionJoinAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionJoinBoolExp = {
  _and?: InputMaybe<Array<MissionJoinBoolExp>>;
  _not?: InputMaybe<MissionJoinBoolExp>;
  _or?: InputMaybe<Array<MissionJoinBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  eventJoin?: InputMaybe<EventJoinBoolExp>;
  eventJoinId?: InputMaybe<BigintComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  joinedBy?: InputMaybe<UserBoolExp>;
  joinedById?: InputMaybe<BigintComparisonExp>;
  mission?: InputMaybe<MissionBoolExp>;
  missionId?: InputMaybe<BigintComparisonExp>;
  points?: InputMaybe<SmallintComparisonExp>;
  pointsProcessedAt?: InputMaybe<TimestamptzComparisonExp>;
  pointsProcessedById?: InputMaybe<BigintComparisonExp>;
  processedAt?: InputMaybe<TimestamptzComparisonExp>;
  processedBy?: InputMaybe<UserBoolExp>;
  processedById?: InputMaybe<BigintComparisonExp>;
  project?: InputMaybe<ProjectBoolExp>;
  projectId?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<ApprovalStateComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
};

export enum MissionJoinConstraint {
  MissionJoinPkey = 'mission_join_pkey',
}

export type MissionJoinIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  missionId?: InputMaybe<Scalars['bigint']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  pointsProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionJoinInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventJoin?: InputMaybe<EventJoinObjRelInsertInput>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinedBy?: InputMaybe<UserObjRelInsertInput>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  mission?: InputMaybe<MissionObjRelInsertInput>;
  missionId?: InputMaybe<Scalars['bigint']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  pointsProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  pointsProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedBy?: InputMaybe<UserObjRelInsertInput>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<ProjectObjRelInsertInput>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
};

export type MissionJoinMaxFields = {
  __typename?: 'MissionJoinMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  missionId?: Maybe<Scalars['bigint']['output']>;
  points?: Maybe<Scalars['smallint']['output']>;
  pointsProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  pointsProcessedById?: Maybe<Scalars['bigint']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type MissionJoinMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedAt?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionJoinMinFields = {
  __typename?: 'MissionJoinMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  missionId?: Maybe<Scalars['bigint']['output']>;
  points?: Maybe<Scalars['smallint']['output']>;
  pointsProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  pointsProcessedById?: Maybe<Scalars['bigint']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type MissionJoinMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedAt?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionJoinMutationResponse = {
  __typename?: 'MissionJoinMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<MissionJoin>;
};

export type MissionJoinObjRelInsertInput = {
  data: MissionJoinInsertInput;
  onConflict?: InputMaybe<MissionJoinOnConflict>;
};

export type MissionJoinOnConflict = {
  constraint: MissionJoinConstraint;
  updateColumns?: Array<MissionJoinUpdateColumn>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type MissionJoinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventJoin?: InputMaybe<EventJoinOrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedBy?: InputMaybe<UserOrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  mission?: InputMaybe<MissionOrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedAt?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedBy?: InputMaybe<UserOrderBy>;
  processedById?: InputMaybe<OrderBy>;
  project?: InputMaybe<ProjectOrderBy>;
  projectId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
};

export type MissionJoinPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum MissionJoinSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventJoinId = 'eventJoinId',
  Id = 'id',
  JoinedById = 'joinedById',
  MissionId = 'missionId',
  Points = 'points',
  PointsProcessedAt = 'pointsProcessedAt',
  PointsProcessedById = 'pointsProcessedById',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  ProjectId = 'projectId',
  State = 'state',
  TenantScopeId = 'tenantScopeId',
}

export type MissionJoinSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  missionId?: InputMaybe<Scalars['bigint']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  pointsProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  pointsProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionJoinStddevFields = {
  __typename?: 'MissionJoinStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type MissionJoinStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionJoinStddevPopFields = {
  __typename?: 'MissionJoinStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type MissionJoinStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionJoinStddevSampFields = {
  __typename?: 'MissionJoinStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type MissionJoinStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionJoinStreamCursorInput = {
  initialValue: MissionJoinStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type MissionJoinStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  missionId?: InputMaybe<Scalars['bigint']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  pointsProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  pointsProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionJoinSumFields = {
  __typename?: 'MissionJoinSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  missionId?: Maybe<Scalars['bigint']['output']>;
  points?: Maybe<Scalars['smallint']['output']>;
  pointsProcessedById?: Maybe<Scalars['bigint']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type MissionJoinSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum MissionJoinUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventJoinId = 'eventJoinId',
  Id = 'id',
  JoinedById = 'joinedById',
  MissionId = 'missionId',
  Points = 'points',
  PointsProcessedAt = 'pointsProcessedAt',
  PointsProcessedById = 'pointsProcessedById',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  ProjectId = 'projectId',
  State = 'state',
  TenantScopeId = 'tenantScopeId',
}

export type MissionJoinUpdates = {
  _inc?: InputMaybe<MissionJoinIncInput>;
  _set?: InputMaybe<MissionJoinSetInput>;
  where: MissionJoinBoolExp;
};

export type MissionJoinVarPopFields = {
  __typename?: 'MissionJoinVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type MissionJoinVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionJoinVarSampFields = {
  __typename?: 'MissionJoinVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type MissionJoinVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionJoinVarianceFields = {
  __typename?: 'MissionJoinVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type MissionJoinVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionMaxFields = {
  __typename?: 'MissionMaxFields';
  color?: Maybe<Scalars['Colors']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventOrganizeId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pointsMaximum?: Maybe<Scalars['smallint']['output']>;
  pointsMinimum?: Maybe<Scalars['smallint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  quantity?: Maybe<Scalars['smallint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type MissionMaxOrderBy = {
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionMinFields = {
  __typename?: 'MissionMinFields';
  color?: Maybe<Scalars['Colors']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventOrganizeId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pointsMaximum?: Maybe<Scalars['smallint']['output']>;
  pointsMinimum?: Maybe<Scalars['smallint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  quantity?: Maybe<Scalars['smallint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type MissionMinOrderBy = {
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionMutationResponse = {
  __typename?: 'MissionMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Mission>;
};

export type MissionObjRelInsertInput = {
  data: MissionInsertInput;
  onConflict?: InputMaybe<MissionOnConflict>;
};

export type MissionOnConflict = {
  constraint: MissionConstraint;
  updateColumns?: Array<MissionUpdateColumn>;
  where?: InputMaybe<MissionBoolExp>;
};

export type MissionOrderBy = {
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventOrganize?: InputMaybe<EventOrganizeOrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isAutoAcceptingMembers?: InputMaybe<OrderBy>;
  isTemplate?: InputMaybe<OrderBy>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  name?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  project?: InputMaybe<ProjectOrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum MissionSelectColumn {
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventOrganizeId = 'eventOrganizeId',
  Id = 'id',
  IsAutoAcceptingMembers = 'isAutoAcceptingMembers',
  IsTemplate = 'isTemplate',
  Name = 'name',
  PointsMaximum = 'pointsMaximum',
  PointsMinimum = 'pointsMinimum',
  ProjectId = 'projectId',
  Quantity = 'quantity',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
}

export enum MissionSelectColumnMissionAggregateBoolExpBool_AndArgumentsColumns {
  IsAutoAcceptingMembers = 'isAutoAcceptingMembers',
  IsTemplate = 'isTemplate',
}

export enum MissionSelectColumnMissionAggregateBoolExpBool_OrArgumentsColumns {
  IsAutoAcceptingMembers = 'isAutoAcceptingMembers',
  IsTemplate = 'isTemplate',
}

export type MissionSetInput = {
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventOrganizeId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAutoAcceptingMembers?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pointsMaximum?: InputMaybe<Scalars['smallint']['input']>;
  pointsMinimum?: InputMaybe<Scalars['smallint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionStddevFields = {
  __typename?: 'MissionStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pointsMaximum?: Maybe<Scalars['Float']['output']>;
  pointsMinimum?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type MissionStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionStddevPopFields = {
  __typename?: 'MissionStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pointsMaximum?: Maybe<Scalars['Float']['output']>;
  pointsMinimum?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type MissionStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionStddevSampFields = {
  __typename?: 'MissionStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pointsMaximum?: Maybe<Scalars['Float']['output']>;
  pointsMinimum?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type MissionStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionStreamCursorInput = {
  initialValue: MissionStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type MissionStreamCursorValueInput = {
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventOrganizeId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAutoAcceptingMembers?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pointsMaximum?: InputMaybe<Scalars['smallint']['input']>;
  pointsMinimum?: InputMaybe<Scalars['smallint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionSumFields = {
  __typename?: 'MissionSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventOrganizeId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  pointsMaximum?: Maybe<Scalars['smallint']['output']>;
  pointsMinimum?: Maybe<Scalars['smallint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  quantity?: Maybe<Scalars['smallint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type MissionSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum MissionUpdateColumn {
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventOrganizeId = 'eventOrganizeId',
  Id = 'id',
  IsAutoAcceptingMembers = 'isAutoAcceptingMembers',
  IsTemplate = 'isTemplate',
  Name = 'name',
  PointsMaximum = 'pointsMaximum',
  PointsMinimum = 'pointsMinimum',
  ProjectId = 'projectId',
  Quantity = 'quantity',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
}

export type MissionUpdates = {
  _inc?: InputMaybe<MissionIncInput>;
  _set?: InputMaybe<MissionSetInput>;
  where: MissionBoolExp;
};

export type MissionVarPopFields = {
  __typename?: 'MissionVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pointsMaximum?: Maybe<Scalars['Float']['output']>;
  pointsMinimum?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type MissionVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionVarSampFields = {
  __typename?: 'MissionVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pointsMaximum?: Maybe<Scalars['Float']['output']>;
  pointsMinimum?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type MissionVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type MissionVarianceFields = {
  __typename?: 'MissionVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pointsMaximum?: Maybe<Scalars['Float']['output']>;
  pointsMinimum?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type MissionVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type Mutation = {
  __typename?: 'Mutation';
  deleteAction?: Maybe<ActionMutationResponse>;
  deleteActionByPk?: Maybe<Action>;
  deleteActor?: Maybe<ActorMutationResponse>;
  deleteActorByPk?: Maybe<Actor>;
  deleteActorImage?: Maybe<ActorImageMutationResponse>;
  deleteActorImageByPk?: Maybe<ActorImage>;
  deleteActorTag?: Maybe<ActorTagMutationResponse>;
  deleteActorTagByPk?: Maybe<ActorTag>;
  deleteAddress?: Maybe<AddressMutationResponse>;
  deleteAddressByPk?: Maybe<Address>;
  deleteAdminRole?: Maybe<AdminRoleMutationResponse>;
  deleteAdminRoleByPk?: Maybe<AdminRole>;
  deleteBankAccount?: Maybe<BankAccountMutationResponse>;
  deleteBankAccountByPk?: Maybe<BankAccount>;
  deleteBankInfo?: Maybe<BankInfoMutationResponse>;
  deleteBankInfoByPk?: Maybe<BankInfo>;
  deleteCampus?: Maybe<CampusMutationResponse>;
  deleteCampusByPk?: Maybe<Campus>;
  deleteCampusCluster?: Maybe<CampusClusterMutationResponse>;
  deleteCampusClusterByPk?: Maybe<CampusCluster>;
  deleteEvent?: Maybe<EventMutationResponse>;
  deleteEventApproval?: Maybe<EventApprovalMutationResponse>;
  deleteEventApprovalByPk?: Maybe<EventApproval>;
  deleteEventApprovalStep?: Maybe<EventApprovalStepMutationResponse>;
  deleteEventApprovalStepByPk?: Maybe<EventApprovalStep>;
  deleteEventApprovalValidator?: Maybe<EventApprovalValidatorMutationResponse>;
  deleteEventApprovalValidatorByPk?: Maybe<EventApprovalValidator>;
  deleteEventByPk?: Maybe<Event>;
  deleteEventFavorite?: Maybe<EventFavoriteMutationResponse>;
  deleteEventFavoriteByPk?: Maybe<EventFavorite>;
  deleteEventJoin?: Maybe<EventJoinMutationResponse>;
  deleteEventJoinByPk?: Maybe<EventJoin>;
  deleteEventOrganize?: Maybe<EventOrganizeMutationResponse>;
  deleteEventOrganizeByPk?: Maybe<EventOrganize>;
  deleteEventSupervisor?: Maybe<EventSupervisorMutationResponse>;
  deleteEventSupervisorByPk?: Maybe<EventSupervisor>;
  deleteExpense?: Maybe<ExpenseMutationResponse>;
  deleteExpenseByPk?: Maybe<Expense>;
  deleteExpenseItem?: Maybe<ExpenseItemMutationResponse>;
  deleteExpenseItemAttachments?: Maybe<ExpenseItemAttachmentsMutationResponse>;
  deleteExpenseItemAttachmentsByPk?: Maybe<ExpenseItemAttachments>;
  deleteExpenseItemByPk?: Maybe<ExpenseItem>;
  deleteFileUpload?: Maybe<FileUploadMutationResponse>;
  deleteFileUploadByPk?: Maybe<FileUpload>;
  deleteFollow?: Maybe<FollowMutationResponse>;
  deleteFollowByPk?: Maybe<Follow>;
  deleteForm?: Maybe<FormMutationResponse>;
  deleteFormByPk?: Maybe<Form>;
  deleteFormSubmission?: Maybe<FormSubmissionMutationResponse>;
  deleteFormSubmissionByPk?: Maybe<FormSubmission>;
  deleteGrant?: Maybe<GrantMutationResponse>;
  deleteGrantAllocate?: Maybe<GrantAllocateMutationResponse>;
  deleteGrantAllocateAttachments?: Maybe<GrantAllocateAttachmentsMutationResponse>;
  deleteGrantAllocateAttachmentsByPk?: Maybe<GrantAllocateAttachments>;
  deleteGrantAllocateByPk?: Maybe<GrantAllocate>;
  deleteGrantAttachments?: Maybe<GrantAttachmentsMutationResponse>;
  deleteGrantAttachmentsByPk?: Maybe<GrantAttachments>;
  deleteGrantByPk?: Maybe<Grant>;
  deleteLegalUnit?: Maybe<LegalUnitMutationResponse>;
  deleteLegalUnitByPk?: Maybe<LegalUnit>;
  deleteLocation?: Maybe<LocationMutationResponse>;
  deleteLocationByPk?: Maybe<Location>;
  deleteLocationImages?: Maybe<LocationImagesMutationResponse>;
  deleteLocationImagesByPk?: Maybe<LocationImages>;
  deleteMission?: Maybe<MissionMutationResponse>;
  deleteMissionByPk?: Maybe<Mission>;
  deleteMissionJoin?: Maybe<MissionJoinMutationResponse>;
  deleteMissionJoinByPk?: Maybe<MissionJoin>;
  deleteProject?: Maybe<ProjectMutationResponse>;
  deleteProjectByPk?: Maybe<Project>;
  deleteProjectSupervisor?: Maybe<ProjectSupervisorMutationResponse>;
  deleteProjectSupervisorByPk?: Maybe<ProjectSupervisor>;
  deleteRequiredDocument?: Maybe<RequiredDocumentMutationResponse>;
  deleteRequiredDocumentByPk?: Maybe<RequiredDocument>;
  deleteRequiredRole?: Maybe<RequiredRoleMutationResponse>;
  deleteRequiredRoleByPk?: Maybe<RequiredRole>;
  deleteSocial?: Maybe<SocialMutationResponse>;
  deleteSocialByPk?: Maybe<Social>;
  deleteTag?: Maybe<TagMutationResponse>;
  deleteTagByPk?: Maybe<Tag>;
  deleteTeam?: Maybe<TeamMutationResponse>;
  deleteTeamByPk?: Maybe<Team>;
  deleteTeamDocument?: Maybe<TeamDocumentMutationResponse>;
  deleteTeamDocumentByPk?: Maybe<TeamDocument>;
  deleteTeamHistory?: Maybe<TeamHistoryMutationResponse>;
  deleteTeamHistoryByPk?: Maybe<TeamHistory>;
  deleteTeamJoin?: Maybe<TeamJoinMutationResponse>;
  deleteTeamJoinByPk?: Maybe<TeamJoin>;
  deleteTeamMember?: Maybe<TeamMemberMutationResponse>;
  deleteTeamMemberByPk?: Maybe<TeamMember>;
  deleteTeamMemberRole?: Maybe<TeamMemberRoleMutationResponse>;
  deleteTeamMemberRoleByPk?: Maybe<TeamMemberRole>;
  deleteTeamRequiredRole?: Maybe<TeamRequiredRoleMutationResponse>;
  deleteTeamRequiredRoleByPk?: Maybe<TeamRequiredRole>;
  deleteTeamRole?: Maybe<TeamRoleMutationResponse>;
  deleteTeamRoleByPk?: Maybe<TeamRole>;
  deleteTenant?: Maybe<TenantMutationResponse>;
  deleteTenantByPk?: Maybe<Tenant>;
  deleteTenantMember?: Maybe<TenantMemberMutationResponse>;
  deleteTenantMemberByPk?: Maybe<TenantMember>;
  deleteTenantMemberRole?: Maybe<TenantMemberRoleMutationResponse>;
  deleteTenantMemberRoleByPk?: Maybe<TenantMemberRole>;
  deleteTenantRole?: Maybe<TenantRoleMutationResponse>;
  deleteTenantRoleByPk?: Maybe<TenantRole>;
  deleteTransaction?: Maybe<TransactionMutationResponse>;
  deleteTransactionAttachments?: Maybe<TransactionAttachmentsMutationResponse>;
  deleteTransactionAttachmentsByPk?: Maybe<TransactionAttachments>;
  deleteTransactionByPk?: Maybe<Transaction>;
  deleteUser?: Maybe<UserMutationResponse>;
  deleteUserByPk?: Maybe<User>;
  insertAction?: Maybe<ActionMutationResponse>;
  insertActionOne?: Maybe<Action>;
  insertActor?: Maybe<ActorMutationResponse>;
  insertActorImage?: Maybe<ActorImageMutationResponse>;
  insertActorImageOne?: Maybe<ActorImage>;
  insertActorOne?: Maybe<Actor>;
  insertActorTag?: Maybe<ActorTagMutationResponse>;
  insertActorTagOne?: Maybe<ActorTag>;
  insertAddress?: Maybe<AddressMutationResponse>;
  insertAddressOne?: Maybe<Address>;
  insertAdminRole?: Maybe<AdminRoleMutationResponse>;
  insertAdminRoleOne?: Maybe<AdminRole>;
  insertBankAccount?: Maybe<BankAccountMutationResponse>;
  insertBankAccountOne?: Maybe<BankAccount>;
  insertBankInfo?: Maybe<BankInfoMutationResponse>;
  insertBankInfoOne?: Maybe<BankInfo>;
  insertCampus?: Maybe<CampusMutationResponse>;
  insertCampusCluster?: Maybe<CampusClusterMutationResponse>;
  insertCampusClusterOne?: Maybe<CampusCluster>;
  insertCampusOne?: Maybe<Campus>;
  insertEvent?: Maybe<EventMutationResponse>;
  insertEventApproval?: Maybe<EventApprovalMutationResponse>;
  insertEventApprovalOne?: Maybe<EventApproval>;
  insertEventApprovalStep?: Maybe<EventApprovalStepMutationResponse>;
  insertEventApprovalStepOne?: Maybe<EventApprovalStep>;
  insertEventApprovalValidator?: Maybe<EventApprovalValidatorMutationResponse>;
  insertEventApprovalValidatorOne?: Maybe<EventApprovalValidator>;
  insertEventFavorite?: Maybe<EventFavoriteMutationResponse>;
  insertEventFavoriteOne?: Maybe<EventFavorite>;
  insertEventJoin?: Maybe<EventJoinMutationResponse>;
  insertEventJoinOne?: Maybe<EventJoin>;
  insertEventOne?: Maybe<Event>;
  insertEventOrganize?: Maybe<EventOrganizeMutationResponse>;
  insertEventOrganizeOne?: Maybe<EventOrganize>;
  insertEventSupervisor?: Maybe<EventSupervisorMutationResponse>;
  insertEventSupervisorOne?: Maybe<EventSupervisor>;
  insertExpense?: Maybe<ExpenseMutationResponse>;
  insertExpenseItem?: Maybe<ExpenseItemMutationResponse>;
  insertExpenseItemAttachments?: Maybe<ExpenseItemAttachmentsMutationResponse>;
  insertExpenseItemAttachmentsOne?: Maybe<ExpenseItemAttachments>;
  insertExpenseItemOne?: Maybe<ExpenseItem>;
  insertExpenseOne?: Maybe<Expense>;
  insertFileUpload?: Maybe<FileUploadMutationResponse>;
  insertFileUploadOne?: Maybe<FileUpload>;
  insertFollow?: Maybe<FollowMutationResponse>;
  insertFollowOne?: Maybe<Follow>;
  insertForm?: Maybe<FormMutationResponse>;
  insertFormOne?: Maybe<Form>;
  insertFormSubmission?: Maybe<FormSubmissionMutationResponse>;
  insertFormSubmissionOne?: Maybe<FormSubmission>;
  insertGrant?: Maybe<GrantMutationResponse>;
  insertGrantAllocate?: Maybe<GrantAllocateMutationResponse>;
  insertGrantAllocateAttachments?: Maybe<GrantAllocateAttachmentsMutationResponse>;
  insertGrantAllocateAttachmentsOne?: Maybe<GrantAllocateAttachments>;
  insertGrantAllocateOne?: Maybe<GrantAllocate>;
  insertGrantAttachments?: Maybe<GrantAttachmentsMutationResponse>;
  insertGrantAttachmentsOne?: Maybe<GrantAttachments>;
  insertGrantOne?: Maybe<Grant>;
  insertLegalUnit?: Maybe<LegalUnitMutationResponse>;
  insertLegalUnitOne?: Maybe<LegalUnit>;
  insertLocation?: Maybe<LocationMutationResponse>;
  insertLocationImages?: Maybe<LocationImagesMutationResponse>;
  insertLocationImagesOne?: Maybe<LocationImages>;
  insertLocationOne?: Maybe<Location>;
  insertMission?: Maybe<MissionMutationResponse>;
  insertMissionJoin?: Maybe<MissionJoinMutationResponse>;
  insertMissionJoinOne?: Maybe<MissionJoin>;
  insertMissionOne?: Maybe<Mission>;
  insertProject?: Maybe<ProjectMutationResponse>;
  insertProjectOne?: Maybe<Project>;
  insertProjectSupervisor?: Maybe<ProjectSupervisorMutationResponse>;
  insertProjectSupervisorOne?: Maybe<ProjectSupervisor>;
  insertRequiredDocument?: Maybe<RequiredDocumentMutationResponse>;
  insertRequiredDocumentOne?: Maybe<RequiredDocument>;
  insertRequiredRole?: Maybe<RequiredRoleMutationResponse>;
  insertRequiredRoleOne?: Maybe<RequiredRole>;
  insertSocial?: Maybe<SocialMutationResponse>;
  insertSocialOne?: Maybe<Social>;
  insertTag?: Maybe<TagMutationResponse>;
  insertTagOne?: Maybe<Tag>;
  insertTeam?: Maybe<TeamMutationResponse>;
  insertTeamDocument?: Maybe<TeamDocumentMutationResponse>;
  insertTeamDocumentOne?: Maybe<TeamDocument>;
  insertTeamHistory?: Maybe<TeamHistoryMutationResponse>;
  insertTeamHistoryOne?: Maybe<TeamHistory>;
  insertTeamJoin?: Maybe<TeamJoinMutationResponse>;
  insertTeamJoinOne?: Maybe<TeamJoin>;
  insertTeamMember?: Maybe<TeamMemberMutationResponse>;
  insertTeamMemberOne?: Maybe<TeamMember>;
  insertTeamMemberRole?: Maybe<TeamMemberRoleMutationResponse>;
  insertTeamMemberRoleOne?: Maybe<TeamMemberRole>;
  insertTeamOne?: Maybe<Team>;
  insertTeamRequiredRole?: Maybe<TeamRequiredRoleMutationResponse>;
  insertTeamRequiredRoleOne?: Maybe<TeamRequiredRole>;
  insertTeamRole?: Maybe<TeamRoleMutationResponse>;
  insertTeamRoleOne?: Maybe<TeamRole>;
  insertTenant?: Maybe<TenantMutationResponse>;
  insertTenantMember?: Maybe<TenantMemberMutationResponse>;
  insertTenantMemberOne?: Maybe<TenantMember>;
  insertTenantMemberRole?: Maybe<TenantMemberRoleMutationResponse>;
  insertTenantMemberRoleOne?: Maybe<TenantMemberRole>;
  insertTenantOne?: Maybe<Tenant>;
  insertTenantRole?: Maybe<TenantRoleMutationResponse>;
  insertTenantRoleOne?: Maybe<TenantRole>;
  insertTransaction?: Maybe<TransactionMutationResponse>;
  insertTransactionAttachments?: Maybe<TransactionAttachmentsMutationResponse>;
  insertTransactionAttachmentsOne?: Maybe<TransactionAttachments>;
  insertTransactionOne?: Maybe<Transaction>;
  insertUser?: Maybe<UserMutationResponse>;
  insertUserOne?: Maybe<User>;
  updateAction?: Maybe<ActionMutationResponse>;
  updateActionByPk?: Maybe<Action>;
  updateActionMany?: Maybe<Array<Maybe<ActionMutationResponse>>>;
  updateActor?: Maybe<ActorMutationResponse>;
  updateActorByPk?: Maybe<Actor>;
  updateActorImage?: Maybe<ActorImageMutationResponse>;
  updateActorImageByPk?: Maybe<ActorImage>;
  updateActorImageMany?: Maybe<Array<Maybe<ActorImageMutationResponse>>>;
  updateActorMany?: Maybe<Array<Maybe<ActorMutationResponse>>>;
  updateActorTag?: Maybe<ActorTagMutationResponse>;
  updateActorTagByPk?: Maybe<ActorTag>;
  updateActorTagMany?: Maybe<Array<Maybe<ActorTagMutationResponse>>>;
  updateAddress?: Maybe<AddressMutationResponse>;
  updateAddressByPk?: Maybe<Address>;
  updateAddressMany?: Maybe<Array<Maybe<AddressMutationResponse>>>;
  updateAdminRole?: Maybe<AdminRoleMutationResponse>;
  updateAdminRoleByPk?: Maybe<AdminRole>;
  updateAdminRoleMany?: Maybe<Array<Maybe<AdminRoleMutationResponse>>>;
  updateBankAccount?: Maybe<BankAccountMutationResponse>;
  updateBankAccountByPk?: Maybe<BankAccount>;
  updateBankAccountMany?: Maybe<Array<Maybe<BankAccountMutationResponse>>>;
  updateBankInfo?: Maybe<BankInfoMutationResponse>;
  updateBankInfoByPk?: Maybe<BankInfo>;
  updateBankInfoMany?: Maybe<Array<Maybe<BankInfoMutationResponse>>>;
  updateCampus?: Maybe<CampusMutationResponse>;
  updateCampusByPk?: Maybe<Campus>;
  updateCampusCluster?: Maybe<CampusClusterMutationResponse>;
  updateCampusClusterByPk?: Maybe<CampusCluster>;
  updateCampusClusterMany?: Maybe<Array<Maybe<CampusClusterMutationResponse>>>;
  updateCampusMany?: Maybe<Array<Maybe<CampusMutationResponse>>>;
  updateEvent?: Maybe<EventMutationResponse>;
  updateEventApproval?: Maybe<EventApprovalMutationResponse>;
  updateEventApprovalByPk?: Maybe<EventApproval>;
  updateEventApprovalMany?: Maybe<Array<Maybe<EventApprovalMutationResponse>>>;
  updateEventApprovalStep?: Maybe<EventApprovalStepMutationResponse>;
  updateEventApprovalStepByPk?: Maybe<EventApprovalStep>;
  updateEventApprovalStepMany?: Maybe<Array<Maybe<EventApprovalStepMutationResponse>>>;
  updateEventApprovalValidator?: Maybe<EventApprovalValidatorMutationResponse>;
  updateEventApprovalValidatorByPk?: Maybe<EventApprovalValidator>;
  updateEventApprovalValidatorMany?: Maybe<Array<Maybe<EventApprovalValidatorMutationResponse>>>;
  updateEventByPk?: Maybe<Event>;
  updateEventFavorite?: Maybe<EventFavoriteMutationResponse>;
  updateEventFavoriteByPk?: Maybe<EventFavorite>;
  updateEventFavoriteMany?: Maybe<Array<Maybe<EventFavoriteMutationResponse>>>;
  updateEventJoin?: Maybe<EventJoinMutationResponse>;
  updateEventJoinByPk?: Maybe<EventJoin>;
  updateEventJoinMany?: Maybe<Array<Maybe<EventJoinMutationResponse>>>;
  updateEventMany?: Maybe<Array<Maybe<EventMutationResponse>>>;
  updateEventOrganize?: Maybe<EventOrganizeMutationResponse>;
  updateEventOrganizeByPk?: Maybe<EventOrganize>;
  updateEventOrganizeMany?: Maybe<Array<Maybe<EventOrganizeMutationResponse>>>;
  updateEventSupervisor?: Maybe<EventSupervisorMutationResponse>;
  updateEventSupervisorByPk?: Maybe<EventSupervisor>;
  updateEventSupervisorMany?: Maybe<Array<Maybe<EventSupervisorMutationResponse>>>;
  updateExpense?: Maybe<ExpenseMutationResponse>;
  updateExpenseByPk?: Maybe<Expense>;
  updateExpenseItem?: Maybe<ExpenseItemMutationResponse>;
  updateExpenseItemAttachments?: Maybe<ExpenseItemAttachmentsMutationResponse>;
  updateExpenseItemAttachmentsByPk?: Maybe<ExpenseItemAttachments>;
  updateExpenseItemAttachmentsMany?: Maybe<Array<Maybe<ExpenseItemAttachmentsMutationResponse>>>;
  updateExpenseItemByPk?: Maybe<ExpenseItem>;
  updateExpenseItemMany?: Maybe<Array<Maybe<ExpenseItemMutationResponse>>>;
  updateExpenseMany?: Maybe<Array<Maybe<ExpenseMutationResponse>>>;
  updateFileUpload?: Maybe<FileUploadMutationResponse>;
  updateFileUploadByPk?: Maybe<FileUpload>;
  updateFileUploadMany?: Maybe<Array<Maybe<FileUploadMutationResponse>>>;
  updateFollow?: Maybe<FollowMutationResponse>;
  updateFollowByPk?: Maybe<Follow>;
  updateFollowMany?: Maybe<Array<Maybe<FollowMutationResponse>>>;
  updateForm?: Maybe<FormMutationResponse>;
  updateFormByPk?: Maybe<Form>;
  updateFormMany?: Maybe<Array<Maybe<FormMutationResponse>>>;
  updateFormSubmission?: Maybe<FormSubmissionMutationResponse>;
  updateFormSubmissionByPk?: Maybe<FormSubmission>;
  updateFormSubmissionMany?: Maybe<Array<Maybe<FormSubmissionMutationResponse>>>;
  updateGrant?: Maybe<GrantMutationResponse>;
  updateGrantAllocate?: Maybe<GrantAllocateMutationResponse>;
  updateGrantAllocateAttachments?: Maybe<GrantAllocateAttachmentsMutationResponse>;
  updateGrantAllocateAttachmentsByPk?: Maybe<GrantAllocateAttachments>;
  updateGrantAllocateAttachmentsMany?: Maybe<Array<Maybe<GrantAllocateAttachmentsMutationResponse>>>;
  updateGrantAllocateByPk?: Maybe<GrantAllocate>;
  updateGrantAllocateMany?: Maybe<Array<Maybe<GrantAllocateMutationResponse>>>;
  updateGrantAttachments?: Maybe<GrantAttachmentsMutationResponse>;
  updateGrantAttachmentsByPk?: Maybe<GrantAttachments>;
  updateGrantAttachmentsMany?: Maybe<Array<Maybe<GrantAttachmentsMutationResponse>>>;
  updateGrantByPk?: Maybe<Grant>;
  updateGrantMany?: Maybe<Array<Maybe<GrantMutationResponse>>>;
  updateLegalUnit?: Maybe<LegalUnitMutationResponse>;
  updateLegalUnitByPk?: Maybe<LegalUnit>;
  updateLegalUnitMany?: Maybe<Array<Maybe<LegalUnitMutationResponse>>>;
  updateLocation?: Maybe<LocationMutationResponse>;
  updateLocationByPk?: Maybe<Location>;
  updateLocationImages?: Maybe<LocationImagesMutationResponse>;
  updateLocationImagesByPk?: Maybe<LocationImages>;
  updateLocationImagesMany?: Maybe<Array<Maybe<LocationImagesMutationResponse>>>;
  updateLocationMany?: Maybe<Array<Maybe<LocationMutationResponse>>>;
  updateMission?: Maybe<MissionMutationResponse>;
  updateMissionByPk?: Maybe<Mission>;
  updateMissionJoin?: Maybe<MissionJoinMutationResponse>;
  updateMissionJoinByPk?: Maybe<MissionJoin>;
  updateMissionJoinMany?: Maybe<Array<Maybe<MissionJoinMutationResponse>>>;
  updateMissionMany?: Maybe<Array<Maybe<MissionMutationResponse>>>;
  updateProject?: Maybe<ProjectMutationResponse>;
  updateProjectByPk?: Maybe<Project>;
  updateProjectMany?: Maybe<Array<Maybe<ProjectMutationResponse>>>;
  updateProjectSupervisor?: Maybe<ProjectSupervisorMutationResponse>;
  updateProjectSupervisorByPk?: Maybe<ProjectSupervisor>;
  updateProjectSupervisorMany?: Maybe<Array<Maybe<ProjectSupervisorMutationResponse>>>;
  updateRequiredDocument?: Maybe<RequiredDocumentMutationResponse>;
  updateRequiredDocumentByPk?: Maybe<RequiredDocument>;
  updateRequiredDocumentMany?: Maybe<Array<Maybe<RequiredDocumentMutationResponse>>>;
  updateRequiredRole?: Maybe<RequiredRoleMutationResponse>;
  updateRequiredRoleByPk?: Maybe<RequiredRole>;
  updateRequiredRoleMany?: Maybe<Array<Maybe<RequiredRoleMutationResponse>>>;
  updateSocial?: Maybe<SocialMutationResponse>;
  updateSocialByPk?: Maybe<Social>;
  updateSocialMany?: Maybe<Array<Maybe<SocialMutationResponse>>>;
  updateTag?: Maybe<TagMutationResponse>;
  updateTagByPk?: Maybe<Tag>;
  updateTagMany?: Maybe<Array<Maybe<TagMutationResponse>>>;
  updateTeam?: Maybe<TeamMutationResponse>;
  updateTeamByPk?: Maybe<Team>;
  updateTeamDocument?: Maybe<TeamDocumentMutationResponse>;
  updateTeamDocumentByPk?: Maybe<TeamDocument>;
  updateTeamDocumentMany?: Maybe<Array<Maybe<TeamDocumentMutationResponse>>>;
  updateTeamHistory?: Maybe<TeamHistoryMutationResponse>;
  updateTeamHistoryByPk?: Maybe<TeamHistory>;
  updateTeamHistoryMany?: Maybe<Array<Maybe<TeamHistoryMutationResponse>>>;
  updateTeamJoin?: Maybe<TeamJoinMutationResponse>;
  updateTeamJoinByPk?: Maybe<TeamJoin>;
  updateTeamJoinMany?: Maybe<Array<Maybe<TeamJoinMutationResponse>>>;
  updateTeamMany?: Maybe<Array<Maybe<TeamMutationResponse>>>;
  updateTeamMember?: Maybe<TeamMemberMutationResponse>;
  updateTeamMemberByPk?: Maybe<TeamMember>;
  updateTeamMemberMany?: Maybe<Array<Maybe<TeamMemberMutationResponse>>>;
  updateTeamMemberRole?: Maybe<TeamMemberRoleMutationResponse>;
  updateTeamMemberRoleByPk?: Maybe<TeamMemberRole>;
  updateTeamMemberRoleMany?: Maybe<Array<Maybe<TeamMemberRoleMutationResponse>>>;
  updateTeamRequiredRole?: Maybe<TeamRequiredRoleMutationResponse>;
  updateTeamRequiredRoleByPk?: Maybe<TeamRequiredRole>;
  updateTeamRequiredRoleMany?: Maybe<Array<Maybe<TeamRequiredRoleMutationResponse>>>;
  updateTeamRole?: Maybe<TeamRoleMutationResponse>;
  updateTeamRoleByPk?: Maybe<TeamRole>;
  updateTeamRoleMany?: Maybe<Array<Maybe<TeamRoleMutationResponse>>>;
  updateTenant?: Maybe<TenantMutationResponse>;
  updateTenantByPk?: Maybe<Tenant>;
  updateTenantMany?: Maybe<Array<Maybe<TenantMutationResponse>>>;
  updateTenantMember?: Maybe<TenantMemberMutationResponse>;
  updateTenantMemberByPk?: Maybe<TenantMember>;
  updateTenantMemberMany?: Maybe<Array<Maybe<TenantMemberMutationResponse>>>;
  updateTenantMemberRole?: Maybe<TenantMemberRoleMutationResponse>;
  updateTenantMemberRoleByPk?: Maybe<TenantMemberRole>;
  updateTenantMemberRoleMany?: Maybe<Array<Maybe<TenantMemberRoleMutationResponse>>>;
  updateTenantRole?: Maybe<TenantRoleMutationResponse>;
  updateTenantRoleByPk?: Maybe<TenantRole>;
  updateTenantRoleMany?: Maybe<Array<Maybe<TenantRoleMutationResponse>>>;
  updateTransaction?: Maybe<TransactionMutationResponse>;
  updateTransactionAttachments?: Maybe<TransactionAttachmentsMutationResponse>;
  updateTransactionAttachmentsByPk?: Maybe<TransactionAttachments>;
  updateTransactionAttachmentsMany?: Maybe<Array<Maybe<TransactionAttachmentsMutationResponse>>>;
  updateTransactionByPk?: Maybe<Transaction>;
  updateTransactionMany?: Maybe<Array<Maybe<TransactionMutationResponse>>>;
  updateUser?: Maybe<UserMutationResponse>;
  updateUserByPk?: Maybe<User>;
  updateUserMany?: Maybe<Array<Maybe<UserMutationResponse>>>;
};

export type MutationDeleteActionArgs = {
  where: ActionBoolExp;
};

export type MutationDeleteActionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteActorArgs = {
  where: ActorBoolExp;
};

export type MutationDeleteActorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteActorImageArgs = {
  where: ActorImageBoolExp;
};

export type MutationDeleteActorImageByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteActorTagArgs = {
  where: ActorTagBoolExp;
};

export type MutationDeleteActorTagByPkArgs = {
  actorId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type MutationDeleteAddressArgs = {
  where: AddressBoolExp;
};

export type MutationDeleteAddressByPkArgs = {
  geoapifyId: Scalars['String']['input'];
};

export type MutationDeleteAdminRoleArgs = {
  where: AdminRoleBoolExp;
};

export type MutationDeleteAdminRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteBankAccountArgs = {
  where: BankAccountBoolExp;
};

export type MutationDeleteBankAccountByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteBankInfoArgs = {
  where: BankInfoBoolExp;
};

export type MutationDeleteBankInfoByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteCampusArgs = {
  where: CampusBoolExp;
};

export type MutationDeleteCampusByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteCampusClusterArgs = {
  where: CampusClusterBoolExp;
};

export type MutationDeleteCampusClusterByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventArgs = {
  where: EventBoolExp;
};

export type MutationDeleteEventApprovalArgs = {
  where: EventApprovalBoolExp;
};

export type MutationDeleteEventApprovalByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventApprovalStepArgs = {
  where: EventApprovalStepBoolExp;
};

export type MutationDeleteEventApprovalStepByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventApprovalValidatorArgs = {
  where: EventApprovalValidatorBoolExp;
};

export type MutationDeleteEventApprovalValidatorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventFavoriteArgs = {
  where: EventFavoriteBoolExp;
};

export type MutationDeleteEventFavoriteByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventJoinArgs = {
  where: EventJoinBoolExp;
};

export type MutationDeleteEventJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventOrganizeArgs = {
  where: EventOrganizeBoolExp;
};

export type MutationDeleteEventOrganizeByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventSupervisorArgs = {
  where: EventSupervisorBoolExp;
};

export type MutationDeleteEventSupervisorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteExpenseArgs = {
  where: ExpenseBoolExp;
};

export type MutationDeleteExpenseByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteExpenseItemArgs = {
  where: ExpenseItemBoolExp;
};

export type MutationDeleteExpenseItemAttachmentsArgs = {
  where: ExpenseItemAttachmentsBoolExp;
};

export type MutationDeleteExpenseItemAttachmentsByPkArgs = {
  expenseItemId: Scalars['bigint']['input'];
  fileUploadId: Scalars['bigint']['input'];
};

export type MutationDeleteExpenseItemByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteFileUploadArgs = {
  where: FileUploadBoolExp;
};

export type MutationDeleteFileUploadByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteFollowArgs = {
  where: FollowBoolExp;
};

export type MutationDeleteFollowByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteFormArgs = {
  where: FormBoolExp;
};

export type MutationDeleteFormByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteFormSubmissionArgs = {
  where: FormSubmissionBoolExp;
};

export type MutationDeleteFormSubmissionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteGrantArgs = {
  where: GrantBoolExp;
};

export type MutationDeleteGrantAllocateArgs = {
  where: GrantAllocateBoolExp;
};

export type MutationDeleteGrantAllocateAttachmentsArgs = {
  where: GrantAllocateAttachmentsBoolExp;
};

export type MutationDeleteGrantAllocateAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  grantAllocateId: Scalars['bigint']['input'];
};

export type MutationDeleteGrantAllocateByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteGrantAttachmentsArgs = {
  where: GrantAttachmentsBoolExp;
};

export type MutationDeleteGrantAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  grantId: Scalars['bigint']['input'];
};

export type MutationDeleteGrantByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteLegalUnitArgs = {
  where: LegalUnitBoolExp;
};

export type MutationDeleteLegalUnitByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteLocationArgs = {
  where: LocationBoolExp;
};

export type MutationDeleteLocationByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteLocationImagesArgs = {
  where: LocationImagesBoolExp;
};

export type MutationDeleteLocationImagesByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  locationId: Scalars['bigint']['input'];
};

export type MutationDeleteMissionArgs = {
  where: MissionBoolExp;
};

export type MutationDeleteMissionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteMissionJoinArgs = {
  where: MissionJoinBoolExp;
};

export type MutationDeleteMissionJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteProjectArgs = {
  where: ProjectBoolExp;
};

export type MutationDeleteProjectByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteProjectSupervisorArgs = {
  where: ProjectSupervisorBoolExp;
};

export type MutationDeleteProjectSupervisorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteRequiredDocumentArgs = {
  where: RequiredDocumentBoolExp;
};

export type MutationDeleteRequiredDocumentByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteRequiredRoleArgs = {
  where: RequiredRoleBoolExp;
};

export type MutationDeleteRequiredRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteSocialArgs = {
  where: SocialBoolExp;
};

export type MutationDeleteSocialByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTagArgs = {
  where: TagBoolExp;
};

export type MutationDeleteTagByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTeamArgs = {
  where: TeamBoolExp;
};

export type MutationDeleteTeamByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTeamDocumentArgs = {
  where: TeamDocumentBoolExp;
};

export type MutationDeleteTeamDocumentByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTeamHistoryArgs = {
  where: TeamHistoryBoolExp;
};

export type MutationDeleteTeamHistoryByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTeamJoinArgs = {
  where: TeamJoinBoolExp;
};

export type MutationDeleteTeamJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTeamMemberArgs = {
  where: TeamMemberBoolExp;
};

export type MutationDeleteTeamMemberByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTeamMemberRoleArgs = {
  where: TeamMemberRoleBoolExp;
};

export type MutationDeleteTeamMemberRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTeamRequiredRoleArgs = {
  where: TeamRequiredRoleBoolExp;
};

export type MutationDeleteTeamRequiredRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTeamRoleArgs = {
  where: TeamRoleBoolExp;
};

export type MutationDeleteTeamRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTenantArgs = {
  where: TenantBoolExp;
};

export type MutationDeleteTenantByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTenantMemberArgs = {
  where: TenantMemberBoolExp;
};

export type MutationDeleteTenantMemberByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTenantMemberRoleArgs = {
  where: TenantMemberRoleBoolExp;
};

export type MutationDeleteTenantMemberRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTenantRoleArgs = {
  where: TenantRoleBoolExp;
};

export type MutationDeleteTenantRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTransactionArgs = {
  where: TransactionBoolExp;
};

export type MutationDeleteTransactionAttachmentsArgs = {
  where: TransactionAttachmentsBoolExp;
};

export type MutationDeleteTransactionAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  transactionId: Scalars['bigint']['input'];
};

export type MutationDeleteTransactionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteUserArgs = {
  where: UserBoolExp;
};

export type MutationDeleteUserByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationInsertActionArgs = {
  objects: Array<ActionInsertInput>;
  onConflict?: InputMaybe<ActionOnConflict>;
};

export type MutationInsertActionOneArgs = {
  object: ActionInsertInput;
  onConflict?: InputMaybe<ActionOnConflict>;
};

export type MutationInsertActorArgs = {
  objects: Array<ActorInsertInput>;
  onConflict?: InputMaybe<ActorOnConflict>;
};

export type MutationInsertActorImageArgs = {
  objects: Array<ActorImageInsertInput>;
  onConflict?: InputMaybe<ActorImageOnConflict>;
};

export type MutationInsertActorImageOneArgs = {
  object: ActorImageInsertInput;
  onConflict?: InputMaybe<ActorImageOnConflict>;
};

export type MutationInsertActorOneArgs = {
  object: ActorInsertInput;
  onConflict?: InputMaybe<ActorOnConflict>;
};

export type MutationInsertActorTagArgs = {
  objects: Array<ActorTagInsertInput>;
  onConflict?: InputMaybe<ActorTagOnConflict>;
};

export type MutationInsertActorTagOneArgs = {
  object: ActorTagInsertInput;
  onConflict?: InputMaybe<ActorTagOnConflict>;
};

export type MutationInsertAddressArgs = {
  objects: Array<AddressInsertInput>;
  onConflict?: InputMaybe<AddressOnConflict>;
};

export type MutationInsertAddressOneArgs = {
  object: AddressInsertInput;
  onConflict?: InputMaybe<AddressOnConflict>;
};

export type MutationInsertAdminRoleArgs = {
  objects: Array<AdminRoleInsertInput>;
  onConflict?: InputMaybe<AdminRoleOnConflict>;
};

export type MutationInsertAdminRoleOneArgs = {
  object: AdminRoleInsertInput;
  onConflict?: InputMaybe<AdminRoleOnConflict>;
};

export type MutationInsertBankAccountArgs = {
  objects: Array<BankAccountInsertInput>;
  onConflict?: InputMaybe<BankAccountOnConflict>;
};

export type MutationInsertBankAccountOneArgs = {
  object: BankAccountInsertInput;
  onConflict?: InputMaybe<BankAccountOnConflict>;
};

export type MutationInsertBankInfoArgs = {
  objects: Array<BankInfoInsertInput>;
  onConflict?: InputMaybe<BankInfoOnConflict>;
};

export type MutationInsertBankInfoOneArgs = {
  object: BankInfoInsertInput;
  onConflict?: InputMaybe<BankInfoOnConflict>;
};

export type MutationInsertCampusArgs = {
  objects: Array<CampusInsertInput>;
  onConflict?: InputMaybe<CampusOnConflict>;
};

export type MutationInsertCampusClusterArgs = {
  objects: Array<CampusClusterInsertInput>;
  onConflict?: InputMaybe<CampusClusterOnConflict>;
};

export type MutationInsertCampusClusterOneArgs = {
  object: CampusClusterInsertInput;
  onConflict?: InputMaybe<CampusClusterOnConflict>;
};

export type MutationInsertCampusOneArgs = {
  object: CampusInsertInput;
  onConflict?: InputMaybe<CampusOnConflict>;
};

export type MutationInsertEventArgs = {
  objects: Array<EventInsertInput>;
  onConflict?: InputMaybe<EventOnConflict>;
};

export type MutationInsertEventApprovalArgs = {
  objects: Array<EventApprovalInsertInput>;
  onConflict?: InputMaybe<EventApprovalOnConflict>;
};

export type MutationInsertEventApprovalOneArgs = {
  object: EventApprovalInsertInput;
  onConflict?: InputMaybe<EventApprovalOnConflict>;
};

export type MutationInsertEventApprovalStepArgs = {
  objects: Array<EventApprovalStepInsertInput>;
  onConflict?: InputMaybe<EventApprovalStepOnConflict>;
};

export type MutationInsertEventApprovalStepOneArgs = {
  object: EventApprovalStepInsertInput;
  onConflict?: InputMaybe<EventApprovalStepOnConflict>;
};

export type MutationInsertEventApprovalValidatorArgs = {
  objects: Array<EventApprovalValidatorInsertInput>;
  onConflict?: InputMaybe<EventApprovalValidatorOnConflict>;
};

export type MutationInsertEventApprovalValidatorOneArgs = {
  object: EventApprovalValidatorInsertInput;
  onConflict?: InputMaybe<EventApprovalValidatorOnConflict>;
};

export type MutationInsertEventFavoriteArgs = {
  objects: Array<EventFavoriteInsertInput>;
  onConflict?: InputMaybe<EventFavoriteOnConflict>;
};

export type MutationInsertEventFavoriteOneArgs = {
  object: EventFavoriteInsertInput;
  onConflict?: InputMaybe<EventFavoriteOnConflict>;
};

export type MutationInsertEventJoinArgs = {
  objects: Array<EventJoinInsertInput>;
  onConflict?: InputMaybe<EventJoinOnConflict>;
};

export type MutationInsertEventJoinOneArgs = {
  object: EventJoinInsertInput;
  onConflict?: InputMaybe<EventJoinOnConflict>;
};

export type MutationInsertEventOneArgs = {
  object: EventInsertInput;
  onConflict?: InputMaybe<EventOnConflict>;
};

export type MutationInsertEventOrganizeArgs = {
  objects: Array<EventOrganizeInsertInput>;
  onConflict?: InputMaybe<EventOrganizeOnConflict>;
};

export type MutationInsertEventOrganizeOneArgs = {
  object: EventOrganizeInsertInput;
  onConflict?: InputMaybe<EventOrganizeOnConflict>;
};

export type MutationInsertEventSupervisorArgs = {
  objects: Array<EventSupervisorInsertInput>;
  onConflict?: InputMaybe<EventSupervisorOnConflict>;
};

export type MutationInsertEventSupervisorOneArgs = {
  object: EventSupervisorInsertInput;
  onConflict?: InputMaybe<EventSupervisorOnConflict>;
};

export type MutationInsertExpenseArgs = {
  objects: Array<ExpenseInsertInput>;
  onConflict?: InputMaybe<ExpenseOnConflict>;
};

export type MutationInsertExpenseItemArgs = {
  objects: Array<ExpenseItemInsertInput>;
  onConflict?: InputMaybe<ExpenseItemOnConflict>;
};

export type MutationInsertExpenseItemAttachmentsArgs = {
  objects: Array<ExpenseItemAttachmentsInsertInput>;
  onConflict?: InputMaybe<ExpenseItemAttachmentsOnConflict>;
};

export type MutationInsertExpenseItemAttachmentsOneArgs = {
  object: ExpenseItemAttachmentsInsertInput;
  onConflict?: InputMaybe<ExpenseItemAttachmentsOnConflict>;
};

export type MutationInsertExpenseItemOneArgs = {
  object: ExpenseItemInsertInput;
  onConflict?: InputMaybe<ExpenseItemOnConflict>;
};

export type MutationInsertExpenseOneArgs = {
  object: ExpenseInsertInput;
  onConflict?: InputMaybe<ExpenseOnConflict>;
};

export type MutationInsertFileUploadArgs = {
  objects: Array<FileUploadInsertInput>;
  onConflict?: InputMaybe<FileUploadOnConflict>;
};

export type MutationInsertFileUploadOneArgs = {
  object: FileUploadInsertInput;
  onConflict?: InputMaybe<FileUploadOnConflict>;
};

export type MutationInsertFollowArgs = {
  objects: Array<FollowInsertInput>;
  onConflict?: InputMaybe<FollowOnConflict>;
};

export type MutationInsertFollowOneArgs = {
  object: FollowInsertInput;
  onConflict?: InputMaybe<FollowOnConflict>;
};

export type MutationInsertFormArgs = {
  objects: Array<FormInsertInput>;
  onConflict?: InputMaybe<FormOnConflict>;
};

export type MutationInsertFormOneArgs = {
  object: FormInsertInput;
  onConflict?: InputMaybe<FormOnConflict>;
};

export type MutationInsertFormSubmissionArgs = {
  objects: Array<FormSubmissionInsertInput>;
  onConflict?: InputMaybe<FormSubmissionOnConflict>;
};

export type MutationInsertFormSubmissionOneArgs = {
  object: FormSubmissionInsertInput;
  onConflict?: InputMaybe<FormSubmissionOnConflict>;
};

export type MutationInsertGrantArgs = {
  objects: Array<GrantInsertInput>;
  onConflict?: InputMaybe<GrantOnConflict>;
};

export type MutationInsertGrantAllocateArgs = {
  objects: Array<GrantAllocateInsertInput>;
  onConflict?: InputMaybe<GrantAllocateOnConflict>;
};

export type MutationInsertGrantAllocateAttachmentsArgs = {
  objects: Array<GrantAllocateAttachmentsInsertInput>;
  onConflict?: InputMaybe<GrantAllocateAttachmentsOnConflict>;
};

export type MutationInsertGrantAllocateAttachmentsOneArgs = {
  object: GrantAllocateAttachmentsInsertInput;
  onConflict?: InputMaybe<GrantAllocateAttachmentsOnConflict>;
};

export type MutationInsertGrantAllocateOneArgs = {
  object: GrantAllocateInsertInput;
  onConflict?: InputMaybe<GrantAllocateOnConflict>;
};

export type MutationInsertGrantAttachmentsArgs = {
  objects: Array<GrantAttachmentsInsertInput>;
  onConflict?: InputMaybe<GrantAttachmentsOnConflict>;
};

export type MutationInsertGrantAttachmentsOneArgs = {
  object: GrantAttachmentsInsertInput;
  onConflict?: InputMaybe<GrantAttachmentsOnConflict>;
};

export type MutationInsertGrantOneArgs = {
  object: GrantInsertInput;
  onConflict?: InputMaybe<GrantOnConflict>;
};

export type MutationInsertLegalUnitArgs = {
  objects: Array<LegalUnitInsertInput>;
  onConflict?: InputMaybe<LegalUnitOnConflict>;
};

export type MutationInsertLegalUnitOneArgs = {
  object: LegalUnitInsertInput;
  onConflict?: InputMaybe<LegalUnitOnConflict>;
};

export type MutationInsertLocationArgs = {
  objects: Array<LocationInsertInput>;
  onConflict?: InputMaybe<LocationOnConflict>;
};

export type MutationInsertLocationImagesArgs = {
  objects: Array<LocationImagesInsertInput>;
  onConflict?: InputMaybe<LocationImagesOnConflict>;
};

export type MutationInsertLocationImagesOneArgs = {
  object: LocationImagesInsertInput;
  onConflict?: InputMaybe<LocationImagesOnConflict>;
};

export type MutationInsertLocationOneArgs = {
  object: LocationInsertInput;
  onConflict?: InputMaybe<LocationOnConflict>;
};

export type MutationInsertMissionArgs = {
  objects: Array<MissionInsertInput>;
  onConflict?: InputMaybe<MissionOnConflict>;
};

export type MutationInsertMissionJoinArgs = {
  objects: Array<MissionJoinInsertInput>;
  onConflict?: InputMaybe<MissionJoinOnConflict>;
};

export type MutationInsertMissionJoinOneArgs = {
  object: MissionJoinInsertInput;
  onConflict?: InputMaybe<MissionJoinOnConflict>;
};

export type MutationInsertMissionOneArgs = {
  object: MissionInsertInput;
  onConflict?: InputMaybe<MissionOnConflict>;
};

export type MutationInsertProjectArgs = {
  objects: Array<ProjectInsertInput>;
  onConflict?: InputMaybe<ProjectOnConflict>;
};

export type MutationInsertProjectOneArgs = {
  object: ProjectInsertInput;
  onConflict?: InputMaybe<ProjectOnConflict>;
};

export type MutationInsertProjectSupervisorArgs = {
  objects: Array<ProjectSupervisorInsertInput>;
  onConflict?: InputMaybe<ProjectSupervisorOnConflict>;
};

export type MutationInsertProjectSupervisorOneArgs = {
  object: ProjectSupervisorInsertInput;
  onConflict?: InputMaybe<ProjectSupervisorOnConflict>;
};

export type MutationInsertRequiredDocumentArgs = {
  objects: Array<RequiredDocumentInsertInput>;
  onConflict?: InputMaybe<RequiredDocumentOnConflict>;
};

export type MutationInsertRequiredDocumentOneArgs = {
  object: RequiredDocumentInsertInput;
  onConflict?: InputMaybe<RequiredDocumentOnConflict>;
};

export type MutationInsertRequiredRoleArgs = {
  objects: Array<RequiredRoleInsertInput>;
  onConflict?: InputMaybe<RequiredRoleOnConflict>;
};

export type MutationInsertRequiredRoleOneArgs = {
  object: RequiredRoleInsertInput;
  onConflict?: InputMaybe<RequiredRoleOnConflict>;
};

export type MutationInsertSocialArgs = {
  objects: Array<SocialInsertInput>;
  onConflict?: InputMaybe<SocialOnConflict>;
};

export type MutationInsertSocialOneArgs = {
  object: SocialInsertInput;
  onConflict?: InputMaybe<SocialOnConflict>;
};

export type MutationInsertTagArgs = {
  objects: Array<TagInsertInput>;
  onConflict?: InputMaybe<TagOnConflict>;
};

export type MutationInsertTagOneArgs = {
  object: TagInsertInput;
  onConflict?: InputMaybe<TagOnConflict>;
};

export type MutationInsertTeamArgs = {
  objects: Array<TeamInsertInput>;
  onConflict?: InputMaybe<TeamOnConflict>;
};

export type MutationInsertTeamDocumentArgs = {
  objects: Array<TeamDocumentInsertInput>;
  onConflict?: InputMaybe<TeamDocumentOnConflict>;
};

export type MutationInsertTeamDocumentOneArgs = {
  object: TeamDocumentInsertInput;
  onConflict?: InputMaybe<TeamDocumentOnConflict>;
};

export type MutationInsertTeamHistoryArgs = {
  objects: Array<TeamHistoryInsertInput>;
  onConflict?: InputMaybe<TeamHistoryOnConflict>;
};

export type MutationInsertTeamHistoryOneArgs = {
  object: TeamHistoryInsertInput;
  onConflict?: InputMaybe<TeamHistoryOnConflict>;
};

export type MutationInsertTeamJoinArgs = {
  objects: Array<TeamJoinInsertInput>;
  onConflict?: InputMaybe<TeamJoinOnConflict>;
};

export type MutationInsertTeamJoinOneArgs = {
  object: TeamJoinInsertInput;
  onConflict?: InputMaybe<TeamJoinOnConflict>;
};

export type MutationInsertTeamMemberArgs = {
  objects: Array<TeamMemberInsertInput>;
  onConflict?: InputMaybe<TeamMemberOnConflict>;
};

export type MutationInsertTeamMemberOneArgs = {
  object: TeamMemberInsertInput;
  onConflict?: InputMaybe<TeamMemberOnConflict>;
};

export type MutationInsertTeamMemberRoleArgs = {
  objects: Array<TeamMemberRoleInsertInput>;
  onConflict?: InputMaybe<TeamMemberRoleOnConflict>;
};

export type MutationInsertTeamMemberRoleOneArgs = {
  object: TeamMemberRoleInsertInput;
  onConflict?: InputMaybe<TeamMemberRoleOnConflict>;
};

export type MutationInsertTeamOneArgs = {
  object: TeamInsertInput;
  onConflict?: InputMaybe<TeamOnConflict>;
};

export type MutationInsertTeamRequiredRoleArgs = {
  objects: Array<TeamRequiredRoleInsertInput>;
  onConflict?: InputMaybe<TeamRequiredRoleOnConflict>;
};

export type MutationInsertTeamRequiredRoleOneArgs = {
  object: TeamRequiredRoleInsertInput;
  onConflict?: InputMaybe<TeamRequiredRoleOnConflict>;
};

export type MutationInsertTeamRoleArgs = {
  objects: Array<TeamRoleInsertInput>;
  onConflict?: InputMaybe<TeamRoleOnConflict>;
};

export type MutationInsertTeamRoleOneArgs = {
  object: TeamRoleInsertInput;
  onConflict?: InputMaybe<TeamRoleOnConflict>;
};

export type MutationInsertTenantArgs = {
  objects: Array<TenantInsertInput>;
  onConflict?: InputMaybe<TenantOnConflict>;
};

export type MutationInsertTenantMemberArgs = {
  objects: Array<TenantMemberInsertInput>;
  onConflict?: InputMaybe<TenantMemberOnConflict>;
};

export type MutationInsertTenantMemberOneArgs = {
  object: TenantMemberInsertInput;
  onConflict?: InputMaybe<TenantMemberOnConflict>;
};

export type MutationInsertTenantMemberRoleArgs = {
  objects: Array<TenantMemberRoleInsertInput>;
  onConflict?: InputMaybe<TenantMemberRoleOnConflict>;
};

export type MutationInsertTenantMemberRoleOneArgs = {
  object: TenantMemberRoleInsertInput;
  onConflict?: InputMaybe<TenantMemberRoleOnConflict>;
};

export type MutationInsertTenantOneArgs = {
  object: TenantInsertInput;
  onConflict?: InputMaybe<TenantOnConflict>;
};

export type MutationInsertTenantRoleArgs = {
  objects: Array<TenantRoleInsertInput>;
  onConflict?: InputMaybe<TenantRoleOnConflict>;
};

export type MutationInsertTenantRoleOneArgs = {
  object: TenantRoleInsertInput;
  onConflict?: InputMaybe<TenantRoleOnConflict>;
};

export type MutationInsertTransactionArgs = {
  objects: Array<TransactionInsertInput>;
  onConflict?: InputMaybe<TransactionOnConflict>;
};

export type MutationInsertTransactionAttachmentsArgs = {
  objects: Array<TransactionAttachmentsInsertInput>;
  onConflict?: InputMaybe<TransactionAttachmentsOnConflict>;
};

export type MutationInsertTransactionAttachmentsOneArgs = {
  object: TransactionAttachmentsInsertInput;
  onConflict?: InputMaybe<TransactionAttachmentsOnConflict>;
};

export type MutationInsertTransactionOneArgs = {
  object: TransactionInsertInput;
  onConflict?: InputMaybe<TransactionOnConflict>;
};

export type MutationInsertUserArgs = {
  objects: Array<UserInsertInput>;
  onConflict?: InputMaybe<UserOnConflict>;
};

export type MutationInsertUserOneArgs = {
  object: UserInsertInput;
  onConflict?: InputMaybe<UserOnConflict>;
};

export type MutationUpdateActionArgs = {
  _inc?: InputMaybe<ActionIncInput>;
  _set?: InputMaybe<ActionSetInput>;
  where: ActionBoolExp;
};

export type MutationUpdateActionByPkArgs = {
  _inc?: InputMaybe<ActionIncInput>;
  _set?: InputMaybe<ActionSetInput>;
  pkColumns: ActionPkColumnsInput;
};

export type MutationUpdateActionManyArgs = {
  updates: Array<ActionUpdates>;
};

export type MutationUpdateActorArgs = {
  _inc?: InputMaybe<ActorIncInput>;
  _set?: InputMaybe<ActorSetInput>;
  where: ActorBoolExp;
};

export type MutationUpdateActorByPkArgs = {
  _inc?: InputMaybe<ActorIncInput>;
  _set?: InputMaybe<ActorSetInput>;
  pkColumns: ActorPkColumnsInput;
};

export type MutationUpdateActorImageArgs = {
  _inc?: InputMaybe<ActorImageIncInput>;
  _set?: InputMaybe<ActorImageSetInput>;
  where: ActorImageBoolExp;
};

export type MutationUpdateActorImageByPkArgs = {
  _inc?: InputMaybe<ActorImageIncInput>;
  _set?: InputMaybe<ActorImageSetInput>;
  pkColumns: ActorImagePkColumnsInput;
};

export type MutationUpdateActorImageManyArgs = {
  updates: Array<ActorImageUpdates>;
};

export type MutationUpdateActorManyArgs = {
  updates: Array<ActorUpdates>;
};

export type MutationUpdateActorTagArgs = {
  _inc?: InputMaybe<ActorTagIncInput>;
  _set?: InputMaybe<ActorTagSetInput>;
  where: ActorTagBoolExp;
};

export type MutationUpdateActorTagByPkArgs = {
  _inc?: InputMaybe<ActorTagIncInput>;
  _set?: InputMaybe<ActorTagSetInput>;
  pkColumns: ActorTagPkColumnsInput;
};

export type MutationUpdateActorTagManyArgs = {
  updates: Array<ActorTagUpdates>;
};

export type MutationUpdateAddressArgs = {
  _inc?: InputMaybe<AddressIncInput>;
  _set?: InputMaybe<AddressSetInput>;
  where: AddressBoolExp;
};

export type MutationUpdateAddressByPkArgs = {
  _inc?: InputMaybe<AddressIncInput>;
  _set?: InputMaybe<AddressSetInput>;
  pkColumns: AddressPkColumnsInput;
};

export type MutationUpdateAddressManyArgs = {
  updates: Array<AddressUpdates>;
};

export type MutationUpdateAdminRoleArgs = {
  _inc?: InputMaybe<AdminRoleIncInput>;
  _set?: InputMaybe<AdminRoleSetInput>;
  where: AdminRoleBoolExp;
};

export type MutationUpdateAdminRoleByPkArgs = {
  _inc?: InputMaybe<AdminRoleIncInput>;
  _set?: InputMaybe<AdminRoleSetInput>;
  pkColumns: AdminRolePkColumnsInput;
};

export type MutationUpdateAdminRoleManyArgs = {
  updates: Array<AdminRoleUpdates>;
};

export type MutationUpdateBankAccountArgs = {
  _inc?: InputMaybe<BankAccountIncInput>;
  _set?: InputMaybe<BankAccountSetInput>;
  where: BankAccountBoolExp;
};

export type MutationUpdateBankAccountByPkArgs = {
  _inc?: InputMaybe<BankAccountIncInput>;
  _set?: InputMaybe<BankAccountSetInput>;
  pkColumns: BankAccountPkColumnsInput;
};

export type MutationUpdateBankAccountManyArgs = {
  updates: Array<BankAccountUpdates>;
};

export type MutationUpdateBankInfoArgs = {
  _inc?: InputMaybe<BankInfoIncInput>;
  _set?: InputMaybe<BankInfoSetInput>;
  where: BankInfoBoolExp;
};

export type MutationUpdateBankInfoByPkArgs = {
  _inc?: InputMaybe<BankInfoIncInput>;
  _set?: InputMaybe<BankInfoSetInput>;
  pkColumns: BankInfoPkColumnsInput;
};

export type MutationUpdateBankInfoManyArgs = {
  updates: Array<BankInfoUpdates>;
};

export type MutationUpdateCampusArgs = {
  _inc?: InputMaybe<CampusIncInput>;
  _set?: InputMaybe<CampusSetInput>;
  where: CampusBoolExp;
};

export type MutationUpdateCampusByPkArgs = {
  _inc?: InputMaybe<CampusIncInput>;
  _set?: InputMaybe<CampusSetInput>;
  pkColumns: CampusPkColumnsInput;
};

export type MutationUpdateCampusClusterArgs = {
  _inc?: InputMaybe<CampusClusterIncInput>;
  _set?: InputMaybe<CampusClusterSetInput>;
  where: CampusClusterBoolExp;
};

export type MutationUpdateCampusClusterByPkArgs = {
  _inc?: InputMaybe<CampusClusterIncInput>;
  _set?: InputMaybe<CampusClusterSetInput>;
  pkColumns: CampusClusterPkColumnsInput;
};

export type MutationUpdateCampusClusterManyArgs = {
  updates: Array<CampusClusterUpdates>;
};

export type MutationUpdateCampusManyArgs = {
  updates: Array<CampusUpdates>;
};

export type MutationUpdateEventArgs = {
  _append?: InputMaybe<EventAppendInput>;
  _deleteAtPath?: InputMaybe<EventDeleteAtPathInput>;
  _deleteElem?: InputMaybe<EventDeleteElemInput>;
  _deleteKey?: InputMaybe<EventDeleteKeyInput>;
  _inc?: InputMaybe<EventIncInput>;
  _prepend?: InputMaybe<EventPrependInput>;
  _set?: InputMaybe<EventSetInput>;
  where: EventBoolExp;
};

export type MutationUpdateEventApprovalArgs = {
  _inc?: InputMaybe<EventApprovalIncInput>;
  _set?: InputMaybe<EventApprovalSetInput>;
  where: EventApprovalBoolExp;
};

export type MutationUpdateEventApprovalByPkArgs = {
  _inc?: InputMaybe<EventApprovalIncInput>;
  _set?: InputMaybe<EventApprovalSetInput>;
  pkColumns: EventApprovalPkColumnsInput;
};

export type MutationUpdateEventApprovalManyArgs = {
  updates: Array<EventApprovalUpdates>;
};

export type MutationUpdateEventApprovalStepArgs = {
  _inc?: InputMaybe<EventApprovalStepIncInput>;
  _set?: InputMaybe<EventApprovalStepSetInput>;
  where: EventApprovalStepBoolExp;
};

export type MutationUpdateEventApprovalStepByPkArgs = {
  _inc?: InputMaybe<EventApprovalStepIncInput>;
  _set?: InputMaybe<EventApprovalStepSetInput>;
  pkColumns: EventApprovalStepPkColumnsInput;
};

export type MutationUpdateEventApprovalStepManyArgs = {
  updates: Array<EventApprovalStepUpdates>;
};

export type MutationUpdateEventApprovalValidatorArgs = {
  _inc?: InputMaybe<EventApprovalValidatorIncInput>;
  _set?: InputMaybe<EventApprovalValidatorSetInput>;
  where: EventApprovalValidatorBoolExp;
};

export type MutationUpdateEventApprovalValidatorByPkArgs = {
  _inc?: InputMaybe<EventApprovalValidatorIncInput>;
  _set?: InputMaybe<EventApprovalValidatorSetInput>;
  pkColumns: EventApprovalValidatorPkColumnsInput;
};

export type MutationUpdateEventApprovalValidatorManyArgs = {
  updates: Array<EventApprovalValidatorUpdates>;
};

export type MutationUpdateEventByPkArgs = {
  _append?: InputMaybe<EventAppendInput>;
  _deleteAtPath?: InputMaybe<EventDeleteAtPathInput>;
  _deleteElem?: InputMaybe<EventDeleteElemInput>;
  _deleteKey?: InputMaybe<EventDeleteKeyInput>;
  _inc?: InputMaybe<EventIncInput>;
  _prepend?: InputMaybe<EventPrependInput>;
  _set?: InputMaybe<EventSetInput>;
  pkColumns: EventPkColumnsInput;
};

export type MutationUpdateEventFavoriteArgs = {
  _inc?: InputMaybe<EventFavoriteIncInput>;
  _set?: InputMaybe<EventFavoriteSetInput>;
  where: EventFavoriteBoolExp;
};

export type MutationUpdateEventFavoriteByPkArgs = {
  _inc?: InputMaybe<EventFavoriteIncInput>;
  _set?: InputMaybe<EventFavoriteSetInput>;
  pkColumns: EventFavoritePkColumnsInput;
};

export type MutationUpdateEventFavoriteManyArgs = {
  updates: Array<EventFavoriteUpdates>;
};

export type MutationUpdateEventJoinArgs = {
  _inc?: InputMaybe<EventJoinIncInput>;
  _set?: InputMaybe<EventJoinSetInput>;
  where: EventJoinBoolExp;
};

export type MutationUpdateEventJoinByPkArgs = {
  _inc?: InputMaybe<EventJoinIncInput>;
  _set?: InputMaybe<EventJoinSetInput>;
  pkColumns: EventJoinPkColumnsInput;
};

export type MutationUpdateEventJoinManyArgs = {
  updates: Array<EventJoinUpdates>;
};

export type MutationUpdateEventManyArgs = {
  updates: Array<EventUpdates>;
};

export type MutationUpdateEventOrganizeArgs = {
  _inc?: InputMaybe<EventOrganizeIncInput>;
  _set?: InputMaybe<EventOrganizeSetInput>;
  where: EventOrganizeBoolExp;
};

export type MutationUpdateEventOrganizeByPkArgs = {
  _inc?: InputMaybe<EventOrganizeIncInput>;
  _set?: InputMaybe<EventOrganizeSetInput>;
  pkColumns: EventOrganizePkColumnsInput;
};

export type MutationUpdateEventOrganizeManyArgs = {
  updates: Array<EventOrganizeUpdates>;
};

export type MutationUpdateEventSupervisorArgs = {
  _inc?: InputMaybe<EventSupervisorIncInput>;
  _set?: InputMaybe<EventSupervisorSetInput>;
  where: EventSupervisorBoolExp;
};

export type MutationUpdateEventSupervisorByPkArgs = {
  _inc?: InputMaybe<EventSupervisorIncInput>;
  _set?: InputMaybe<EventSupervisorSetInput>;
  pkColumns: EventSupervisorPkColumnsInput;
};

export type MutationUpdateEventSupervisorManyArgs = {
  updates: Array<EventSupervisorUpdates>;
};

export type MutationUpdateExpenseArgs = {
  _inc?: InputMaybe<ExpenseIncInput>;
  _set?: InputMaybe<ExpenseSetInput>;
  where: ExpenseBoolExp;
};

export type MutationUpdateExpenseByPkArgs = {
  _inc?: InputMaybe<ExpenseIncInput>;
  _set?: InputMaybe<ExpenseSetInput>;
  pkColumns: ExpensePkColumnsInput;
};

export type MutationUpdateExpenseItemArgs = {
  _inc?: InputMaybe<ExpenseItemIncInput>;
  _set?: InputMaybe<ExpenseItemSetInput>;
  where: ExpenseItemBoolExp;
};

export type MutationUpdateExpenseItemAttachmentsArgs = {
  _inc?: InputMaybe<ExpenseItemAttachmentsIncInput>;
  _set?: InputMaybe<ExpenseItemAttachmentsSetInput>;
  where: ExpenseItemAttachmentsBoolExp;
};

export type MutationUpdateExpenseItemAttachmentsByPkArgs = {
  _inc?: InputMaybe<ExpenseItemAttachmentsIncInput>;
  _set?: InputMaybe<ExpenseItemAttachmentsSetInput>;
  pkColumns: ExpenseItemAttachmentsPkColumnsInput;
};

export type MutationUpdateExpenseItemAttachmentsManyArgs = {
  updates: Array<ExpenseItemAttachmentsUpdates>;
};

export type MutationUpdateExpenseItemByPkArgs = {
  _inc?: InputMaybe<ExpenseItemIncInput>;
  _set?: InputMaybe<ExpenseItemSetInput>;
  pkColumns: ExpenseItemPkColumnsInput;
};

export type MutationUpdateExpenseItemManyArgs = {
  updates: Array<ExpenseItemUpdates>;
};

export type MutationUpdateExpenseManyArgs = {
  updates: Array<ExpenseUpdates>;
};

export type MutationUpdateFileUploadArgs = {
  _inc?: InputMaybe<FileUploadIncInput>;
  _set?: InputMaybe<FileUploadSetInput>;
  where: FileUploadBoolExp;
};

export type MutationUpdateFileUploadByPkArgs = {
  _inc?: InputMaybe<FileUploadIncInput>;
  _set?: InputMaybe<FileUploadSetInput>;
  pkColumns: FileUploadPkColumnsInput;
};

export type MutationUpdateFileUploadManyArgs = {
  updates: Array<FileUploadUpdates>;
};

export type MutationUpdateFollowArgs = {
  _inc?: InputMaybe<FollowIncInput>;
  _set?: InputMaybe<FollowSetInput>;
  where: FollowBoolExp;
};

export type MutationUpdateFollowByPkArgs = {
  _inc?: InputMaybe<FollowIncInput>;
  _set?: InputMaybe<FollowSetInput>;
  pkColumns: FollowPkColumnsInput;
};

export type MutationUpdateFollowManyArgs = {
  updates: Array<FollowUpdates>;
};

export type MutationUpdateFormArgs = {
  _append?: InputMaybe<FormAppendInput>;
  _deleteAtPath?: InputMaybe<FormDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FormDeleteElemInput>;
  _deleteKey?: InputMaybe<FormDeleteKeyInput>;
  _inc?: InputMaybe<FormIncInput>;
  _prepend?: InputMaybe<FormPrependInput>;
  _set?: InputMaybe<FormSetInput>;
  where: FormBoolExp;
};

export type MutationUpdateFormByPkArgs = {
  _append?: InputMaybe<FormAppendInput>;
  _deleteAtPath?: InputMaybe<FormDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FormDeleteElemInput>;
  _deleteKey?: InputMaybe<FormDeleteKeyInput>;
  _inc?: InputMaybe<FormIncInput>;
  _prepend?: InputMaybe<FormPrependInput>;
  _set?: InputMaybe<FormSetInput>;
  pkColumns: FormPkColumnsInput;
};

export type MutationUpdateFormManyArgs = {
  updates: Array<FormUpdates>;
};

export type MutationUpdateFormSubmissionArgs = {
  _append?: InputMaybe<FormSubmissionAppendInput>;
  _deleteAtPath?: InputMaybe<FormSubmissionDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FormSubmissionDeleteElemInput>;
  _deleteKey?: InputMaybe<FormSubmissionDeleteKeyInput>;
  _inc?: InputMaybe<FormSubmissionIncInput>;
  _prepend?: InputMaybe<FormSubmissionPrependInput>;
  _set?: InputMaybe<FormSubmissionSetInput>;
  where: FormSubmissionBoolExp;
};

export type MutationUpdateFormSubmissionByPkArgs = {
  _append?: InputMaybe<FormSubmissionAppendInput>;
  _deleteAtPath?: InputMaybe<FormSubmissionDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FormSubmissionDeleteElemInput>;
  _deleteKey?: InputMaybe<FormSubmissionDeleteKeyInput>;
  _inc?: InputMaybe<FormSubmissionIncInput>;
  _prepend?: InputMaybe<FormSubmissionPrependInput>;
  _set?: InputMaybe<FormSubmissionSetInput>;
  pkColumns: FormSubmissionPkColumnsInput;
};

export type MutationUpdateFormSubmissionManyArgs = {
  updates: Array<FormSubmissionUpdates>;
};

export type MutationUpdateGrantArgs = {
  _inc?: InputMaybe<GrantIncInput>;
  _set?: InputMaybe<GrantSetInput>;
  where: GrantBoolExp;
};

export type MutationUpdateGrantAllocateArgs = {
  _inc?: InputMaybe<GrantAllocateIncInput>;
  _set?: InputMaybe<GrantAllocateSetInput>;
  where: GrantAllocateBoolExp;
};

export type MutationUpdateGrantAllocateAttachmentsArgs = {
  _inc?: InputMaybe<GrantAllocateAttachmentsIncInput>;
  _set?: InputMaybe<GrantAllocateAttachmentsSetInput>;
  where: GrantAllocateAttachmentsBoolExp;
};

export type MutationUpdateGrantAllocateAttachmentsByPkArgs = {
  _inc?: InputMaybe<GrantAllocateAttachmentsIncInput>;
  _set?: InputMaybe<GrantAllocateAttachmentsSetInput>;
  pkColumns: GrantAllocateAttachmentsPkColumnsInput;
};

export type MutationUpdateGrantAllocateAttachmentsManyArgs = {
  updates: Array<GrantAllocateAttachmentsUpdates>;
};

export type MutationUpdateGrantAllocateByPkArgs = {
  _inc?: InputMaybe<GrantAllocateIncInput>;
  _set?: InputMaybe<GrantAllocateSetInput>;
  pkColumns: GrantAllocatePkColumnsInput;
};

export type MutationUpdateGrantAllocateManyArgs = {
  updates: Array<GrantAllocateUpdates>;
};

export type MutationUpdateGrantAttachmentsArgs = {
  _inc?: InputMaybe<GrantAttachmentsIncInput>;
  _set?: InputMaybe<GrantAttachmentsSetInput>;
  where: GrantAttachmentsBoolExp;
};

export type MutationUpdateGrantAttachmentsByPkArgs = {
  _inc?: InputMaybe<GrantAttachmentsIncInput>;
  _set?: InputMaybe<GrantAttachmentsSetInput>;
  pkColumns: GrantAttachmentsPkColumnsInput;
};

export type MutationUpdateGrantAttachmentsManyArgs = {
  updates: Array<GrantAttachmentsUpdates>;
};

export type MutationUpdateGrantByPkArgs = {
  _inc?: InputMaybe<GrantIncInput>;
  _set?: InputMaybe<GrantSetInput>;
  pkColumns: GrantPkColumnsInput;
};

export type MutationUpdateGrantManyArgs = {
  updates: Array<GrantUpdates>;
};

export type MutationUpdateLegalUnitArgs = {
  _inc?: InputMaybe<LegalUnitIncInput>;
  _set?: InputMaybe<LegalUnitSetInput>;
  where: LegalUnitBoolExp;
};

export type MutationUpdateLegalUnitByPkArgs = {
  _inc?: InputMaybe<LegalUnitIncInput>;
  _set?: InputMaybe<LegalUnitSetInput>;
  pkColumns: LegalUnitPkColumnsInput;
};

export type MutationUpdateLegalUnitManyArgs = {
  updates: Array<LegalUnitUpdates>;
};

export type MutationUpdateLocationArgs = {
  _inc?: InputMaybe<LocationIncInput>;
  _set?: InputMaybe<LocationSetInput>;
  where: LocationBoolExp;
};

export type MutationUpdateLocationByPkArgs = {
  _inc?: InputMaybe<LocationIncInput>;
  _set?: InputMaybe<LocationSetInput>;
  pkColumns: LocationPkColumnsInput;
};

export type MutationUpdateLocationImagesArgs = {
  _inc?: InputMaybe<LocationImagesIncInput>;
  _set?: InputMaybe<LocationImagesSetInput>;
  where: LocationImagesBoolExp;
};

export type MutationUpdateLocationImagesByPkArgs = {
  _inc?: InputMaybe<LocationImagesIncInput>;
  _set?: InputMaybe<LocationImagesSetInput>;
  pkColumns: LocationImagesPkColumnsInput;
};

export type MutationUpdateLocationImagesManyArgs = {
  updates: Array<LocationImagesUpdates>;
};

export type MutationUpdateLocationManyArgs = {
  updates: Array<LocationUpdates>;
};

export type MutationUpdateMissionArgs = {
  _inc?: InputMaybe<MissionIncInput>;
  _set?: InputMaybe<MissionSetInput>;
  where: MissionBoolExp;
};

export type MutationUpdateMissionByPkArgs = {
  _inc?: InputMaybe<MissionIncInput>;
  _set?: InputMaybe<MissionSetInput>;
  pkColumns: MissionPkColumnsInput;
};

export type MutationUpdateMissionJoinArgs = {
  _inc?: InputMaybe<MissionJoinIncInput>;
  _set?: InputMaybe<MissionJoinSetInput>;
  where: MissionJoinBoolExp;
};

export type MutationUpdateMissionJoinByPkArgs = {
  _inc?: InputMaybe<MissionJoinIncInput>;
  _set?: InputMaybe<MissionJoinSetInput>;
  pkColumns: MissionJoinPkColumnsInput;
};

export type MutationUpdateMissionJoinManyArgs = {
  updates: Array<MissionJoinUpdates>;
};

export type MutationUpdateMissionManyArgs = {
  updates: Array<MissionUpdates>;
};

export type MutationUpdateProjectArgs = {
  _inc?: InputMaybe<ProjectIncInput>;
  _set?: InputMaybe<ProjectSetInput>;
  where: ProjectBoolExp;
};

export type MutationUpdateProjectByPkArgs = {
  _inc?: InputMaybe<ProjectIncInput>;
  _set?: InputMaybe<ProjectSetInput>;
  pkColumns: ProjectPkColumnsInput;
};

export type MutationUpdateProjectManyArgs = {
  updates: Array<ProjectUpdates>;
};

export type MutationUpdateProjectSupervisorArgs = {
  _inc?: InputMaybe<ProjectSupervisorIncInput>;
  _set?: InputMaybe<ProjectSupervisorSetInput>;
  where: ProjectSupervisorBoolExp;
};

export type MutationUpdateProjectSupervisorByPkArgs = {
  _inc?: InputMaybe<ProjectSupervisorIncInput>;
  _set?: InputMaybe<ProjectSupervisorSetInput>;
  pkColumns: ProjectSupervisorPkColumnsInput;
};

export type MutationUpdateProjectSupervisorManyArgs = {
  updates: Array<ProjectSupervisorUpdates>;
};

export type MutationUpdateRequiredDocumentArgs = {
  _inc?: InputMaybe<RequiredDocumentIncInput>;
  _set?: InputMaybe<RequiredDocumentSetInput>;
  where: RequiredDocumentBoolExp;
};

export type MutationUpdateRequiredDocumentByPkArgs = {
  _inc?: InputMaybe<RequiredDocumentIncInput>;
  _set?: InputMaybe<RequiredDocumentSetInput>;
  pkColumns: RequiredDocumentPkColumnsInput;
};

export type MutationUpdateRequiredDocumentManyArgs = {
  updates: Array<RequiredDocumentUpdates>;
};

export type MutationUpdateRequiredRoleArgs = {
  _inc?: InputMaybe<RequiredRoleIncInput>;
  _set?: InputMaybe<RequiredRoleSetInput>;
  where: RequiredRoleBoolExp;
};

export type MutationUpdateRequiredRoleByPkArgs = {
  _inc?: InputMaybe<RequiredRoleIncInput>;
  _set?: InputMaybe<RequiredRoleSetInput>;
  pkColumns: RequiredRolePkColumnsInput;
};

export type MutationUpdateRequiredRoleManyArgs = {
  updates: Array<RequiredRoleUpdates>;
};

export type MutationUpdateSocialArgs = {
  _inc?: InputMaybe<SocialIncInput>;
  _set?: InputMaybe<SocialSetInput>;
  where: SocialBoolExp;
};

export type MutationUpdateSocialByPkArgs = {
  _inc?: InputMaybe<SocialIncInput>;
  _set?: InputMaybe<SocialSetInput>;
  pkColumns: SocialPkColumnsInput;
};

export type MutationUpdateSocialManyArgs = {
  updates: Array<SocialUpdates>;
};

export type MutationUpdateTagArgs = {
  _inc?: InputMaybe<TagIncInput>;
  _set?: InputMaybe<TagSetInput>;
  where: TagBoolExp;
};

export type MutationUpdateTagByPkArgs = {
  _inc?: InputMaybe<TagIncInput>;
  _set?: InputMaybe<TagSetInput>;
  pkColumns: TagPkColumnsInput;
};

export type MutationUpdateTagManyArgs = {
  updates: Array<TagUpdates>;
};

export type MutationUpdateTeamArgs = {
  _inc?: InputMaybe<TeamIncInput>;
  _set?: InputMaybe<TeamSetInput>;
  where: TeamBoolExp;
};

export type MutationUpdateTeamByPkArgs = {
  _inc?: InputMaybe<TeamIncInput>;
  _set?: InputMaybe<TeamSetInput>;
  pkColumns: TeamPkColumnsInput;
};

export type MutationUpdateTeamDocumentArgs = {
  _inc?: InputMaybe<TeamDocumentIncInput>;
  _set?: InputMaybe<TeamDocumentSetInput>;
  where: TeamDocumentBoolExp;
};

export type MutationUpdateTeamDocumentByPkArgs = {
  _inc?: InputMaybe<TeamDocumentIncInput>;
  _set?: InputMaybe<TeamDocumentSetInput>;
  pkColumns: TeamDocumentPkColumnsInput;
};

export type MutationUpdateTeamDocumentManyArgs = {
  updates: Array<TeamDocumentUpdates>;
};

export type MutationUpdateTeamHistoryArgs = {
  _inc?: InputMaybe<TeamHistoryIncInput>;
  _set?: InputMaybe<TeamHistorySetInput>;
  where: TeamHistoryBoolExp;
};

export type MutationUpdateTeamHistoryByPkArgs = {
  _inc?: InputMaybe<TeamHistoryIncInput>;
  _set?: InputMaybe<TeamHistorySetInput>;
  pkColumns: TeamHistoryPkColumnsInput;
};

export type MutationUpdateTeamHistoryManyArgs = {
  updates: Array<TeamHistoryUpdates>;
};

export type MutationUpdateTeamJoinArgs = {
  _inc?: InputMaybe<TeamJoinIncInput>;
  _set?: InputMaybe<TeamJoinSetInput>;
  where: TeamJoinBoolExp;
};

export type MutationUpdateTeamJoinByPkArgs = {
  _inc?: InputMaybe<TeamJoinIncInput>;
  _set?: InputMaybe<TeamJoinSetInput>;
  pkColumns: TeamJoinPkColumnsInput;
};

export type MutationUpdateTeamJoinManyArgs = {
  updates: Array<TeamJoinUpdates>;
};

export type MutationUpdateTeamManyArgs = {
  updates: Array<TeamUpdates>;
};

export type MutationUpdateTeamMemberArgs = {
  _inc?: InputMaybe<TeamMemberIncInput>;
  _set?: InputMaybe<TeamMemberSetInput>;
  where: TeamMemberBoolExp;
};

export type MutationUpdateTeamMemberByPkArgs = {
  _inc?: InputMaybe<TeamMemberIncInput>;
  _set?: InputMaybe<TeamMemberSetInput>;
  pkColumns: TeamMemberPkColumnsInput;
};

export type MutationUpdateTeamMemberManyArgs = {
  updates: Array<TeamMemberUpdates>;
};

export type MutationUpdateTeamMemberRoleArgs = {
  _inc?: InputMaybe<TeamMemberRoleIncInput>;
  _set?: InputMaybe<TeamMemberRoleSetInput>;
  where: TeamMemberRoleBoolExp;
};

export type MutationUpdateTeamMemberRoleByPkArgs = {
  _inc?: InputMaybe<TeamMemberRoleIncInput>;
  _set?: InputMaybe<TeamMemberRoleSetInput>;
  pkColumns: TeamMemberRolePkColumnsInput;
};

export type MutationUpdateTeamMemberRoleManyArgs = {
  updates: Array<TeamMemberRoleUpdates>;
};

export type MutationUpdateTeamRequiredRoleArgs = {
  _inc?: InputMaybe<TeamRequiredRoleIncInput>;
  _set?: InputMaybe<TeamRequiredRoleSetInput>;
  where: TeamRequiredRoleBoolExp;
};

export type MutationUpdateTeamRequiredRoleByPkArgs = {
  _inc?: InputMaybe<TeamRequiredRoleIncInput>;
  _set?: InputMaybe<TeamRequiredRoleSetInput>;
  pkColumns: TeamRequiredRolePkColumnsInput;
};

export type MutationUpdateTeamRequiredRoleManyArgs = {
  updates: Array<TeamRequiredRoleUpdates>;
};

export type MutationUpdateTeamRoleArgs = {
  _inc?: InputMaybe<TeamRoleIncInput>;
  _set?: InputMaybe<TeamRoleSetInput>;
  where: TeamRoleBoolExp;
};

export type MutationUpdateTeamRoleByPkArgs = {
  _inc?: InputMaybe<TeamRoleIncInput>;
  _set?: InputMaybe<TeamRoleSetInput>;
  pkColumns: TeamRolePkColumnsInput;
};

export type MutationUpdateTeamRoleManyArgs = {
  updates: Array<TeamRoleUpdates>;
};

export type MutationUpdateTenantArgs = {
  _inc?: InputMaybe<TenantIncInput>;
  _set?: InputMaybe<TenantSetInput>;
  where: TenantBoolExp;
};

export type MutationUpdateTenantByPkArgs = {
  _inc?: InputMaybe<TenantIncInput>;
  _set?: InputMaybe<TenantSetInput>;
  pkColumns: TenantPkColumnsInput;
};

export type MutationUpdateTenantManyArgs = {
  updates: Array<TenantUpdates>;
};

export type MutationUpdateTenantMemberArgs = {
  _inc?: InputMaybe<TenantMemberIncInput>;
  _set?: InputMaybe<TenantMemberSetInput>;
  where: TenantMemberBoolExp;
};

export type MutationUpdateTenantMemberByPkArgs = {
  _inc?: InputMaybe<TenantMemberIncInput>;
  _set?: InputMaybe<TenantMemberSetInput>;
  pkColumns: TenantMemberPkColumnsInput;
};

export type MutationUpdateTenantMemberManyArgs = {
  updates: Array<TenantMemberUpdates>;
};

export type MutationUpdateTenantMemberRoleArgs = {
  _inc?: InputMaybe<TenantMemberRoleIncInput>;
  _set?: InputMaybe<TenantMemberRoleSetInput>;
  where: TenantMemberRoleBoolExp;
};

export type MutationUpdateTenantMemberRoleByPkArgs = {
  _inc?: InputMaybe<TenantMemberRoleIncInput>;
  _set?: InputMaybe<TenantMemberRoleSetInput>;
  pkColumns: TenantMemberRolePkColumnsInput;
};

export type MutationUpdateTenantMemberRoleManyArgs = {
  updates: Array<TenantMemberRoleUpdates>;
};

export type MutationUpdateTenantRoleArgs = {
  _inc?: InputMaybe<TenantRoleIncInput>;
  _set?: InputMaybe<TenantRoleSetInput>;
  where: TenantRoleBoolExp;
};

export type MutationUpdateTenantRoleByPkArgs = {
  _inc?: InputMaybe<TenantRoleIncInput>;
  _set?: InputMaybe<TenantRoleSetInput>;
  pkColumns: TenantRolePkColumnsInput;
};

export type MutationUpdateTenantRoleManyArgs = {
  updates: Array<TenantRoleUpdates>;
};

export type MutationUpdateTransactionArgs = {
  _inc?: InputMaybe<TransactionIncInput>;
  _set?: InputMaybe<TransactionSetInput>;
  where: TransactionBoolExp;
};

export type MutationUpdateTransactionAttachmentsArgs = {
  _inc?: InputMaybe<TransactionAttachmentsIncInput>;
  _set?: InputMaybe<TransactionAttachmentsSetInput>;
  where: TransactionAttachmentsBoolExp;
};

export type MutationUpdateTransactionAttachmentsByPkArgs = {
  _inc?: InputMaybe<TransactionAttachmentsIncInput>;
  _set?: InputMaybe<TransactionAttachmentsSetInput>;
  pkColumns: TransactionAttachmentsPkColumnsInput;
};

export type MutationUpdateTransactionAttachmentsManyArgs = {
  updates: Array<TransactionAttachmentsUpdates>;
};

export type MutationUpdateTransactionByPkArgs = {
  _inc?: InputMaybe<TransactionIncInput>;
  _set?: InputMaybe<TransactionSetInput>;
  pkColumns: TransactionPkColumnsInput;
};

export type MutationUpdateTransactionManyArgs = {
  updates: Array<TransactionUpdates>;
};

export type MutationUpdateUserArgs = {
  _inc?: InputMaybe<UserIncInput>;
  _set?: InputMaybe<UserSetInput>;
  where: UserBoolExp;
};

export type MutationUpdateUserByPkArgs = {
  _inc?: InputMaybe<UserIncInput>;
  _set?: InputMaybe<UserSetInput>;
  pkColumns: UserPkColumnsInput;
};

export type MutationUpdateUserManyArgs = {
  updates: Array<UserUpdates>;
};

export enum OrderBy {
  Asc = 'ASC',
  AscNullsFirst = 'ASC_NULLS_FIRST',
  AscNullsLast = 'ASC_NULLS_LAST',
  Desc = 'DESC',
  DescNullsFirst = 'DESC_NULLS_FIRST',
  DescNullsLast = 'DESC_NULLS_LAST',
}

export type PaymentMethodComparisonExp = {
  _eq?: InputMaybe<Scalars['PaymentMethod']['input']>;
  _gt?: InputMaybe<Scalars['PaymentMethod']['input']>;
  _gte?: InputMaybe<Scalars['PaymentMethod']['input']>;
  _in?: InputMaybe<Array<Scalars['PaymentMethod']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['PaymentMethod']['input']>;
  _lte?: InputMaybe<Scalars['PaymentMethod']['input']>;
  _neq?: InputMaybe<Scalars['PaymentMethod']['input']>;
  _nin?: InputMaybe<Array<Scalars['PaymentMethod']['input']>>;
};

export type ProcessedByTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['ProcessedByType']['input']>;
  _gt?: InputMaybe<Scalars['ProcessedByType']['input']>;
  _gte?: InputMaybe<Scalars['ProcessedByType']['input']>;
  _in?: InputMaybe<Array<Scalars['ProcessedByType']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['ProcessedByType']['input']>;
  _lte?: InputMaybe<Scalars['ProcessedByType']['input']>;
  _neq?: InputMaybe<Scalars['ProcessedByType']['input']>;
  _nin?: InputMaybe<Array<Scalars['ProcessedByType']['input']>>;
};

export type ProcessedViaComparisonExp = {
  _eq?: InputMaybe<Scalars['ProcessedVia']['input']>;
  _gt?: InputMaybe<Scalars['ProcessedVia']['input']>;
  _gte?: InputMaybe<Scalars['ProcessedVia']['input']>;
  _in?: InputMaybe<Array<Scalars['ProcessedVia']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['ProcessedVia']['input']>;
  _lte?: InputMaybe<Scalars['ProcessedVia']['input']>;
  _neq?: InputMaybe<Scalars['ProcessedVia']['input']>;
  _nin?: InputMaybe<Array<Scalars['ProcessedVia']['input']>>;
};

export type Project = {
  __typename?: 'Project';
  actions: Array<Action>;
  actionsAggregate: ActionAggregate;
  banner?: Maybe<FileUpload>;
  bannerId?: Maybe<Scalars['bigint']['output']>;
  budget: Scalars['Float']['output'];
  color: Scalars['Colors']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  end?: Maybe<Scalars['timestamptz']['output']>;
  eventOrganizes: Array<EventOrganize>;
  eventOrganizesAggregate: EventOrganizeAggregate;
  grant?: Maybe<Grant>;
  grantId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isPrivate: Scalars['Boolean']['output'];
  isTemplate: Scalars['Boolean']['output'];
  missionJoins: Array<MissionJoin>;
  missionJoinsAggregate: MissionJoinAggregate;
  missions: Array<Mission>;
  missionsAggregate: MissionAggregate;
  name: Scalars['String']['output'];
  projectSupervisors: Array<ProjectSupervisor>;
  projectSupervisorsAggregate: ProjectSupervisorAggregate;
  regularEventInterval: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  start?: Maybe<Scalars['timestamptz']['output']>;
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  transactions: Array<Transaction>;
  transactionsAggregate: TransactionAggregate;
  type: Scalars['ProjectType']['output'];
};

export type ProjectActionsArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type ProjectActionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type ProjectEventOrganizesArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type ProjectEventOrganizesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type ProjectMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type ProjectMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type ProjectMissionsArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type ProjectMissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type ProjectProjectSupervisorsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorOrderBy>>;
  where?: InputMaybe<ProjectSupervisorBoolExp>;
};

export type ProjectProjectSupervisorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorOrderBy>>;
  where?: InputMaybe<ProjectSupervisorBoolExp>;
};

export type ProjectTransactionsArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type ProjectTransactionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type ProjectAggregate = {
  __typename?: 'ProjectAggregate';
  aggregate?: Maybe<ProjectAggregateFields>;
  nodes: Array<Project>;
};

export type ProjectAggregateBoolExp = {
  bool_and?: InputMaybe<ProjectAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<ProjectAggregateBoolExpBool_Or>;
  count?: InputMaybe<ProjectAggregateBoolExpCount>;
};

export type ProjectAggregateFields = {
  __typename?: 'ProjectAggregateFields';
  avg?: Maybe<ProjectAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ProjectMaxFields>;
  min?: Maybe<ProjectMinFields>;
  stddev?: Maybe<ProjectStddevFields>;
  stddevPop?: Maybe<ProjectStddevPopFields>;
  stddevSamp?: Maybe<ProjectStddevSampFields>;
  sum?: Maybe<ProjectSumFields>;
  varPop?: Maybe<ProjectVarPopFields>;
  varSamp?: Maybe<ProjectVarSampFields>;
  variance?: Maybe<ProjectVarianceFields>;
};

export type ProjectAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ProjectSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProjectAggregateOrderBy = {
  avg?: InputMaybe<ProjectAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ProjectMaxOrderBy>;
  min?: InputMaybe<ProjectMinOrderBy>;
  stddev?: InputMaybe<ProjectStddevOrderBy>;
  stddevPop?: InputMaybe<ProjectStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ProjectStddevSampOrderBy>;
  sum?: InputMaybe<ProjectSumOrderBy>;
  varPop?: InputMaybe<ProjectVarPopOrderBy>;
  varSamp?: InputMaybe<ProjectVarSampOrderBy>;
  variance?: InputMaybe<ProjectVarianceOrderBy>;
};

export type ProjectArrRelInsertInput = {
  data: Array<ProjectInsertInput>;
  onConflict?: InputMaybe<ProjectOnConflict>;
};

export type ProjectAvgFields = {
  __typename?: 'ProjectAvgFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectAvgOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ProjectBoolExp = {
  _and?: InputMaybe<Array<ProjectBoolExp>>;
  _not?: InputMaybe<ProjectBoolExp>;
  _or?: InputMaybe<Array<ProjectBoolExp>>;
  actions?: InputMaybe<ActionBoolExp>;
  actionsAggregate?: InputMaybe<ActionAggregateBoolExp>;
  banner?: InputMaybe<FileUploadBoolExp>;
  bannerId?: InputMaybe<BigintComparisonExp>;
  budget?: InputMaybe<FloatComparisonExp>;
  color?: InputMaybe<ColorsComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  end?: InputMaybe<TimestamptzComparisonExp>;
  eventOrganizes?: InputMaybe<EventOrganizeBoolExp>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateBoolExp>;
  grant?: InputMaybe<GrantBoolExp>;
  grantId?: InputMaybe<BigintComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isPrivate?: InputMaybe<BooleanComparisonExp>;
  isTemplate?: InputMaybe<BooleanComparisonExp>;
  missionJoins?: InputMaybe<MissionJoinBoolExp>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  missions?: InputMaybe<MissionBoolExp>;
  missionsAggregate?: InputMaybe<MissionAggregateBoolExp>;
  name?: InputMaybe<StringComparisonExp>;
  projectSupervisors?: InputMaybe<ProjectSupervisorBoolExp>;
  projectSupervisorsAggregate?: InputMaybe<ProjectSupervisorAggregateBoolExp>;
  regularEventInterval?: InputMaybe<StringComparisonExp>;
  slug?: InputMaybe<StringComparisonExp>;
  start?: InputMaybe<TimestamptzComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  transactions?: InputMaybe<TransactionBoolExp>;
  transactionsAggregate?: InputMaybe<TransactionAggregateBoolExp>;
  type?: InputMaybe<ProjectTypeComparisonExp>;
};

export enum ProjectConstraint {
  ProjectPkey = 'project_pkey',
}

export type ProjectIncInput = {
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  budget?: InputMaybe<Scalars['Float']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ProjectInsertInput = {
  actions?: InputMaybe<ActionArrRelInsertInput>;
  banner?: InputMaybe<FileUploadObjRelInsertInput>;
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  budget?: InputMaybe<Scalars['Float']['input']>;
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['timestamptz']['input']>;
  eventOrganizes?: InputMaybe<EventOrganizeArrRelInsertInput>;
  grant?: InputMaybe<GrantObjRelInsertInput>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPrivate?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  missionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  missions?: InputMaybe<MissionArrRelInsertInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  projectSupervisors?: InputMaybe<ProjectSupervisorArrRelInsertInput>;
  regularEventInterval?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['timestamptz']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  transactions?: InputMaybe<TransactionArrRelInsertInput>;
  type?: InputMaybe<Scalars['ProjectType']['input']>;
};

export type ProjectMaxFields = {
  __typename?: 'ProjectMaxFields';
  bannerId?: Maybe<Scalars['bigint']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  color?: Maybe<Scalars['Colors']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  end?: Maybe<Scalars['timestamptz']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  regularEventInterval?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  start?: Maybe<Scalars['timestamptz']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['ProjectType']['output']>;
};

export type ProjectMaxOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  end?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  regularEventInterval?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  start?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ProjectMinFields = {
  __typename?: 'ProjectMinFields';
  bannerId?: Maybe<Scalars['bigint']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  color?: Maybe<Scalars['Colors']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  end?: Maybe<Scalars['timestamptz']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  regularEventInterval?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  start?: Maybe<Scalars['timestamptz']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['ProjectType']['output']>;
};

export type ProjectMinOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  end?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  regularEventInterval?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  start?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ProjectMutationResponse = {
  __typename?: 'ProjectMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Project>;
};

export type ProjectObjRelInsertInput = {
  data: ProjectInsertInput;
  onConflict?: InputMaybe<ProjectOnConflict>;
};

export type ProjectOnConflict = {
  constraint: ProjectConstraint;
  updateColumns?: Array<ProjectUpdateColumn>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type ProjectOrderBy = {
  actionsAggregate?: InputMaybe<ActionAggregateOrderBy>;
  banner?: InputMaybe<FileUploadOrderBy>;
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  end?: InputMaybe<OrderBy>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateOrderBy>;
  grant?: InputMaybe<GrantOrderBy>;
  grantId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isPrivate?: InputMaybe<OrderBy>;
  isTemplate?: InputMaybe<OrderBy>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  missionsAggregate?: InputMaybe<MissionAggregateOrderBy>;
  name?: InputMaybe<OrderBy>;
  projectSupervisorsAggregate?: InputMaybe<ProjectSupervisorAggregateOrderBy>;
  regularEventInterval?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  start?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionsAggregate?: InputMaybe<TransactionAggregateOrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ProjectPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ProjectSelectColumn {
  BannerId = 'bannerId',
  Budget = 'budget',
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  End = 'end',
  GrantId = 'grantId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
  Name = 'name',
  RegularEventInterval = 'regularEventInterval',
  Slug = 'slug',
  Start = 'start',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export enum ProjectSelectColumnProjectAggregateBoolExpBool_AndArgumentsColumns {
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
}

export enum ProjectSelectColumnProjectAggregateBoolExpBool_OrArgumentsColumns {
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
}

export type ProjectSetInput = {
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  budget?: InputMaybe<Scalars['Float']['input']>;
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['timestamptz']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPrivate?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  regularEventInterval?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['timestamptz']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['ProjectType']['input']>;
};

export type ProjectStddevFields = {
  __typename?: 'ProjectStddevFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectStddevOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ProjectStddevPopFields = {
  __typename?: 'ProjectStddevPopFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectStddevPopOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ProjectStddevSampFields = {
  __typename?: 'ProjectStddevSampFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectStddevSampOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ProjectStreamCursorInput = {
  initialValue: ProjectStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ProjectStreamCursorValueInput = {
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  budget?: InputMaybe<Scalars['Float']['input']>;
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['timestamptz']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPrivate?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  regularEventInterval?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['timestamptz']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['ProjectType']['input']>;
};

export type ProjectSumFields = {
  __typename?: 'ProjectSumFields';
  bannerId?: Maybe<Scalars['bigint']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type ProjectSumOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisor = {
  __typename?: 'ProjectSupervisor';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  project: Project;
  projectId: Scalars['bigint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  title?: Maybe<Scalars['String']['output']>;
  user: User;
  userId: Scalars['bigint']['output'];
};

export type ProjectSupervisorAggregate = {
  __typename?: 'ProjectSupervisorAggregate';
  aggregate?: Maybe<ProjectSupervisorAggregateFields>;
  nodes: Array<ProjectSupervisor>;
};

export type ProjectSupervisorAggregateBoolExp = {
  count?: InputMaybe<ProjectSupervisorAggregateBoolExpCount>;
};

export type ProjectSupervisorAggregateFields = {
  __typename?: 'ProjectSupervisorAggregateFields';
  avg?: Maybe<ProjectSupervisorAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ProjectSupervisorMaxFields>;
  min?: Maybe<ProjectSupervisorMinFields>;
  stddev?: Maybe<ProjectSupervisorStddevFields>;
  stddevPop?: Maybe<ProjectSupervisorStddevPopFields>;
  stddevSamp?: Maybe<ProjectSupervisorStddevSampFields>;
  sum?: Maybe<ProjectSupervisorSumFields>;
  varPop?: Maybe<ProjectSupervisorVarPopFields>;
  varSamp?: Maybe<ProjectSupervisorVarSampFields>;
  variance?: Maybe<ProjectSupervisorVarianceFields>;
};

export type ProjectSupervisorAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ProjectSupervisorSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProjectSupervisorAggregateOrderBy = {
  avg?: InputMaybe<ProjectSupervisorAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ProjectSupervisorMaxOrderBy>;
  min?: InputMaybe<ProjectSupervisorMinOrderBy>;
  stddev?: InputMaybe<ProjectSupervisorStddevOrderBy>;
  stddevPop?: InputMaybe<ProjectSupervisorStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ProjectSupervisorStddevSampOrderBy>;
  sum?: InputMaybe<ProjectSupervisorSumOrderBy>;
  varPop?: InputMaybe<ProjectSupervisorVarPopOrderBy>;
  varSamp?: InputMaybe<ProjectSupervisorVarSampOrderBy>;
  variance?: InputMaybe<ProjectSupervisorVarianceOrderBy>;
};

export type ProjectSupervisorArrRelInsertInput = {
  data: Array<ProjectSupervisorInsertInput>;
  onConflict?: InputMaybe<ProjectSupervisorOnConflict>;
};

export type ProjectSupervisorAvgFields = {
  __typename?: 'ProjectSupervisorAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectSupervisorAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorBoolExp = {
  _and?: InputMaybe<Array<ProjectSupervisorBoolExp>>;
  _not?: InputMaybe<ProjectSupervisorBoolExp>;
  _or?: InputMaybe<Array<ProjectSupervisorBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  project?: InputMaybe<ProjectBoolExp>;
  projectId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  title?: InputMaybe<StringComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
  userId?: InputMaybe<BigintComparisonExp>;
};

export enum ProjectSupervisorConstraint {
  ProjectSupervisorPkey = 'project_supervisor_pkey',
}

export type ProjectSupervisorIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ProjectSupervisorInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<ProjectObjRelInsertInput>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ProjectSupervisorMaxFields = {
  __typename?: 'ProjectSupervisorMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ProjectSupervisorMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  title?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorMinFields = {
  __typename?: 'ProjectSupervisorMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ProjectSupervisorMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  title?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorMutationResponse = {
  __typename?: 'ProjectSupervisorMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ProjectSupervisor>;
};

export type ProjectSupervisorOnConflict = {
  constraint: ProjectSupervisorConstraint;
  updateColumns?: Array<ProjectSupervisorUpdateColumn>;
  where?: InputMaybe<ProjectSupervisorBoolExp>;
};

export type ProjectSupervisorOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  project?: InputMaybe<ProjectOrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  title?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ProjectSupervisorSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  ProjectId = 'projectId',
  TenantScopeId = 'tenantScopeId',
  Title = 'title',
  UserId = 'userId',
}

export type ProjectSupervisorSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ProjectSupervisorStddevFields = {
  __typename?: 'ProjectSupervisorStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectSupervisorStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorStddevPopFields = {
  __typename?: 'ProjectSupervisorStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectSupervisorStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorStddevSampFields = {
  __typename?: 'ProjectSupervisorStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectSupervisorStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorStreamCursorInput = {
  initialValue: ProjectSupervisorStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ProjectSupervisorStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ProjectSupervisorSumFields = {
  __typename?: 'ProjectSupervisorSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ProjectSupervisorSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum ProjectSupervisorUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  ProjectId = 'projectId',
  TenantScopeId = 'tenantScopeId',
  Title = 'title',
  UserId = 'userId',
}

export type ProjectSupervisorUpdates = {
  _inc?: InputMaybe<ProjectSupervisorIncInput>;
  _set?: InputMaybe<ProjectSupervisorSetInput>;
  where: ProjectSupervisorBoolExp;
};

export type ProjectSupervisorVarPopFields = {
  __typename?: 'ProjectSupervisorVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectSupervisorVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorVarSampFields = {
  __typename?: 'ProjectSupervisorVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectSupervisorVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorVarianceFields = {
  __typename?: 'ProjectSupervisorVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectSupervisorVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ProjectTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['ProjectType']['input']>;
  _gt?: InputMaybe<Scalars['ProjectType']['input']>;
  _gte?: InputMaybe<Scalars['ProjectType']['input']>;
  _in?: InputMaybe<Array<Scalars['ProjectType']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['ProjectType']['input']>;
  _lte?: InputMaybe<Scalars['ProjectType']['input']>;
  _neq?: InputMaybe<Scalars['ProjectType']['input']>;
  _nin?: InputMaybe<Array<Scalars['ProjectType']['input']>>;
};

export enum ProjectUpdateColumn {
  BannerId = 'bannerId',
  Budget = 'budget',
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  End = 'end',
  GrantId = 'grantId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
  Name = 'name',
  RegularEventInterval = 'regularEventInterval',
  Slug = 'slug',
  Start = 'start',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export type ProjectUpdates = {
  _inc?: InputMaybe<ProjectIncInput>;
  _set?: InputMaybe<ProjectSetInput>;
  where: ProjectBoolExp;
};

export type ProjectVarPopFields = {
  __typename?: 'ProjectVarPopFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectVarPopOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ProjectVarSampFields = {
  __typename?: 'ProjectVarSampFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectVarSampOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type ProjectVarianceFields = {
  __typename?: 'ProjectVarianceFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectVarianceOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type Query = {
  __typename?: 'Query';
  action: Array<Action>;
  actionAggregate: ActionAggregate;
  actionByPk?: Maybe<Action>;
  actor: Array<Actor>;
  actorAggregate: ActorAggregate;
  actorByPk?: Maybe<Actor>;
  actorImage: Array<ActorImage>;
  actorImageAggregate: ActorImageAggregate;
  actorImageByPk?: Maybe<ActorImage>;
  actorTag: Array<ActorTag>;
  actorTagAggregate: ActorTagAggregate;
  actorTagByPk?: Maybe<ActorTag>;
  address: Array<Address>;
  addressAggregate: AddressAggregate;
  addressByPk?: Maybe<Address>;
  adminRole: Array<AdminRole>;
  adminRoleAggregate: AdminRoleAggregate;
  adminRoleByPk?: Maybe<AdminRole>;
  bankAccount: Array<BankAccount>;
  bankAccountAggregate: BankAccountAggregate;
  bankAccountByPk?: Maybe<BankAccount>;
  bankInfo: Array<BankInfo>;
  bankInfoAggregate: BankInfoAggregate;
  bankInfoByPk?: Maybe<BankInfo>;
  campus: Array<Campus>;
  campusAggregate: CampusAggregate;
  campusByPk?: Maybe<Campus>;
  campusCluster: Array<CampusCluster>;
  campusClusterAggregate: CampusClusterAggregate;
  campusClusterByPk?: Maybe<CampusCluster>;
  event: Array<Event>;
  eventAggregate: EventAggregate;
  eventApproval: Array<EventApproval>;
  eventApprovalAggregate: EventApprovalAggregate;
  eventApprovalByPk?: Maybe<EventApproval>;
  eventApprovalStep: Array<EventApprovalStep>;
  eventApprovalStepAggregate: EventApprovalStepAggregate;
  eventApprovalStepByPk?: Maybe<EventApprovalStep>;
  eventApprovalValidator: Array<EventApprovalValidator>;
  eventApprovalValidatorAggregate: EventApprovalValidatorAggregate;
  eventApprovalValidatorByPk?: Maybe<EventApprovalValidator>;
  eventByPk?: Maybe<Event>;
  eventFavorite: Array<EventFavorite>;
  eventFavoriteAggregate: EventFavoriteAggregate;
  eventFavoriteByPk?: Maybe<EventFavorite>;
  eventJoin: Array<EventJoin>;
  eventJoinAggregate: EventJoinAggregate;
  eventJoinByPk?: Maybe<EventJoin>;
  eventOrganize: Array<EventOrganize>;
  eventOrganizeAggregate: EventOrganizeAggregate;
  eventOrganizeByPk?: Maybe<EventOrganize>;
  eventSupervisor: Array<EventSupervisor>;
  eventSupervisorAggregate: EventSupervisorAggregate;
  eventSupervisorByPk?: Maybe<EventSupervisor>;
  expense: Array<Expense>;
  expenseAggregate: ExpenseAggregate;
  expenseByPk?: Maybe<Expense>;
  expenseItem: Array<ExpenseItem>;
  expenseItemAggregate: ExpenseItemAggregate;
  expenseItemAttachments: Array<ExpenseItemAttachments>;
  expenseItemAttachmentsAggregate: ExpenseItemAttachmentsAggregate;
  expenseItemAttachmentsByPk?: Maybe<ExpenseItemAttachments>;
  expenseItemByPk?: Maybe<ExpenseItem>;
  fileUpload: Array<FileUpload>;
  fileUploadAggregate: FileUploadAggregate;
  fileUploadByPk?: Maybe<FileUpload>;
  follow: Array<Follow>;
  followAggregate: FollowAggregate;
  followByPk?: Maybe<Follow>;
  form: Array<Form>;
  formAggregate: FormAggregate;
  formByPk?: Maybe<Form>;
  formSubmission: Array<FormSubmission>;
  formSubmissionAggregate: FormSubmissionAggregate;
  formSubmissionByPk?: Maybe<FormSubmission>;
  getCurrentUser?: Maybe<User>;
  getCurrentUserAggregate: UserAggregate;
  grant: Array<Grant>;
  grantAggregate: GrantAggregate;
  grantAllocate: Array<GrantAllocate>;
  grantAllocateAggregate: GrantAllocateAggregate;
  grantAllocateAttachments: Array<GrantAllocateAttachments>;
  grantAllocateAttachmentsAggregate: GrantAllocateAttachmentsAggregate;
  grantAllocateAttachmentsByPk?: Maybe<GrantAllocateAttachments>;
  grantAllocateByPk?: Maybe<GrantAllocate>;
  grantAttachments: Array<GrantAttachments>;
  grantAttachmentsAggregate: GrantAttachmentsAggregate;
  grantAttachmentsByPk?: Maybe<GrantAttachments>;
  grantByPk?: Maybe<Grant>;
  legalUnit: Array<LegalUnit>;
  legalUnitAggregate: LegalUnitAggregate;
  legalUnitByPk?: Maybe<LegalUnit>;
  location: Array<Location>;
  locationAggregate: LocationAggregate;
  locationByPk?: Maybe<Location>;
  locationImages: Array<LocationImages>;
  locationImagesAggregate: LocationImagesAggregate;
  locationImagesByPk?: Maybe<LocationImages>;
  mission: Array<Mission>;
  missionAggregate: MissionAggregate;
  missionByPk?: Maybe<Mission>;
  missionJoin: Array<MissionJoin>;
  missionJoinAggregate: MissionJoinAggregate;
  missionJoinByPk?: Maybe<MissionJoin>;
  project: Array<Project>;
  projectAggregate: ProjectAggregate;
  projectByPk?: Maybe<Project>;
  projectSupervisor: Array<ProjectSupervisor>;
  projectSupervisorAggregate: ProjectSupervisorAggregate;
  projectSupervisorByPk?: Maybe<ProjectSupervisor>;
  requiredDocument: Array<RequiredDocument>;
  requiredDocumentAggregate: RequiredDocumentAggregate;
  requiredDocumentByPk?: Maybe<RequiredDocument>;
  requiredRole: Array<RequiredRole>;
  requiredRoleAggregate: RequiredRoleAggregate;
  requiredRoleByPk?: Maybe<RequiredRole>;
  social: Array<Social>;
  socialAggregate: SocialAggregate;
  socialByPk?: Maybe<Social>;
  tag: Array<Tag>;
  tagAggregate: TagAggregate;
  tagByPk?: Maybe<Tag>;
  team: Array<Team>;
  teamAggregate: TeamAggregate;
  teamByPk?: Maybe<Team>;
  teamDocument: Array<TeamDocument>;
  teamDocumentAggregate: TeamDocumentAggregate;
  teamDocumentByPk?: Maybe<TeamDocument>;
  teamHistory: Array<TeamHistory>;
  teamHistoryAggregate: TeamHistoryAggregate;
  teamHistoryByPk?: Maybe<TeamHistory>;
  teamJoin: Array<TeamJoin>;
  teamJoinAggregate: TeamJoinAggregate;
  teamJoinByPk?: Maybe<TeamJoin>;
  teamMember: Array<TeamMember>;
  teamMemberAggregate: TeamMemberAggregate;
  teamMemberByPk?: Maybe<TeamMember>;
  teamMemberRole: Array<TeamMemberRole>;
  teamMemberRoleAggregate: TeamMemberRoleAggregate;
  teamMemberRoleByPk?: Maybe<TeamMemberRole>;
  teamRequiredRole: Array<TeamRequiredRole>;
  teamRequiredRoleAggregate: TeamRequiredRoleAggregate;
  teamRequiredRoleByPk?: Maybe<TeamRequiredRole>;
  teamRole: Array<TeamRole>;
  teamRoleAggregate: TeamRoleAggregate;
  teamRoleByPk?: Maybe<TeamRole>;
  tenant: Array<Tenant>;
  tenantAggregate: TenantAggregate;
  tenantByPk?: Maybe<Tenant>;
  tenantMember: Array<TenantMember>;
  tenantMemberAggregate: TenantMemberAggregate;
  tenantMemberByPk?: Maybe<TenantMember>;
  tenantMemberRole: Array<TenantMemberRole>;
  tenantMemberRoleAggregate: TenantMemberRoleAggregate;
  tenantMemberRoleByPk?: Maybe<TenantMemberRole>;
  tenantRole: Array<TenantRole>;
  tenantRoleAggregate: TenantRoleAggregate;
  tenantRoleByPk?: Maybe<TenantRole>;
  transaction: Array<Transaction>;
  transactionAggregate: TransactionAggregate;
  transactionAttachments: Array<TransactionAttachments>;
  transactionAttachmentsAggregate: TransactionAttachmentsAggregate;
  transactionAttachmentsByPk?: Maybe<TransactionAttachments>;
  transactionByPk?: Maybe<Transaction>;
  user: Array<User>;
  userAggregate: UserAggregate;
  userByPk?: Maybe<User>;
};

export type QueryActionArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type QueryActionAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type QueryActionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryActorArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type QueryActorAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type QueryActorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryActorImageArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type QueryActorImageAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type QueryActorImageByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryActorTagArgs = {
  distinctOn?: InputMaybe<Array<ActorTagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagOrderBy>>;
  where?: InputMaybe<ActorTagBoolExp>;
};

export type QueryActorTagAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorTagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagOrderBy>>;
  where?: InputMaybe<ActorTagBoolExp>;
};

export type QueryActorTagByPkArgs = {
  actorId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type QueryAddressArgs = {
  distinctOn?: InputMaybe<Array<AddressSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AddressOrderBy>>;
  where?: InputMaybe<AddressBoolExp>;
};

export type QueryAddressAggregateArgs = {
  distinctOn?: InputMaybe<Array<AddressSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AddressOrderBy>>;
  where?: InputMaybe<AddressBoolExp>;
};

export type QueryAddressByPkArgs = {
  geoapifyId: Scalars['String']['input'];
};

export type QueryAdminRoleArgs = {
  distinctOn?: InputMaybe<Array<AdminRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdminRoleOrderBy>>;
  where?: InputMaybe<AdminRoleBoolExp>;
};

export type QueryAdminRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<AdminRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdminRoleOrderBy>>;
  where?: InputMaybe<AdminRoleBoolExp>;
};

export type QueryAdminRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryBankAccountArgs = {
  distinctOn?: InputMaybe<Array<BankAccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankAccountOrderBy>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type QueryBankAccountAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankAccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankAccountOrderBy>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type QueryBankAccountByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryBankInfoArgs = {
  distinctOn?: InputMaybe<Array<BankInfoSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankInfoOrderBy>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type QueryBankInfoAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankInfoSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankInfoOrderBy>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type QueryBankInfoByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryCampusArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type QueryCampusAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type QueryCampusByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryCampusClusterArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type QueryCampusClusterAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type QueryCampusClusterByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type QueryEventAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type QueryEventApprovalArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type QueryEventApprovalAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type QueryEventApprovalByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventApprovalStepArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type QueryEventApprovalStepAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type QueryEventApprovalStepByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventApprovalValidatorArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalValidatorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalValidatorOrderBy>>;
  where?: InputMaybe<EventApprovalValidatorBoolExp>;
};

export type QueryEventApprovalValidatorAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalValidatorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalValidatorOrderBy>>;
  where?: InputMaybe<EventApprovalValidatorBoolExp>;
};

export type QueryEventApprovalValidatorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventFavoriteArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type QueryEventFavoriteAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type QueryEventFavoriteByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventJoinArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type QueryEventJoinAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type QueryEventJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventOrganizeArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type QueryEventOrganizeAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type QueryEventOrganizeByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventSupervisorArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type QueryEventSupervisorAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type QueryEventSupervisorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryExpenseArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type QueryExpenseAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type QueryExpenseByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryExpenseItemArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type QueryExpenseItemAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type QueryExpenseItemAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type QueryExpenseItemAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type QueryExpenseItemAttachmentsByPkArgs = {
  expenseItemId: Scalars['bigint']['input'];
  fileUploadId: Scalars['bigint']['input'];
};

export type QueryExpenseItemByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryFileUploadArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type QueryFileUploadAggregateArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type QueryFileUploadByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryFollowArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type QueryFollowAggregateArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type QueryFollowByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryFormArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type QueryFormAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type QueryFormByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryFormSubmissionArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type QueryFormSubmissionAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type QueryFormSubmissionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryGetCurrentUserArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type QueryGetCurrentUserAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type QueryGrantArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type QueryGrantAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type QueryGrantAllocateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type QueryGrantAllocateAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type QueryGrantAllocateAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type QueryGrantAllocateAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type QueryGrantAllocateAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  grantAllocateId: Scalars['bigint']['input'];
};

export type QueryGrantAllocateByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryGrantAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type QueryGrantAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type QueryGrantAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  grantId: Scalars['bigint']['input'];
};

export type QueryGrantByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryLegalUnitArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type QueryLegalUnitAggregateArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type QueryLegalUnitByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryLocationArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type QueryLocationAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type QueryLocationByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryLocationImagesArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type QueryLocationImagesAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type QueryLocationImagesByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  locationId: Scalars['bigint']['input'];
};

export type QueryMissionArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type QueryMissionAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type QueryMissionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryMissionJoinArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type QueryMissionJoinAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type QueryMissionJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryProjectArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type QueryProjectAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type QueryProjectByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryProjectSupervisorArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorOrderBy>>;
  where?: InputMaybe<ProjectSupervisorBoolExp>;
};

export type QueryProjectSupervisorAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorOrderBy>>;
  where?: InputMaybe<ProjectSupervisorBoolExp>;
};

export type QueryProjectSupervisorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryRequiredDocumentArgs = {
  distinctOn?: InputMaybe<Array<RequiredDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredDocumentOrderBy>>;
  where?: InputMaybe<RequiredDocumentBoolExp>;
};

export type QueryRequiredDocumentAggregateArgs = {
  distinctOn?: InputMaybe<Array<RequiredDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredDocumentOrderBy>>;
  where?: InputMaybe<RequiredDocumentBoolExp>;
};

export type QueryRequiredDocumentByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryRequiredRoleArgs = {
  distinctOn?: InputMaybe<Array<RequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredRoleOrderBy>>;
  where?: InputMaybe<RequiredRoleBoolExp>;
};

export type QueryRequiredRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<RequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredRoleOrderBy>>;
  where?: InputMaybe<RequiredRoleBoolExp>;
};

export type QueryRequiredRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QuerySocialArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type QuerySocialAggregateArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type QuerySocialByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTagArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type QueryTagAggregateArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type QueryTagByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTeamArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type QueryTeamAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type QueryTeamByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTeamDocumentArgs = {
  distinctOn?: InputMaybe<Array<TeamDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamDocumentOrderBy>>;
  where?: InputMaybe<TeamDocumentBoolExp>;
};

export type QueryTeamDocumentAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamDocumentOrderBy>>;
  where?: InputMaybe<TeamDocumentBoolExp>;
};

export type QueryTeamDocumentByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTeamHistoryArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type QueryTeamHistoryAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type QueryTeamHistoryByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTeamJoinArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type QueryTeamJoinAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type QueryTeamJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTeamMemberArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type QueryTeamMemberAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type QueryTeamMemberByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTeamMemberRoleArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRoleOrderBy>>;
  where?: InputMaybe<TeamMemberRoleBoolExp>;
};

export type QueryTeamMemberRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRoleOrderBy>>;
  where?: InputMaybe<TeamMemberRoleBoolExp>;
};

export type QueryTeamMemberRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTeamRequiredRoleArgs = {
  distinctOn?: InputMaybe<Array<TeamRequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRequiredRoleOrderBy>>;
  where?: InputMaybe<TeamRequiredRoleBoolExp>;
};

export type QueryTeamRequiredRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamRequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRequiredRoleOrderBy>>;
  where?: InputMaybe<TeamRequiredRoleBoolExp>;
};

export type QueryTeamRequiredRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTeamRoleArgs = {
  distinctOn?: InputMaybe<Array<TeamRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRoleOrderBy>>;
  where?: InputMaybe<TeamRoleBoolExp>;
};

export type QueryTeamRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRoleOrderBy>>;
  where?: InputMaybe<TeamRoleBoolExp>;
};

export type QueryTeamRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTenantArgs = {
  distinctOn?: InputMaybe<Array<TenantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrderBy>>;
  where?: InputMaybe<TenantBoolExp>;
};

export type QueryTenantAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrderBy>>;
  where?: InputMaybe<TenantBoolExp>;
};

export type QueryTenantByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTenantMemberArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberOrderBy>>;
  where?: InputMaybe<TenantMemberBoolExp>;
};

export type QueryTenantMemberAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberOrderBy>>;
  where?: InputMaybe<TenantMemberBoolExp>;
};

export type QueryTenantMemberByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTenantMemberRoleArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberRoleOrderBy>>;
  where?: InputMaybe<TenantMemberRoleBoolExp>;
};

export type QueryTenantMemberRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberRoleOrderBy>>;
  where?: InputMaybe<TenantMemberRoleBoolExp>;
};

export type QueryTenantMemberRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTenantRoleArgs = {
  distinctOn?: InputMaybe<Array<TenantRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantRoleOrderBy>>;
  where?: InputMaybe<TenantRoleBoolExp>;
};

export type QueryTenantRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantRoleOrderBy>>;
  where?: InputMaybe<TenantRoleBoolExp>;
};

export type QueryTenantRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTransactionArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type QueryTransactionAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type QueryTransactionAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<TransactionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionAttachmentsOrderBy>>;
  where?: InputMaybe<TransactionAttachmentsBoolExp>;
};

export type QueryTransactionAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionAttachmentsOrderBy>>;
  where?: InputMaybe<TransactionAttachmentsBoolExp>;
};

export type QueryTransactionAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  transactionId: Scalars['bigint']['input'];
};

export type QueryTransactionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryUserArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type QueryUserAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type QueryUserByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type RequiredDocument = {
  __typename?: 'RequiredDocument';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isRequired: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  teamDocuments: Array<TeamDocument>;
  teamDocumentsAggregate: TeamDocumentAggregate;
  teamTypes?: Maybe<Array<Scalars['String']['output']>>;
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type RequiredDocumentTeamDocumentsArgs = {
  distinctOn?: InputMaybe<Array<TeamDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamDocumentOrderBy>>;
  where?: InputMaybe<TeamDocumentBoolExp>;
};

export type RequiredDocumentTeamDocumentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamDocumentOrderBy>>;
  where?: InputMaybe<TeamDocumentBoolExp>;
};

export type RequiredDocumentAggregate = {
  __typename?: 'RequiredDocumentAggregate';
  aggregate?: Maybe<RequiredDocumentAggregateFields>;
  nodes: Array<RequiredDocument>;
};

export type RequiredDocumentAggregateBoolExp = {
  bool_and?: InputMaybe<RequiredDocumentAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<RequiredDocumentAggregateBoolExpBool_Or>;
  count?: InputMaybe<RequiredDocumentAggregateBoolExpCount>;
};

export type RequiredDocumentAggregateFields = {
  __typename?: 'RequiredDocumentAggregateFields';
  avg?: Maybe<RequiredDocumentAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<RequiredDocumentMaxFields>;
  min?: Maybe<RequiredDocumentMinFields>;
  stddev?: Maybe<RequiredDocumentStddevFields>;
  stddevPop?: Maybe<RequiredDocumentStddevPopFields>;
  stddevSamp?: Maybe<RequiredDocumentStddevSampFields>;
  sum?: Maybe<RequiredDocumentSumFields>;
  varPop?: Maybe<RequiredDocumentVarPopFields>;
  varSamp?: Maybe<RequiredDocumentVarSampFields>;
  variance?: Maybe<RequiredDocumentVarianceFields>;
};

export type RequiredDocumentAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<RequiredDocumentSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type RequiredDocumentAggregateOrderBy = {
  avg?: InputMaybe<RequiredDocumentAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<RequiredDocumentMaxOrderBy>;
  min?: InputMaybe<RequiredDocumentMinOrderBy>;
  stddev?: InputMaybe<RequiredDocumentStddevOrderBy>;
  stddevPop?: InputMaybe<RequiredDocumentStddevPopOrderBy>;
  stddevSamp?: InputMaybe<RequiredDocumentStddevSampOrderBy>;
  sum?: InputMaybe<RequiredDocumentSumOrderBy>;
  varPop?: InputMaybe<RequiredDocumentVarPopOrderBy>;
  varSamp?: InputMaybe<RequiredDocumentVarSampOrderBy>;
  variance?: InputMaybe<RequiredDocumentVarianceOrderBy>;
};

export type RequiredDocumentArrRelInsertInput = {
  data: Array<RequiredDocumentInsertInput>;
  onConflict?: InputMaybe<RequiredDocumentOnConflict>;
};

export type RequiredDocumentAvgFields = {
  __typename?: 'RequiredDocumentAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type RequiredDocumentAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredDocumentBoolExp = {
  _and?: InputMaybe<Array<RequiredDocumentBoolExp>>;
  _not?: InputMaybe<RequiredDocumentBoolExp>;
  _or?: InputMaybe<Array<RequiredDocumentBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isRequired?: InputMaybe<BooleanComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  teamDocuments?: InputMaybe<TeamDocumentBoolExp>;
  teamDocumentsAggregate?: InputMaybe<TeamDocumentAggregateBoolExp>;
  teamTypes?: InputMaybe<StringArrayComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum RequiredDocumentConstraint {
  RequiredDocumentPkey = 'required_document_pkey',
}

export type RequiredDocumentIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type RequiredDocumentInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isRequired?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  teamDocuments?: InputMaybe<TeamDocumentArrRelInsertInput>;
  teamTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type RequiredDocumentMaxFields = {
  __typename?: 'RequiredDocumentMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  teamTypes?: Maybe<Array<Scalars['String']['output']>>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type RequiredDocumentMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  teamTypes?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredDocumentMinFields = {
  __typename?: 'RequiredDocumentMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  teamTypes?: Maybe<Array<Scalars['String']['output']>>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type RequiredDocumentMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  teamTypes?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredDocumentMutationResponse = {
  __typename?: 'RequiredDocumentMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<RequiredDocument>;
};

export type RequiredDocumentObjRelInsertInput = {
  data: RequiredDocumentInsertInput;
  onConflict?: InputMaybe<RequiredDocumentOnConflict>;
};

export type RequiredDocumentOnConflict = {
  constraint: RequiredDocumentConstraint;
  updateColumns?: Array<RequiredDocumentUpdateColumn>;
  where?: InputMaybe<RequiredDocumentBoolExp>;
};

export type RequiredDocumentOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isRequired?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  teamDocumentsAggregate?: InputMaybe<TeamDocumentAggregateOrderBy>;
  teamTypes?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredDocumentPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum RequiredDocumentSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsRequired = 'isRequired',
  Name = 'name',
  TeamTypes = 'teamTypes',
  TenantScopeId = 'tenantScopeId',
}

export enum RequiredDocumentSelectColumnRequiredDocumentAggregateBoolExpBool_AndArgumentsColumns {
  IsRequired = 'isRequired',
}

export enum RequiredDocumentSelectColumnRequiredDocumentAggregateBoolExpBool_OrArgumentsColumns {
  IsRequired = 'isRequired',
}

export type RequiredDocumentSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isRequired?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  teamTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type RequiredDocumentStddevFields = {
  __typename?: 'RequiredDocumentStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type RequiredDocumentStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredDocumentStddevPopFields = {
  __typename?: 'RequiredDocumentStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type RequiredDocumentStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredDocumentStddevSampFields = {
  __typename?: 'RequiredDocumentStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type RequiredDocumentStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredDocumentStreamCursorInput = {
  initialValue: RequiredDocumentStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type RequiredDocumentStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isRequired?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  teamTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type RequiredDocumentSumFields = {
  __typename?: 'RequiredDocumentSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type RequiredDocumentSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum RequiredDocumentUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsRequired = 'isRequired',
  Name = 'name',
  TeamTypes = 'teamTypes',
  TenantScopeId = 'tenantScopeId',
}

export type RequiredDocumentUpdates = {
  _inc?: InputMaybe<RequiredDocumentIncInput>;
  _set?: InputMaybe<RequiredDocumentSetInput>;
  where: RequiredDocumentBoolExp;
};

export type RequiredDocumentVarPopFields = {
  __typename?: 'RequiredDocumentVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type RequiredDocumentVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredDocumentVarSampFields = {
  __typename?: 'RequiredDocumentVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type RequiredDocumentVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredDocumentVarianceFields = {
  __typename?: 'RequiredDocumentVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type RequiredDocumentVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredRole = {
  __typename?: 'RequiredRole';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isRequired: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  teamRequiredRoles: Array<TeamRequiredRole>;
  teamRequiredRolesAggregate: TeamRequiredRoleAggregate;
  teamTypes?: Maybe<Array<Scalars['String']['output']>>;
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type RequiredRoleTeamRequiredRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamRequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRequiredRoleOrderBy>>;
  where?: InputMaybe<TeamRequiredRoleBoolExp>;
};

export type RequiredRoleTeamRequiredRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamRequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRequiredRoleOrderBy>>;
  where?: InputMaybe<TeamRequiredRoleBoolExp>;
};

export type RequiredRoleAggregate = {
  __typename?: 'RequiredRoleAggregate';
  aggregate?: Maybe<RequiredRoleAggregateFields>;
  nodes: Array<RequiredRole>;
};

export type RequiredRoleAggregateBoolExp = {
  bool_and?: InputMaybe<RequiredRoleAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<RequiredRoleAggregateBoolExpBool_Or>;
  count?: InputMaybe<RequiredRoleAggregateBoolExpCount>;
};

export type RequiredRoleAggregateFields = {
  __typename?: 'RequiredRoleAggregateFields';
  avg?: Maybe<RequiredRoleAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<RequiredRoleMaxFields>;
  min?: Maybe<RequiredRoleMinFields>;
  stddev?: Maybe<RequiredRoleStddevFields>;
  stddevPop?: Maybe<RequiredRoleStddevPopFields>;
  stddevSamp?: Maybe<RequiredRoleStddevSampFields>;
  sum?: Maybe<RequiredRoleSumFields>;
  varPop?: Maybe<RequiredRoleVarPopFields>;
  varSamp?: Maybe<RequiredRoleVarSampFields>;
  variance?: Maybe<RequiredRoleVarianceFields>;
};

export type RequiredRoleAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<RequiredRoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type RequiredRoleAggregateOrderBy = {
  avg?: InputMaybe<RequiredRoleAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<RequiredRoleMaxOrderBy>;
  min?: InputMaybe<RequiredRoleMinOrderBy>;
  stddev?: InputMaybe<RequiredRoleStddevOrderBy>;
  stddevPop?: InputMaybe<RequiredRoleStddevPopOrderBy>;
  stddevSamp?: InputMaybe<RequiredRoleStddevSampOrderBy>;
  sum?: InputMaybe<RequiredRoleSumOrderBy>;
  varPop?: InputMaybe<RequiredRoleVarPopOrderBy>;
  varSamp?: InputMaybe<RequiredRoleVarSampOrderBy>;
  variance?: InputMaybe<RequiredRoleVarianceOrderBy>;
};

export type RequiredRoleArrRelInsertInput = {
  data: Array<RequiredRoleInsertInput>;
  onConflict?: InputMaybe<RequiredRoleOnConflict>;
};

export type RequiredRoleAvgFields = {
  __typename?: 'RequiredRoleAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type RequiredRoleAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredRoleBoolExp = {
  _and?: InputMaybe<Array<RequiredRoleBoolExp>>;
  _not?: InputMaybe<RequiredRoleBoolExp>;
  _or?: InputMaybe<Array<RequiredRoleBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isRequired?: InputMaybe<BooleanComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  teamRequiredRoles?: InputMaybe<TeamRequiredRoleBoolExp>;
  teamRequiredRolesAggregate?: InputMaybe<TeamRequiredRoleAggregateBoolExp>;
  teamTypes?: InputMaybe<StringArrayComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum RequiredRoleConstraint {
  RequiredRolePkey = 'required_role_pkey',
}

export type RequiredRoleIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type RequiredRoleInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isRequired?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  teamRequiredRoles?: InputMaybe<TeamRequiredRoleArrRelInsertInput>;
  teamTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type RequiredRoleMaxFields = {
  __typename?: 'RequiredRoleMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  teamTypes?: Maybe<Array<Scalars['String']['output']>>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type RequiredRoleMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  teamTypes?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredRoleMinFields = {
  __typename?: 'RequiredRoleMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  teamTypes?: Maybe<Array<Scalars['String']['output']>>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type RequiredRoleMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  teamTypes?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredRoleMutationResponse = {
  __typename?: 'RequiredRoleMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<RequiredRole>;
};

export type RequiredRoleObjRelInsertInput = {
  data: RequiredRoleInsertInput;
  onConflict?: InputMaybe<RequiredRoleOnConflict>;
};

export type RequiredRoleOnConflict = {
  constraint: RequiredRoleConstraint;
  updateColumns?: Array<RequiredRoleUpdateColumn>;
  where?: InputMaybe<RequiredRoleBoolExp>;
};

export type RequiredRoleOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isRequired?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  teamRequiredRolesAggregate?: InputMaybe<TeamRequiredRoleAggregateOrderBy>;
  teamTypes?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredRolePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum RequiredRoleSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsRequired = 'isRequired',
  Name = 'name',
  TeamTypes = 'teamTypes',
  TenantScopeId = 'tenantScopeId',
}

export enum RequiredRoleSelectColumnRequiredRoleAggregateBoolExpBool_AndArgumentsColumns {
  IsRequired = 'isRequired',
}

export enum RequiredRoleSelectColumnRequiredRoleAggregateBoolExpBool_OrArgumentsColumns {
  IsRequired = 'isRequired',
}

export type RequiredRoleSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isRequired?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  teamTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type RequiredRoleStddevFields = {
  __typename?: 'RequiredRoleStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type RequiredRoleStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredRoleStddevPopFields = {
  __typename?: 'RequiredRoleStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type RequiredRoleStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredRoleStddevSampFields = {
  __typename?: 'RequiredRoleStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type RequiredRoleStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredRoleStreamCursorInput = {
  initialValue: RequiredRoleStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type RequiredRoleStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isRequired?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  teamTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type RequiredRoleSumFields = {
  __typename?: 'RequiredRoleSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type RequiredRoleSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum RequiredRoleUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsRequired = 'isRequired',
  Name = 'name',
  TeamTypes = 'teamTypes',
  TenantScopeId = 'tenantScopeId',
}

export type RequiredRoleUpdates = {
  _inc?: InputMaybe<RequiredRoleIncInput>;
  _set?: InputMaybe<RequiredRoleSetInput>;
  where: RequiredRoleBoolExp;
};

export type RequiredRoleVarPopFields = {
  __typename?: 'RequiredRoleVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type RequiredRoleVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredRoleVarSampFields = {
  __typename?: 'RequiredRoleVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type RequiredRoleVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type RequiredRoleVarianceFields = {
  __typename?: 'RequiredRoleVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type RequiredRoleVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type SmallintComparisonExp = {
  _eq?: InputMaybe<Scalars['smallint']['input']>;
  _gt?: InputMaybe<Scalars['smallint']['input']>;
  _gte?: InputMaybe<Scalars['smallint']['input']>;
  _in?: InputMaybe<Array<Scalars['smallint']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['smallint']['input']>;
  _lte?: InputMaybe<Scalars['smallint']['input']>;
  _neq?: InputMaybe<Scalars['smallint']['input']>;
  _nin?: InputMaybe<Array<Scalars['smallint']['input']>>;
};

export type Social = {
  __typename?: 'Social';
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  order: Scalars['smallint']['output'];
  pseudo: Scalars['String']['output'];
  type: Scalars['SocialType']['output'];
  url: Scalars['String']['output'];
};

export type SocialAggregate = {
  __typename?: 'SocialAggregate';
  aggregate?: Maybe<SocialAggregateFields>;
  nodes: Array<Social>;
};

export type SocialAggregateBoolExp = {
  count?: InputMaybe<SocialAggregateBoolExpCount>;
};

export type SocialAggregateFields = {
  __typename?: 'SocialAggregateFields';
  avg?: Maybe<SocialAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<SocialMaxFields>;
  min?: Maybe<SocialMinFields>;
  stddev?: Maybe<SocialStddevFields>;
  stddevPop?: Maybe<SocialStddevPopFields>;
  stddevSamp?: Maybe<SocialStddevSampFields>;
  sum?: Maybe<SocialSumFields>;
  varPop?: Maybe<SocialVarPopFields>;
  varSamp?: Maybe<SocialVarSampFields>;
  variance?: Maybe<SocialVarianceFields>;
};

export type SocialAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<SocialSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SocialAggregateOrderBy = {
  avg?: InputMaybe<SocialAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<SocialMaxOrderBy>;
  min?: InputMaybe<SocialMinOrderBy>;
  stddev?: InputMaybe<SocialStddevOrderBy>;
  stddevPop?: InputMaybe<SocialStddevPopOrderBy>;
  stddevSamp?: InputMaybe<SocialStddevSampOrderBy>;
  sum?: InputMaybe<SocialSumOrderBy>;
  varPop?: InputMaybe<SocialVarPopOrderBy>;
  varSamp?: InputMaybe<SocialVarSampOrderBy>;
  variance?: InputMaybe<SocialVarianceOrderBy>;
};

export type SocialArrRelInsertInput = {
  data: Array<SocialInsertInput>;
  onConflict?: InputMaybe<SocialOnConflict>;
};

export type SocialAvgFields = {
  __typename?: 'SocialAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

export type SocialAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
};

export type SocialBoolExp = {
  _and?: InputMaybe<Array<SocialBoolExp>>;
  _not?: InputMaybe<SocialBoolExp>;
  _or?: InputMaybe<Array<SocialBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  order?: InputMaybe<SmallintComparisonExp>;
  pseudo?: InputMaybe<StringComparisonExp>;
  type?: InputMaybe<SocialTypeComparisonExp>;
  url?: InputMaybe<StringComparisonExp>;
};

export enum SocialConstraint {
  SocialPkey = 'social_pkey',
}

export type SocialIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  order?: InputMaybe<Scalars['smallint']['input']>;
};

export type SocialInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  order?: InputMaybe<Scalars['smallint']['input']>;
  pseudo?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['SocialType']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type SocialMaxFields = {
  __typename?: 'SocialMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  order?: Maybe<Scalars['smallint']['output']>;
  pseudo?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['SocialType']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type SocialMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  pseudo?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  url?: InputMaybe<OrderBy>;
};

export type SocialMinFields = {
  __typename?: 'SocialMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  order?: Maybe<Scalars['smallint']['output']>;
  pseudo?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['SocialType']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type SocialMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  pseudo?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  url?: InputMaybe<OrderBy>;
};

export type SocialMutationResponse = {
  __typename?: 'SocialMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Social>;
};

export type SocialOnConflict = {
  constraint: SocialConstraint;
  updateColumns?: Array<SocialUpdateColumn>;
  where?: InputMaybe<SocialBoolExp>;
};

export type SocialOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  pseudo?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  url?: InputMaybe<OrderBy>;
};

export type SocialPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum SocialSelectColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Order = 'order',
  Pseudo = 'pseudo',
  Type = 'type',
  Url = 'url',
}

export type SocialSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  order?: InputMaybe<Scalars['smallint']['input']>;
  pseudo?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['SocialType']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type SocialStddevFields = {
  __typename?: 'SocialStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

export type SocialStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
};

export type SocialStddevPopFields = {
  __typename?: 'SocialStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

export type SocialStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
};

export type SocialStddevSampFields = {
  __typename?: 'SocialStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

export type SocialStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
};

export type SocialStreamCursorInput = {
  initialValue: SocialStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type SocialStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  order?: InputMaybe<Scalars['smallint']['input']>;
  pseudo?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['SocialType']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type SocialSumFields = {
  __typename?: 'SocialSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  order?: Maybe<Scalars['smallint']['output']>;
};

export type SocialSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
};

export type SocialTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['SocialType']['input']>;
  _gt?: InputMaybe<Scalars['SocialType']['input']>;
  _gte?: InputMaybe<Scalars['SocialType']['input']>;
  _in?: InputMaybe<Array<Scalars['SocialType']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['SocialType']['input']>;
  _lte?: InputMaybe<Scalars['SocialType']['input']>;
  _neq?: InputMaybe<Scalars['SocialType']['input']>;
  _nin?: InputMaybe<Array<Scalars['SocialType']['input']>>;
};

export enum SocialUpdateColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Order = 'order',
  Pseudo = 'pseudo',
  Type = 'type',
  Url = 'url',
}

export type SocialUpdates = {
  _inc?: InputMaybe<SocialIncInput>;
  _set?: InputMaybe<SocialSetInput>;
  where: SocialBoolExp;
};

export type SocialVarPopFields = {
  __typename?: 'SocialVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

export type SocialVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
};

export type SocialVarSampFields = {
  __typename?: 'SocialVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

export type SocialVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
};

export type SocialVarianceFields = {
  __typename?: 'SocialVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

export type SocialVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
};

export type StringArrayComparisonExp = {
  _containedIn?: InputMaybe<Array<Scalars['String']['input']>>;
  _contains?: InputMaybe<Array<Scalars['String']['input']>>;
  _eq?: InputMaybe<Array<Scalars['String']['input']>>;
  _gt?: InputMaybe<Array<Scalars['String']['input']>>;
  _gte?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Array<Scalars['String']['input']>>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Array<Scalars['String']['input']>>;
  _lte?: InputMaybe<Array<Scalars['String']['input']>>;
  _neq?: InputMaybe<Array<Scalars['String']['input']>>;
  _nin?: InputMaybe<Array<Array<Scalars['String']['input']>>>;
};

export type StringComparisonExp = {
  _eq?: InputMaybe<Scalars['String']['input']>;
  _gt?: InputMaybe<Scalars['String']['input']>;
  _gte?: InputMaybe<Scalars['String']['input']>;
  _ilike?: InputMaybe<Scalars['String']['input']>;
  _in?: InputMaybe<Array<Scalars['String']['input']>>;
  _iregex?: InputMaybe<Scalars['String']['input']>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _like?: InputMaybe<Scalars['String']['input']>;
  _lt?: InputMaybe<Scalars['String']['input']>;
  _lte?: InputMaybe<Scalars['String']['input']>;
  _neq?: InputMaybe<Scalars['String']['input']>;
  _nilike?: InputMaybe<Scalars['String']['input']>;
  _nin?: InputMaybe<Array<Scalars['String']['input']>>;
  _niregex?: InputMaybe<Scalars['String']['input']>;
  _nlike?: InputMaybe<Scalars['String']['input']>;
  _nregex?: InputMaybe<Scalars['String']['input']>;
  _nsimilar?: InputMaybe<Scalars['String']['input']>;
  _regex?: InputMaybe<Scalars['String']['input']>;
  _similar?: InputMaybe<Scalars['String']['input']>;
};

export type Subscription = {
  __typename?: 'Subscription';
  action: Array<Action>;
  actionAggregate: ActionAggregate;
  actionByPk?: Maybe<Action>;
  actionStream: Array<Action>;
  actor: Array<Actor>;
  actorAggregate: ActorAggregate;
  actorByPk?: Maybe<Actor>;
  actorImage: Array<ActorImage>;
  actorImageAggregate: ActorImageAggregate;
  actorImageByPk?: Maybe<ActorImage>;
  actorImageStream: Array<ActorImage>;
  actorStream: Array<Actor>;
  actorTag: Array<ActorTag>;
  actorTagAggregate: ActorTagAggregate;
  actorTagByPk?: Maybe<ActorTag>;
  actorTagStream: Array<ActorTag>;
  address: Array<Address>;
  addressAggregate: AddressAggregate;
  addressByPk?: Maybe<Address>;
  addressStream: Array<Address>;
  adminRole: Array<AdminRole>;
  adminRoleAggregate: AdminRoleAggregate;
  adminRoleByPk?: Maybe<AdminRole>;
  adminRoleStream: Array<AdminRole>;
  bankAccount: Array<BankAccount>;
  bankAccountAggregate: BankAccountAggregate;
  bankAccountByPk?: Maybe<BankAccount>;
  bankAccountStream: Array<BankAccount>;
  bankInfo: Array<BankInfo>;
  bankInfoAggregate: BankInfoAggregate;
  bankInfoByPk?: Maybe<BankInfo>;
  bankInfoStream: Array<BankInfo>;
  campus: Array<Campus>;
  campusAggregate: CampusAggregate;
  campusByPk?: Maybe<Campus>;
  campusCluster: Array<CampusCluster>;
  campusClusterAggregate: CampusClusterAggregate;
  campusClusterByPk?: Maybe<CampusCluster>;
  campusClusterStream: Array<CampusCluster>;
  campusStream: Array<Campus>;
  event: Array<Event>;
  eventAggregate: EventAggregate;
  eventApproval: Array<EventApproval>;
  eventApprovalAggregate: EventApprovalAggregate;
  eventApprovalByPk?: Maybe<EventApproval>;
  eventApprovalStep: Array<EventApprovalStep>;
  eventApprovalStepAggregate: EventApprovalStepAggregate;
  eventApprovalStepByPk?: Maybe<EventApprovalStep>;
  eventApprovalStepStream: Array<EventApprovalStep>;
  eventApprovalStream: Array<EventApproval>;
  eventApprovalValidator: Array<EventApprovalValidator>;
  eventApprovalValidatorAggregate: EventApprovalValidatorAggregate;
  eventApprovalValidatorByPk?: Maybe<EventApprovalValidator>;
  eventApprovalValidatorStream: Array<EventApprovalValidator>;
  eventByPk?: Maybe<Event>;
  eventFavorite: Array<EventFavorite>;
  eventFavoriteAggregate: EventFavoriteAggregate;
  eventFavoriteByPk?: Maybe<EventFavorite>;
  eventFavoriteStream: Array<EventFavorite>;
  eventJoin: Array<EventJoin>;
  eventJoinAggregate: EventJoinAggregate;
  eventJoinByPk?: Maybe<EventJoin>;
  eventJoinStream: Array<EventJoin>;
  eventOrganize: Array<EventOrganize>;
  eventOrganizeAggregate: EventOrganizeAggregate;
  eventOrganizeByPk?: Maybe<EventOrganize>;
  eventOrganizeStream: Array<EventOrganize>;
  eventStream: Array<Event>;
  eventSupervisor: Array<EventSupervisor>;
  eventSupervisorAggregate: EventSupervisorAggregate;
  eventSupervisorByPk?: Maybe<EventSupervisor>;
  eventSupervisorStream: Array<EventSupervisor>;
  expense: Array<Expense>;
  expenseAggregate: ExpenseAggregate;
  expenseByPk?: Maybe<Expense>;
  expenseItem: Array<ExpenseItem>;
  expenseItemAggregate: ExpenseItemAggregate;
  expenseItemAttachments: Array<ExpenseItemAttachments>;
  expenseItemAttachmentsAggregate: ExpenseItemAttachmentsAggregate;
  expenseItemAttachmentsByPk?: Maybe<ExpenseItemAttachments>;
  expenseItemAttachmentsStream: Array<ExpenseItemAttachments>;
  expenseItemByPk?: Maybe<ExpenseItem>;
  expenseItemStream: Array<ExpenseItem>;
  expenseStream: Array<Expense>;
  fileUpload: Array<FileUpload>;
  fileUploadAggregate: FileUploadAggregate;
  fileUploadByPk?: Maybe<FileUpload>;
  fileUploadStream: Array<FileUpload>;
  follow: Array<Follow>;
  followAggregate: FollowAggregate;
  followByPk?: Maybe<Follow>;
  followStream: Array<Follow>;
  form: Array<Form>;
  formAggregate: FormAggregate;
  formByPk?: Maybe<Form>;
  formStream: Array<Form>;
  formSubmission: Array<FormSubmission>;
  formSubmissionAggregate: FormSubmissionAggregate;
  formSubmissionByPk?: Maybe<FormSubmission>;
  formSubmissionStream: Array<FormSubmission>;
  getCurrentUser?: Maybe<User>;
  getCurrentUserAggregate: UserAggregate;
  grant: Array<Grant>;
  grantAggregate: GrantAggregate;
  grantAllocate: Array<GrantAllocate>;
  grantAllocateAggregate: GrantAllocateAggregate;
  grantAllocateAttachments: Array<GrantAllocateAttachments>;
  grantAllocateAttachmentsAggregate: GrantAllocateAttachmentsAggregate;
  grantAllocateAttachmentsByPk?: Maybe<GrantAllocateAttachments>;
  grantAllocateAttachmentsStream: Array<GrantAllocateAttachments>;
  grantAllocateByPk?: Maybe<GrantAllocate>;
  grantAllocateStream: Array<GrantAllocate>;
  grantAttachments: Array<GrantAttachments>;
  grantAttachmentsAggregate: GrantAttachmentsAggregate;
  grantAttachmentsByPk?: Maybe<GrantAttachments>;
  grantAttachmentsStream: Array<GrantAttachments>;
  grantByPk?: Maybe<Grant>;
  grantStream: Array<Grant>;
  legalUnit: Array<LegalUnit>;
  legalUnitAggregate: LegalUnitAggregate;
  legalUnitByPk?: Maybe<LegalUnit>;
  legalUnitStream: Array<LegalUnit>;
  location: Array<Location>;
  locationAggregate: LocationAggregate;
  locationByPk?: Maybe<Location>;
  locationImages: Array<LocationImages>;
  locationImagesAggregate: LocationImagesAggregate;
  locationImagesByPk?: Maybe<LocationImages>;
  locationImagesStream: Array<LocationImages>;
  locationStream: Array<Location>;
  mission: Array<Mission>;
  missionAggregate: MissionAggregate;
  missionByPk?: Maybe<Mission>;
  missionJoin: Array<MissionJoin>;
  missionJoinAggregate: MissionJoinAggregate;
  missionJoinByPk?: Maybe<MissionJoin>;
  missionJoinStream: Array<MissionJoin>;
  missionStream: Array<Mission>;
  project: Array<Project>;
  projectAggregate: ProjectAggregate;
  projectByPk?: Maybe<Project>;
  projectStream: Array<Project>;
  projectSupervisor: Array<ProjectSupervisor>;
  projectSupervisorAggregate: ProjectSupervisorAggregate;
  projectSupervisorByPk?: Maybe<ProjectSupervisor>;
  projectSupervisorStream: Array<ProjectSupervisor>;
  requiredDocument: Array<RequiredDocument>;
  requiredDocumentAggregate: RequiredDocumentAggregate;
  requiredDocumentByPk?: Maybe<RequiredDocument>;
  requiredDocumentStream: Array<RequiredDocument>;
  requiredRole: Array<RequiredRole>;
  requiredRoleAggregate: RequiredRoleAggregate;
  requiredRoleByPk?: Maybe<RequiredRole>;
  requiredRoleStream: Array<RequiredRole>;
  social: Array<Social>;
  socialAggregate: SocialAggregate;
  socialByPk?: Maybe<Social>;
  socialStream: Array<Social>;
  tag: Array<Tag>;
  tagAggregate: TagAggregate;
  tagByPk?: Maybe<Tag>;
  tagStream: Array<Tag>;
  team: Array<Team>;
  teamAggregate: TeamAggregate;
  teamByPk?: Maybe<Team>;
  teamDocument: Array<TeamDocument>;
  teamDocumentAggregate: TeamDocumentAggregate;
  teamDocumentByPk?: Maybe<TeamDocument>;
  teamDocumentStream: Array<TeamDocument>;
  teamHistory: Array<TeamHistory>;
  teamHistoryAggregate: TeamHistoryAggregate;
  teamHistoryByPk?: Maybe<TeamHistory>;
  teamHistoryStream: Array<TeamHistory>;
  teamJoin: Array<TeamJoin>;
  teamJoinAggregate: TeamJoinAggregate;
  teamJoinByPk?: Maybe<TeamJoin>;
  teamJoinStream: Array<TeamJoin>;
  teamMember: Array<TeamMember>;
  teamMemberAggregate: TeamMemberAggregate;
  teamMemberByPk?: Maybe<TeamMember>;
  teamMemberRole: Array<TeamMemberRole>;
  teamMemberRoleAggregate: TeamMemberRoleAggregate;
  teamMemberRoleByPk?: Maybe<TeamMemberRole>;
  teamMemberRoleStream: Array<TeamMemberRole>;
  teamMemberStream: Array<TeamMember>;
  teamRequiredRole: Array<TeamRequiredRole>;
  teamRequiredRoleAggregate: TeamRequiredRoleAggregate;
  teamRequiredRoleByPk?: Maybe<TeamRequiredRole>;
  teamRequiredRoleStream: Array<TeamRequiredRole>;
  teamRole: Array<TeamRole>;
  teamRoleAggregate: TeamRoleAggregate;
  teamRoleByPk?: Maybe<TeamRole>;
  teamRoleStream: Array<TeamRole>;
  teamStream: Array<Team>;
  tenant: Array<Tenant>;
  tenantAggregate: TenantAggregate;
  tenantByPk?: Maybe<Tenant>;
  tenantMember: Array<TenantMember>;
  tenantMemberAggregate: TenantMemberAggregate;
  tenantMemberByPk?: Maybe<TenantMember>;
  tenantMemberRole: Array<TenantMemberRole>;
  tenantMemberRoleAggregate: TenantMemberRoleAggregate;
  tenantMemberRoleByPk?: Maybe<TenantMemberRole>;
  tenantMemberRoleStream: Array<TenantMemberRole>;
  tenantMemberStream: Array<TenantMember>;
  tenantRole: Array<TenantRole>;
  tenantRoleAggregate: TenantRoleAggregate;
  tenantRoleByPk?: Maybe<TenantRole>;
  tenantRoleStream: Array<TenantRole>;
  tenantStream: Array<Tenant>;
  transaction: Array<Transaction>;
  transactionAggregate: TransactionAggregate;
  transactionAttachments: Array<TransactionAttachments>;
  transactionAttachmentsAggregate: TransactionAttachmentsAggregate;
  transactionAttachmentsByPk?: Maybe<TransactionAttachments>;
  transactionAttachmentsStream: Array<TransactionAttachments>;
  transactionByPk?: Maybe<Transaction>;
  transactionStream: Array<Transaction>;
  user: Array<User>;
  userAggregate: UserAggregate;
  userByPk?: Maybe<User>;
  userStream: Array<User>;
};

export type SubscriptionActionArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type SubscriptionActionAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type SubscriptionActionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionActionStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ActionStreamCursorInput>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type SubscriptionActorArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type SubscriptionActorAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type SubscriptionActorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionActorImageArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type SubscriptionActorImageAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type SubscriptionActorImageByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionActorImageStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ActorImageStreamCursorInput>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type SubscriptionActorStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ActorStreamCursorInput>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type SubscriptionActorTagArgs = {
  distinctOn?: InputMaybe<Array<ActorTagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagOrderBy>>;
  where?: InputMaybe<ActorTagBoolExp>;
};

export type SubscriptionActorTagAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorTagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagOrderBy>>;
  where?: InputMaybe<ActorTagBoolExp>;
};

export type SubscriptionActorTagByPkArgs = {
  actorId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type SubscriptionActorTagStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ActorTagStreamCursorInput>>;
  where?: InputMaybe<ActorTagBoolExp>;
};

export type SubscriptionAddressArgs = {
  distinctOn?: InputMaybe<Array<AddressSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AddressOrderBy>>;
  where?: InputMaybe<AddressBoolExp>;
};

export type SubscriptionAddressAggregateArgs = {
  distinctOn?: InputMaybe<Array<AddressSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AddressOrderBy>>;
  where?: InputMaybe<AddressBoolExp>;
};

export type SubscriptionAddressByPkArgs = {
  geoapifyId: Scalars['String']['input'];
};

export type SubscriptionAddressStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<AddressStreamCursorInput>>;
  where?: InputMaybe<AddressBoolExp>;
};

export type SubscriptionAdminRoleArgs = {
  distinctOn?: InputMaybe<Array<AdminRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdminRoleOrderBy>>;
  where?: InputMaybe<AdminRoleBoolExp>;
};

export type SubscriptionAdminRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<AdminRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdminRoleOrderBy>>;
  where?: InputMaybe<AdminRoleBoolExp>;
};

export type SubscriptionAdminRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionAdminRoleStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<AdminRoleStreamCursorInput>>;
  where?: InputMaybe<AdminRoleBoolExp>;
};

export type SubscriptionBankAccountArgs = {
  distinctOn?: InputMaybe<Array<BankAccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankAccountOrderBy>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type SubscriptionBankAccountAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankAccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankAccountOrderBy>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type SubscriptionBankAccountByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionBankAccountStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<BankAccountStreamCursorInput>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type SubscriptionBankInfoArgs = {
  distinctOn?: InputMaybe<Array<BankInfoSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankInfoOrderBy>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type SubscriptionBankInfoAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankInfoSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankInfoOrderBy>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type SubscriptionBankInfoByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionBankInfoStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<BankInfoStreamCursorInput>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type SubscriptionCampusArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type SubscriptionCampusAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type SubscriptionCampusByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionCampusClusterArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type SubscriptionCampusClusterAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type SubscriptionCampusClusterByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionCampusClusterStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CampusClusterStreamCursorInput>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type SubscriptionCampusStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CampusStreamCursorInput>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type SubscriptionEventArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type SubscriptionEventAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type SubscriptionEventApprovalArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type SubscriptionEventApprovalAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type SubscriptionEventApprovalByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventApprovalStepArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type SubscriptionEventApprovalStepAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type SubscriptionEventApprovalStepByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventApprovalStepStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventApprovalStepStreamCursorInput>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type SubscriptionEventApprovalStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventApprovalStreamCursorInput>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type SubscriptionEventApprovalValidatorArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalValidatorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalValidatorOrderBy>>;
  where?: InputMaybe<EventApprovalValidatorBoolExp>;
};

export type SubscriptionEventApprovalValidatorAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalValidatorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalValidatorOrderBy>>;
  where?: InputMaybe<EventApprovalValidatorBoolExp>;
};

export type SubscriptionEventApprovalValidatorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventApprovalValidatorStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventApprovalValidatorStreamCursorInput>>;
  where?: InputMaybe<EventApprovalValidatorBoolExp>;
};

export type SubscriptionEventByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventFavoriteArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type SubscriptionEventFavoriteAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type SubscriptionEventFavoriteByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventFavoriteStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventFavoriteStreamCursorInput>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type SubscriptionEventJoinArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type SubscriptionEventJoinAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type SubscriptionEventJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventJoinStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventJoinStreamCursorInput>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type SubscriptionEventOrganizeArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type SubscriptionEventOrganizeAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type SubscriptionEventOrganizeByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventOrganizeStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventOrganizeStreamCursorInput>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type SubscriptionEventStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventStreamCursorInput>>;
  where?: InputMaybe<EventBoolExp>;
};

export type SubscriptionEventSupervisorArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type SubscriptionEventSupervisorAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type SubscriptionEventSupervisorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventSupervisorStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventSupervisorStreamCursorInput>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type SubscriptionExpenseArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type SubscriptionExpenseAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type SubscriptionExpenseByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionExpenseItemArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type SubscriptionExpenseItemAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type SubscriptionExpenseItemAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type SubscriptionExpenseItemAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type SubscriptionExpenseItemAttachmentsByPkArgs = {
  expenseItemId: Scalars['bigint']['input'];
  fileUploadId: Scalars['bigint']['input'];
};

export type SubscriptionExpenseItemAttachmentsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ExpenseItemAttachmentsStreamCursorInput>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type SubscriptionExpenseItemByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionExpenseItemStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ExpenseItemStreamCursorInput>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type SubscriptionExpenseStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ExpenseStreamCursorInput>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type SubscriptionFileUploadArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type SubscriptionFileUploadAggregateArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type SubscriptionFileUploadByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionFileUploadStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FileUploadStreamCursorInput>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type SubscriptionFollowArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type SubscriptionFollowAggregateArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type SubscriptionFollowByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionFollowStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FollowStreamCursorInput>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type SubscriptionFormArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type SubscriptionFormAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type SubscriptionFormByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionFormStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FormStreamCursorInput>>;
  where?: InputMaybe<FormBoolExp>;
};

export type SubscriptionFormSubmissionArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type SubscriptionFormSubmissionAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type SubscriptionFormSubmissionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionFormSubmissionStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FormSubmissionStreamCursorInput>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type SubscriptionGetCurrentUserArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type SubscriptionGetCurrentUserAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type SubscriptionGrantArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type SubscriptionGrantAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type SubscriptionGrantAllocateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type SubscriptionGrantAllocateAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type SubscriptionGrantAllocateAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type SubscriptionGrantAllocateAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type SubscriptionGrantAllocateAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  grantAllocateId: Scalars['bigint']['input'];
};

export type SubscriptionGrantAllocateAttachmentsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<GrantAllocateAttachmentsStreamCursorInput>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type SubscriptionGrantAllocateByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionGrantAllocateStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<GrantAllocateStreamCursorInput>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type SubscriptionGrantAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type SubscriptionGrantAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type SubscriptionGrantAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  grantId: Scalars['bigint']['input'];
};

export type SubscriptionGrantAttachmentsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<GrantAttachmentsStreamCursorInput>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type SubscriptionGrantByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionGrantStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<GrantStreamCursorInput>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type SubscriptionLegalUnitArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type SubscriptionLegalUnitAggregateArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type SubscriptionLegalUnitByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionLegalUnitStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<LegalUnitStreamCursorInput>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type SubscriptionLocationArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type SubscriptionLocationAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type SubscriptionLocationByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionLocationImagesArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type SubscriptionLocationImagesAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type SubscriptionLocationImagesByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  locationId: Scalars['bigint']['input'];
};

export type SubscriptionLocationImagesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<LocationImagesStreamCursorInput>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type SubscriptionLocationStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<LocationStreamCursorInput>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type SubscriptionMissionArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type SubscriptionMissionAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type SubscriptionMissionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionMissionJoinArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type SubscriptionMissionJoinAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type SubscriptionMissionJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionMissionJoinStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<MissionJoinStreamCursorInput>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type SubscriptionMissionStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<MissionStreamCursorInput>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type SubscriptionProjectArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type SubscriptionProjectAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type SubscriptionProjectByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionProjectStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ProjectStreamCursorInput>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type SubscriptionProjectSupervisorArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorOrderBy>>;
  where?: InputMaybe<ProjectSupervisorBoolExp>;
};

export type SubscriptionProjectSupervisorAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorOrderBy>>;
  where?: InputMaybe<ProjectSupervisorBoolExp>;
};

export type SubscriptionProjectSupervisorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionProjectSupervisorStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ProjectSupervisorStreamCursorInput>>;
  where?: InputMaybe<ProjectSupervisorBoolExp>;
};

export type SubscriptionRequiredDocumentArgs = {
  distinctOn?: InputMaybe<Array<RequiredDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredDocumentOrderBy>>;
  where?: InputMaybe<RequiredDocumentBoolExp>;
};

export type SubscriptionRequiredDocumentAggregateArgs = {
  distinctOn?: InputMaybe<Array<RequiredDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredDocumentOrderBy>>;
  where?: InputMaybe<RequiredDocumentBoolExp>;
};

export type SubscriptionRequiredDocumentByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionRequiredDocumentStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<RequiredDocumentStreamCursorInput>>;
  where?: InputMaybe<RequiredDocumentBoolExp>;
};

export type SubscriptionRequiredRoleArgs = {
  distinctOn?: InputMaybe<Array<RequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredRoleOrderBy>>;
  where?: InputMaybe<RequiredRoleBoolExp>;
};

export type SubscriptionRequiredRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<RequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredRoleOrderBy>>;
  where?: InputMaybe<RequiredRoleBoolExp>;
};

export type SubscriptionRequiredRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionRequiredRoleStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<RequiredRoleStreamCursorInput>>;
  where?: InputMaybe<RequiredRoleBoolExp>;
};

export type SubscriptionSocialArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type SubscriptionSocialAggregateArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type SubscriptionSocialByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionSocialStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SocialStreamCursorInput>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type SubscriptionTagArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type SubscriptionTagAggregateArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type SubscriptionTagByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTagStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TagStreamCursorInput>>;
  where?: InputMaybe<TagBoolExp>;
};

export type SubscriptionTeamArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type SubscriptionTeamAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type SubscriptionTeamByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTeamDocumentArgs = {
  distinctOn?: InputMaybe<Array<TeamDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamDocumentOrderBy>>;
  where?: InputMaybe<TeamDocumentBoolExp>;
};

export type SubscriptionTeamDocumentAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamDocumentOrderBy>>;
  where?: InputMaybe<TeamDocumentBoolExp>;
};

export type SubscriptionTeamDocumentByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTeamDocumentStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamDocumentStreamCursorInput>>;
  where?: InputMaybe<TeamDocumentBoolExp>;
};

export type SubscriptionTeamHistoryArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type SubscriptionTeamHistoryAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type SubscriptionTeamHistoryByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTeamHistoryStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamHistoryStreamCursorInput>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type SubscriptionTeamJoinArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type SubscriptionTeamJoinAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type SubscriptionTeamJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTeamJoinStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamJoinStreamCursorInput>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type SubscriptionTeamMemberArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type SubscriptionTeamMemberAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type SubscriptionTeamMemberByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTeamMemberRoleArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRoleOrderBy>>;
  where?: InputMaybe<TeamMemberRoleBoolExp>;
};

export type SubscriptionTeamMemberRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRoleOrderBy>>;
  where?: InputMaybe<TeamMemberRoleBoolExp>;
};

export type SubscriptionTeamMemberRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTeamMemberRoleStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamMemberRoleStreamCursorInput>>;
  where?: InputMaybe<TeamMemberRoleBoolExp>;
};

export type SubscriptionTeamMemberStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamMemberStreamCursorInput>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type SubscriptionTeamRequiredRoleArgs = {
  distinctOn?: InputMaybe<Array<TeamRequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRequiredRoleOrderBy>>;
  where?: InputMaybe<TeamRequiredRoleBoolExp>;
};

export type SubscriptionTeamRequiredRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamRequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRequiredRoleOrderBy>>;
  where?: InputMaybe<TeamRequiredRoleBoolExp>;
};

export type SubscriptionTeamRequiredRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTeamRequiredRoleStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamRequiredRoleStreamCursorInput>>;
  where?: InputMaybe<TeamRequiredRoleBoolExp>;
};

export type SubscriptionTeamRoleArgs = {
  distinctOn?: InputMaybe<Array<TeamRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRoleOrderBy>>;
  where?: InputMaybe<TeamRoleBoolExp>;
};

export type SubscriptionTeamRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRoleOrderBy>>;
  where?: InputMaybe<TeamRoleBoolExp>;
};

export type SubscriptionTeamRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTeamRoleStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamRoleStreamCursorInput>>;
  where?: InputMaybe<TeamRoleBoolExp>;
};

export type SubscriptionTeamStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamStreamCursorInput>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type SubscriptionTenantArgs = {
  distinctOn?: InputMaybe<Array<TenantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrderBy>>;
  where?: InputMaybe<TenantBoolExp>;
};

export type SubscriptionTenantAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrderBy>>;
  where?: InputMaybe<TenantBoolExp>;
};

export type SubscriptionTenantByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTenantMemberArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberOrderBy>>;
  where?: InputMaybe<TenantMemberBoolExp>;
};

export type SubscriptionTenantMemberAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberOrderBy>>;
  where?: InputMaybe<TenantMemberBoolExp>;
};

export type SubscriptionTenantMemberByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTenantMemberRoleArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberRoleOrderBy>>;
  where?: InputMaybe<TenantMemberRoleBoolExp>;
};

export type SubscriptionTenantMemberRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberRoleOrderBy>>;
  where?: InputMaybe<TenantMemberRoleBoolExp>;
};

export type SubscriptionTenantMemberRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTenantMemberRoleStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TenantMemberRoleStreamCursorInput>>;
  where?: InputMaybe<TenantMemberRoleBoolExp>;
};

export type SubscriptionTenantMemberStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TenantMemberStreamCursorInput>>;
  where?: InputMaybe<TenantMemberBoolExp>;
};

export type SubscriptionTenantRoleArgs = {
  distinctOn?: InputMaybe<Array<TenantRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantRoleOrderBy>>;
  where?: InputMaybe<TenantRoleBoolExp>;
};

export type SubscriptionTenantRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantRoleOrderBy>>;
  where?: InputMaybe<TenantRoleBoolExp>;
};

export type SubscriptionTenantRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTenantRoleStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TenantRoleStreamCursorInput>>;
  where?: InputMaybe<TenantRoleBoolExp>;
};

export type SubscriptionTenantStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TenantStreamCursorInput>>;
  where?: InputMaybe<TenantBoolExp>;
};

export type SubscriptionTransactionArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type SubscriptionTransactionAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type SubscriptionTransactionAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<TransactionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionAttachmentsOrderBy>>;
  where?: InputMaybe<TransactionAttachmentsBoolExp>;
};

export type SubscriptionTransactionAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionAttachmentsOrderBy>>;
  where?: InputMaybe<TransactionAttachmentsBoolExp>;
};

export type SubscriptionTransactionAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  transactionId: Scalars['bigint']['input'];
};

export type SubscriptionTransactionAttachmentsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TransactionAttachmentsStreamCursorInput>>;
  where?: InputMaybe<TransactionAttachmentsBoolExp>;
};

export type SubscriptionTransactionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTransactionStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TransactionStreamCursorInput>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type SubscriptionUserArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type SubscriptionUserAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type SubscriptionUserByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionUserStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<UserStreamCursorInput>>;
  where?: InputMaybe<UserBoolExp>;
};

export type Tag = {
  __typename?: 'Tag';
  actorTags: Array<ActorTag>;
  actorTagsAggregate: ActorTagAggregate;
  color: Scalars['Colors']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  icon?: Maybe<FileUpload>;
  iconId?: Maybe<Scalars['bigint']['output']>;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  ownerActor?: Maybe<Actor>;
  ownerActorId?: Maybe<Scalars['bigint']['output']>;
  slug: Scalars['String']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  type: Scalars['TagType']['output'];
};

export type TagActorTagsArgs = {
  distinctOn?: InputMaybe<Array<ActorTagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagOrderBy>>;
  where?: InputMaybe<ActorTagBoolExp>;
};

export type TagActorTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorTagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagOrderBy>>;
  where?: InputMaybe<ActorTagBoolExp>;
};

export type TagAggregate = {
  __typename?: 'TagAggregate';
  aggregate?: Maybe<TagAggregateFields>;
  nodes: Array<Tag>;
};

export type TagAggregateBoolExp = {
  count?: InputMaybe<TagAggregateBoolExpCount>;
};

export type TagAggregateFields = {
  __typename?: 'TagAggregateFields';
  avg?: Maybe<TagAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TagMaxFields>;
  min?: Maybe<TagMinFields>;
  stddev?: Maybe<TagStddevFields>;
  stddevPop?: Maybe<TagStddevPopFields>;
  stddevSamp?: Maybe<TagStddevSampFields>;
  sum?: Maybe<TagSumFields>;
  varPop?: Maybe<TagVarPopFields>;
  varSamp?: Maybe<TagVarSampFields>;
  variance?: Maybe<TagVarianceFields>;
};

export type TagAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TagSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TagAggregateOrderBy = {
  avg?: InputMaybe<TagAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TagMaxOrderBy>;
  min?: InputMaybe<TagMinOrderBy>;
  stddev?: InputMaybe<TagStddevOrderBy>;
  stddevPop?: InputMaybe<TagStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TagStddevSampOrderBy>;
  sum?: InputMaybe<TagSumOrderBy>;
  varPop?: InputMaybe<TagVarPopOrderBy>;
  varSamp?: InputMaybe<TagVarSampOrderBy>;
  variance?: InputMaybe<TagVarianceOrderBy>;
};

export type TagArrRelInsertInput = {
  data: Array<TagInsertInput>;
  onConflict?: InputMaybe<TagOnConflict>;
};

export type TagAvgFields = {
  __typename?: 'TagAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  iconId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  ownerActorId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TagAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  iconId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ownerActorId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TagBoolExp = {
  _and?: InputMaybe<Array<TagBoolExp>>;
  _not?: InputMaybe<TagBoolExp>;
  _or?: InputMaybe<Array<TagBoolExp>>;
  actorTags?: InputMaybe<ActorTagBoolExp>;
  actorTagsAggregate?: InputMaybe<ActorTagAggregateBoolExp>;
  color?: InputMaybe<ColorsComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  icon?: InputMaybe<FileUploadBoolExp>;
  iconId?: InputMaybe<BigintComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  ownerActor?: InputMaybe<ActorBoolExp>;
  ownerActorId?: InputMaybe<BigintComparisonExp>;
  slug?: InputMaybe<StringComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<TagTypeComparisonExp>;
};

export enum TagConstraint {
  TagPkey = 'tag_pkey',
}

export type TagIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  iconId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  ownerActorId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TagInsertInput = {
  actorTags?: InputMaybe<ActorTagArrRelInsertInput>;
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  icon?: InputMaybe<FileUploadObjRelInsertInput>;
  iconId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  ownerActor?: InputMaybe<ActorObjRelInsertInput>;
  ownerActorId?: InputMaybe<Scalars['bigint']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TagType']['input']>;
};

export type TagMaxFields = {
  __typename?: 'TagMaxFields';
  color?: Maybe<Scalars['Colors']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  iconId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  ownerActorId?: Maybe<Scalars['bigint']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['TagType']['output']>;
};

export type TagMaxOrderBy = {
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  iconId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  ownerActorId?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TagMinFields = {
  __typename?: 'TagMinFields';
  color?: Maybe<Scalars['Colors']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  iconId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  ownerActorId?: Maybe<Scalars['bigint']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['TagType']['output']>;
};

export type TagMinOrderBy = {
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  iconId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  ownerActorId?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TagMutationResponse = {
  __typename?: 'TagMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Tag>;
};

export type TagObjRelInsertInput = {
  data: TagInsertInput;
  onConflict?: InputMaybe<TagOnConflict>;
};

export type TagOnConflict = {
  constraint: TagConstraint;
  updateColumns?: Array<TagUpdateColumn>;
  where?: InputMaybe<TagBoolExp>;
};

export type TagOrderBy = {
  actorTagsAggregate?: InputMaybe<ActorTagAggregateOrderBy>;
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  icon?: InputMaybe<FileUploadOrderBy>;
  iconId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  ownerActor?: InputMaybe<ActorOrderBy>;
  ownerActorId?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TagPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TagSelectColumn {
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  IconId = 'iconId',
  Id = 'id',
  Name = 'name',
  OwnerActorId = 'ownerActorId',
  Slug = 'slug',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export type TagSetInput = {
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  iconId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  ownerActorId?: InputMaybe<Scalars['bigint']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TagType']['input']>;
};

export type TagStddevFields = {
  __typename?: 'TagStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  iconId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  ownerActorId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TagStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  iconId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ownerActorId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TagStddevPopFields = {
  __typename?: 'TagStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  iconId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  ownerActorId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TagStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  iconId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ownerActorId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TagStddevSampFields = {
  __typename?: 'TagStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  iconId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  ownerActorId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TagStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  iconId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ownerActorId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TagStreamCursorInput = {
  initialValue: TagStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TagStreamCursorValueInput = {
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  iconId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  ownerActorId?: InputMaybe<Scalars['bigint']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TagType']['input']>;
};

export type TagSumFields = {
  __typename?: 'TagSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  iconId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  ownerActorId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type TagSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  iconId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ownerActorId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TagTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['TagType']['input']>;
  _gt?: InputMaybe<Scalars['TagType']['input']>;
  _gte?: InputMaybe<Scalars['TagType']['input']>;
  _in?: InputMaybe<Array<Scalars['TagType']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['TagType']['input']>;
  _lte?: InputMaybe<Scalars['TagType']['input']>;
  _neq?: InputMaybe<Scalars['TagType']['input']>;
  _nin?: InputMaybe<Array<Scalars['TagType']['input']>>;
};

export enum TagUpdateColumn {
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  IconId = 'iconId',
  Id = 'id',
  Name = 'name',
  OwnerActorId = 'ownerActorId',
  Slug = 'slug',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export type TagUpdates = {
  _inc?: InputMaybe<TagIncInput>;
  _set?: InputMaybe<TagSetInput>;
  where: TagBoolExp;
};

export type TagVarPopFields = {
  __typename?: 'TagVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  iconId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  ownerActorId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TagVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  iconId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ownerActorId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TagVarSampFields = {
  __typename?: 'TagVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  iconId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  ownerActorId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TagVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  iconId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ownerActorId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TagVarianceFields = {
  __typename?: 'TagVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  iconId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  ownerActorId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TagVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  iconId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ownerActorId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type Team = {
  __typename?: 'Team';
  actions: Array<Action>;
  actionsAggregate: ActionAggregate;
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  bankAccounts: Array<BankAccount>;
  bankAccountsAggregate: BankAccountAggregate;
  childrenTeams: Array<Team>;
  childrenTeamsAggregate: TeamAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  directorsCategoryName: Scalars['String']['output'];
  eventOrganizes: Array<EventOrganize>;
  eventOrganizesAggregate: EventOrganizeAggregate;
  expectingPresidentEmail?: Maybe<Scalars['String']['output']>;
  expectingSecretaryEmail?: Maybe<Scalars['String']['output']>;
  expectingTreasurerEmail?: Maybe<Scalars['String']['output']>;
  grantFund?: Maybe<LegalUnit>;
  grants: Array<Grant>;
  grantsAggregate: GrantAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isJoinFormActive: Scalars['Boolean']['output'];
  isOnboardingComplete: Scalars['Boolean']['output'];
  joinForm?: Maybe<Form>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  managersCategoryName: Scalars['String']['output'];
  membersCategoryName: Scalars['String']['output'];
  membershipDuration: Scalars['String']['output'];
  membershipFees: Scalars['Float']['output'];
  missions: Array<Mission>;
  missionsAggregate: MissionAggregate;
  parent?: Maybe<Team>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  projects: Array<Project>;
  projectsAggregate: ProjectAggregate;
  slug: Scalars['String']['output'];
  teamDocuments: Array<TeamDocument>;
  teamDocumentsAggregate: TeamDocumentAggregate;
  teamHistories: Array<TeamHistory>;
  teamHistoriesAggregate: TeamHistoryAggregate;
  teamJoins: Array<TeamJoin>;
  teamJoinsAggregate: TeamJoinAggregate;
  teamMembers: Array<TeamMember>;
  teamMembersAggregate: TeamMemberAggregate;
  teamRoles: Array<TeamRole>;
  teamRolesAggregate: TeamRoleAggregate;
  tenantGrantFundId?: Maybe<Scalars['bigint']['output']>;
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  type: Scalars['TeamType']['output'];
  video?: Maybe<FileUpload>;
  videoId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamActionsArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type TeamActionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type TeamBankAccountsArgs = {
  distinctOn?: InputMaybe<Array<BankAccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankAccountOrderBy>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type TeamBankAccountsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankAccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankAccountOrderBy>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type TeamChildrenTeamsArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type TeamChildrenTeamsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type TeamEventOrganizesArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type TeamEventOrganizesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type TeamGrantsArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type TeamGrantsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type TeamMissionsArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type TeamMissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type TeamProjectsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type TeamProjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type TeamTeamDocumentsArgs = {
  distinctOn?: InputMaybe<Array<TeamDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamDocumentOrderBy>>;
  where?: InputMaybe<TeamDocumentBoolExp>;
};

export type TeamTeamDocumentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamDocumentOrderBy>>;
  where?: InputMaybe<TeamDocumentBoolExp>;
};

export type TeamTeamHistoriesArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type TeamTeamHistoriesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type TeamTeamJoinsArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type TeamTeamJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type TeamTeamMembersArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type TeamTeamMembersAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type TeamTeamRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRoleOrderBy>>;
  where?: InputMaybe<TeamRoleBoolExp>;
};

export type TeamTeamRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRoleOrderBy>>;
  where?: InputMaybe<TeamRoleBoolExp>;
};

export type TeamAggregate = {
  __typename?: 'TeamAggregate';
  aggregate?: Maybe<TeamAggregateFields>;
  nodes: Array<Team>;
};

export type TeamAggregateBoolExp = {
  bool_and?: InputMaybe<TeamAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<TeamAggregateBoolExpBool_Or>;
  count?: InputMaybe<TeamAggregateBoolExpCount>;
};

export type TeamAggregateFields = {
  __typename?: 'TeamAggregateFields';
  avg?: Maybe<TeamAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamMaxFields>;
  min?: Maybe<TeamMinFields>;
  stddev?: Maybe<TeamStddevFields>;
  stddevPop?: Maybe<TeamStddevPopFields>;
  stddevSamp?: Maybe<TeamStddevSampFields>;
  sum?: Maybe<TeamSumFields>;
  varPop?: Maybe<TeamVarPopFields>;
  varSamp?: Maybe<TeamVarSampFields>;
  variance?: Maybe<TeamVarianceFields>;
};

export type TeamAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TeamAggregateOrderBy = {
  avg?: InputMaybe<TeamAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TeamMaxOrderBy>;
  min?: InputMaybe<TeamMinOrderBy>;
  stddev?: InputMaybe<TeamStddevOrderBy>;
  stddevPop?: InputMaybe<TeamStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TeamStddevSampOrderBy>;
  sum?: InputMaybe<TeamSumOrderBy>;
  varPop?: InputMaybe<TeamVarPopOrderBy>;
  varSamp?: InputMaybe<TeamVarSampOrderBy>;
  variance?: InputMaybe<TeamVarianceOrderBy>;
};

export type TeamArrRelInsertInput = {
  data: Array<TeamInsertInput>;
  onConflict?: InputMaybe<TeamOnConflict>;
};

export type TeamAvgFields = {
  __typename?: 'TeamAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  tenantGrantFundId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  videoId?: Maybe<Scalars['Float']['output']>;
};

export type TeamAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamBoolExp = {
  _and?: InputMaybe<Array<TeamBoolExp>>;
  _not?: InputMaybe<TeamBoolExp>;
  _or?: InputMaybe<Array<TeamBoolExp>>;
  actions?: InputMaybe<ActionBoolExp>;
  actionsAggregate?: InputMaybe<ActionAggregateBoolExp>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  bankAccounts?: InputMaybe<BankAccountBoolExp>;
  bankAccountsAggregate?: InputMaybe<BankAccountAggregateBoolExp>;
  childrenTeams?: InputMaybe<TeamBoolExp>;
  childrenTeamsAggregate?: InputMaybe<TeamAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  directorsCategoryName?: InputMaybe<StringComparisonExp>;
  eventOrganizes?: InputMaybe<EventOrganizeBoolExp>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateBoolExp>;
  expectingPresidentEmail?: InputMaybe<StringComparisonExp>;
  expectingSecretaryEmail?: InputMaybe<StringComparisonExp>;
  expectingTreasurerEmail?: InputMaybe<StringComparisonExp>;
  grantFund?: InputMaybe<LegalUnitBoolExp>;
  grants?: InputMaybe<GrantBoolExp>;
  grantsAggregate?: InputMaybe<GrantAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isJoinFormActive?: InputMaybe<BooleanComparisonExp>;
  isOnboardingComplete?: InputMaybe<BooleanComparisonExp>;
  joinForm?: InputMaybe<FormBoolExp>;
  joinFormId?: InputMaybe<BigintComparisonExp>;
  managersCategoryName?: InputMaybe<StringComparisonExp>;
  membersCategoryName?: InputMaybe<StringComparisonExp>;
  membershipDuration?: InputMaybe<StringComparisonExp>;
  membershipFees?: InputMaybe<FloatComparisonExp>;
  missions?: InputMaybe<MissionBoolExp>;
  missionsAggregate?: InputMaybe<MissionAggregateBoolExp>;
  parent?: InputMaybe<TeamBoolExp>;
  parentId?: InputMaybe<BigintComparisonExp>;
  projects?: InputMaybe<ProjectBoolExp>;
  projectsAggregate?: InputMaybe<ProjectAggregateBoolExp>;
  slug?: InputMaybe<StringComparisonExp>;
  teamDocuments?: InputMaybe<TeamDocumentBoolExp>;
  teamDocumentsAggregate?: InputMaybe<TeamDocumentAggregateBoolExp>;
  teamHistories?: InputMaybe<TeamHistoryBoolExp>;
  teamHistoriesAggregate?: InputMaybe<TeamHistoryAggregateBoolExp>;
  teamJoins?: InputMaybe<TeamJoinBoolExp>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateBoolExp>;
  teamMembers?: InputMaybe<TeamMemberBoolExp>;
  teamMembersAggregate?: InputMaybe<TeamMemberAggregateBoolExp>;
  teamRoles?: InputMaybe<TeamRoleBoolExp>;
  teamRolesAggregate?: InputMaybe<TeamRoleAggregateBoolExp>;
  tenantGrantFundId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<TeamTypeComparisonExp>;
  video?: InputMaybe<FileUploadBoolExp>;
  videoId?: InputMaybe<BigintComparisonExp>;
};

export enum TeamConstraint {
  TeamActorIdUnique = 'team_actor_id_unique',
  TeamJoinFormIdUnique = 'team_join_form_id_unique',
  TeamPkey = 'team_pkey',
  TeamSlugUnique = 'team_slug_unique',
}

export type TeamDocument = {
  __typename?: 'TeamDocument';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  fileUpload?: Maybe<FileUpload>;
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  requiredDocument?: Maybe<RequiredDocument>;
  requiredDocumentId?: Maybe<Scalars['bigint']['output']>;
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  yearVersion?: Maybe<Scalars['smallint']['output']>;
};

export type TeamDocumentAggregate = {
  __typename?: 'TeamDocumentAggregate';
  aggregate?: Maybe<TeamDocumentAggregateFields>;
  nodes: Array<TeamDocument>;
};

export type TeamDocumentAggregateBoolExp = {
  count?: InputMaybe<TeamDocumentAggregateBoolExpCount>;
};

export type TeamDocumentAggregateFields = {
  __typename?: 'TeamDocumentAggregateFields';
  avg?: Maybe<TeamDocumentAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamDocumentMaxFields>;
  min?: Maybe<TeamDocumentMinFields>;
  stddev?: Maybe<TeamDocumentStddevFields>;
  stddevPop?: Maybe<TeamDocumentStddevPopFields>;
  stddevSamp?: Maybe<TeamDocumentStddevSampFields>;
  sum?: Maybe<TeamDocumentSumFields>;
  varPop?: Maybe<TeamDocumentVarPopFields>;
  varSamp?: Maybe<TeamDocumentVarSampFields>;
  variance?: Maybe<TeamDocumentVarianceFields>;
};

export type TeamDocumentAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamDocumentSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TeamDocumentAggregateOrderBy = {
  avg?: InputMaybe<TeamDocumentAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TeamDocumentMaxOrderBy>;
  min?: InputMaybe<TeamDocumentMinOrderBy>;
  stddev?: InputMaybe<TeamDocumentStddevOrderBy>;
  stddevPop?: InputMaybe<TeamDocumentStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TeamDocumentStddevSampOrderBy>;
  sum?: InputMaybe<TeamDocumentSumOrderBy>;
  varPop?: InputMaybe<TeamDocumentVarPopOrderBy>;
  varSamp?: InputMaybe<TeamDocumentVarSampOrderBy>;
  variance?: InputMaybe<TeamDocumentVarianceOrderBy>;
};

export type TeamDocumentArrRelInsertInput = {
  data: Array<TeamDocumentInsertInput>;
  onConflict?: InputMaybe<TeamDocumentOnConflict>;
};

export type TeamDocumentAvgFields = {
  __typename?: 'TeamDocumentAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  requiredDocumentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  yearVersion?: Maybe<Scalars['Float']['output']>;
};

export type TeamDocumentAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredDocumentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type TeamDocumentBoolExp = {
  _and?: InputMaybe<Array<TeamDocumentBoolExp>>;
  _not?: InputMaybe<TeamDocumentBoolExp>;
  _or?: InputMaybe<Array<TeamDocumentBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  fileUpload?: InputMaybe<FileUploadBoolExp>;
  fileUploadId?: InputMaybe<BigintComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  requiredDocument?: InputMaybe<RequiredDocumentBoolExp>;
  requiredDocumentId?: InputMaybe<BigintComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  yearVersion?: InputMaybe<SmallintComparisonExp>;
};

export enum TeamDocumentConstraint {
  TeamDocumentFileIdUnique = 'team_document_file_id_unique',
  TeamDocumentPkey = 'team_document_pkey',
}

export type TeamDocumentIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  requiredDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  yearVersion?: InputMaybe<Scalars['smallint']['input']>;
};

export type TeamDocumentInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  fileUpload?: InputMaybe<FileUploadObjRelInsertInput>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  requiredDocument?: InputMaybe<RequiredDocumentObjRelInsertInput>;
  requiredDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  yearVersion?: InputMaybe<Scalars['smallint']['input']>;
};

export type TeamDocumentMaxFields = {
  __typename?: 'TeamDocumentMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  requiredDocumentId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  yearVersion?: Maybe<Scalars['smallint']['output']>;
};

export type TeamDocumentMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  requiredDocumentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type TeamDocumentMinFields = {
  __typename?: 'TeamDocumentMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  requiredDocumentId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  yearVersion?: Maybe<Scalars['smallint']['output']>;
};

export type TeamDocumentMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  requiredDocumentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type TeamDocumentMutationResponse = {
  __typename?: 'TeamDocumentMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TeamDocument>;
};

export type TeamDocumentOnConflict = {
  constraint: TeamDocumentConstraint;
  updateColumns?: Array<TeamDocumentUpdateColumn>;
  where?: InputMaybe<TeamDocumentBoolExp>;
};

export type TeamDocumentOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  fileUpload?: InputMaybe<FileUploadOrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  requiredDocument?: InputMaybe<RequiredDocumentOrderBy>;
  requiredDocumentId?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type TeamDocumentPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TeamDocumentSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  FileUploadId = 'fileUploadId',
  Id = 'id',
  Name = 'name',
  RequiredDocumentId = 'requiredDocumentId',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
  YearVersion = 'yearVersion',
}

export type TeamDocumentSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  requiredDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  yearVersion?: InputMaybe<Scalars['smallint']['input']>;
};

export type TeamDocumentStddevFields = {
  __typename?: 'TeamDocumentStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  requiredDocumentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  yearVersion?: Maybe<Scalars['Float']['output']>;
};

export type TeamDocumentStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredDocumentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type TeamDocumentStddevPopFields = {
  __typename?: 'TeamDocumentStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  requiredDocumentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  yearVersion?: Maybe<Scalars['Float']['output']>;
};

export type TeamDocumentStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredDocumentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type TeamDocumentStddevSampFields = {
  __typename?: 'TeamDocumentStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  requiredDocumentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  yearVersion?: Maybe<Scalars['Float']['output']>;
};

export type TeamDocumentStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredDocumentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type TeamDocumentStreamCursorInput = {
  initialValue: TeamDocumentStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TeamDocumentStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  requiredDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  yearVersion?: InputMaybe<Scalars['smallint']['input']>;
};

export type TeamDocumentSumFields = {
  __typename?: 'TeamDocumentSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  requiredDocumentId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  yearVersion?: Maybe<Scalars['smallint']['output']>;
};

export type TeamDocumentSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredDocumentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export enum TeamDocumentUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  FileUploadId = 'fileUploadId',
  Id = 'id',
  Name = 'name',
  RequiredDocumentId = 'requiredDocumentId',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
  YearVersion = 'yearVersion',
}

export type TeamDocumentUpdates = {
  _inc?: InputMaybe<TeamDocumentIncInput>;
  _set?: InputMaybe<TeamDocumentSetInput>;
  where: TeamDocumentBoolExp;
};

export type TeamDocumentVarPopFields = {
  __typename?: 'TeamDocumentVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  requiredDocumentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  yearVersion?: Maybe<Scalars['Float']['output']>;
};

export type TeamDocumentVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredDocumentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type TeamDocumentVarSampFields = {
  __typename?: 'TeamDocumentVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  requiredDocumentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  yearVersion?: Maybe<Scalars['Float']['output']>;
};

export type TeamDocumentVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredDocumentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type TeamDocumentVarianceFields = {
  __typename?: 'TeamDocumentVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  requiredDocumentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  yearVersion?: Maybe<Scalars['Float']['output']>;
};

export type TeamDocumentVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredDocumentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type TeamHistory = {
  __typename?: 'TeamHistory';
  approximateDate: Scalars['ApproximateDate']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  happenedAt: Scalars['timestamptz']['output'];
  id: Scalars['bigint']['output'];
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  type: Scalars['TeamHistoryType']['output'];
};

export type TeamHistoryAggregate = {
  __typename?: 'TeamHistoryAggregate';
  aggregate?: Maybe<TeamHistoryAggregateFields>;
  nodes: Array<TeamHistory>;
};

export type TeamHistoryAggregateBoolExp = {
  count?: InputMaybe<TeamHistoryAggregateBoolExpCount>;
};

export type TeamHistoryAggregateFields = {
  __typename?: 'TeamHistoryAggregateFields';
  avg?: Maybe<TeamHistoryAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamHistoryMaxFields>;
  min?: Maybe<TeamHistoryMinFields>;
  stddev?: Maybe<TeamHistoryStddevFields>;
  stddevPop?: Maybe<TeamHistoryStddevPopFields>;
  stddevSamp?: Maybe<TeamHistoryStddevSampFields>;
  sum?: Maybe<TeamHistorySumFields>;
  varPop?: Maybe<TeamHistoryVarPopFields>;
  varSamp?: Maybe<TeamHistoryVarSampFields>;
  variance?: Maybe<TeamHistoryVarianceFields>;
};

export type TeamHistoryAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamHistorySelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TeamHistoryAggregateOrderBy = {
  avg?: InputMaybe<TeamHistoryAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TeamHistoryMaxOrderBy>;
  min?: InputMaybe<TeamHistoryMinOrderBy>;
  stddev?: InputMaybe<TeamHistoryStddevOrderBy>;
  stddevPop?: InputMaybe<TeamHistoryStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TeamHistoryStddevSampOrderBy>;
  sum?: InputMaybe<TeamHistorySumOrderBy>;
  varPop?: InputMaybe<TeamHistoryVarPopOrderBy>;
  varSamp?: InputMaybe<TeamHistoryVarSampOrderBy>;
  variance?: InputMaybe<TeamHistoryVarianceOrderBy>;
};

export type TeamHistoryArrRelInsertInput = {
  data: Array<TeamHistoryInsertInput>;
  onConflict?: InputMaybe<TeamHistoryOnConflict>;
};

export type TeamHistoryAvgFields = {
  __typename?: 'TeamHistoryAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamHistoryAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamHistoryBoolExp = {
  _and?: InputMaybe<Array<TeamHistoryBoolExp>>;
  _not?: InputMaybe<TeamHistoryBoolExp>;
  _or?: InputMaybe<Array<TeamHistoryBoolExp>>;
  approximateDate?: InputMaybe<ApproximateDateComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  happenedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<TeamHistoryTypeComparisonExp>;
};

export enum TeamHistoryConstraint {
  TeamHistoryPkey = 'team_history_pkey',
}

export type TeamHistoryIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamHistoryInsertInput = {
  approximateDate?: InputMaybe<Scalars['ApproximateDate']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  happenedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TeamHistoryType']['input']>;
};

export type TeamHistoryMaxFields = {
  __typename?: 'TeamHistoryMaxFields';
  approximateDate?: Maybe<Scalars['ApproximateDate']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  happenedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['TeamHistoryType']['output']>;
};

export type TeamHistoryMaxOrderBy = {
  approximateDate?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  happenedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TeamHistoryMinFields = {
  __typename?: 'TeamHistoryMinFields';
  approximateDate?: Maybe<Scalars['ApproximateDate']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  happenedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['TeamHistoryType']['output']>;
};

export type TeamHistoryMinOrderBy = {
  approximateDate?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  happenedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TeamHistoryMutationResponse = {
  __typename?: 'TeamHistoryMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TeamHistory>;
};

export type TeamHistoryOnConflict = {
  constraint: TeamHistoryConstraint;
  updateColumns?: Array<TeamHistoryUpdateColumn>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type TeamHistoryOrderBy = {
  approximateDate?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  happenedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TeamHistoryPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TeamHistorySelectColumn {
  ApproximateDate = 'approximateDate',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HappenedAt = 'happenedAt',
  Id = 'id',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export type TeamHistorySetInput = {
  approximateDate?: InputMaybe<Scalars['ApproximateDate']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  happenedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TeamHistoryType']['input']>;
};

export type TeamHistoryStddevFields = {
  __typename?: 'TeamHistoryStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamHistoryStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamHistoryStddevPopFields = {
  __typename?: 'TeamHistoryStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamHistoryStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamHistoryStddevSampFields = {
  __typename?: 'TeamHistoryStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamHistoryStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamHistoryStreamCursorInput = {
  initialValue: TeamHistoryStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TeamHistoryStreamCursorValueInput = {
  approximateDate?: InputMaybe<Scalars['ApproximateDate']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  happenedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TeamHistoryType']['input']>;
};

export type TeamHistorySumFields = {
  __typename?: 'TeamHistorySumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamHistorySumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamHistoryTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['TeamHistoryType']['input']>;
  _gt?: InputMaybe<Scalars['TeamHistoryType']['input']>;
  _gte?: InputMaybe<Scalars['TeamHistoryType']['input']>;
  _in?: InputMaybe<Array<Scalars['TeamHistoryType']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['TeamHistoryType']['input']>;
  _lte?: InputMaybe<Scalars['TeamHistoryType']['input']>;
  _neq?: InputMaybe<Scalars['TeamHistoryType']['input']>;
  _nin?: InputMaybe<Array<Scalars['TeamHistoryType']['input']>>;
};

export enum TeamHistoryUpdateColumn {
  ApproximateDate = 'approximateDate',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HappenedAt = 'happenedAt',
  Id = 'id',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export type TeamHistoryUpdates = {
  _inc?: InputMaybe<TeamHistoryIncInput>;
  _set?: InputMaybe<TeamHistorySetInput>;
  where: TeamHistoryBoolExp;
};

export type TeamHistoryVarPopFields = {
  __typename?: 'TeamHistoryVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamHistoryVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamHistoryVarSampFields = {
  __typename?: 'TeamHistoryVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamHistoryVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamHistoryVarianceFields = {
  __typename?: 'TeamHistoryVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamHistoryVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  membershipFees?: InputMaybe<Scalars['Float']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  tenantGrantFundId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  videoId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamInsertInput = {
  actions?: InputMaybe<ActionArrRelInsertInput>;
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankAccounts?: InputMaybe<BankAccountArrRelInsertInput>;
  childrenTeams?: InputMaybe<TeamArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  directorsCategoryName?: InputMaybe<Scalars['String']['input']>;
  eventOrganizes?: InputMaybe<EventOrganizeArrRelInsertInput>;
  expectingPresidentEmail?: InputMaybe<Scalars['String']['input']>;
  expectingSecretaryEmail?: InputMaybe<Scalars['String']['input']>;
  expectingTreasurerEmail?: InputMaybe<Scalars['String']['input']>;
  grantFund?: InputMaybe<LegalUnitObjRelInsertInput>;
  grants?: InputMaybe<GrantArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isJoinFormActive?: InputMaybe<Scalars['Boolean']['input']>;
  isOnboardingComplete?: InputMaybe<Scalars['Boolean']['input']>;
  joinForm?: InputMaybe<FormObjRelInsertInput>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  managersCategoryName?: InputMaybe<Scalars['String']['input']>;
  membersCategoryName?: InputMaybe<Scalars['String']['input']>;
  membershipDuration?: InputMaybe<Scalars['String']['input']>;
  membershipFees?: InputMaybe<Scalars['Float']['input']>;
  missions?: InputMaybe<MissionArrRelInsertInput>;
  parent?: InputMaybe<TeamObjRelInsertInput>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  projects?: InputMaybe<ProjectArrRelInsertInput>;
  slug?: InputMaybe<Scalars['String']['input']>;
  teamDocuments?: InputMaybe<TeamDocumentArrRelInsertInput>;
  teamHistories?: InputMaybe<TeamHistoryArrRelInsertInput>;
  teamJoins?: InputMaybe<TeamJoinArrRelInsertInput>;
  teamMembers?: InputMaybe<TeamMemberArrRelInsertInput>;
  teamRoles?: InputMaybe<TeamRoleArrRelInsertInput>;
  tenantGrantFundId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TeamType']['input']>;
  video?: InputMaybe<FileUploadObjRelInsertInput>;
  videoId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamJoin = {
  __typename?: 'TeamJoin';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  joinFormSubmission?: Maybe<FormSubmission>;
  joinFormSubmissionId?: Maybe<Scalars['bigint']['output']>;
  joinedBy: User;
  joinedById: Scalars['bigint']['output'];
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedBy?: Maybe<User>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  state: Scalars['ApprovalState']['output'];
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type TeamJoinAggregate = {
  __typename?: 'TeamJoinAggregate';
  aggregate?: Maybe<TeamJoinAggregateFields>;
  nodes: Array<TeamJoin>;
};

export type TeamJoinAggregateBoolExp = {
  count?: InputMaybe<TeamJoinAggregateBoolExpCount>;
};

export type TeamJoinAggregateFields = {
  __typename?: 'TeamJoinAggregateFields';
  avg?: Maybe<TeamJoinAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamJoinMaxFields>;
  min?: Maybe<TeamJoinMinFields>;
  stddev?: Maybe<TeamJoinStddevFields>;
  stddevPop?: Maybe<TeamJoinStddevPopFields>;
  stddevSamp?: Maybe<TeamJoinStddevSampFields>;
  sum?: Maybe<TeamJoinSumFields>;
  varPop?: Maybe<TeamJoinVarPopFields>;
  varSamp?: Maybe<TeamJoinVarSampFields>;
  variance?: Maybe<TeamJoinVarianceFields>;
};

export type TeamJoinAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamJoinSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TeamJoinAggregateOrderBy = {
  avg?: InputMaybe<TeamJoinAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TeamJoinMaxOrderBy>;
  min?: InputMaybe<TeamJoinMinOrderBy>;
  stddev?: InputMaybe<TeamJoinStddevOrderBy>;
  stddevPop?: InputMaybe<TeamJoinStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TeamJoinStddevSampOrderBy>;
  sum?: InputMaybe<TeamJoinSumOrderBy>;
  varPop?: InputMaybe<TeamJoinVarPopOrderBy>;
  varSamp?: InputMaybe<TeamJoinVarSampOrderBy>;
  variance?: InputMaybe<TeamJoinVarianceOrderBy>;
};

export type TeamJoinArrRelInsertInput = {
  data: Array<TeamJoinInsertInput>;
  onConflict?: InputMaybe<TeamJoinOnConflict>;
};

export type TeamJoinAvgFields = {
  __typename?: 'TeamJoinAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamJoinAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamJoinBoolExp = {
  _and?: InputMaybe<Array<TeamJoinBoolExp>>;
  _not?: InputMaybe<TeamJoinBoolExp>;
  _or?: InputMaybe<Array<TeamJoinBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  joinFormSubmission?: InputMaybe<FormSubmissionBoolExp>;
  joinFormSubmissionId?: InputMaybe<BigintComparisonExp>;
  joinedBy?: InputMaybe<UserBoolExp>;
  joinedById?: InputMaybe<BigintComparisonExp>;
  processedAt?: InputMaybe<TimestamptzComparisonExp>;
  processedBy?: InputMaybe<UserBoolExp>;
  processedById?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<ApprovalStateComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum TeamJoinConstraint {
  TeamJoinFormSubmissionIdUnique = 'team_join_form_submission_id_unique',
  TeamJoinPkey = 'team_join_pkey',
}

export type TeamJoinIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinFormSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamJoinInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinFormSubmission?: InputMaybe<FormSubmissionObjRelInsertInput>;
  joinFormSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  joinedBy?: InputMaybe<UserObjRelInsertInput>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedBy?: InputMaybe<UserObjRelInsertInput>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamJoinMaxFields = {
  __typename?: 'TeamJoinMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamJoinMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamJoinMinFields = {
  __typename?: 'TeamJoinMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamJoinMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamJoinMutationResponse = {
  __typename?: 'TeamJoinMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TeamJoin>;
};

export type TeamJoinOnConflict = {
  constraint: TeamJoinConstraint;
  updateColumns?: Array<TeamJoinUpdateColumn>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type TeamJoinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmission?: InputMaybe<FormSubmissionOrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedBy?: InputMaybe<UserOrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedBy?: InputMaybe<UserOrderBy>;
  processedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamJoinPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TeamJoinSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  JoinFormSubmissionId = 'joinFormSubmissionId',
  JoinedById = 'joinedById',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  State = 'state',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
}

export type TeamJoinSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinFormSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamJoinStddevFields = {
  __typename?: 'TeamJoinStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamJoinStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamJoinStddevPopFields = {
  __typename?: 'TeamJoinStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamJoinStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamJoinStddevSampFields = {
  __typename?: 'TeamJoinStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamJoinStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamJoinStreamCursorInput = {
  initialValue: TeamJoinStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TeamJoinStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinFormSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamJoinSumFields = {
  __typename?: 'TeamJoinSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamJoinSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum TeamJoinUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  JoinFormSubmissionId = 'joinFormSubmissionId',
  JoinedById = 'joinedById',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  State = 'state',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
}

export type TeamJoinUpdates = {
  _inc?: InputMaybe<TeamJoinIncInput>;
  _set?: InputMaybe<TeamJoinSetInput>;
  where: TeamJoinBoolExp;
};

export type TeamJoinVarPopFields = {
  __typename?: 'TeamJoinVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamJoinVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamJoinVarSampFields = {
  __typename?: 'TeamJoinVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamJoinVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamJoinVarianceFields = {
  __typename?: 'TeamJoinVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormSubmissionId?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamJoinVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormSubmissionId?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamMaxFields = {
  __typename?: 'TeamMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  directorsCategoryName?: Maybe<Scalars['String']['output']>;
  expectingPresidentEmail?: Maybe<Scalars['String']['output']>;
  expectingSecretaryEmail?: Maybe<Scalars['String']['output']>;
  expectingTreasurerEmail?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  managersCategoryName?: Maybe<Scalars['String']['output']>;
  membersCategoryName?: Maybe<Scalars['String']['output']>;
  membershipDuration?: Maybe<Scalars['String']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tenantGrantFundId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['TeamType']['output']>;
  videoId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  directorsCategoryName?: InputMaybe<OrderBy>;
  expectingPresidentEmail?: InputMaybe<OrderBy>;
  expectingSecretaryEmail?: InputMaybe<OrderBy>;
  expectingTreasurerEmail?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  managersCategoryName?: InputMaybe<OrderBy>;
  membersCategoryName?: InputMaybe<OrderBy>;
  membershipDuration?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamMember = {
  __typename?: 'TeamMember';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  team: Team;
  teamId: Scalars['bigint']['output'];
  teamMemberRoles: Array<TeamMemberRole>;
  teamMemberRolesAggregate: TeamMemberRoleAggregate;
  teamRequiredRoles: Array<TeamRequiredRole>;
  teamRequiredRolesAggregate: TeamRequiredRoleAggregate;
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  user: User;
  userId: Scalars['bigint']['output'];
};

export type TeamMemberTeamMemberRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRoleOrderBy>>;
  where?: InputMaybe<TeamMemberRoleBoolExp>;
};

export type TeamMemberTeamMemberRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRoleOrderBy>>;
  where?: InputMaybe<TeamMemberRoleBoolExp>;
};

export type TeamMemberTeamRequiredRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamRequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRequiredRoleOrderBy>>;
  where?: InputMaybe<TeamRequiredRoleBoolExp>;
};

export type TeamMemberTeamRequiredRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamRequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRequiredRoleOrderBy>>;
  where?: InputMaybe<TeamRequiredRoleBoolExp>;
};

export type TeamMemberAggregate = {
  __typename?: 'TeamMemberAggregate';
  aggregate?: Maybe<TeamMemberAggregateFields>;
  nodes: Array<TeamMember>;
};

export type TeamMemberAggregateBoolExp = {
  count?: InputMaybe<TeamMemberAggregateBoolExpCount>;
};

export type TeamMemberAggregateFields = {
  __typename?: 'TeamMemberAggregateFields';
  avg?: Maybe<TeamMemberAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamMemberMaxFields>;
  min?: Maybe<TeamMemberMinFields>;
  stddev?: Maybe<TeamMemberStddevFields>;
  stddevPop?: Maybe<TeamMemberStddevPopFields>;
  stddevSamp?: Maybe<TeamMemberStddevSampFields>;
  sum?: Maybe<TeamMemberSumFields>;
  varPop?: Maybe<TeamMemberVarPopFields>;
  varSamp?: Maybe<TeamMemberVarSampFields>;
  variance?: Maybe<TeamMemberVarianceFields>;
};

export type TeamMemberAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamMemberSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TeamMemberAggregateOrderBy = {
  avg?: InputMaybe<TeamMemberAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TeamMemberMaxOrderBy>;
  min?: InputMaybe<TeamMemberMinOrderBy>;
  stddev?: InputMaybe<TeamMemberStddevOrderBy>;
  stddevPop?: InputMaybe<TeamMemberStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TeamMemberStddevSampOrderBy>;
  sum?: InputMaybe<TeamMemberSumOrderBy>;
  varPop?: InputMaybe<TeamMemberVarPopOrderBy>;
  varSamp?: InputMaybe<TeamMemberVarSampOrderBy>;
  variance?: InputMaybe<TeamMemberVarianceOrderBy>;
};

export type TeamMemberArrRelInsertInput = {
  data: Array<TeamMemberInsertInput>;
  onConflict?: InputMaybe<TeamMemberOnConflict>;
};

export type TeamMemberAvgFields = {
  __typename?: 'TeamMemberAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberBoolExp = {
  _and?: InputMaybe<Array<TeamMemberBoolExp>>;
  _not?: InputMaybe<TeamMemberBoolExp>;
  _or?: InputMaybe<Array<TeamMemberBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  teamMemberRoles?: InputMaybe<TeamMemberRoleBoolExp>;
  teamMemberRolesAggregate?: InputMaybe<TeamMemberRoleAggregateBoolExp>;
  teamRequiredRoles?: InputMaybe<TeamRequiredRoleBoolExp>;
  teamRequiredRolesAggregate?: InputMaybe<TeamRequiredRoleAggregateBoolExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
  userId?: InputMaybe<BigintComparisonExp>;
};

export enum TeamMemberConstraint {
  TeamMemberPkey = 'team_member_pkey',
}

export type TeamMemberIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberRoles?: InputMaybe<TeamMemberRoleArrRelInsertInput>;
  teamRequiredRoles?: InputMaybe<TeamRequiredRoleArrRelInsertInput>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberMaxFields = {
  __typename?: 'TeamMemberMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMemberMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberMinFields = {
  __typename?: 'TeamMemberMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMemberMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberMutationResponse = {
  __typename?: 'TeamMemberMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TeamMember>;
};

export type TeamMemberObjRelInsertInput = {
  data: TeamMemberInsertInput;
  onConflict?: InputMaybe<TeamMemberOnConflict>;
};

export type TeamMemberOnConflict = {
  constraint: TeamMemberConstraint;
  updateColumns?: Array<TeamMemberUpdateColumn>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type TeamMemberOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  teamMemberRolesAggregate?: InputMaybe<TeamMemberRoleAggregateOrderBy>;
  teamRequiredRolesAggregate?: InputMaybe<TeamRequiredRoleAggregateOrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export type TeamMemberRole = {
  __typename?: 'TeamMemberRole';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  teamMember: TeamMember;
  teamMemberId: Scalars['bigint']['output'];
  teamRole: TeamRole;
  teamRoleId: Scalars['bigint']['output'];
};

export type TeamMemberRoleAggregate = {
  __typename?: 'TeamMemberRoleAggregate';
  aggregate?: Maybe<TeamMemberRoleAggregateFields>;
  nodes: Array<TeamMemberRole>;
};

export type TeamMemberRoleAggregateBoolExp = {
  count?: InputMaybe<TeamMemberRoleAggregateBoolExpCount>;
};

export type TeamMemberRoleAggregateFields = {
  __typename?: 'TeamMemberRoleAggregateFields';
  avg?: Maybe<TeamMemberRoleAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamMemberRoleMaxFields>;
  min?: Maybe<TeamMemberRoleMinFields>;
  stddev?: Maybe<TeamMemberRoleStddevFields>;
  stddevPop?: Maybe<TeamMemberRoleStddevPopFields>;
  stddevSamp?: Maybe<TeamMemberRoleStddevSampFields>;
  sum?: Maybe<TeamMemberRoleSumFields>;
  varPop?: Maybe<TeamMemberRoleVarPopFields>;
  varSamp?: Maybe<TeamMemberRoleVarSampFields>;
  variance?: Maybe<TeamMemberRoleVarianceFields>;
};

export type TeamMemberRoleAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamMemberRoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TeamMemberRoleAggregateOrderBy = {
  avg?: InputMaybe<TeamMemberRoleAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TeamMemberRoleMaxOrderBy>;
  min?: InputMaybe<TeamMemberRoleMinOrderBy>;
  stddev?: InputMaybe<TeamMemberRoleStddevOrderBy>;
  stddevPop?: InputMaybe<TeamMemberRoleStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TeamMemberRoleStddevSampOrderBy>;
  sum?: InputMaybe<TeamMemberRoleSumOrderBy>;
  varPop?: InputMaybe<TeamMemberRoleVarPopOrderBy>;
  varSamp?: InputMaybe<TeamMemberRoleVarSampOrderBy>;
  variance?: InputMaybe<TeamMemberRoleVarianceOrderBy>;
};

export type TeamMemberRoleArrRelInsertInput = {
  data: Array<TeamMemberRoleInsertInput>;
  onConflict?: InputMaybe<TeamMemberRoleOnConflict>;
};

export type TeamMemberRoleAvgFields = {
  __typename?: 'TeamMemberRoleAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
  teamRoleId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberRoleAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  teamRoleId?: InputMaybe<OrderBy>;
};

export type TeamMemberRoleBoolExp = {
  _and?: InputMaybe<Array<TeamMemberRoleBoolExp>>;
  _not?: InputMaybe<TeamMemberRoleBoolExp>;
  _or?: InputMaybe<Array<TeamMemberRoleBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  teamMember?: InputMaybe<TeamMemberBoolExp>;
  teamMemberId?: InputMaybe<BigintComparisonExp>;
  teamRole?: InputMaybe<TeamRoleBoolExp>;
  teamRoleId?: InputMaybe<BigintComparisonExp>;
};

export enum TeamMemberRoleConstraint {
  TeamMemberRolePkey = 'team_member_role_pkey',
}

export type TeamMemberRoleIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
  teamRoleId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberRoleInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamMember?: InputMaybe<TeamMemberObjRelInsertInput>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
  teamRole?: InputMaybe<TeamRoleObjRelInsertInput>;
  teamRoleId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberRoleMaxFields = {
  __typename?: 'TeamMemberRoleMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamMemberId?: Maybe<Scalars['bigint']['output']>;
  teamRoleId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMemberRoleMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  teamRoleId?: InputMaybe<OrderBy>;
};

export type TeamMemberRoleMinFields = {
  __typename?: 'TeamMemberRoleMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamMemberId?: Maybe<Scalars['bigint']['output']>;
  teamRoleId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMemberRoleMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  teamRoleId?: InputMaybe<OrderBy>;
};

export type TeamMemberRoleMutationResponse = {
  __typename?: 'TeamMemberRoleMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TeamMemberRole>;
};

export type TeamMemberRoleOnConflict = {
  constraint: TeamMemberRoleConstraint;
  updateColumns?: Array<TeamMemberRoleUpdateColumn>;
  where?: InputMaybe<TeamMemberRoleBoolExp>;
};

export type TeamMemberRoleOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamMember?: InputMaybe<TeamMemberOrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  teamRole?: InputMaybe<TeamRoleOrderBy>;
  teamRoleId?: InputMaybe<OrderBy>;
};

export type TeamMemberRolePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TeamMemberRoleSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  TeamMemberId = 'teamMemberId',
  TeamRoleId = 'teamRoleId',
}

export type TeamMemberRoleSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
  teamRoleId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberRoleStddevFields = {
  __typename?: 'TeamMemberRoleStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
  teamRoleId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberRoleStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  teamRoleId?: InputMaybe<OrderBy>;
};

export type TeamMemberRoleStddevPopFields = {
  __typename?: 'TeamMemberRoleStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
  teamRoleId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberRoleStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  teamRoleId?: InputMaybe<OrderBy>;
};

export type TeamMemberRoleStddevSampFields = {
  __typename?: 'TeamMemberRoleStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
  teamRoleId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberRoleStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  teamRoleId?: InputMaybe<OrderBy>;
};

export type TeamMemberRoleStreamCursorInput = {
  initialValue: TeamMemberRoleStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TeamMemberRoleStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
  teamRoleId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberRoleSumFields = {
  __typename?: 'TeamMemberRoleSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamMemberId?: Maybe<Scalars['bigint']['output']>;
  teamRoleId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMemberRoleSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  teamRoleId?: InputMaybe<OrderBy>;
};

export enum TeamMemberRoleUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  TeamMemberId = 'teamMemberId',
  TeamRoleId = 'teamRoleId',
}

export type TeamMemberRoleUpdates = {
  _inc?: InputMaybe<TeamMemberRoleIncInput>;
  _set?: InputMaybe<TeamMemberRoleSetInput>;
  where: TeamMemberRoleBoolExp;
};

export type TeamMemberRoleVarPopFields = {
  __typename?: 'TeamMemberRoleVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
  teamRoleId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberRoleVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  teamRoleId?: InputMaybe<OrderBy>;
};

export type TeamMemberRoleVarSampFields = {
  __typename?: 'TeamMemberRoleVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
  teamRoleId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberRoleVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  teamRoleId?: InputMaybe<OrderBy>;
};

export type TeamMemberRoleVarianceFields = {
  __typename?: 'TeamMemberRoleVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
  teamRoleId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberRoleVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  teamRoleId?: InputMaybe<OrderBy>;
};

export enum TeamMemberSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
  UserId = 'userId',
}

export type TeamMemberSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberStddevFields = {
  __typename?: 'TeamMemberStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberStddevPopFields = {
  __typename?: 'TeamMemberStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberStddevSampFields = {
  __typename?: 'TeamMemberStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberStreamCursorInput = {
  initialValue: TeamMemberStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TeamMemberStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberSumFields = {
  __typename?: 'TeamMemberSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMemberSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum TeamMemberUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
  UserId = 'userId',
}

export type TeamMemberUpdates = {
  _inc?: InputMaybe<TeamMemberIncInput>;
  _set?: InputMaybe<TeamMemberSetInput>;
  where: TeamMemberBoolExp;
};

export type TeamMemberVarPopFields = {
  __typename?: 'TeamMemberVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberVarSampFields = {
  __typename?: 'TeamMemberVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberVarianceFields = {
  __typename?: 'TeamMemberVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMinFields = {
  __typename?: 'TeamMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  directorsCategoryName?: Maybe<Scalars['String']['output']>;
  expectingPresidentEmail?: Maybe<Scalars['String']['output']>;
  expectingSecretaryEmail?: Maybe<Scalars['String']['output']>;
  expectingTreasurerEmail?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  managersCategoryName?: Maybe<Scalars['String']['output']>;
  membersCategoryName?: Maybe<Scalars['String']['output']>;
  membershipDuration?: Maybe<Scalars['String']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tenantGrantFundId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['TeamType']['output']>;
  videoId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  directorsCategoryName?: InputMaybe<OrderBy>;
  expectingPresidentEmail?: InputMaybe<OrderBy>;
  expectingSecretaryEmail?: InputMaybe<OrderBy>;
  expectingTreasurerEmail?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  managersCategoryName?: InputMaybe<OrderBy>;
  membersCategoryName?: InputMaybe<OrderBy>;
  membershipDuration?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamMutationResponse = {
  __typename?: 'TeamMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Team>;
};

export type TeamObjRelInsertInput = {
  data: TeamInsertInput;
  onConflict?: InputMaybe<TeamOnConflict>;
};

export type TeamOnConflict = {
  constraint: TeamConstraint;
  updateColumns?: Array<TeamUpdateColumn>;
  where?: InputMaybe<TeamBoolExp>;
};

export type TeamOrderBy = {
  actionsAggregate?: InputMaybe<ActionAggregateOrderBy>;
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  bankAccountsAggregate?: InputMaybe<BankAccountAggregateOrderBy>;
  childrenTeamsAggregate?: InputMaybe<TeamAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  directorsCategoryName?: InputMaybe<OrderBy>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateOrderBy>;
  expectingPresidentEmail?: InputMaybe<OrderBy>;
  expectingSecretaryEmail?: InputMaybe<OrderBy>;
  expectingTreasurerEmail?: InputMaybe<OrderBy>;
  grantFund?: InputMaybe<LegalUnitOrderBy>;
  grantsAggregate?: InputMaybe<GrantAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isJoinFormActive?: InputMaybe<OrderBy>;
  isOnboardingComplete?: InputMaybe<OrderBy>;
  joinForm?: InputMaybe<FormOrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  managersCategoryName?: InputMaybe<OrderBy>;
  membersCategoryName?: InputMaybe<OrderBy>;
  membershipDuration?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  missionsAggregate?: InputMaybe<MissionAggregateOrderBy>;
  parent?: InputMaybe<TeamOrderBy>;
  parentId?: InputMaybe<OrderBy>;
  projectsAggregate?: InputMaybe<ProjectAggregateOrderBy>;
  slug?: InputMaybe<OrderBy>;
  teamDocumentsAggregate?: InputMaybe<TeamDocumentAggregateOrderBy>;
  teamHistoriesAggregate?: InputMaybe<TeamHistoryAggregateOrderBy>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateOrderBy>;
  teamMembersAggregate?: InputMaybe<TeamMemberAggregateOrderBy>;
  teamRolesAggregate?: InputMaybe<TeamRoleAggregateOrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  video?: InputMaybe<FileUploadOrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export type TeamRequiredRole = {
  __typename?: 'TeamRequiredRole';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  requiredRole: RequiredRole;
  requiredRoleId: Scalars['bigint']['output'];
  teamMember: TeamMember;
  teamMemberId: Scalars['bigint']['output'];
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
};

export type TeamRequiredRoleAggregate = {
  __typename?: 'TeamRequiredRoleAggregate';
  aggregate?: Maybe<TeamRequiredRoleAggregateFields>;
  nodes: Array<TeamRequiredRole>;
};

export type TeamRequiredRoleAggregateBoolExp = {
  count?: InputMaybe<TeamRequiredRoleAggregateBoolExpCount>;
};

export type TeamRequiredRoleAggregateFields = {
  __typename?: 'TeamRequiredRoleAggregateFields';
  avg?: Maybe<TeamRequiredRoleAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamRequiredRoleMaxFields>;
  min?: Maybe<TeamRequiredRoleMinFields>;
  stddev?: Maybe<TeamRequiredRoleStddevFields>;
  stddevPop?: Maybe<TeamRequiredRoleStddevPopFields>;
  stddevSamp?: Maybe<TeamRequiredRoleStddevSampFields>;
  sum?: Maybe<TeamRequiredRoleSumFields>;
  varPop?: Maybe<TeamRequiredRoleVarPopFields>;
  varSamp?: Maybe<TeamRequiredRoleVarSampFields>;
  variance?: Maybe<TeamRequiredRoleVarianceFields>;
};

export type TeamRequiredRoleAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamRequiredRoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TeamRequiredRoleAggregateOrderBy = {
  avg?: InputMaybe<TeamRequiredRoleAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TeamRequiredRoleMaxOrderBy>;
  min?: InputMaybe<TeamRequiredRoleMinOrderBy>;
  stddev?: InputMaybe<TeamRequiredRoleStddevOrderBy>;
  stddevPop?: InputMaybe<TeamRequiredRoleStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TeamRequiredRoleStddevSampOrderBy>;
  sum?: InputMaybe<TeamRequiredRoleSumOrderBy>;
  varPop?: InputMaybe<TeamRequiredRoleVarPopOrderBy>;
  varSamp?: InputMaybe<TeamRequiredRoleVarSampOrderBy>;
  variance?: InputMaybe<TeamRequiredRoleVarianceOrderBy>;
};

export type TeamRequiredRoleArrRelInsertInput = {
  data: Array<TeamRequiredRoleInsertInput>;
  onConflict?: InputMaybe<TeamRequiredRoleOnConflict>;
};

export type TeamRequiredRoleAvgFields = {
  __typename?: 'TeamRequiredRoleAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  requiredRoleId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamRequiredRoleAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredRoleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRequiredRoleBoolExp = {
  _and?: InputMaybe<Array<TeamRequiredRoleBoolExp>>;
  _not?: InputMaybe<TeamRequiredRoleBoolExp>;
  _or?: InputMaybe<Array<TeamRequiredRoleBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  requiredRole?: InputMaybe<RequiredRoleBoolExp>;
  requiredRoleId?: InputMaybe<BigintComparisonExp>;
  teamMember?: InputMaybe<TeamMemberBoolExp>;
  teamMemberId?: InputMaybe<BigintComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
};

export enum TeamRequiredRoleConstraint {
  TeamRequiredRolePkey = 'team_required_role_pkey',
}

export type TeamRequiredRoleIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  requiredRoleId?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamRequiredRoleInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  requiredRole?: InputMaybe<RequiredRoleObjRelInsertInput>;
  requiredRoleId?: InputMaybe<Scalars['bigint']['input']>;
  teamMember?: InputMaybe<TeamMemberObjRelInsertInput>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamRequiredRoleMaxFields = {
  __typename?: 'TeamRequiredRoleMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  requiredRoleId?: Maybe<Scalars['bigint']['output']>;
  teamMemberId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamRequiredRoleMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredRoleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRequiredRoleMinFields = {
  __typename?: 'TeamRequiredRoleMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  requiredRoleId?: Maybe<Scalars['bigint']['output']>;
  teamMemberId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamRequiredRoleMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredRoleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRequiredRoleMutationResponse = {
  __typename?: 'TeamRequiredRoleMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TeamRequiredRole>;
};

export type TeamRequiredRoleOnConflict = {
  constraint: TeamRequiredRoleConstraint;
  updateColumns?: Array<TeamRequiredRoleUpdateColumn>;
  where?: InputMaybe<TeamRequiredRoleBoolExp>;
};

export type TeamRequiredRoleOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredRole?: InputMaybe<RequiredRoleOrderBy>;
  requiredRoleId?: InputMaybe<OrderBy>;
  teamMember?: InputMaybe<TeamMemberOrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRequiredRolePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TeamRequiredRoleSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  RequiredRoleId = 'requiredRoleId',
  TeamMemberId = 'teamMemberId',
  TenantScopeId = 'tenantScopeId',
}

export type TeamRequiredRoleSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  requiredRoleId?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamRequiredRoleStddevFields = {
  __typename?: 'TeamRequiredRoleStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  requiredRoleId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamRequiredRoleStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredRoleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRequiredRoleStddevPopFields = {
  __typename?: 'TeamRequiredRoleStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  requiredRoleId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamRequiredRoleStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredRoleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRequiredRoleStddevSampFields = {
  __typename?: 'TeamRequiredRoleStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  requiredRoleId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamRequiredRoleStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredRoleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRequiredRoleStreamCursorInput = {
  initialValue: TeamRequiredRoleStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TeamRequiredRoleStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  requiredRoleId?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamRequiredRoleSumFields = {
  __typename?: 'TeamRequiredRoleSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  requiredRoleId?: Maybe<Scalars['bigint']['output']>;
  teamMemberId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamRequiredRoleSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredRoleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum TeamRequiredRoleUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  RequiredRoleId = 'requiredRoleId',
  TeamMemberId = 'teamMemberId',
  TenantScopeId = 'tenantScopeId',
}

export type TeamRequiredRoleUpdates = {
  _inc?: InputMaybe<TeamRequiredRoleIncInput>;
  _set?: InputMaybe<TeamRequiredRoleSetInput>;
  where: TeamRequiredRoleBoolExp;
};

export type TeamRequiredRoleVarPopFields = {
  __typename?: 'TeamRequiredRoleVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  requiredRoleId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamRequiredRoleVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredRoleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRequiredRoleVarSampFields = {
  __typename?: 'TeamRequiredRoleVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  requiredRoleId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamRequiredRoleVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredRoleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRequiredRoleVarianceFields = {
  __typename?: 'TeamRequiredRoleVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  requiredRoleId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamRequiredRoleVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  requiredRoleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRole = {
  __typename?: 'TeamRole';
  canCreateActions: Scalars['Boolean']['output'];
  canCreateContents: Scalars['Boolean']['output'];
  canCreateEvents: Scalars['Boolean']['output'];
  canManageActions: Scalars['Boolean']['output'];
  canManageContents: Scalars['Boolean']['output'];
  canManageDocuments: Scalars['Boolean']['output'];
  canManageEvents: Scalars['Boolean']['output'];
  canManageJoins: Scalars['Boolean']['output'];
  canManageMemberRoles: Scalars['Boolean']['output'];
  canManageProfile: Scalars['Boolean']['output'];
  canManageRoles: Scalars['Boolean']['output'];
  canManageTreasury: Scalars['Boolean']['output'];
  canViewDraftEvents: Scalars['Boolean']['output'];
  canViewJoins: Scalars['Boolean']['output'];
  canViewTreasury: Scalars['Boolean']['output'];
  color: Scalars['Colors']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isPole: Scalars['Boolean']['output'];
  manager?: Maybe<User>;
  managerId?: Maybe<Scalars['bigint']['output']>;
  name: Scalars['String']['output'];
  team: Team;
  teamId: Scalars['bigint']['output'];
  teamMemberRoles: Array<TeamMemberRole>;
  teamMemberRolesAggregate: TeamMemberRoleAggregate;
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  type?: Maybe<Scalars['TeamRoleType']['output']>;
};

export type TeamRoleTeamMemberRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRoleOrderBy>>;
  where?: InputMaybe<TeamMemberRoleBoolExp>;
};

export type TeamRoleTeamMemberRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRoleOrderBy>>;
  where?: InputMaybe<TeamMemberRoleBoolExp>;
};

export type TeamRoleAggregate = {
  __typename?: 'TeamRoleAggregate';
  aggregate?: Maybe<TeamRoleAggregateFields>;
  nodes: Array<TeamRole>;
};

export type TeamRoleAggregateBoolExp = {
  bool_and?: InputMaybe<TeamRoleAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<TeamRoleAggregateBoolExpBool_Or>;
  count?: InputMaybe<TeamRoleAggregateBoolExpCount>;
};

export type TeamRoleAggregateFields = {
  __typename?: 'TeamRoleAggregateFields';
  avg?: Maybe<TeamRoleAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamRoleMaxFields>;
  min?: Maybe<TeamRoleMinFields>;
  stddev?: Maybe<TeamRoleStddevFields>;
  stddevPop?: Maybe<TeamRoleStddevPopFields>;
  stddevSamp?: Maybe<TeamRoleStddevSampFields>;
  sum?: Maybe<TeamRoleSumFields>;
  varPop?: Maybe<TeamRoleVarPopFields>;
  varSamp?: Maybe<TeamRoleVarSampFields>;
  variance?: Maybe<TeamRoleVarianceFields>;
};

export type TeamRoleAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamRoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TeamRoleAggregateOrderBy = {
  avg?: InputMaybe<TeamRoleAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TeamRoleMaxOrderBy>;
  min?: InputMaybe<TeamRoleMinOrderBy>;
  stddev?: InputMaybe<TeamRoleStddevOrderBy>;
  stddevPop?: InputMaybe<TeamRoleStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TeamRoleStddevSampOrderBy>;
  sum?: InputMaybe<TeamRoleSumOrderBy>;
  varPop?: InputMaybe<TeamRoleVarPopOrderBy>;
  varSamp?: InputMaybe<TeamRoleVarSampOrderBy>;
  variance?: InputMaybe<TeamRoleVarianceOrderBy>;
};

export type TeamRoleArrRelInsertInput = {
  data: Array<TeamRoleInsertInput>;
  onConflict?: InputMaybe<TeamRoleOnConflict>;
};

export type TeamRoleAvgFields = {
  __typename?: 'TeamRoleAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  managerId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamRoleAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  managerId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRoleBoolExp = {
  _and?: InputMaybe<Array<TeamRoleBoolExp>>;
  _not?: InputMaybe<TeamRoleBoolExp>;
  _or?: InputMaybe<Array<TeamRoleBoolExp>>;
  canCreateActions?: InputMaybe<BooleanComparisonExp>;
  canCreateContents?: InputMaybe<BooleanComparisonExp>;
  canCreateEvents?: InputMaybe<BooleanComparisonExp>;
  canManageActions?: InputMaybe<BooleanComparisonExp>;
  canManageContents?: InputMaybe<BooleanComparisonExp>;
  canManageDocuments?: InputMaybe<BooleanComparisonExp>;
  canManageEvents?: InputMaybe<BooleanComparisonExp>;
  canManageJoins?: InputMaybe<BooleanComparisonExp>;
  canManageMemberRoles?: InputMaybe<BooleanComparisonExp>;
  canManageProfile?: InputMaybe<BooleanComparisonExp>;
  canManageRoles?: InputMaybe<BooleanComparisonExp>;
  canManageTreasury?: InputMaybe<BooleanComparisonExp>;
  canViewDraftEvents?: InputMaybe<BooleanComparisonExp>;
  canViewJoins?: InputMaybe<BooleanComparisonExp>;
  canViewTreasury?: InputMaybe<BooleanComparisonExp>;
  color?: InputMaybe<ColorsComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isPole?: InputMaybe<BooleanComparisonExp>;
  manager?: InputMaybe<UserBoolExp>;
  managerId?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  teamMemberRoles?: InputMaybe<TeamMemberRoleBoolExp>;
  teamMemberRolesAggregate?: InputMaybe<TeamMemberRoleAggregateBoolExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<TeamRoleTypeComparisonExp>;
};

export enum TeamRoleConstraint {
  TeamRolePkey = 'team_role_pkey',
}

export type TeamRoleIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  managerId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamRoleInsertInput = {
  canCreateActions?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateContents?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvents?: InputMaybe<Scalars['Boolean']['input']>;
  canManageActions?: InputMaybe<Scalars['Boolean']['input']>;
  canManageContents?: InputMaybe<Scalars['Boolean']['input']>;
  canManageDocuments?: InputMaybe<Scalars['Boolean']['input']>;
  canManageEvents?: InputMaybe<Scalars['Boolean']['input']>;
  canManageJoins?: InputMaybe<Scalars['Boolean']['input']>;
  canManageMemberRoles?: InputMaybe<Scalars['Boolean']['input']>;
  canManageProfile?: InputMaybe<Scalars['Boolean']['input']>;
  canManageRoles?: InputMaybe<Scalars['Boolean']['input']>;
  canManageTreasury?: InputMaybe<Scalars['Boolean']['input']>;
  canViewDraftEvents?: InputMaybe<Scalars['Boolean']['input']>;
  canViewJoins?: InputMaybe<Scalars['Boolean']['input']>;
  canViewTreasury?: InputMaybe<Scalars['Boolean']['input']>;
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPole?: InputMaybe<Scalars['Boolean']['input']>;
  manager?: InputMaybe<UserObjRelInsertInput>;
  managerId?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberRoles?: InputMaybe<TeamMemberRoleArrRelInsertInput>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TeamRoleType']['input']>;
};

export type TeamRoleMaxFields = {
  __typename?: 'TeamRoleMaxFields';
  color?: Maybe<Scalars['Colors']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  managerId?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['TeamRoleType']['output']>;
};

export type TeamRoleMaxOrderBy = {
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  managerId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TeamRoleMinFields = {
  __typename?: 'TeamRoleMinFields';
  color?: Maybe<Scalars['Colors']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  managerId?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['TeamRoleType']['output']>;
};

export type TeamRoleMinOrderBy = {
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  managerId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TeamRoleMutationResponse = {
  __typename?: 'TeamRoleMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TeamRole>;
};

export type TeamRoleObjRelInsertInput = {
  data: TeamRoleInsertInput;
  onConflict?: InputMaybe<TeamRoleOnConflict>;
};

export type TeamRoleOnConflict = {
  constraint: TeamRoleConstraint;
  updateColumns?: Array<TeamRoleUpdateColumn>;
  where?: InputMaybe<TeamRoleBoolExp>;
};

export type TeamRoleOrderBy = {
  canCreateActions?: InputMaybe<OrderBy>;
  canCreateContents?: InputMaybe<OrderBy>;
  canCreateEvents?: InputMaybe<OrderBy>;
  canManageActions?: InputMaybe<OrderBy>;
  canManageContents?: InputMaybe<OrderBy>;
  canManageDocuments?: InputMaybe<OrderBy>;
  canManageEvents?: InputMaybe<OrderBy>;
  canManageJoins?: InputMaybe<OrderBy>;
  canManageMemberRoles?: InputMaybe<OrderBy>;
  canManageProfile?: InputMaybe<OrderBy>;
  canManageRoles?: InputMaybe<OrderBy>;
  canManageTreasury?: InputMaybe<OrderBy>;
  canViewDraftEvents?: InputMaybe<OrderBy>;
  canViewJoins?: InputMaybe<OrderBy>;
  canViewTreasury?: InputMaybe<OrderBy>;
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isPole?: InputMaybe<OrderBy>;
  manager?: InputMaybe<UserOrderBy>;
  managerId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  teamMemberRolesAggregate?: InputMaybe<TeamMemberRoleAggregateOrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TeamRolePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TeamRoleSelectColumn {
  CanCreateActions = 'canCreateActions',
  CanCreateContents = 'canCreateContents',
  CanCreateEvents = 'canCreateEvents',
  CanManageActions = 'canManageActions',
  CanManageContents = 'canManageContents',
  CanManageDocuments = 'canManageDocuments',
  CanManageEvents = 'canManageEvents',
  CanManageJoins = 'canManageJoins',
  CanManageMemberRoles = 'canManageMemberRoles',
  CanManageProfile = 'canManageProfile',
  CanManageRoles = 'canManageRoles',
  CanManageTreasury = 'canManageTreasury',
  CanViewDraftEvents = 'canViewDraftEvents',
  CanViewJoins = 'canViewJoins',
  CanViewTreasury = 'canViewTreasury',
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  IsPole = 'isPole',
  ManagerId = 'managerId',
  Name = 'name',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export enum TeamRoleSelectColumnTeamRoleAggregateBoolExpBool_AndArgumentsColumns {
  CanCreateActions = 'canCreateActions',
  CanCreateContents = 'canCreateContents',
  CanCreateEvents = 'canCreateEvents',
  CanManageActions = 'canManageActions',
  CanManageContents = 'canManageContents',
  CanManageDocuments = 'canManageDocuments',
  CanManageEvents = 'canManageEvents',
  CanManageJoins = 'canManageJoins',
  CanManageMemberRoles = 'canManageMemberRoles',
  CanManageProfile = 'canManageProfile',
  CanManageRoles = 'canManageRoles',
  CanManageTreasury = 'canManageTreasury',
  CanViewDraftEvents = 'canViewDraftEvents',
  CanViewJoins = 'canViewJoins',
  CanViewTreasury = 'canViewTreasury',
  IsPole = 'isPole',
}

export enum TeamRoleSelectColumnTeamRoleAggregateBoolExpBool_OrArgumentsColumns {
  CanCreateActions = 'canCreateActions',
  CanCreateContents = 'canCreateContents',
  CanCreateEvents = 'canCreateEvents',
  CanManageActions = 'canManageActions',
  CanManageContents = 'canManageContents',
  CanManageDocuments = 'canManageDocuments',
  CanManageEvents = 'canManageEvents',
  CanManageJoins = 'canManageJoins',
  CanManageMemberRoles = 'canManageMemberRoles',
  CanManageProfile = 'canManageProfile',
  CanManageRoles = 'canManageRoles',
  CanManageTreasury = 'canManageTreasury',
  CanViewDraftEvents = 'canViewDraftEvents',
  CanViewJoins = 'canViewJoins',
  CanViewTreasury = 'canViewTreasury',
  IsPole = 'isPole',
}

export type TeamRoleSetInput = {
  canCreateActions?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateContents?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvents?: InputMaybe<Scalars['Boolean']['input']>;
  canManageActions?: InputMaybe<Scalars['Boolean']['input']>;
  canManageContents?: InputMaybe<Scalars['Boolean']['input']>;
  canManageDocuments?: InputMaybe<Scalars['Boolean']['input']>;
  canManageEvents?: InputMaybe<Scalars['Boolean']['input']>;
  canManageJoins?: InputMaybe<Scalars['Boolean']['input']>;
  canManageMemberRoles?: InputMaybe<Scalars['Boolean']['input']>;
  canManageProfile?: InputMaybe<Scalars['Boolean']['input']>;
  canManageRoles?: InputMaybe<Scalars['Boolean']['input']>;
  canManageTreasury?: InputMaybe<Scalars['Boolean']['input']>;
  canViewDraftEvents?: InputMaybe<Scalars['Boolean']['input']>;
  canViewJoins?: InputMaybe<Scalars['Boolean']['input']>;
  canViewTreasury?: InputMaybe<Scalars['Boolean']['input']>;
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPole?: InputMaybe<Scalars['Boolean']['input']>;
  managerId?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TeamRoleType']['input']>;
};

export type TeamRoleStddevFields = {
  __typename?: 'TeamRoleStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  managerId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamRoleStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  managerId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRoleStddevPopFields = {
  __typename?: 'TeamRoleStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  managerId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamRoleStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  managerId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRoleStddevSampFields = {
  __typename?: 'TeamRoleStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  managerId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamRoleStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  managerId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRoleStreamCursorInput = {
  initialValue: TeamRoleStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TeamRoleStreamCursorValueInput = {
  canCreateActions?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateContents?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvents?: InputMaybe<Scalars['Boolean']['input']>;
  canManageActions?: InputMaybe<Scalars['Boolean']['input']>;
  canManageContents?: InputMaybe<Scalars['Boolean']['input']>;
  canManageDocuments?: InputMaybe<Scalars['Boolean']['input']>;
  canManageEvents?: InputMaybe<Scalars['Boolean']['input']>;
  canManageJoins?: InputMaybe<Scalars['Boolean']['input']>;
  canManageMemberRoles?: InputMaybe<Scalars['Boolean']['input']>;
  canManageProfile?: InputMaybe<Scalars['Boolean']['input']>;
  canManageRoles?: InputMaybe<Scalars['Boolean']['input']>;
  canManageTreasury?: InputMaybe<Scalars['Boolean']['input']>;
  canViewDraftEvents?: InputMaybe<Scalars['Boolean']['input']>;
  canViewJoins?: InputMaybe<Scalars['Boolean']['input']>;
  canViewTreasury?: InputMaybe<Scalars['Boolean']['input']>;
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPole?: InputMaybe<Scalars['Boolean']['input']>;
  managerId?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TeamRoleType']['input']>;
};

export type TeamRoleSumFields = {
  __typename?: 'TeamRoleSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  managerId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamRoleSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  managerId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRoleTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['TeamRoleType']['input']>;
  _gt?: InputMaybe<Scalars['TeamRoleType']['input']>;
  _gte?: InputMaybe<Scalars['TeamRoleType']['input']>;
  _in?: InputMaybe<Array<Scalars['TeamRoleType']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['TeamRoleType']['input']>;
  _lte?: InputMaybe<Scalars['TeamRoleType']['input']>;
  _neq?: InputMaybe<Scalars['TeamRoleType']['input']>;
  _nin?: InputMaybe<Array<Scalars['TeamRoleType']['input']>>;
};

export enum TeamRoleUpdateColumn {
  CanCreateActions = 'canCreateActions',
  CanCreateContents = 'canCreateContents',
  CanCreateEvents = 'canCreateEvents',
  CanManageActions = 'canManageActions',
  CanManageContents = 'canManageContents',
  CanManageDocuments = 'canManageDocuments',
  CanManageEvents = 'canManageEvents',
  CanManageJoins = 'canManageJoins',
  CanManageMemberRoles = 'canManageMemberRoles',
  CanManageProfile = 'canManageProfile',
  CanManageRoles = 'canManageRoles',
  CanManageTreasury = 'canManageTreasury',
  CanViewDraftEvents = 'canViewDraftEvents',
  CanViewJoins = 'canViewJoins',
  CanViewTreasury = 'canViewTreasury',
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  IsPole = 'isPole',
  ManagerId = 'managerId',
  Name = 'name',
  TeamId = 'teamId',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export type TeamRoleUpdates = {
  _inc?: InputMaybe<TeamRoleIncInput>;
  _set?: InputMaybe<TeamRoleSetInput>;
  where: TeamRoleBoolExp;
};

export type TeamRoleVarPopFields = {
  __typename?: 'TeamRoleVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  managerId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamRoleVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  managerId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRoleVarSampFields = {
  __typename?: 'TeamRoleVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  managerId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamRoleVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  managerId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TeamRoleVarianceFields = {
  __typename?: 'TeamRoleVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  managerId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TeamRoleVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  managerId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum TeamSelectColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  DirectorsCategoryName = 'directorsCategoryName',
  ExpectingPresidentEmail = 'expectingPresidentEmail',
  ExpectingSecretaryEmail = 'expectingSecretaryEmail',
  ExpectingTreasurerEmail = 'expectingTreasurerEmail',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsJoinFormActive = 'isJoinFormActive',
  IsOnboardingComplete = 'isOnboardingComplete',
  JoinFormId = 'joinFormId',
  ManagersCategoryName = 'managersCategoryName',
  MembersCategoryName = 'membersCategoryName',
  MembershipDuration = 'membershipDuration',
  MembershipFees = 'membershipFees',
  ParentId = 'parentId',
  Slug = 'slug',
  TenantGrantFundId = 'tenantGrantFundId',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
  VideoId = 'videoId',
}

export enum TeamSelectColumnTeamAggregateBoolExpBool_AndArgumentsColumns {
  IsJoinFormActive = 'isJoinFormActive',
  IsOnboardingComplete = 'isOnboardingComplete',
}

export enum TeamSelectColumnTeamAggregateBoolExpBool_OrArgumentsColumns {
  IsJoinFormActive = 'isJoinFormActive',
  IsOnboardingComplete = 'isOnboardingComplete',
}

export type TeamSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  directorsCategoryName?: InputMaybe<Scalars['String']['input']>;
  expectingPresidentEmail?: InputMaybe<Scalars['String']['input']>;
  expectingSecretaryEmail?: InputMaybe<Scalars['String']['input']>;
  expectingTreasurerEmail?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isJoinFormActive?: InputMaybe<Scalars['Boolean']['input']>;
  isOnboardingComplete?: InputMaybe<Scalars['Boolean']['input']>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  managersCategoryName?: InputMaybe<Scalars['String']['input']>;
  membersCategoryName?: InputMaybe<Scalars['String']['input']>;
  membershipDuration?: InputMaybe<Scalars['String']['input']>;
  membershipFees?: InputMaybe<Scalars['Float']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantGrantFundId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TeamType']['input']>;
  videoId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamStddevFields = {
  __typename?: 'TeamStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  tenantGrantFundId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  videoId?: Maybe<Scalars['Float']['output']>;
};

export type TeamStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamStddevPopFields = {
  __typename?: 'TeamStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  tenantGrantFundId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  videoId?: Maybe<Scalars['Float']['output']>;
};

export type TeamStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamStddevSampFields = {
  __typename?: 'TeamStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  tenantGrantFundId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  videoId?: Maybe<Scalars['Float']['output']>;
};

export type TeamStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamStreamCursorInput = {
  initialValue: TeamStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TeamStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  directorsCategoryName?: InputMaybe<Scalars['String']['input']>;
  expectingPresidentEmail?: InputMaybe<Scalars['String']['input']>;
  expectingSecretaryEmail?: InputMaybe<Scalars['String']['input']>;
  expectingTreasurerEmail?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isJoinFormActive?: InputMaybe<Scalars['Boolean']['input']>;
  isOnboardingComplete?: InputMaybe<Scalars['Boolean']['input']>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  managersCategoryName?: InputMaybe<Scalars['String']['input']>;
  membersCategoryName?: InputMaybe<Scalars['String']['input']>;
  membershipDuration?: InputMaybe<Scalars['String']['input']>;
  membershipFees?: InputMaybe<Scalars['Float']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantGrantFundId?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TeamType']['input']>;
  videoId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamSumFields = {
  __typename?: 'TeamSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  tenantGrantFundId?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  videoId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['TeamType']['input']>;
  _gt?: InputMaybe<Scalars['TeamType']['input']>;
  _gte?: InputMaybe<Scalars['TeamType']['input']>;
  _in?: InputMaybe<Array<Scalars['TeamType']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['TeamType']['input']>;
  _lte?: InputMaybe<Scalars['TeamType']['input']>;
  _neq?: InputMaybe<Scalars['TeamType']['input']>;
  _nin?: InputMaybe<Array<Scalars['TeamType']['input']>>;
};

export enum TeamUpdateColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  DirectorsCategoryName = 'directorsCategoryName',
  ExpectingPresidentEmail = 'expectingPresidentEmail',
  ExpectingSecretaryEmail = 'expectingSecretaryEmail',
  ExpectingTreasurerEmail = 'expectingTreasurerEmail',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsJoinFormActive = 'isJoinFormActive',
  IsOnboardingComplete = 'isOnboardingComplete',
  JoinFormId = 'joinFormId',
  ManagersCategoryName = 'managersCategoryName',
  MembersCategoryName = 'membersCategoryName',
  MembershipDuration = 'membershipDuration',
  MembershipFees = 'membershipFees',
  ParentId = 'parentId',
  Slug = 'slug',
  TenantGrantFundId = 'tenantGrantFundId',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
  VideoId = 'videoId',
}

export type TeamUpdates = {
  _inc?: InputMaybe<TeamIncInput>;
  _set?: InputMaybe<TeamSetInput>;
  where: TeamBoolExp;
};

export type TeamVarPopFields = {
  __typename?: 'TeamVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  tenantGrantFundId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  videoId?: Maybe<Scalars['Float']['output']>;
};

export type TeamVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamVarSampFields = {
  __typename?: 'TeamVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  tenantGrantFundId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  videoId?: Maybe<Scalars['Float']['output']>;
};

export type TeamVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamVarianceFields = {
  __typename?: 'TeamVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  tenantGrantFundId?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  videoId?: Maybe<Scalars['Float']['output']>;
};

export type TeamVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type Tenant = {
  __typename?: 'Tenant';
  actions: Array<Action>;
  actionsAggregate: ActionAggregate;
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  actorImages: Array<ActorImage>;
  actorImagesAggregate: ActorImageAggregate;
  actors: Array<Actor>;
  actorsAggregate: ActorAggregate;
  adminRoles: Array<AdminRole>;
  adminRolesAggregate: AdminRoleAggregate;
  bankAccounts: Array<BankAccount>;
  bankAccountsAggregate: BankAccountAggregate;
  bankInfos: Array<BankInfo>;
  bankInfosAggregate: BankInfoAggregate;
  campusClusters: Array<CampusCluster>;
  campusClustersAggregate: CampusClusterAggregate;
  campuses: Array<Campus>;
  campusesAggregate: CampusAggregate;
  createdAt: Scalars['timestamptz']['output'];
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  domain: Scalars['String']['output'];
  eventApprovalSteps: Array<EventApprovalStep>;
  eventApprovalStepsAggregate: EventApprovalStepAggregate;
  eventApprovalValidators: Array<EventApprovalValidator>;
  eventApprovalValidatorsAggregate: EventApprovalValidatorAggregate;
  eventApprovals: Array<EventApproval>;
  eventApprovalsAggregate: EventApprovalAggregate;
  eventFavorites: Array<EventFavorite>;
  eventFavoritesAggregate: EventFavoriteAggregate;
  eventJoins: Array<EventJoin>;
  eventJoinsAggregate: EventJoinAggregate;
  eventOrganizes: Array<EventOrganize>;
  eventOrganizesAggregate: EventOrganizeAggregate;
  eventSupervisors: Array<EventSupervisor>;
  eventSupervisorsAggregate: EventSupervisorAggregate;
  eventValidationForm?: Maybe<Form>;
  eventValidationFormId?: Maybe<Scalars['bigint']['output']>;
  events: Array<Event>;
  eventsAggregate: EventAggregate;
  expenseItems: Array<ExpenseItem>;
  expenseItemsAggregate: ExpenseItemAggregate;
  expenses: Array<Expense>;
  expensesAggregate: ExpenseAggregate;
  fileUploads: Array<FileUpload>;
  fileUploadsAggregate: FileUploadAggregate;
  follows: Array<Follow>;
  followsAggregate: FollowAggregate;
  formSubmissions: Array<FormSubmission>;
  formSubmissionsAggregate: FormSubmissionAggregate;
  forms: Array<Form>;
  formsAggregate: FormAggregate;
  grantAllocates: Array<GrantAllocate>;
  grantAllocatesAggregate: GrantAllocateAggregate;
  grants: Array<Grant>;
  grantsAggregate: GrantAggregate;
  id: Scalars['bigint']['output'];
  isOidcEnabled: Scalars['Boolean']['output'];
  locations: Array<Location>;
  locationsAggregate: LocationAggregate;
  missionJoins: Array<MissionJoin>;
  missionJoinsAggregate: MissionJoinAggregate;
  missions: Array<Mission>;
  missionsAggregate: MissionAggregate;
  oidcCallbackUri: Scalars['String']['output'];
  oidcClientId: Scalars['String']['output'];
  oidcClientSecret: Scalars['String']['output'];
  oidcDiscoveryUrl: Scalars['String']['output'];
  oidcName: Scalars['String']['output'];
  oidcScopes: Scalars['String']['output'];
  pointName: Scalars['String']['output'];
  projectSupervisors: Array<ProjectSupervisor>;
  projectSupervisorsAggregate: ProjectSupervisorAggregate;
  projects: Array<Project>;
  projectsAggregate: ProjectAggregate;
  requiredDocuments: Array<RequiredDocument>;
  requiredDocumentsAggregate: RequiredDocumentAggregate;
  requiredRoles: Array<RequiredRole>;
  requiredRolesAggregate: RequiredRoleAggregate;
  tags: Array<Tag>;
  tagsAggregate: TagAggregate;
  teamDocuments: Array<TeamDocument>;
  teamDocumentsAggregate: TeamDocumentAggregate;
  teamHistories: Array<TeamHistory>;
  teamHistoriesAggregate: TeamHistoryAggregate;
  teamJoins: Array<TeamJoin>;
  teamJoinsAggregate: TeamJoinAggregate;
  teamMembers: Array<TeamMember>;
  teamMembersAggregate: TeamMemberAggregate;
  teamRequiredRoles: Array<TeamRequiredRole>;
  teamRequiredRolesAggregate: TeamRequiredRoleAggregate;
  teamRoles: Array<TeamRole>;
  teamRolesAggregate: TeamRoleAggregate;
  teams: Array<Team>;
  teamsAggregate: TeamAggregate;
  tenantMembers: Array<TenantMember>;
  tenantMembersAggregate: TenantMemberAggregate;
  tenantRoles: Array<TenantRole>;
  tenantRolesAggregate: TenantRoleAggregate;
  transactions: Array<Transaction>;
  transactionsAggregate: TransactionAggregate;
  users: Array<User>;
  usersAggregate: UserAggregate;
};

export type TenantActionsArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type TenantActionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type TenantActorImagesArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type TenantActorImagesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type TenantActorsArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type TenantActorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type TenantAdminRolesArgs = {
  distinctOn?: InputMaybe<Array<AdminRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdminRoleOrderBy>>;
  where?: InputMaybe<AdminRoleBoolExp>;
};

export type TenantAdminRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<AdminRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdminRoleOrderBy>>;
  where?: InputMaybe<AdminRoleBoolExp>;
};

export type TenantBankAccountsArgs = {
  distinctOn?: InputMaybe<Array<BankAccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankAccountOrderBy>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type TenantBankAccountsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankAccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankAccountOrderBy>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type TenantBankInfosArgs = {
  distinctOn?: InputMaybe<Array<BankInfoSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankInfoOrderBy>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type TenantBankInfosAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankInfoSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankInfoOrderBy>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type TenantCampusClustersArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type TenantCampusClustersAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type TenantCampusesArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type TenantCampusesAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type TenantEventApprovalStepsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type TenantEventApprovalStepsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type TenantEventApprovalValidatorsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalValidatorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalValidatorOrderBy>>;
  where?: InputMaybe<EventApprovalValidatorBoolExp>;
};

export type TenantEventApprovalValidatorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalValidatorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalValidatorOrderBy>>;
  where?: InputMaybe<EventApprovalValidatorBoolExp>;
};

export type TenantEventApprovalsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type TenantEventApprovalsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type TenantEventFavoritesArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type TenantEventFavoritesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type TenantEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type TenantEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type TenantEventOrganizesArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type TenantEventOrganizesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type TenantEventSupervisorsArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type TenantEventSupervisorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type TenantEventsArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type TenantEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type TenantExpenseItemsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type TenantExpenseItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type TenantExpensesArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type TenantExpensesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type TenantFileUploadsArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type TenantFileUploadsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type TenantFollowsArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type TenantFollowsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type TenantFormSubmissionsArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type TenantFormSubmissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type TenantFormsArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type TenantFormsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type TenantGrantAllocatesArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type TenantGrantAllocatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type TenantGrantsArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type TenantGrantsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type TenantLocationsArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type TenantLocationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type TenantMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type TenantMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type TenantMissionsArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type TenantMissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type TenantProjectSupervisorsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorOrderBy>>;
  where?: InputMaybe<ProjectSupervisorBoolExp>;
};

export type TenantProjectSupervisorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorOrderBy>>;
  where?: InputMaybe<ProjectSupervisorBoolExp>;
};

export type TenantProjectsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type TenantProjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type TenantRequiredDocumentsArgs = {
  distinctOn?: InputMaybe<Array<RequiredDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredDocumentOrderBy>>;
  where?: InputMaybe<RequiredDocumentBoolExp>;
};

export type TenantRequiredDocumentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<RequiredDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredDocumentOrderBy>>;
  where?: InputMaybe<RequiredDocumentBoolExp>;
};

export type TenantRequiredRolesArgs = {
  distinctOn?: InputMaybe<Array<RequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredRoleOrderBy>>;
  where?: InputMaybe<RequiredRoleBoolExp>;
};

export type TenantRequiredRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<RequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredRoleOrderBy>>;
  where?: InputMaybe<RequiredRoleBoolExp>;
};

export type TenantTagsArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type TenantTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type TenantTeamDocumentsArgs = {
  distinctOn?: InputMaybe<Array<TeamDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamDocumentOrderBy>>;
  where?: InputMaybe<TeamDocumentBoolExp>;
};

export type TenantTeamDocumentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamDocumentOrderBy>>;
  where?: InputMaybe<TeamDocumentBoolExp>;
};

export type TenantTeamHistoriesArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type TenantTeamHistoriesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type TenantTeamJoinsArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type TenantTeamJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type TenantTeamMembersArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type TenantTeamMembersAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type TenantTeamRequiredRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamRequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRequiredRoleOrderBy>>;
  where?: InputMaybe<TeamRequiredRoleBoolExp>;
};

export type TenantTeamRequiredRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamRequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRequiredRoleOrderBy>>;
  where?: InputMaybe<TeamRequiredRoleBoolExp>;
};

export type TenantTeamRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRoleOrderBy>>;
  where?: InputMaybe<TeamRoleBoolExp>;
};

export type TenantTeamRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRoleOrderBy>>;
  where?: InputMaybe<TeamRoleBoolExp>;
};

export type TenantTeamsArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type TenantTeamsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type TenantTenantMembersArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberOrderBy>>;
  where?: InputMaybe<TenantMemberBoolExp>;
};

export type TenantTenantMembersAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberOrderBy>>;
  where?: InputMaybe<TenantMemberBoolExp>;
};

export type TenantTenantRolesArgs = {
  distinctOn?: InputMaybe<Array<TenantRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantRoleOrderBy>>;
  where?: InputMaybe<TenantRoleBoolExp>;
};

export type TenantTenantRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantRoleOrderBy>>;
  where?: InputMaybe<TenantRoleBoolExp>;
};

export type TenantTransactionsArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type TenantTransactionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type TenantUsersArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type TenantUsersAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type TenantAggregate = {
  __typename?: 'TenantAggregate';
  aggregate?: Maybe<TenantAggregateFields>;
  nodes: Array<Tenant>;
};

export type TenantAggregateFields = {
  __typename?: 'TenantAggregateFields';
  avg?: Maybe<TenantAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TenantMaxFields>;
  min?: Maybe<TenantMinFields>;
  stddev?: Maybe<TenantStddevFields>;
  stddevPop?: Maybe<TenantStddevPopFields>;
  stddevSamp?: Maybe<TenantStddevSampFields>;
  sum?: Maybe<TenantSumFields>;
  varPop?: Maybe<TenantVarPopFields>;
  varSamp?: Maybe<TenantVarSampFields>;
  variance?: Maybe<TenantVarianceFields>;
};

export type TenantAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TenantSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TenantAvgFields = {
  __typename?: 'TenantAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  eventValidationFormId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

export type TenantBoolExp = {
  _and?: InputMaybe<Array<TenantBoolExp>>;
  _not?: InputMaybe<TenantBoolExp>;
  _or?: InputMaybe<Array<TenantBoolExp>>;
  actions?: InputMaybe<ActionBoolExp>;
  actionsAggregate?: InputMaybe<ActionAggregateBoolExp>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  actorImages?: InputMaybe<ActorImageBoolExp>;
  actorImagesAggregate?: InputMaybe<ActorImageAggregateBoolExp>;
  actors?: InputMaybe<ActorBoolExp>;
  actorsAggregate?: InputMaybe<ActorAggregateBoolExp>;
  adminRoles?: InputMaybe<AdminRoleBoolExp>;
  adminRolesAggregate?: InputMaybe<AdminRoleAggregateBoolExp>;
  bankAccounts?: InputMaybe<BankAccountBoolExp>;
  bankAccountsAggregate?: InputMaybe<BankAccountAggregateBoolExp>;
  bankInfos?: InputMaybe<BankInfoBoolExp>;
  bankInfosAggregate?: InputMaybe<BankInfoAggregateBoolExp>;
  campusClusters?: InputMaybe<CampusClusterBoolExp>;
  campusClustersAggregate?: InputMaybe<CampusClusterAggregateBoolExp>;
  campuses?: InputMaybe<CampusBoolExp>;
  campusesAggregate?: InputMaybe<CampusAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  domain?: InputMaybe<StringComparisonExp>;
  eventApprovalSteps?: InputMaybe<EventApprovalStepBoolExp>;
  eventApprovalStepsAggregate?: InputMaybe<EventApprovalStepAggregateBoolExp>;
  eventApprovalValidators?: InputMaybe<EventApprovalValidatorBoolExp>;
  eventApprovalValidatorsAggregate?: InputMaybe<EventApprovalValidatorAggregateBoolExp>;
  eventApprovals?: InputMaybe<EventApprovalBoolExp>;
  eventApprovalsAggregate?: InputMaybe<EventApprovalAggregateBoolExp>;
  eventFavorites?: InputMaybe<EventFavoriteBoolExp>;
  eventFavoritesAggregate?: InputMaybe<EventFavoriteAggregateBoolExp>;
  eventJoins?: InputMaybe<EventJoinBoolExp>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  eventOrganizes?: InputMaybe<EventOrganizeBoolExp>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateBoolExp>;
  eventSupervisors?: InputMaybe<EventSupervisorBoolExp>;
  eventSupervisorsAggregate?: InputMaybe<EventSupervisorAggregateBoolExp>;
  eventValidationForm?: InputMaybe<FormBoolExp>;
  eventValidationFormId?: InputMaybe<BigintComparisonExp>;
  events?: InputMaybe<EventBoolExp>;
  eventsAggregate?: InputMaybe<EventAggregateBoolExp>;
  expenseItems?: InputMaybe<ExpenseItemBoolExp>;
  expenseItemsAggregate?: InputMaybe<ExpenseItemAggregateBoolExp>;
  expenses?: InputMaybe<ExpenseBoolExp>;
  expensesAggregate?: InputMaybe<ExpenseAggregateBoolExp>;
  fileUploads?: InputMaybe<FileUploadBoolExp>;
  fileUploadsAggregate?: InputMaybe<FileUploadAggregateBoolExp>;
  follows?: InputMaybe<FollowBoolExp>;
  followsAggregate?: InputMaybe<FollowAggregateBoolExp>;
  formSubmissions?: InputMaybe<FormSubmissionBoolExp>;
  formSubmissionsAggregate?: InputMaybe<FormSubmissionAggregateBoolExp>;
  forms?: InputMaybe<FormBoolExp>;
  formsAggregate?: InputMaybe<FormAggregateBoolExp>;
  grantAllocates?: InputMaybe<GrantAllocateBoolExp>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateBoolExp>;
  grants?: InputMaybe<GrantBoolExp>;
  grantsAggregate?: InputMaybe<GrantAggregateBoolExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isOidcEnabled?: InputMaybe<BooleanComparisonExp>;
  locations?: InputMaybe<LocationBoolExp>;
  locationsAggregate?: InputMaybe<LocationAggregateBoolExp>;
  missionJoins?: InputMaybe<MissionJoinBoolExp>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  missions?: InputMaybe<MissionBoolExp>;
  missionsAggregate?: InputMaybe<MissionAggregateBoolExp>;
  oidcCallbackUri?: InputMaybe<StringComparisonExp>;
  oidcClientId?: InputMaybe<StringComparisonExp>;
  oidcClientSecret?: InputMaybe<StringComparisonExp>;
  oidcDiscoveryUrl?: InputMaybe<StringComparisonExp>;
  oidcName?: InputMaybe<StringComparisonExp>;
  oidcScopes?: InputMaybe<StringComparisonExp>;
  pointName?: InputMaybe<StringComparisonExp>;
  projectSupervisors?: InputMaybe<ProjectSupervisorBoolExp>;
  projectSupervisorsAggregate?: InputMaybe<ProjectSupervisorAggregateBoolExp>;
  projects?: InputMaybe<ProjectBoolExp>;
  projectsAggregate?: InputMaybe<ProjectAggregateBoolExp>;
  requiredDocuments?: InputMaybe<RequiredDocumentBoolExp>;
  requiredDocumentsAggregate?: InputMaybe<RequiredDocumentAggregateBoolExp>;
  requiredRoles?: InputMaybe<RequiredRoleBoolExp>;
  requiredRolesAggregate?: InputMaybe<RequiredRoleAggregateBoolExp>;
  tags?: InputMaybe<TagBoolExp>;
  tagsAggregate?: InputMaybe<TagAggregateBoolExp>;
  teamDocuments?: InputMaybe<TeamDocumentBoolExp>;
  teamDocumentsAggregate?: InputMaybe<TeamDocumentAggregateBoolExp>;
  teamHistories?: InputMaybe<TeamHistoryBoolExp>;
  teamHistoriesAggregate?: InputMaybe<TeamHistoryAggregateBoolExp>;
  teamJoins?: InputMaybe<TeamJoinBoolExp>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateBoolExp>;
  teamMembers?: InputMaybe<TeamMemberBoolExp>;
  teamMembersAggregate?: InputMaybe<TeamMemberAggregateBoolExp>;
  teamRequiredRoles?: InputMaybe<TeamRequiredRoleBoolExp>;
  teamRequiredRolesAggregate?: InputMaybe<TeamRequiredRoleAggregateBoolExp>;
  teamRoles?: InputMaybe<TeamRoleBoolExp>;
  teamRolesAggregate?: InputMaybe<TeamRoleAggregateBoolExp>;
  teams?: InputMaybe<TeamBoolExp>;
  teamsAggregate?: InputMaybe<TeamAggregateBoolExp>;
  tenantMembers?: InputMaybe<TenantMemberBoolExp>;
  tenantMembersAggregate?: InputMaybe<TenantMemberAggregateBoolExp>;
  tenantRoles?: InputMaybe<TenantRoleBoolExp>;
  tenantRolesAggregate?: InputMaybe<TenantRoleAggregateBoolExp>;
  transactions?: InputMaybe<TransactionBoolExp>;
  transactionsAggregate?: InputMaybe<TransactionAggregateBoolExp>;
  users?: InputMaybe<UserBoolExp>;
  usersAggregate?: InputMaybe<UserAggregateBoolExp>;
};

export enum TenantConstraint {
  TenantActorIdUnique = 'tenant_actor_id_unique',
  TenantDomainUnique = 'tenant_domain_unique',
  TenantEventValidationFormIdUnique = 'tenant_event_validation_form_id_unique',
  TenantOidcNameUnique = 'tenant_oidc_name_unique',
  TenantPkey = 'tenant_pkey',
}

export type TenantIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  eventValidationFormId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

export type TenantInsertInput = {
  actions?: InputMaybe<ActionArrRelInsertInput>;
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  actorImages?: InputMaybe<ActorImageArrRelInsertInput>;
  actors?: InputMaybe<ActorArrRelInsertInput>;
  adminRoles?: InputMaybe<AdminRoleArrRelInsertInput>;
  bankAccounts?: InputMaybe<BankAccountArrRelInsertInput>;
  bankInfos?: InputMaybe<BankInfoArrRelInsertInput>;
  campusClusters?: InputMaybe<CampusClusterArrRelInsertInput>;
  campuses?: InputMaybe<CampusArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  domain?: InputMaybe<Scalars['String']['input']>;
  eventApprovalSteps?: InputMaybe<EventApprovalStepArrRelInsertInput>;
  eventApprovalValidators?: InputMaybe<EventApprovalValidatorArrRelInsertInput>;
  eventApprovals?: InputMaybe<EventApprovalArrRelInsertInput>;
  eventFavorites?: InputMaybe<EventFavoriteArrRelInsertInput>;
  eventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  eventOrganizes?: InputMaybe<EventOrganizeArrRelInsertInput>;
  eventSupervisors?: InputMaybe<EventSupervisorArrRelInsertInput>;
  eventValidationForm?: InputMaybe<FormObjRelInsertInput>;
  eventValidationFormId?: InputMaybe<Scalars['bigint']['input']>;
  events?: InputMaybe<EventArrRelInsertInput>;
  expenseItems?: InputMaybe<ExpenseItemArrRelInsertInput>;
  expenses?: InputMaybe<ExpenseArrRelInsertInput>;
  fileUploads?: InputMaybe<FileUploadArrRelInsertInput>;
  follows?: InputMaybe<FollowArrRelInsertInput>;
  formSubmissions?: InputMaybe<FormSubmissionArrRelInsertInput>;
  forms?: InputMaybe<FormArrRelInsertInput>;
  grantAllocates?: InputMaybe<GrantAllocateArrRelInsertInput>;
  grants?: InputMaybe<GrantArrRelInsertInput>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isOidcEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  locations?: InputMaybe<LocationArrRelInsertInput>;
  missionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  missions?: InputMaybe<MissionArrRelInsertInput>;
  oidcCallbackUri?: InputMaybe<Scalars['String']['input']>;
  oidcClientId?: InputMaybe<Scalars['String']['input']>;
  oidcClientSecret?: InputMaybe<Scalars['String']['input']>;
  oidcDiscoveryUrl?: InputMaybe<Scalars['String']['input']>;
  oidcName?: InputMaybe<Scalars['String']['input']>;
  oidcScopes?: InputMaybe<Scalars['String']['input']>;
  pointName?: InputMaybe<Scalars['String']['input']>;
  projectSupervisors?: InputMaybe<ProjectSupervisorArrRelInsertInput>;
  projects?: InputMaybe<ProjectArrRelInsertInput>;
  requiredDocuments?: InputMaybe<RequiredDocumentArrRelInsertInput>;
  requiredRoles?: InputMaybe<RequiredRoleArrRelInsertInput>;
  tags?: InputMaybe<TagArrRelInsertInput>;
  teamDocuments?: InputMaybe<TeamDocumentArrRelInsertInput>;
  teamHistories?: InputMaybe<TeamHistoryArrRelInsertInput>;
  teamJoins?: InputMaybe<TeamJoinArrRelInsertInput>;
  teamMembers?: InputMaybe<TeamMemberArrRelInsertInput>;
  teamRequiredRoles?: InputMaybe<TeamRequiredRoleArrRelInsertInput>;
  teamRoles?: InputMaybe<TeamRoleArrRelInsertInput>;
  teams?: InputMaybe<TeamArrRelInsertInput>;
  tenantMembers?: InputMaybe<TenantMemberArrRelInsertInput>;
  tenantRoles?: InputMaybe<TenantRoleArrRelInsertInput>;
  transactions?: InputMaybe<TransactionArrRelInsertInput>;
  users?: InputMaybe<UserArrRelInsertInput>;
};

export type TenantMaxFields = {
  __typename?: 'TenantMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  eventValidationFormId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  oidcCallbackUri?: Maybe<Scalars['String']['output']>;
  oidcClientId?: Maybe<Scalars['String']['output']>;
  oidcClientSecret?: Maybe<Scalars['String']['output']>;
  oidcDiscoveryUrl?: Maybe<Scalars['String']['output']>;
  oidcName?: Maybe<Scalars['String']['output']>;
  oidcScopes?: Maybe<Scalars['String']['output']>;
  pointName?: Maybe<Scalars['String']['output']>;
};

export type TenantMember = {
  __typename?: 'TenantMember';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  tenantMemberRoles: Array<TenantMemberRole>;
  tenantMemberRolesAggregate: TenantMemberRoleAggregate;
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  user: User;
  userId: Scalars['bigint']['output'];
};

export type TenantMemberTenantMemberRolesArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberRoleOrderBy>>;
  where?: InputMaybe<TenantMemberRoleBoolExp>;
};

export type TenantMemberTenantMemberRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberRoleOrderBy>>;
  where?: InputMaybe<TenantMemberRoleBoolExp>;
};

export type TenantMemberAggregate = {
  __typename?: 'TenantMemberAggregate';
  aggregate?: Maybe<TenantMemberAggregateFields>;
  nodes: Array<TenantMember>;
};

export type TenantMemberAggregateBoolExp = {
  count?: InputMaybe<TenantMemberAggregateBoolExpCount>;
};

export type TenantMemberAggregateFields = {
  __typename?: 'TenantMemberAggregateFields';
  avg?: Maybe<TenantMemberAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TenantMemberMaxFields>;
  min?: Maybe<TenantMemberMinFields>;
  stddev?: Maybe<TenantMemberStddevFields>;
  stddevPop?: Maybe<TenantMemberStddevPopFields>;
  stddevSamp?: Maybe<TenantMemberStddevSampFields>;
  sum?: Maybe<TenantMemberSumFields>;
  varPop?: Maybe<TenantMemberVarPopFields>;
  varSamp?: Maybe<TenantMemberVarSampFields>;
  variance?: Maybe<TenantMemberVarianceFields>;
};

export type TenantMemberAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TenantMemberSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TenantMemberAggregateOrderBy = {
  avg?: InputMaybe<TenantMemberAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TenantMemberMaxOrderBy>;
  min?: InputMaybe<TenantMemberMinOrderBy>;
  stddev?: InputMaybe<TenantMemberStddevOrderBy>;
  stddevPop?: InputMaybe<TenantMemberStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TenantMemberStddevSampOrderBy>;
  sum?: InputMaybe<TenantMemberSumOrderBy>;
  varPop?: InputMaybe<TenantMemberVarPopOrderBy>;
  varSamp?: InputMaybe<TenantMemberVarSampOrderBy>;
  variance?: InputMaybe<TenantMemberVarianceOrderBy>;
};

export type TenantMemberArrRelInsertInput = {
  data: Array<TenantMemberInsertInput>;
  onConflict?: InputMaybe<TenantMemberOnConflict>;
};

export type TenantMemberAvgFields = {
  __typename?: 'TenantMemberAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TenantMemberAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TenantMemberBoolExp = {
  _and?: InputMaybe<Array<TenantMemberBoolExp>>;
  _not?: InputMaybe<TenantMemberBoolExp>;
  _or?: InputMaybe<Array<TenantMemberBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenantMemberRoles?: InputMaybe<TenantMemberRoleBoolExp>;
  tenantMemberRolesAggregate?: InputMaybe<TenantMemberRoleAggregateBoolExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
  userId?: InputMaybe<BigintComparisonExp>;
};

export enum TenantMemberConstraint {
  TenantMemberPkey = 'tenant_member_pkey',
}

export type TenantMemberIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TenantMemberInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantMemberRoles?: InputMaybe<TenantMemberRoleArrRelInsertInput>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TenantMemberMaxFields = {
  __typename?: 'TenantMemberMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type TenantMemberMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TenantMemberMinFields = {
  __typename?: 'TenantMemberMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type TenantMemberMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TenantMemberMutationResponse = {
  __typename?: 'TenantMemberMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TenantMember>;
};

export type TenantMemberObjRelInsertInput = {
  data: TenantMemberInsertInput;
  onConflict?: InputMaybe<TenantMemberOnConflict>;
};

export type TenantMemberOnConflict = {
  constraint: TenantMemberConstraint;
  updateColumns?: Array<TenantMemberUpdateColumn>;
  where?: InputMaybe<TenantMemberBoolExp>;
};

export type TenantMemberOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantMemberRolesAggregate?: InputMaybe<TenantMemberRoleAggregateOrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TenantMemberPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export type TenantMemberRole = {
  __typename?: 'TenantMemberRole';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  tenantMember: TenantMember;
  tenantMemberId: Scalars['bigint']['output'];
  tenantRole: TenantRole;
  tenantRoleId: Scalars['bigint']['output'];
};

export type TenantMemberRoleAggregate = {
  __typename?: 'TenantMemberRoleAggregate';
  aggregate?: Maybe<TenantMemberRoleAggregateFields>;
  nodes: Array<TenantMemberRole>;
};

export type TenantMemberRoleAggregateBoolExp = {
  count?: InputMaybe<TenantMemberRoleAggregateBoolExpCount>;
};

export type TenantMemberRoleAggregateFields = {
  __typename?: 'TenantMemberRoleAggregateFields';
  avg?: Maybe<TenantMemberRoleAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TenantMemberRoleMaxFields>;
  min?: Maybe<TenantMemberRoleMinFields>;
  stddev?: Maybe<TenantMemberRoleStddevFields>;
  stddevPop?: Maybe<TenantMemberRoleStddevPopFields>;
  stddevSamp?: Maybe<TenantMemberRoleStddevSampFields>;
  sum?: Maybe<TenantMemberRoleSumFields>;
  varPop?: Maybe<TenantMemberRoleVarPopFields>;
  varSamp?: Maybe<TenantMemberRoleVarSampFields>;
  variance?: Maybe<TenantMemberRoleVarianceFields>;
};

export type TenantMemberRoleAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TenantMemberRoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TenantMemberRoleAggregateOrderBy = {
  avg?: InputMaybe<TenantMemberRoleAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TenantMemberRoleMaxOrderBy>;
  min?: InputMaybe<TenantMemberRoleMinOrderBy>;
  stddev?: InputMaybe<TenantMemberRoleStddevOrderBy>;
  stddevPop?: InputMaybe<TenantMemberRoleStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TenantMemberRoleStddevSampOrderBy>;
  sum?: InputMaybe<TenantMemberRoleSumOrderBy>;
  varPop?: InputMaybe<TenantMemberRoleVarPopOrderBy>;
  varSamp?: InputMaybe<TenantMemberRoleVarSampOrderBy>;
  variance?: InputMaybe<TenantMemberRoleVarianceOrderBy>;
};

export type TenantMemberRoleArrRelInsertInput = {
  data: Array<TenantMemberRoleInsertInput>;
  onConflict?: InputMaybe<TenantMemberRoleOnConflict>;
};

export type TenantMemberRoleAvgFields = {
  __typename?: 'TenantMemberRoleAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantMemberId?: Maybe<Scalars['Float']['output']>;
  tenantRoleId?: Maybe<Scalars['Float']['output']>;
};

export type TenantMemberRoleAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantMemberId?: InputMaybe<OrderBy>;
  tenantRoleId?: InputMaybe<OrderBy>;
};

export type TenantMemberRoleBoolExp = {
  _and?: InputMaybe<Array<TenantMemberRoleBoolExp>>;
  _not?: InputMaybe<TenantMemberRoleBoolExp>;
  _or?: InputMaybe<Array<TenantMemberRoleBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenantMember?: InputMaybe<TenantMemberBoolExp>;
  tenantMemberId?: InputMaybe<BigintComparisonExp>;
  tenantRole?: InputMaybe<TenantRoleBoolExp>;
  tenantRoleId?: InputMaybe<BigintComparisonExp>;
};

export enum TenantMemberRoleConstraint {
  TenantMemberRolePkey = 'tenant_member_role_pkey',
}

export type TenantMemberRoleIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantMemberId?: InputMaybe<Scalars['bigint']['input']>;
  tenantRoleId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TenantMemberRoleInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantMember?: InputMaybe<TenantMemberObjRelInsertInput>;
  tenantMemberId?: InputMaybe<Scalars['bigint']['input']>;
  tenantRole?: InputMaybe<TenantRoleObjRelInsertInput>;
  tenantRoleId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TenantMemberRoleMaxFields = {
  __typename?: 'TenantMemberRoleMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantMemberId?: Maybe<Scalars['bigint']['output']>;
  tenantRoleId?: Maybe<Scalars['bigint']['output']>;
};

export type TenantMemberRoleMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantMemberId?: InputMaybe<OrderBy>;
  tenantRoleId?: InputMaybe<OrderBy>;
};

export type TenantMemberRoleMinFields = {
  __typename?: 'TenantMemberRoleMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantMemberId?: Maybe<Scalars['bigint']['output']>;
  tenantRoleId?: Maybe<Scalars['bigint']['output']>;
};

export type TenantMemberRoleMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantMemberId?: InputMaybe<OrderBy>;
  tenantRoleId?: InputMaybe<OrderBy>;
};

export type TenantMemberRoleMutationResponse = {
  __typename?: 'TenantMemberRoleMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TenantMemberRole>;
};

export type TenantMemberRoleOnConflict = {
  constraint: TenantMemberRoleConstraint;
  updateColumns?: Array<TenantMemberRoleUpdateColumn>;
  where?: InputMaybe<TenantMemberRoleBoolExp>;
};

export type TenantMemberRoleOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantMember?: InputMaybe<TenantMemberOrderBy>;
  tenantMemberId?: InputMaybe<OrderBy>;
  tenantRole?: InputMaybe<TenantRoleOrderBy>;
  tenantRoleId?: InputMaybe<OrderBy>;
};

export type TenantMemberRolePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TenantMemberRoleSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  TenantMemberId = 'tenantMemberId',
  TenantRoleId = 'tenantRoleId',
}

export type TenantMemberRoleSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantMemberId?: InputMaybe<Scalars['bigint']['input']>;
  tenantRoleId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TenantMemberRoleStddevFields = {
  __typename?: 'TenantMemberRoleStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantMemberId?: Maybe<Scalars['Float']['output']>;
  tenantRoleId?: Maybe<Scalars['Float']['output']>;
};

export type TenantMemberRoleStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantMemberId?: InputMaybe<OrderBy>;
  tenantRoleId?: InputMaybe<OrderBy>;
};

export type TenantMemberRoleStddevPopFields = {
  __typename?: 'TenantMemberRoleStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantMemberId?: Maybe<Scalars['Float']['output']>;
  tenantRoleId?: Maybe<Scalars['Float']['output']>;
};

export type TenantMemberRoleStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantMemberId?: InputMaybe<OrderBy>;
  tenantRoleId?: InputMaybe<OrderBy>;
};

export type TenantMemberRoleStddevSampFields = {
  __typename?: 'TenantMemberRoleStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantMemberId?: Maybe<Scalars['Float']['output']>;
  tenantRoleId?: Maybe<Scalars['Float']['output']>;
};

export type TenantMemberRoleStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantMemberId?: InputMaybe<OrderBy>;
  tenantRoleId?: InputMaybe<OrderBy>;
};

export type TenantMemberRoleStreamCursorInput = {
  initialValue: TenantMemberRoleStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TenantMemberRoleStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantMemberId?: InputMaybe<Scalars['bigint']['input']>;
  tenantRoleId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TenantMemberRoleSumFields = {
  __typename?: 'TenantMemberRoleSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantMemberId?: Maybe<Scalars['bigint']['output']>;
  tenantRoleId?: Maybe<Scalars['bigint']['output']>;
};

export type TenantMemberRoleSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantMemberId?: InputMaybe<OrderBy>;
  tenantRoleId?: InputMaybe<OrderBy>;
};

export enum TenantMemberRoleUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  TenantMemberId = 'tenantMemberId',
  TenantRoleId = 'tenantRoleId',
}

export type TenantMemberRoleUpdates = {
  _inc?: InputMaybe<TenantMemberRoleIncInput>;
  _set?: InputMaybe<TenantMemberRoleSetInput>;
  where: TenantMemberRoleBoolExp;
};

export type TenantMemberRoleVarPopFields = {
  __typename?: 'TenantMemberRoleVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantMemberId?: Maybe<Scalars['Float']['output']>;
  tenantRoleId?: Maybe<Scalars['Float']['output']>;
};

export type TenantMemberRoleVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantMemberId?: InputMaybe<OrderBy>;
  tenantRoleId?: InputMaybe<OrderBy>;
};

export type TenantMemberRoleVarSampFields = {
  __typename?: 'TenantMemberRoleVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantMemberId?: Maybe<Scalars['Float']['output']>;
  tenantRoleId?: Maybe<Scalars['Float']['output']>;
};

export type TenantMemberRoleVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantMemberId?: InputMaybe<OrderBy>;
  tenantRoleId?: InputMaybe<OrderBy>;
};

export type TenantMemberRoleVarianceFields = {
  __typename?: 'TenantMemberRoleVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantMemberId?: Maybe<Scalars['Float']['output']>;
  tenantRoleId?: Maybe<Scalars['Float']['output']>;
};

export type TenantMemberRoleVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantMemberId?: InputMaybe<OrderBy>;
  tenantRoleId?: InputMaybe<OrderBy>;
};

export enum TenantMemberSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  TenantScopeId = 'tenantScopeId',
  UserId = 'userId',
}

export type TenantMemberSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TenantMemberStddevFields = {
  __typename?: 'TenantMemberStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TenantMemberStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TenantMemberStddevPopFields = {
  __typename?: 'TenantMemberStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TenantMemberStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TenantMemberStddevSampFields = {
  __typename?: 'TenantMemberStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TenantMemberStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TenantMemberStreamCursorInput = {
  initialValue: TenantMemberStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TenantMemberStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TenantMemberSumFields = {
  __typename?: 'TenantMemberSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type TenantMemberSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum TenantMemberUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  TenantScopeId = 'tenantScopeId',
  UserId = 'userId',
}

export type TenantMemberUpdates = {
  _inc?: InputMaybe<TenantMemberIncInput>;
  _set?: InputMaybe<TenantMemberSetInput>;
  where: TenantMemberBoolExp;
};

export type TenantMemberVarPopFields = {
  __typename?: 'TenantMemberVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TenantMemberVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TenantMemberVarSampFields = {
  __typename?: 'TenantMemberVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TenantMemberVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TenantMemberVarianceFields = {
  __typename?: 'TenantMemberVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TenantMemberVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TenantMinFields = {
  __typename?: 'TenantMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  eventValidationFormId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  oidcCallbackUri?: Maybe<Scalars['String']['output']>;
  oidcClientId?: Maybe<Scalars['String']['output']>;
  oidcClientSecret?: Maybe<Scalars['String']['output']>;
  oidcDiscoveryUrl?: Maybe<Scalars['String']['output']>;
  oidcName?: Maybe<Scalars['String']['output']>;
  oidcScopes?: Maybe<Scalars['String']['output']>;
  pointName?: Maybe<Scalars['String']['output']>;
};

export type TenantMutationResponse = {
  __typename?: 'TenantMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Tenant>;
};

export type TenantObjRelInsertInput = {
  data: TenantInsertInput;
  onConflict?: InputMaybe<TenantOnConflict>;
};

export type TenantOnConflict = {
  constraint: TenantConstraint;
  updateColumns?: Array<TenantUpdateColumn>;
  where?: InputMaybe<TenantBoolExp>;
};

export type TenantOrderBy = {
  actionsAggregate?: InputMaybe<ActionAggregateOrderBy>;
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  actorImagesAggregate?: InputMaybe<ActorImageAggregateOrderBy>;
  actorsAggregate?: InputMaybe<ActorAggregateOrderBy>;
  adminRolesAggregate?: InputMaybe<AdminRoleAggregateOrderBy>;
  bankAccountsAggregate?: InputMaybe<BankAccountAggregateOrderBy>;
  bankInfosAggregate?: InputMaybe<BankInfoAggregateOrderBy>;
  campusClustersAggregate?: InputMaybe<CampusClusterAggregateOrderBy>;
  campusesAggregate?: InputMaybe<CampusAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  domain?: InputMaybe<OrderBy>;
  eventApprovalStepsAggregate?: InputMaybe<EventApprovalStepAggregateOrderBy>;
  eventApprovalValidatorsAggregate?: InputMaybe<EventApprovalValidatorAggregateOrderBy>;
  eventApprovalsAggregate?: InputMaybe<EventApprovalAggregateOrderBy>;
  eventFavoritesAggregate?: InputMaybe<EventFavoriteAggregateOrderBy>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateOrderBy>;
  eventSupervisorsAggregate?: InputMaybe<EventSupervisorAggregateOrderBy>;
  eventValidationForm?: InputMaybe<FormOrderBy>;
  eventValidationFormId?: InputMaybe<OrderBy>;
  eventsAggregate?: InputMaybe<EventAggregateOrderBy>;
  expenseItemsAggregate?: InputMaybe<ExpenseItemAggregateOrderBy>;
  expensesAggregate?: InputMaybe<ExpenseAggregateOrderBy>;
  fileUploadsAggregate?: InputMaybe<FileUploadAggregateOrderBy>;
  followsAggregate?: InputMaybe<FollowAggregateOrderBy>;
  formSubmissionsAggregate?: InputMaybe<FormSubmissionAggregateOrderBy>;
  formsAggregate?: InputMaybe<FormAggregateOrderBy>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateOrderBy>;
  grantsAggregate?: InputMaybe<GrantAggregateOrderBy>;
  id?: InputMaybe<OrderBy>;
  isOidcEnabled?: InputMaybe<OrderBy>;
  locationsAggregate?: InputMaybe<LocationAggregateOrderBy>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  missionsAggregate?: InputMaybe<MissionAggregateOrderBy>;
  oidcCallbackUri?: InputMaybe<OrderBy>;
  oidcClientId?: InputMaybe<OrderBy>;
  oidcClientSecret?: InputMaybe<OrderBy>;
  oidcDiscoveryUrl?: InputMaybe<OrderBy>;
  oidcName?: InputMaybe<OrderBy>;
  oidcScopes?: InputMaybe<OrderBy>;
  pointName?: InputMaybe<OrderBy>;
  projectSupervisorsAggregate?: InputMaybe<ProjectSupervisorAggregateOrderBy>;
  projectsAggregate?: InputMaybe<ProjectAggregateOrderBy>;
  requiredDocumentsAggregate?: InputMaybe<RequiredDocumentAggregateOrderBy>;
  requiredRolesAggregate?: InputMaybe<RequiredRoleAggregateOrderBy>;
  tagsAggregate?: InputMaybe<TagAggregateOrderBy>;
  teamDocumentsAggregate?: InputMaybe<TeamDocumentAggregateOrderBy>;
  teamHistoriesAggregate?: InputMaybe<TeamHistoryAggregateOrderBy>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateOrderBy>;
  teamMembersAggregate?: InputMaybe<TeamMemberAggregateOrderBy>;
  teamRequiredRolesAggregate?: InputMaybe<TeamRequiredRoleAggregateOrderBy>;
  teamRolesAggregate?: InputMaybe<TeamRoleAggregateOrderBy>;
  teamsAggregate?: InputMaybe<TeamAggregateOrderBy>;
  tenantMembersAggregate?: InputMaybe<TenantMemberAggregateOrderBy>;
  tenantRolesAggregate?: InputMaybe<TenantRoleAggregateOrderBy>;
  transactionsAggregate?: InputMaybe<TransactionAggregateOrderBy>;
  usersAggregate?: InputMaybe<UserAggregateOrderBy>;
};

export type TenantPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export type TenantRole = {
  __typename?: 'TenantRole';
  canCreateTeam: Scalars['Boolean']['output'];
  canHide: Scalars['Boolean']['output'];
  canManageCampus: Scalars['Boolean']['output'];
  canManageEventApprovalSteps: Scalars['Boolean']['output'];
  canManageEventApprovals: Scalars['Boolean']['output'];
  canManageTenant: Scalars['Boolean']['output'];
  canViewHidden: Scalars['Boolean']['output'];
  color: Scalars['Colors']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  tenantMemberRoles: Array<TenantMemberRole>;
  tenantMemberRolesAggregate: TenantMemberRoleAggregate;
  tenantScope: Tenant;
  tenantScopeId: Scalars['bigint']['output'];
  type: Scalars['TenantRoleType']['output'];
};

export type TenantRoleTenantMemberRolesArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberRoleOrderBy>>;
  where?: InputMaybe<TenantMemberRoleBoolExp>;
};

export type TenantRoleTenantMemberRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberRoleOrderBy>>;
  where?: InputMaybe<TenantMemberRoleBoolExp>;
};

export type TenantRoleAggregate = {
  __typename?: 'TenantRoleAggregate';
  aggregate?: Maybe<TenantRoleAggregateFields>;
  nodes: Array<TenantRole>;
};

export type TenantRoleAggregateBoolExp = {
  bool_and?: InputMaybe<TenantRoleAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<TenantRoleAggregateBoolExpBool_Or>;
  count?: InputMaybe<TenantRoleAggregateBoolExpCount>;
};

export type TenantRoleAggregateFields = {
  __typename?: 'TenantRoleAggregateFields';
  avg?: Maybe<TenantRoleAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TenantRoleMaxFields>;
  min?: Maybe<TenantRoleMinFields>;
  stddev?: Maybe<TenantRoleStddevFields>;
  stddevPop?: Maybe<TenantRoleStddevPopFields>;
  stddevSamp?: Maybe<TenantRoleStddevSampFields>;
  sum?: Maybe<TenantRoleSumFields>;
  varPop?: Maybe<TenantRoleVarPopFields>;
  varSamp?: Maybe<TenantRoleVarSampFields>;
  variance?: Maybe<TenantRoleVarianceFields>;
};

export type TenantRoleAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TenantRoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TenantRoleAggregateOrderBy = {
  avg?: InputMaybe<TenantRoleAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TenantRoleMaxOrderBy>;
  min?: InputMaybe<TenantRoleMinOrderBy>;
  stddev?: InputMaybe<TenantRoleStddevOrderBy>;
  stddevPop?: InputMaybe<TenantRoleStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TenantRoleStddevSampOrderBy>;
  sum?: InputMaybe<TenantRoleSumOrderBy>;
  varPop?: InputMaybe<TenantRoleVarPopOrderBy>;
  varSamp?: InputMaybe<TenantRoleVarSampOrderBy>;
  variance?: InputMaybe<TenantRoleVarianceOrderBy>;
};

export type TenantRoleArrRelInsertInput = {
  data: Array<TenantRoleInsertInput>;
  onConflict?: InputMaybe<TenantRoleOnConflict>;
};

export type TenantRoleAvgFields = {
  __typename?: 'TenantRoleAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TenantRoleAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TenantRoleBoolExp = {
  _and?: InputMaybe<Array<TenantRoleBoolExp>>;
  _not?: InputMaybe<TenantRoleBoolExp>;
  _or?: InputMaybe<Array<TenantRoleBoolExp>>;
  canCreateTeam?: InputMaybe<BooleanComparisonExp>;
  canHide?: InputMaybe<BooleanComparisonExp>;
  canManageCampus?: InputMaybe<BooleanComparisonExp>;
  canManageEventApprovalSteps?: InputMaybe<BooleanComparisonExp>;
  canManageEventApprovals?: InputMaybe<BooleanComparisonExp>;
  canManageTenant?: InputMaybe<BooleanComparisonExp>;
  canViewHidden?: InputMaybe<BooleanComparisonExp>;
  color?: InputMaybe<ColorsComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  tenantMemberRoles?: InputMaybe<TenantMemberRoleBoolExp>;
  tenantMemberRolesAggregate?: InputMaybe<TenantMemberRoleAggregateBoolExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<TenantRoleTypeComparisonExp>;
};

export enum TenantRoleConstraint {
  TenantRolePkey = 'tenant_role_pkey',
}

export type TenantRoleIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TenantRoleInsertInput = {
  canCreateTeam?: InputMaybe<Scalars['Boolean']['input']>;
  canHide?: InputMaybe<Scalars['Boolean']['input']>;
  canManageCampus?: InputMaybe<Scalars['Boolean']['input']>;
  canManageEventApprovalSteps?: InputMaybe<Scalars['Boolean']['input']>;
  canManageEventApprovals?: InputMaybe<Scalars['Boolean']['input']>;
  canManageTenant?: InputMaybe<Scalars['Boolean']['input']>;
  canViewHidden?: InputMaybe<Scalars['Boolean']['input']>;
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantMemberRoles?: InputMaybe<TenantMemberRoleArrRelInsertInput>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TenantRoleType']['input']>;
};

export type TenantRoleMaxFields = {
  __typename?: 'TenantRoleMaxFields';
  color?: Maybe<Scalars['Colors']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['TenantRoleType']['output']>;
};

export type TenantRoleMaxOrderBy = {
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TenantRoleMinFields = {
  __typename?: 'TenantRoleMinFields';
  color?: Maybe<Scalars['Colors']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['TenantRoleType']['output']>;
};

export type TenantRoleMinOrderBy = {
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TenantRoleMutationResponse = {
  __typename?: 'TenantRoleMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TenantRole>;
};

export type TenantRoleObjRelInsertInput = {
  data: TenantRoleInsertInput;
  onConflict?: InputMaybe<TenantRoleOnConflict>;
};

export type TenantRoleOnConflict = {
  constraint: TenantRoleConstraint;
  updateColumns?: Array<TenantRoleUpdateColumn>;
  where?: InputMaybe<TenantRoleBoolExp>;
};

export type TenantRoleOrderBy = {
  canCreateTeam?: InputMaybe<OrderBy>;
  canHide?: InputMaybe<OrderBy>;
  canManageCampus?: InputMaybe<OrderBy>;
  canManageEventApprovalSteps?: InputMaybe<OrderBy>;
  canManageEventApprovals?: InputMaybe<OrderBy>;
  canManageTenant?: InputMaybe<OrderBy>;
  canViewHidden?: InputMaybe<OrderBy>;
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenantMemberRolesAggregate?: InputMaybe<TenantMemberRoleAggregateOrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TenantRolePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TenantRoleSelectColumn {
  CanCreateTeam = 'canCreateTeam',
  CanHide = 'canHide',
  CanManageCampus = 'canManageCampus',
  CanManageEventApprovalSteps = 'canManageEventApprovalSteps',
  CanManageEventApprovals = 'canManageEventApprovals',
  CanManageTenant = 'canManageTenant',
  CanViewHidden = 'canViewHidden',
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Name = 'name',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export enum TenantRoleSelectColumnTenantRoleAggregateBoolExpBool_AndArgumentsColumns {
  CanCreateTeam = 'canCreateTeam',
  CanHide = 'canHide',
  CanManageCampus = 'canManageCampus',
  CanManageEventApprovalSteps = 'canManageEventApprovalSteps',
  CanManageEventApprovals = 'canManageEventApprovals',
  CanManageTenant = 'canManageTenant',
  CanViewHidden = 'canViewHidden',
}

export enum TenantRoleSelectColumnTenantRoleAggregateBoolExpBool_OrArgumentsColumns {
  CanCreateTeam = 'canCreateTeam',
  CanHide = 'canHide',
  CanManageCampus = 'canManageCampus',
  CanManageEventApprovalSteps = 'canManageEventApprovalSteps',
  CanManageEventApprovals = 'canManageEventApprovals',
  CanManageTenant = 'canManageTenant',
  CanViewHidden = 'canViewHidden',
}

export type TenantRoleSetInput = {
  canCreateTeam?: InputMaybe<Scalars['Boolean']['input']>;
  canHide?: InputMaybe<Scalars['Boolean']['input']>;
  canManageCampus?: InputMaybe<Scalars['Boolean']['input']>;
  canManageEventApprovalSteps?: InputMaybe<Scalars['Boolean']['input']>;
  canManageEventApprovals?: InputMaybe<Scalars['Boolean']['input']>;
  canManageTenant?: InputMaybe<Scalars['Boolean']['input']>;
  canViewHidden?: InputMaybe<Scalars['Boolean']['input']>;
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TenantRoleType']['input']>;
};

export type TenantRoleStddevFields = {
  __typename?: 'TenantRoleStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TenantRoleStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TenantRoleStddevPopFields = {
  __typename?: 'TenantRoleStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TenantRoleStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TenantRoleStddevSampFields = {
  __typename?: 'TenantRoleStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TenantRoleStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TenantRoleStreamCursorInput = {
  initialValue: TenantRoleStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TenantRoleStreamCursorValueInput = {
  canCreateTeam?: InputMaybe<Scalars['Boolean']['input']>;
  canHide?: InputMaybe<Scalars['Boolean']['input']>;
  canManageCampus?: InputMaybe<Scalars['Boolean']['input']>;
  canManageEventApprovalSteps?: InputMaybe<Scalars['Boolean']['input']>;
  canManageEventApprovals?: InputMaybe<Scalars['Boolean']['input']>;
  canManageTenant?: InputMaybe<Scalars['Boolean']['input']>;
  canViewHidden?: InputMaybe<Scalars['Boolean']['input']>;
  color?: InputMaybe<Scalars['Colors']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TenantRoleType']['input']>;
};

export type TenantRoleSumFields = {
  __typename?: 'TenantRoleSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type TenantRoleSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TenantRoleTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['TenantRoleType']['input']>;
  _gt?: InputMaybe<Scalars['TenantRoleType']['input']>;
  _gte?: InputMaybe<Scalars['TenantRoleType']['input']>;
  _in?: InputMaybe<Array<Scalars['TenantRoleType']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['TenantRoleType']['input']>;
  _lte?: InputMaybe<Scalars['TenantRoleType']['input']>;
  _neq?: InputMaybe<Scalars['TenantRoleType']['input']>;
  _nin?: InputMaybe<Array<Scalars['TenantRoleType']['input']>>;
};

export enum TenantRoleUpdateColumn {
  CanCreateTeam = 'canCreateTeam',
  CanHide = 'canHide',
  CanManageCampus = 'canManageCampus',
  CanManageEventApprovalSteps = 'canManageEventApprovalSteps',
  CanManageEventApprovals = 'canManageEventApprovals',
  CanManageTenant = 'canManageTenant',
  CanViewHidden = 'canViewHidden',
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Name = 'name',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export type TenantRoleUpdates = {
  _inc?: InputMaybe<TenantRoleIncInput>;
  _set?: InputMaybe<TenantRoleSetInput>;
  where: TenantRoleBoolExp;
};

export type TenantRoleVarPopFields = {
  __typename?: 'TenantRoleVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TenantRoleVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TenantRoleVarSampFields = {
  __typename?: 'TenantRoleVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TenantRoleVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TenantRoleVarianceFields = {
  __typename?: 'TenantRoleVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TenantRoleVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export enum TenantSelectColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  DeletedAt = 'deletedAt',
  Domain = 'domain',
  EventValidationFormId = 'eventValidationFormId',
  Id = 'id',
  IsOidcEnabled = 'isOidcEnabled',
  OidcCallbackUri = 'oidcCallbackUri',
  OidcClientId = 'oidcClientId',
  OidcClientSecret = 'oidcClientSecret',
  OidcDiscoveryUrl = 'oidcDiscoveryUrl',
  OidcName = 'oidcName',
  OidcScopes = 'oidcScopes',
  PointName = 'pointName',
}

export type TenantSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  domain?: InputMaybe<Scalars['String']['input']>;
  eventValidationFormId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isOidcEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  oidcCallbackUri?: InputMaybe<Scalars['String']['input']>;
  oidcClientId?: InputMaybe<Scalars['String']['input']>;
  oidcClientSecret?: InputMaybe<Scalars['String']['input']>;
  oidcDiscoveryUrl?: InputMaybe<Scalars['String']['input']>;
  oidcName?: InputMaybe<Scalars['String']['input']>;
  oidcScopes?: InputMaybe<Scalars['String']['input']>;
  pointName?: InputMaybe<Scalars['String']['input']>;
};

export type TenantStddevFields = {
  __typename?: 'TenantStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  eventValidationFormId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

export type TenantStddevPopFields = {
  __typename?: 'TenantStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  eventValidationFormId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

export type TenantStddevSampFields = {
  __typename?: 'TenantStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  eventValidationFormId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

export type TenantStreamCursorInput = {
  initialValue: TenantStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TenantStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  domain?: InputMaybe<Scalars['String']['input']>;
  eventValidationFormId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isOidcEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  oidcCallbackUri?: InputMaybe<Scalars['String']['input']>;
  oidcClientId?: InputMaybe<Scalars['String']['input']>;
  oidcClientSecret?: InputMaybe<Scalars['String']['input']>;
  oidcDiscoveryUrl?: InputMaybe<Scalars['String']['input']>;
  oidcName?: InputMaybe<Scalars['String']['input']>;
  oidcScopes?: InputMaybe<Scalars['String']['input']>;
  pointName?: InputMaybe<Scalars['String']['input']>;
};

export type TenantSumFields = {
  __typename?: 'TenantSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  eventValidationFormId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
};

export enum TenantUpdateColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  DeletedAt = 'deletedAt',
  Domain = 'domain',
  EventValidationFormId = 'eventValidationFormId',
  Id = 'id',
  IsOidcEnabled = 'isOidcEnabled',
  OidcCallbackUri = 'oidcCallbackUri',
  OidcClientId = 'oidcClientId',
  OidcClientSecret = 'oidcClientSecret',
  OidcDiscoveryUrl = 'oidcDiscoveryUrl',
  OidcName = 'oidcName',
  OidcScopes = 'oidcScopes',
  PointName = 'pointName',
}

export type TenantUpdates = {
  _inc?: InputMaybe<TenantIncInput>;
  _set?: InputMaybe<TenantSetInput>;
  where: TenantBoolExp;
};

export type TenantVarPopFields = {
  __typename?: 'TenantVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  eventValidationFormId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

export type TenantVarSampFields = {
  __typename?: 'TenantVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  eventValidationFormId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

export type TenantVarianceFields = {
  __typename?: 'TenantVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  eventValidationFormId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

export type TimestamptzComparisonExp = {
  _eq?: InputMaybe<Scalars['timestamptz']['input']>;
  _gt?: InputMaybe<Scalars['timestamptz']['input']>;
  _gte?: InputMaybe<Scalars['timestamptz']['input']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['timestamptz']['input']>;
  _lte?: InputMaybe<Scalars['timestamptz']['input']>;
  _neq?: InputMaybe<Scalars['timestamptz']['input']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
};

export type Transaction = {
  __typename?: 'Transaction';
  amount: Scalars['Float']['output'];
  bankAccount: BankAccount;
  bankAccountId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  event?: Maybe<Event>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  expense?: Maybe<Expense>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  grantAllocates: Array<GrantAllocate>;
  grantAllocatesAggregate: GrantAllocateAggregate;
  id: Scalars['bigint']['output'];
  isOnline: Scalars['Boolean']['output'];
  location?: Maybe<Location>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  method: Scalars['PaymentMethod']['output'];
  payedAt: Scalars['timestamptz']['output'];
  payedBy: Actor;
  payedById: Scalars['bigint']['output'];
  processedBy?: Maybe<User>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  processedByType: Scalars['ProcessedByType']['output'];
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  receivedBy: Actor;
  receivedById: Scalars['bigint']['output'];
  state: Scalars['ApprovalState']['output'];
  tenantScope?: Maybe<Tenant>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  transactionAttachments: Array<TransactionAttachments>;
  transactionAttachmentsAggregate: TransactionAttachmentsAggregate;
  type: Scalars['TransactionType']['output'];
};

export type TransactionGrantAllocatesArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type TransactionGrantAllocatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type TransactionTransactionAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<TransactionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionAttachmentsOrderBy>>;
  where?: InputMaybe<TransactionAttachmentsBoolExp>;
};

export type TransactionTransactionAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionAttachmentsOrderBy>>;
  where?: InputMaybe<TransactionAttachmentsBoolExp>;
};

export type TransactionAggregate = {
  __typename?: 'TransactionAggregate';
  aggregate?: Maybe<TransactionAggregateFields>;
  nodes: Array<Transaction>;
};

export type TransactionAggregateBoolExp = {
  bool_and?: InputMaybe<TransactionAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<TransactionAggregateBoolExpBool_Or>;
  count?: InputMaybe<TransactionAggregateBoolExpCount>;
};

export type TransactionAggregateFields = {
  __typename?: 'TransactionAggregateFields';
  avg?: Maybe<TransactionAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TransactionMaxFields>;
  min?: Maybe<TransactionMinFields>;
  stddev?: Maybe<TransactionStddevFields>;
  stddevPop?: Maybe<TransactionStddevPopFields>;
  stddevSamp?: Maybe<TransactionStddevSampFields>;
  sum?: Maybe<TransactionSumFields>;
  varPop?: Maybe<TransactionVarPopFields>;
  varSamp?: Maybe<TransactionVarSampFields>;
  variance?: Maybe<TransactionVarianceFields>;
};

export type TransactionAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TransactionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TransactionAggregateOrderBy = {
  avg?: InputMaybe<TransactionAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TransactionMaxOrderBy>;
  min?: InputMaybe<TransactionMinOrderBy>;
  stddev?: InputMaybe<TransactionStddevOrderBy>;
  stddevPop?: InputMaybe<TransactionStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TransactionStddevSampOrderBy>;
  sum?: InputMaybe<TransactionSumOrderBy>;
  varPop?: InputMaybe<TransactionVarPopOrderBy>;
  varSamp?: InputMaybe<TransactionVarSampOrderBy>;
  variance?: InputMaybe<TransactionVarianceOrderBy>;
};

export type TransactionArrRelInsertInput = {
  data: Array<TransactionInsertInput>;
  onConflict?: InputMaybe<TransactionOnConflict>;
};

export type TransactionAttachments = {
  __typename?: 'TransactionAttachments';
  attachment: FileUpload;
  fileUploadId: Scalars['bigint']['output'];
  transaction: Transaction;
  transactionId: Scalars['bigint']['output'];
};

export type TransactionAttachmentsAggregate = {
  __typename?: 'TransactionAttachmentsAggregate';
  aggregate?: Maybe<TransactionAttachmentsAggregateFields>;
  nodes: Array<TransactionAttachments>;
};

export type TransactionAttachmentsAggregateBoolExp = {
  count?: InputMaybe<TransactionAttachmentsAggregateBoolExpCount>;
};

export type TransactionAttachmentsAggregateFields = {
  __typename?: 'TransactionAttachmentsAggregateFields';
  avg?: Maybe<TransactionAttachmentsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TransactionAttachmentsMaxFields>;
  min?: Maybe<TransactionAttachmentsMinFields>;
  stddev?: Maybe<TransactionAttachmentsStddevFields>;
  stddevPop?: Maybe<TransactionAttachmentsStddevPopFields>;
  stddevSamp?: Maybe<TransactionAttachmentsStddevSampFields>;
  sum?: Maybe<TransactionAttachmentsSumFields>;
  varPop?: Maybe<TransactionAttachmentsVarPopFields>;
  varSamp?: Maybe<TransactionAttachmentsVarSampFields>;
  variance?: Maybe<TransactionAttachmentsVarianceFields>;
};

export type TransactionAttachmentsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TransactionAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TransactionAttachmentsAggregateOrderBy = {
  avg?: InputMaybe<TransactionAttachmentsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TransactionAttachmentsMaxOrderBy>;
  min?: InputMaybe<TransactionAttachmentsMinOrderBy>;
  stddev?: InputMaybe<TransactionAttachmentsStddevOrderBy>;
  stddevPop?: InputMaybe<TransactionAttachmentsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TransactionAttachmentsStddevSampOrderBy>;
  sum?: InputMaybe<TransactionAttachmentsSumOrderBy>;
  varPop?: InputMaybe<TransactionAttachmentsVarPopOrderBy>;
  varSamp?: InputMaybe<TransactionAttachmentsVarSampOrderBy>;
  variance?: InputMaybe<TransactionAttachmentsVarianceOrderBy>;
};

export type TransactionAttachmentsArrRelInsertInput = {
  data: Array<TransactionAttachmentsInsertInput>;
  onConflict?: InputMaybe<TransactionAttachmentsOnConflict>;
};

export type TransactionAttachmentsAvgFields = {
  __typename?: 'TransactionAttachmentsAvgFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  transactionId?: Maybe<Scalars['Float']['output']>;
};

export type TransactionAttachmentsAvgOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type TransactionAttachmentsBoolExp = {
  _and?: InputMaybe<Array<TransactionAttachmentsBoolExp>>;
  _not?: InputMaybe<TransactionAttachmentsBoolExp>;
  _or?: InputMaybe<Array<TransactionAttachmentsBoolExp>>;
  attachment?: InputMaybe<FileUploadBoolExp>;
  fileUploadId?: InputMaybe<BigintComparisonExp>;
  transaction?: InputMaybe<TransactionBoolExp>;
  transactionId?: InputMaybe<BigintComparisonExp>;
};

export enum TransactionAttachmentsConstraint {
  TransactionAttachmentsPkey = 'transaction_attachments_pkey',
}

export type TransactionAttachmentsIncInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  transactionId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TransactionAttachmentsInsertInput = {
  attachment?: InputMaybe<FileUploadObjRelInsertInput>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  transaction?: InputMaybe<TransactionObjRelInsertInput>;
  transactionId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TransactionAttachmentsMaxFields = {
  __typename?: 'TransactionAttachmentsMaxFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  transactionId?: Maybe<Scalars['bigint']['output']>;
};

export type TransactionAttachmentsMaxOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type TransactionAttachmentsMinFields = {
  __typename?: 'TransactionAttachmentsMinFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  transactionId?: Maybe<Scalars['bigint']['output']>;
};

export type TransactionAttachmentsMinOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type TransactionAttachmentsMutationResponse = {
  __typename?: 'TransactionAttachmentsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TransactionAttachments>;
};

export type TransactionAttachmentsOnConflict = {
  constraint: TransactionAttachmentsConstraint;
  updateColumns?: Array<TransactionAttachmentsUpdateColumn>;
  where?: InputMaybe<TransactionAttachmentsBoolExp>;
};

export type TransactionAttachmentsOrderBy = {
  attachment?: InputMaybe<FileUploadOrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  transaction?: InputMaybe<TransactionOrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type TransactionAttachmentsPkColumnsInput = {
  fileUploadId: Scalars['bigint']['input'];
  transactionId: Scalars['bigint']['input'];
};

export enum TransactionAttachmentsSelectColumn {
  FileUploadId = 'fileUploadId',
  TransactionId = 'transactionId',
}

export type TransactionAttachmentsSetInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  transactionId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TransactionAttachmentsStddevFields = {
  __typename?: 'TransactionAttachmentsStddevFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  transactionId?: Maybe<Scalars['Float']['output']>;
};

export type TransactionAttachmentsStddevOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type TransactionAttachmentsStddevPopFields = {
  __typename?: 'TransactionAttachmentsStddevPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  transactionId?: Maybe<Scalars['Float']['output']>;
};

export type TransactionAttachmentsStddevPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type TransactionAttachmentsStddevSampFields = {
  __typename?: 'TransactionAttachmentsStddevSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  transactionId?: Maybe<Scalars['Float']['output']>;
};

export type TransactionAttachmentsStddevSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type TransactionAttachmentsStreamCursorInput = {
  initialValue: TransactionAttachmentsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TransactionAttachmentsStreamCursorValueInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  transactionId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TransactionAttachmentsSumFields = {
  __typename?: 'TransactionAttachmentsSumFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  transactionId?: Maybe<Scalars['bigint']['output']>;
};

export type TransactionAttachmentsSumOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export enum TransactionAttachmentsUpdateColumn {
  FileUploadId = 'fileUploadId',
  TransactionId = 'transactionId',
}

export type TransactionAttachmentsUpdates = {
  _inc?: InputMaybe<TransactionAttachmentsIncInput>;
  _set?: InputMaybe<TransactionAttachmentsSetInput>;
  where: TransactionAttachmentsBoolExp;
};

export type TransactionAttachmentsVarPopFields = {
  __typename?: 'TransactionAttachmentsVarPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  transactionId?: Maybe<Scalars['Float']['output']>;
};

export type TransactionAttachmentsVarPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type TransactionAttachmentsVarSampFields = {
  __typename?: 'TransactionAttachmentsVarSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  transactionId?: Maybe<Scalars['Float']['output']>;
};

export type TransactionAttachmentsVarSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type TransactionAttachmentsVarianceFields = {
  __typename?: 'TransactionAttachmentsVarianceFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  transactionId?: Maybe<Scalars['Float']['output']>;
};

export type TransactionAttachmentsVarianceOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  transactionId?: InputMaybe<OrderBy>;
};

export type TransactionAvgFields = {
  __typename?: 'TransactionAvgFields';
  amount?: Maybe<Scalars['Float']['output']>;
  bankAccountId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  payedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  receivedById?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TransactionAvgOrderBy = {
  amount?: InputMaybe<OrderBy>;
  bankAccountId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TransactionBoolExp = {
  _and?: InputMaybe<Array<TransactionBoolExp>>;
  _not?: InputMaybe<TransactionBoolExp>;
  _or?: InputMaybe<Array<TransactionBoolExp>>;
  amount?: InputMaybe<FloatComparisonExp>;
  bankAccount?: InputMaybe<BankAccountBoolExp>;
  bankAccountId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  event?: InputMaybe<EventBoolExp>;
  eventId?: InputMaybe<BigintComparisonExp>;
  expense?: InputMaybe<ExpenseBoolExp>;
  expenseId?: InputMaybe<BigintComparisonExp>;
  grantAllocates?: InputMaybe<GrantAllocateBoolExp>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateBoolExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isOnline?: InputMaybe<BooleanComparisonExp>;
  location?: InputMaybe<LocationBoolExp>;
  locationId?: InputMaybe<BigintComparisonExp>;
  method?: InputMaybe<PaymentMethodComparisonExp>;
  payedAt?: InputMaybe<TimestamptzComparisonExp>;
  payedBy?: InputMaybe<ActorBoolExp>;
  payedById?: InputMaybe<BigintComparisonExp>;
  processedBy?: InputMaybe<UserBoolExp>;
  processedById?: InputMaybe<BigintComparisonExp>;
  processedByType?: InputMaybe<ProcessedByTypeComparisonExp>;
  project?: InputMaybe<ProjectBoolExp>;
  projectId?: InputMaybe<BigintComparisonExp>;
  receivedBy?: InputMaybe<ActorBoolExp>;
  receivedById?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<ApprovalStateComparisonExp>;
  tenantScope?: InputMaybe<TenantBoolExp>;
  tenantScopeId?: InputMaybe<BigintComparisonExp>;
  transactionAttachments?: InputMaybe<TransactionAttachmentsBoolExp>;
  transactionAttachmentsAggregate?: InputMaybe<TransactionAttachmentsAggregateBoolExp>;
  type?: InputMaybe<TransactionTypeComparisonExp>;
};

export enum TransactionConstraint {
  TransactionExpenseIdUnique = 'transaction_expense_id_unique',
  TransactionPkey = 'transaction_pkey',
}

export type TransactionIncInput = {
  amount?: InputMaybe<Scalars['Float']['input']>;
  bankAccountId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  payedById?: InputMaybe<Scalars['bigint']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  receivedById?: InputMaybe<Scalars['bigint']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TransactionInsertInput = {
  amount?: InputMaybe<Scalars['Float']['input']>;
  bankAccount?: InputMaybe<BankAccountObjRelInsertInput>;
  bankAccountId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  event?: InputMaybe<EventObjRelInsertInput>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  expense?: InputMaybe<ExpenseObjRelInsertInput>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  grantAllocates?: InputMaybe<GrantAllocateArrRelInsertInput>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<LocationObjRelInsertInput>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  method?: InputMaybe<Scalars['PaymentMethod']['input']>;
  payedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  payedBy?: InputMaybe<ActorObjRelInsertInput>;
  payedById?: InputMaybe<Scalars['bigint']['input']>;
  processedBy?: InputMaybe<UserObjRelInsertInput>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  processedByType?: InputMaybe<Scalars['ProcessedByType']['input']>;
  project?: InputMaybe<ProjectObjRelInsertInput>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  receivedBy?: InputMaybe<ActorObjRelInsertInput>;
  receivedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScope?: InputMaybe<TenantObjRelInsertInput>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  transactionAttachments?: InputMaybe<TransactionAttachmentsArrRelInsertInput>;
  type?: InputMaybe<Scalars['TransactionType']['input']>;
};

export type TransactionMaxFields = {
  __typename?: 'TransactionMaxFields';
  amount?: Maybe<Scalars['Float']['output']>;
  bankAccountId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  method?: Maybe<Scalars['PaymentMethod']['output']>;
  payedAt?: Maybe<Scalars['timestamptz']['output']>;
  payedById?: Maybe<Scalars['bigint']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  processedByType?: Maybe<Scalars['ProcessedByType']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  receivedById?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['TransactionType']['output']>;
};

export type TransactionMaxOrderBy = {
  amount?: InputMaybe<OrderBy>;
  bankAccountId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  method?: InputMaybe<OrderBy>;
  payedAt?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  processedByType?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TransactionMinFields = {
  __typename?: 'TransactionMinFields';
  amount?: Maybe<Scalars['Float']['output']>;
  bankAccountId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  method?: Maybe<Scalars['PaymentMethod']['output']>;
  payedAt?: Maybe<Scalars['timestamptz']['output']>;
  payedById?: Maybe<Scalars['bigint']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  processedByType?: Maybe<Scalars['ProcessedByType']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  receivedById?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['ApprovalState']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['TransactionType']['output']>;
};

export type TransactionMinOrderBy = {
  amount?: InputMaybe<OrderBy>;
  bankAccountId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  method?: InputMaybe<OrderBy>;
  payedAt?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  processedByType?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TransactionMutationResponse = {
  __typename?: 'TransactionMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Transaction>;
};

export type TransactionObjRelInsertInput = {
  data: TransactionInsertInput;
  onConflict?: InputMaybe<TransactionOnConflict>;
};

export type TransactionOnConflict = {
  constraint: TransactionConstraint;
  updateColumns?: Array<TransactionUpdateColumn>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type TransactionOrderBy = {
  amount?: InputMaybe<OrderBy>;
  bankAccount?: InputMaybe<BankAccountOrderBy>;
  bankAccountId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  event?: InputMaybe<EventOrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expense?: InputMaybe<ExpenseOrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateOrderBy>;
  id?: InputMaybe<OrderBy>;
  isOnline?: InputMaybe<OrderBy>;
  location?: InputMaybe<LocationOrderBy>;
  locationId?: InputMaybe<OrderBy>;
  method?: InputMaybe<OrderBy>;
  payedAt?: InputMaybe<OrderBy>;
  payedBy?: InputMaybe<ActorOrderBy>;
  payedById?: InputMaybe<OrderBy>;
  processedBy?: InputMaybe<UserOrderBy>;
  processedById?: InputMaybe<OrderBy>;
  processedByType?: InputMaybe<OrderBy>;
  project?: InputMaybe<ProjectOrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedBy?: InputMaybe<ActorOrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantScope?: InputMaybe<TenantOrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
  transactionAttachmentsAggregate?: InputMaybe<TransactionAttachmentsAggregateOrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TransactionPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TransactionSelectColumn {
  Amount = 'amount',
  BankAccountId = 'bankAccountId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventId = 'eventId',
  ExpenseId = 'expenseId',
  Id = 'id',
  IsOnline = 'isOnline',
  LocationId = 'locationId',
  Method = 'method',
  PayedAt = 'payedAt',
  PayedById = 'payedById',
  ProcessedById = 'processedById',
  ProcessedByType = 'processedByType',
  ProjectId = 'projectId',
  ReceivedById = 'receivedById',
  State = 'state',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export enum TransactionSelectColumnTransactionAggregateBoolExpBool_AndArgumentsColumns {
  IsOnline = 'isOnline',
}

export enum TransactionSelectColumnTransactionAggregateBoolExpBool_OrArgumentsColumns {
  IsOnline = 'isOnline',
}

export type TransactionSetInput = {
  amount?: InputMaybe<Scalars['Float']['input']>;
  bankAccountId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  method?: InputMaybe<Scalars['PaymentMethod']['input']>;
  payedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  payedById?: InputMaybe<Scalars['bigint']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  processedByType?: InputMaybe<Scalars['ProcessedByType']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  receivedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TransactionType']['input']>;
};

export type TransactionStddevFields = {
  __typename?: 'TransactionStddevFields';
  amount?: Maybe<Scalars['Float']['output']>;
  bankAccountId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  payedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  receivedById?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TransactionStddevOrderBy = {
  amount?: InputMaybe<OrderBy>;
  bankAccountId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TransactionStddevPopFields = {
  __typename?: 'TransactionStddevPopFields';
  amount?: Maybe<Scalars['Float']['output']>;
  bankAccountId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  payedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  receivedById?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TransactionStddevPopOrderBy = {
  amount?: InputMaybe<OrderBy>;
  bankAccountId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TransactionStddevSampFields = {
  __typename?: 'TransactionStddevSampFields';
  amount?: Maybe<Scalars['Float']['output']>;
  bankAccountId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  payedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  receivedById?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TransactionStddevSampOrderBy = {
  amount?: InputMaybe<OrderBy>;
  bankAccountId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TransactionStreamCursorInput = {
  initialValue: TransactionStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TransactionStreamCursorValueInput = {
  amount?: InputMaybe<Scalars['Float']['input']>;
  bankAccountId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  method?: InputMaybe<Scalars['PaymentMethod']['input']>;
  payedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  payedById?: InputMaybe<Scalars['bigint']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  processedByType?: InputMaybe<Scalars['ProcessedByType']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  receivedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['ApprovalState']['input']>;
  tenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['TransactionType']['input']>;
};

export type TransactionSumFields = {
  __typename?: 'TransactionSumFields';
  amount?: Maybe<Scalars['Float']['output']>;
  bankAccountId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  payedById?: Maybe<Scalars['bigint']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  receivedById?: Maybe<Scalars['bigint']['output']>;
  tenantScopeId?: Maybe<Scalars['bigint']['output']>;
};

export type TransactionSumOrderBy = {
  amount?: InputMaybe<OrderBy>;
  bankAccountId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TransactionTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['TransactionType']['input']>;
  _gt?: InputMaybe<Scalars['TransactionType']['input']>;
  _gte?: InputMaybe<Scalars['TransactionType']['input']>;
  _in?: InputMaybe<Array<Scalars['TransactionType']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['TransactionType']['input']>;
  _lte?: InputMaybe<Scalars['TransactionType']['input']>;
  _neq?: InputMaybe<Scalars['TransactionType']['input']>;
  _nin?: InputMaybe<Array<Scalars['TransactionType']['input']>>;
};

export enum TransactionUpdateColumn {
  Amount = 'amount',
  BankAccountId = 'bankAccountId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventId = 'eventId',
  ExpenseId = 'expenseId',
  Id = 'id',
  IsOnline = 'isOnline',
  LocationId = 'locationId',
  Method = 'method',
  PayedAt = 'payedAt',
  PayedById = 'payedById',
  ProcessedById = 'processedById',
  ProcessedByType = 'processedByType',
  ProjectId = 'projectId',
  ReceivedById = 'receivedById',
  State = 'state',
  TenantScopeId = 'tenantScopeId',
  Type = 'type',
}

export type TransactionUpdates = {
  _inc?: InputMaybe<TransactionIncInput>;
  _set?: InputMaybe<TransactionSetInput>;
  where: TransactionBoolExp;
};

export type TransactionVarPopFields = {
  __typename?: 'TransactionVarPopFields';
  amount?: Maybe<Scalars['Float']['output']>;
  bankAccountId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  payedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  receivedById?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TransactionVarPopOrderBy = {
  amount?: InputMaybe<OrderBy>;
  bankAccountId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TransactionVarSampFields = {
  __typename?: 'TransactionVarSampFields';
  amount?: Maybe<Scalars['Float']['output']>;
  bankAccountId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  payedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  receivedById?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TransactionVarSampOrderBy = {
  amount?: InputMaybe<OrderBy>;
  bankAccountId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type TransactionVarianceFields = {
  __typename?: 'TransactionVarianceFields';
  amount?: Maybe<Scalars['Float']['output']>;
  bankAccountId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  payedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  receivedById?: Maybe<Scalars['Float']['output']>;
  tenantScopeId?: Maybe<Scalars['Float']['output']>;
};

export type TransactionVarianceOrderBy = {
  amount?: InputMaybe<OrderBy>;
  bankAccountId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  tenantScopeId?: InputMaybe<OrderBy>;
};

export type User = {
  __typename?: 'User';
  actions: Array<Action>;
  actionsAggregate: ActionAggregate;
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  adminRoles: Array<AdminRole>;
  adminRolesAggregate: AdminRoleAggregate;
  createdActions: Array<Action>;
  createdActionsAggregate: ActionAggregate;
  createdActorImages: Array<ActorImage>;
  createdActorImagesAggregate: ActorImageAggregate;
  createdActorTags: Array<ActorTag>;
  createdActorTagsAggregate: ActorTagAggregate;
  createdActors: Array<Actor>;
  createdActorsAggregate: ActorAggregate;
  createdAdminRoles: Array<AdminRole>;
  createdAdminRolesAggregate: AdminRoleAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBankAccounts: Array<BankAccount>;
  createdBankAccountsAggregate: BankAccountAggregate;
  createdBankInfos: Array<BankInfo>;
  createdBankInfosAggregate: BankInfoAggregate;
  createdBy?: Maybe<User>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  createdCampusClusters: Array<CampusCluster>;
  createdCampusClustersAggregate: CampusClusterAggregate;
  createdCampuses: Array<Campus>;
  createdCampusesAggregate: CampusAggregate;
  createdEventApprovalSteps: Array<EventApprovalStep>;
  createdEventApprovalStepsAggregate: EventApprovalStepAggregate;
  createdEventApprovalValidators: Array<EventApprovalValidator>;
  createdEventApprovalValidatorsAggregate: EventApprovalValidatorAggregate;
  createdEventApprovals: Array<EventApproval>;
  createdEventApprovalsAggregate: EventApprovalAggregate;
  createdEventFavorites: Array<EventFavorite>;
  createdEventFavoritesAggregate: EventFavoriteAggregate;
  createdEventJoins: Array<EventJoin>;
  createdEventJoinsAggregate: EventJoinAggregate;
  createdEventOrganizes: Array<EventOrganize>;
  createdEventOrganizesAggregate: EventOrganizeAggregate;
  createdEventSupervisors: Array<EventSupervisor>;
  createdEventSupervisorsAggregate: EventSupervisorAggregate;
  createdEvents: Array<Event>;
  createdEventsAggregate: EventAggregate;
  createdExpenseItems: Array<ExpenseItem>;
  createdExpenseItemsAggregate: ExpenseItemAggregate;
  createdExpenses: Array<Expense>;
  createdExpensesAggregate: ExpenseAggregate;
  createdFileUploads: Array<FileUpload>;
  createdFileUploadsAggregate: FileUploadAggregate;
  createdFormSubmissions: Array<FormSubmission>;
  createdFormSubmissionsAggregate: FormSubmissionAggregate;
  createdForms: Array<Form>;
  createdFormsAggregate: FormAggregate;
  createdGrantAllocates: Array<GrantAllocate>;
  createdGrantAllocatesAggregate: GrantAllocateAggregate;
  createdGrants: Array<Grant>;
  createdGrantsAggregate: GrantAggregate;
  createdLocations: Array<Location>;
  createdLocationsAggregate: LocationAggregate;
  createdMissionJoins: Array<MissionJoin>;
  createdMissionJoinsAggregate: MissionJoinAggregate;
  createdMissions: Array<Mission>;
  createdMissionsAggregate: MissionAggregate;
  createdProjectSupervisors: Array<ProjectSupervisor>;
  createdProjectSupervisorsAggregate: ProjectSupervisorAggregate;
  createdProjects: Array<Project>;
  createdProjectsAggregate: ProjectAggregate;
  createdRequiredDocuments: Array<RequiredDocument>;
  createdRequiredDocumentsAggregate: RequiredDocumentAggregate;
  createdRequiredRoles: Array<RequiredRole>;
  createdRequiredRolesAggregate: RequiredRoleAggregate;
  createdSocials: Array<Social>;
  createdSocialsAggregate: SocialAggregate;
  createdTags: Array<Tag>;
  createdTagsAggregate: TagAggregate;
  createdTeamDocuments: Array<TeamDocument>;
  createdTeamDocumentsAggregate: TeamDocumentAggregate;
  createdTeamHistories: Array<TeamHistory>;
  createdTeamHistoriesAggregate: TeamHistoryAggregate;
  createdTeamJoins: Array<TeamJoin>;
  createdTeamJoinsAggregate: TeamJoinAggregate;
  createdTeamMemberRoles: Array<TeamMemberRole>;
  createdTeamMemberRolesAggregate: TeamMemberRoleAggregate;
  createdTeamMembers: Array<TeamMember>;
  createdTeamMembersAggregate: TeamMemberAggregate;
  createdTeamRequiredRoles: Array<TeamRequiredRole>;
  createdTeamRequiredRolesAggregate: TeamRequiredRoleAggregate;
  createdTeamRoles: Array<TeamRole>;
  createdTeamRolesAggregate: TeamRoleAggregate;
  createdTeams: Array<Team>;
  createdTeamsAggregate: TeamAggregate;
  createdTenantMembers: Array<TenantMember>;
  createdTenantMembersAggregate: TenantMemberAggregate;
  createdTenantRoles: Array<TenantRole>;
  createdTenantRolesAggregate: TenantRoleAggregate;
  createdTransactions: Array<Transaction>;
  createdTransactionsAggregate: TransactionAggregate;
  createdUsers: Array<User>;
  createdUsersAggregate: UserAggregate;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventApprovalValidators: Array<EventApprovalValidator>;
  eventApprovalValidatorsAggregate: EventApprovalValidatorAggregate;
  eventJoins: Array<EventJoin>;
  eventJoinsAggregate: EventJoinAggregate;
  firstName: Scalars['String']['output'];
  following: Array<Follow>;
  followingAggregate: FollowAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isBot: Scalars['Boolean']['output'];
  isDarkModePreferred: Scalars['Boolean']['output'];
  isDataAnonymizedOnDeactivation: Scalars['Boolean']['output'];
  isDataExportedOnDeactivation: Scalars['Boolean']['output'];
  isIntroductionFinished: Scalars['Boolean']['output'];
  isOnboardingFinished: Scalars['Boolean']['output'];
  lastName: Scalars['String']['output'];
  middleNames?: Maybe<Array<Scalars['String']['output']>>;
  missionJoins: Array<MissionJoin>;
  missionJoinsAggregate: MissionJoinAggregate;
  originalTenantScope: Tenant;
  originalTenantScopeId: Scalars['bigint']['output'];
  passwordHash?: Maybe<Scalars['String']['output']>;
  points: Scalars['Float']['output'];
  pointsProcessedMissionJoins: Array<MissionJoin>;
  pointsProcessedMissionJoinsAggregate: MissionJoinAggregate;
  processedActions: Array<Action>;
  processedActionsAggregate: ActionAggregate;
  processedEventJoins: Array<EventJoin>;
  processedEventJoinsAggregate: EventJoinAggregate;
  processedExpenses: Array<Expense>;
  processedExpensesAggregate: ExpenseAggregate;
  processedMissionJoins: Array<MissionJoin>;
  processedMissionJoinsAggregate: MissionJoinAggregate;
  processedParticipationEventJoins: Array<EventJoin>;
  processedParticipationEventJoinsAggregate: EventJoinAggregate;
  processedReceivedAmountGrantAllocates: Array<GrantAllocate>;
  processedReceivedAmountGrantAllocatesAggregate: GrantAllocateAggregate;
  processedReceivedAmountGrants: Array<Grant>;
  processedReceivedAmountGrantsAggregate: GrantAggregate;
  processedTeamJoins: Array<TeamJoin>;
  processedTeamJoinsAggregate: TeamJoinAggregate;
  processedTransactions: Array<Transaction>;
  processedTransactionsAggregate: TransactionAggregate;
  slug: Scalars['String']['output'];
  supervisedEvents: Array<EventSupervisor>;
  supervisedEventsAggregate: EventSupervisorAggregate;
  supervisedProject: Array<ProjectSupervisor>;
  supervisedProjectAggregate: ProjectSupervisorAggregate;
  teamJoins: Array<TeamJoin>;
  teamJoinsAggregate: TeamJoinAggregate;
  teamMemberships: Array<TeamMember>;
  teamMembershipsAggregate: TeamMemberAggregate;
  teamRoles: Array<TeamRole>;
  teamRolesAggregate: TeamRoleAggregate;
  tenantMemberRoles: Array<TenantMemberRole>;
  tenantMemberRolesAggregate: TenantMemberRoleAggregate;
  tenantMemberships: Array<TenantMember>;
  tenantMembershipsAggregate: TenantMemberAggregate;
};

export type UserActionsArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type UserActionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type UserAdminRolesArgs = {
  distinctOn?: InputMaybe<Array<AdminRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdminRoleOrderBy>>;
  where?: InputMaybe<AdminRoleBoolExp>;
};

export type UserAdminRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<AdminRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdminRoleOrderBy>>;
  where?: InputMaybe<AdminRoleBoolExp>;
};

export type UserCreatedActionsArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type UserCreatedActionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type UserCreatedActorImagesArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type UserCreatedActorImagesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type UserCreatedActorTagsArgs = {
  distinctOn?: InputMaybe<Array<ActorTagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagOrderBy>>;
  where?: InputMaybe<ActorTagBoolExp>;
};

export type UserCreatedActorTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorTagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagOrderBy>>;
  where?: InputMaybe<ActorTagBoolExp>;
};

export type UserCreatedActorsArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type UserCreatedActorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type UserCreatedAdminRolesArgs = {
  distinctOn?: InputMaybe<Array<AdminRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdminRoleOrderBy>>;
  where?: InputMaybe<AdminRoleBoolExp>;
};

export type UserCreatedAdminRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<AdminRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdminRoleOrderBy>>;
  where?: InputMaybe<AdminRoleBoolExp>;
};

export type UserCreatedBankAccountsArgs = {
  distinctOn?: InputMaybe<Array<BankAccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankAccountOrderBy>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type UserCreatedBankAccountsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankAccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankAccountOrderBy>>;
  where?: InputMaybe<BankAccountBoolExp>;
};

export type UserCreatedBankInfosArgs = {
  distinctOn?: InputMaybe<Array<BankInfoSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankInfoOrderBy>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type UserCreatedBankInfosAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankInfoSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankInfoOrderBy>>;
  where?: InputMaybe<BankInfoBoolExp>;
};

export type UserCreatedCampusClustersArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type UserCreatedCampusClustersAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type UserCreatedCampusesArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type UserCreatedCampusesAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type UserCreatedEventApprovalStepsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type UserCreatedEventApprovalStepsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type UserCreatedEventApprovalValidatorsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalValidatorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalValidatorOrderBy>>;
  where?: InputMaybe<EventApprovalValidatorBoolExp>;
};

export type UserCreatedEventApprovalValidatorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalValidatorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalValidatorOrderBy>>;
  where?: InputMaybe<EventApprovalValidatorBoolExp>;
};

export type UserCreatedEventApprovalsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type UserCreatedEventApprovalsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type UserCreatedEventFavoritesArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type UserCreatedEventFavoritesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type UserCreatedEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type UserCreatedEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type UserCreatedEventOrganizesArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type UserCreatedEventOrganizesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type UserCreatedEventSupervisorsArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type UserCreatedEventSupervisorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type UserCreatedEventsArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type UserCreatedEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type UserCreatedExpenseItemsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type UserCreatedExpenseItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type UserCreatedExpensesArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type UserCreatedExpensesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type UserCreatedFileUploadsArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type UserCreatedFileUploadsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type UserCreatedFormSubmissionsArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type UserCreatedFormSubmissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type UserCreatedFormsArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type UserCreatedFormsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type UserCreatedGrantAllocatesArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type UserCreatedGrantAllocatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type UserCreatedGrantsArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type UserCreatedGrantsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type UserCreatedLocationsArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type UserCreatedLocationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type UserCreatedMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type UserCreatedMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type UserCreatedMissionsArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type UserCreatedMissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type UserCreatedProjectSupervisorsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorOrderBy>>;
  where?: InputMaybe<ProjectSupervisorBoolExp>;
};

export type UserCreatedProjectSupervisorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorOrderBy>>;
  where?: InputMaybe<ProjectSupervisorBoolExp>;
};

export type UserCreatedProjectsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type UserCreatedProjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type UserCreatedRequiredDocumentsArgs = {
  distinctOn?: InputMaybe<Array<RequiredDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredDocumentOrderBy>>;
  where?: InputMaybe<RequiredDocumentBoolExp>;
};

export type UserCreatedRequiredDocumentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<RequiredDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredDocumentOrderBy>>;
  where?: InputMaybe<RequiredDocumentBoolExp>;
};

export type UserCreatedRequiredRolesArgs = {
  distinctOn?: InputMaybe<Array<RequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredRoleOrderBy>>;
  where?: InputMaybe<RequiredRoleBoolExp>;
};

export type UserCreatedRequiredRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<RequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RequiredRoleOrderBy>>;
  where?: InputMaybe<RequiredRoleBoolExp>;
};

export type UserCreatedSocialsArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type UserCreatedSocialsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type UserCreatedTagsArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type UserCreatedTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type UserCreatedTeamDocumentsArgs = {
  distinctOn?: InputMaybe<Array<TeamDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamDocumentOrderBy>>;
  where?: InputMaybe<TeamDocumentBoolExp>;
};

export type UserCreatedTeamDocumentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamDocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamDocumentOrderBy>>;
  where?: InputMaybe<TeamDocumentBoolExp>;
};

export type UserCreatedTeamHistoriesArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type UserCreatedTeamHistoriesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type UserCreatedTeamJoinsArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type UserCreatedTeamJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type UserCreatedTeamMemberRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRoleOrderBy>>;
  where?: InputMaybe<TeamMemberRoleBoolExp>;
};

export type UserCreatedTeamMemberRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRoleOrderBy>>;
  where?: InputMaybe<TeamMemberRoleBoolExp>;
};

export type UserCreatedTeamMembersArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type UserCreatedTeamMembersAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type UserCreatedTeamRequiredRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamRequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRequiredRoleOrderBy>>;
  where?: InputMaybe<TeamRequiredRoleBoolExp>;
};

export type UserCreatedTeamRequiredRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamRequiredRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRequiredRoleOrderBy>>;
  where?: InputMaybe<TeamRequiredRoleBoolExp>;
};

export type UserCreatedTeamRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRoleOrderBy>>;
  where?: InputMaybe<TeamRoleBoolExp>;
};

export type UserCreatedTeamRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRoleOrderBy>>;
  where?: InputMaybe<TeamRoleBoolExp>;
};

export type UserCreatedTeamsArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type UserCreatedTeamsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type UserCreatedTenantMembersArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberOrderBy>>;
  where?: InputMaybe<TenantMemberBoolExp>;
};

export type UserCreatedTenantMembersAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberOrderBy>>;
  where?: InputMaybe<TenantMemberBoolExp>;
};

export type UserCreatedTenantRolesArgs = {
  distinctOn?: InputMaybe<Array<TenantRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantRoleOrderBy>>;
  where?: InputMaybe<TenantRoleBoolExp>;
};

export type UserCreatedTenantRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantRoleOrderBy>>;
  where?: InputMaybe<TenantRoleBoolExp>;
};

export type UserCreatedTransactionsArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type UserCreatedTransactionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type UserCreatedUsersArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type UserCreatedUsersAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type UserEventApprovalValidatorsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalValidatorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalValidatorOrderBy>>;
  where?: InputMaybe<EventApprovalValidatorBoolExp>;
};

export type UserEventApprovalValidatorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalValidatorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalValidatorOrderBy>>;
  where?: InputMaybe<EventApprovalValidatorBoolExp>;
};

export type UserEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type UserEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type UserFollowingArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type UserFollowingAggregateArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type UserMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type UserMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type UserPointsProcessedMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type UserPointsProcessedMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type UserProcessedActionsArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type UserProcessedActionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type UserProcessedEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type UserProcessedEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type UserProcessedExpensesArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type UserProcessedExpensesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type UserProcessedMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type UserProcessedMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type UserProcessedParticipationEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type UserProcessedParticipationEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type UserProcessedReceivedAmountGrantAllocatesArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type UserProcessedReceivedAmountGrantAllocatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type UserProcessedReceivedAmountGrantsArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type UserProcessedReceivedAmountGrantsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type UserProcessedTeamJoinsArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type UserProcessedTeamJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type UserProcessedTransactionsArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type UserProcessedTransactionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TransactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TransactionOrderBy>>;
  where?: InputMaybe<TransactionBoolExp>;
};

export type UserSupervisedEventsArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type UserSupervisedEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type UserSupervisedProjectArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorOrderBy>>;
  where?: InputMaybe<ProjectSupervisorBoolExp>;
};

export type UserSupervisedProjectAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorOrderBy>>;
  where?: InputMaybe<ProjectSupervisorBoolExp>;
};

export type UserTeamJoinsArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type UserTeamJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type UserTeamMembershipsArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type UserTeamMembershipsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type UserTeamRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRoleOrderBy>>;
  where?: InputMaybe<TeamRoleBoolExp>;
};

export type UserTeamRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamRoleOrderBy>>;
  where?: InputMaybe<TeamRoleBoolExp>;
};

export type UserTenantMemberRolesArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberRoleOrderBy>>;
  where?: InputMaybe<TenantMemberRoleBoolExp>;
};

export type UserTenantMemberRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberRoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberRoleOrderBy>>;
  where?: InputMaybe<TenantMemberRoleBoolExp>;
};

export type UserTenantMembershipsArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberOrderBy>>;
  where?: InputMaybe<TenantMemberBoolExp>;
};

export type UserTenantMembershipsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantMemberOrderBy>>;
  where?: InputMaybe<TenantMemberBoolExp>;
};

export type UserAggregate = {
  __typename?: 'UserAggregate';
  aggregate?: Maybe<UserAggregateFields>;
  nodes: Array<User>;
};

export type UserAggregateBoolExp = {
  bool_and?: InputMaybe<UserAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<UserAggregateBoolExpBool_Or>;
  count?: InputMaybe<UserAggregateBoolExpCount>;
};

export type UserAggregateFields = {
  __typename?: 'UserAggregateFields';
  avg?: Maybe<UserAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<UserMaxFields>;
  min?: Maybe<UserMinFields>;
  stddev?: Maybe<UserStddevFields>;
  stddevPop?: Maybe<UserStddevPopFields>;
  stddevSamp?: Maybe<UserStddevSampFields>;
  sum?: Maybe<UserSumFields>;
  varPop?: Maybe<UserVarPopFields>;
  varSamp?: Maybe<UserVarSampFields>;
  variance?: Maybe<UserVarianceFields>;
};

export type UserAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<UserSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserAggregateOrderBy = {
  avg?: InputMaybe<UserAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<UserMaxOrderBy>;
  min?: InputMaybe<UserMinOrderBy>;
  stddev?: InputMaybe<UserStddevOrderBy>;
  stddevPop?: InputMaybe<UserStddevPopOrderBy>;
  stddevSamp?: InputMaybe<UserStddevSampOrderBy>;
  sum?: InputMaybe<UserSumOrderBy>;
  varPop?: InputMaybe<UserVarPopOrderBy>;
  varSamp?: InputMaybe<UserVarSampOrderBy>;
  variance?: InputMaybe<UserVarianceOrderBy>;
};

export type UserArrRelInsertInput = {
  data: Array<UserInsertInput>;
  onConflict?: InputMaybe<UserOnConflict>;
};

export type UserAvgFields = {
  __typename?: 'UserAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  originalTenantScopeId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
};

export type UserAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  originalTenantScopeId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
};

export type UserBoolExp = {
  _and?: InputMaybe<Array<UserBoolExp>>;
  _not?: InputMaybe<UserBoolExp>;
  _or?: InputMaybe<Array<UserBoolExp>>;
  actions?: InputMaybe<ActionBoolExp>;
  actionsAggregate?: InputMaybe<ActionAggregateBoolExp>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  adminRoles?: InputMaybe<AdminRoleBoolExp>;
  adminRolesAggregate?: InputMaybe<AdminRoleAggregateBoolExp>;
  createdActions?: InputMaybe<ActionBoolExp>;
  createdActionsAggregate?: InputMaybe<ActionAggregateBoolExp>;
  createdActorImages?: InputMaybe<ActorImageBoolExp>;
  createdActorImagesAggregate?: InputMaybe<ActorImageAggregateBoolExp>;
  createdActorTags?: InputMaybe<ActorTagBoolExp>;
  createdActorTagsAggregate?: InputMaybe<ActorTagAggregateBoolExp>;
  createdActors?: InputMaybe<ActorBoolExp>;
  createdActorsAggregate?: InputMaybe<ActorAggregateBoolExp>;
  createdAdminRoles?: InputMaybe<AdminRoleBoolExp>;
  createdAdminRolesAggregate?: InputMaybe<AdminRoleAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBankAccounts?: InputMaybe<BankAccountBoolExp>;
  createdBankAccountsAggregate?: InputMaybe<BankAccountAggregateBoolExp>;
  createdBankInfos?: InputMaybe<BankInfoBoolExp>;
  createdBankInfosAggregate?: InputMaybe<BankInfoAggregateBoolExp>;
  createdBy?: InputMaybe<UserBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  createdCampusClusters?: InputMaybe<CampusClusterBoolExp>;
  createdCampusClustersAggregate?: InputMaybe<CampusClusterAggregateBoolExp>;
  createdCampuses?: InputMaybe<CampusBoolExp>;
  createdCampusesAggregate?: InputMaybe<CampusAggregateBoolExp>;
  createdEventApprovalSteps?: InputMaybe<EventApprovalStepBoolExp>;
  createdEventApprovalStepsAggregate?: InputMaybe<EventApprovalStepAggregateBoolExp>;
  createdEventApprovalValidators?: InputMaybe<EventApprovalValidatorBoolExp>;
  createdEventApprovalValidatorsAggregate?: InputMaybe<EventApprovalValidatorAggregateBoolExp>;
  createdEventApprovals?: InputMaybe<EventApprovalBoolExp>;
  createdEventApprovalsAggregate?: InputMaybe<EventApprovalAggregateBoolExp>;
  createdEventFavorites?: InputMaybe<EventFavoriteBoolExp>;
  createdEventFavoritesAggregate?: InputMaybe<EventFavoriteAggregateBoolExp>;
  createdEventJoins?: InputMaybe<EventJoinBoolExp>;
  createdEventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  createdEventOrganizes?: InputMaybe<EventOrganizeBoolExp>;
  createdEventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateBoolExp>;
  createdEventSupervisors?: InputMaybe<EventSupervisorBoolExp>;
  createdEventSupervisorsAggregate?: InputMaybe<EventSupervisorAggregateBoolExp>;
  createdEvents?: InputMaybe<EventBoolExp>;
  createdEventsAggregate?: InputMaybe<EventAggregateBoolExp>;
  createdExpenseItems?: InputMaybe<ExpenseItemBoolExp>;
  createdExpenseItemsAggregate?: InputMaybe<ExpenseItemAggregateBoolExp>;
  createdExpenses?: InputMaybe<ExpenseBoolExp>;
  createdExpensesAggregate?: InputMaybe<ExpenseAggregateBoolExp>;
  createdFileUploads?: InputMaybe<FileUploadBoolExp>;
  createdFileUploadsAggregate?: InputMaybe<FileUploadAggregateBoolExp>;
  createdFormSubmissions?: InputMaybe<FormSubmissionBoolExp>;
  createdFormSubmissionsAggregate?: InputMaybe<FormSubmissionAggregateBoolExp>;
  createdForms?: InputMaybe<FormBoolExp>;
  createdFormsAggregate?: InputMaybe<FormAggregateBoolExp>;
  createdGrantAllocates?: InputMaybe<GrantAllocateBoolExp>;
  createdGrantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateBoolExp>;
  createdGrants?: InputMaybe<GrantBoolExp>;
  createdGrantsAggregate?: InputMaybe<GrantAggregateBoolExp>;
  createdLocations?: InputMaybe<LocationBoolExp>;
  createdLocationsAggregate?: InputMaybe<LocationAggregateBoolExp>;
  createdMissionJoins?: InputMaybe<MissionJoinBoolExp>;
  createdMissionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  createdMissions?: InputMaybe<MissionBoolExp>;
  createdMissionsAggregate?: InputMaybe<MissionAggregateBoolExp>;
  createdProjectSupervisors?: InputMaybe<ProjectSupervisorBoolExp>;
  createdProjectSupervisorsAggregate?: InputMaybe<ProjectSupervisorAggregateBoolExp>;
  createdProjects?: InputMaybe<ProjectBoolExp>;
  createdProjectsAggregate?: InputMaybe<ProjectAggregateBoolExp>;
  createdRequiredDocuments?: InputMaybe<RequiredDocumentBoolExp>;
  createdRequiredDocumentsAggregate?: InputMaybe<RequiredDocumentAggregateBoolExp>;
  createdRequiredRoles?: InputMaybe<RequiredRoleBoolExp>;
  createdRequiredRolesAggregate?: InputMaybe<RequiredRoleAggregateBoolExp>;
  createdSocials?: InputMaybe<SocialBoolExp>;
  createdSocialsAggregate?: InputMaybe<SocialAggregateBoolExp>;
  createdTags?: InputMaybe<TagBoolExp>;
  createdTagsAggregate?: InputMaybe<TagAggregateBoolExp>;
  createdTeamDocuments?: InputMaybe<TeamDocumentBoolExp>;
  createdTeamDocumentsAggregate?: InputMaybe<TeamDocumentAggregateBoolExp>;
  createdTeamHistories?: InputMaybe<TeamHistoryBoolExp>;
  createdTeamHistoriesAggregate?: InputMaybe<TeamHistoryAggregateBoolExp>;
  createdTeamJoins?: InputMaybe<TeamJoinBoolExp>;
  createdTeamJoinsAggregate?: InputMaybe<TeamJoinAggregateBoolExp>;
  createdTeamMemberRoles?: InputMaybe<TeamMemberRoleBoolExp>;
  createdTeamMemberRolesAggregate?: InputMaybe<TeamMemberRoleAggregateBoolExp>;
  createdTeamMembers?: InputMaybe<TeamMemberBoolExp>;
  createdTeamMembersAggregate?: InputMaybe<TeamMemberAggregateBoolExp>;
  createdTeamRequiredRoles?: InputMaybe<TeamRequiredRoleBoolExp>;
  createdTeamRequiredRolesAggregate?: InputMaybe<TeamRequiredRoleAggregateBoolExp>;
  createdTeamRoles?: InputMaybe<TeamRoleBoolExp>;
  createdTeamRolesAggregate?: InputMaybe<TeamRoleAggregateBoolExp>;
  createdTeams?: InputMaybe<TeamBoolExp>;
  createdTeamsAggregate?: InputMaybe<TeamAggregateBoolExp>;
  createdTenantMembers?: InputMaybe<TenantMemberBoolExp>;
  createdTenantMembersAggregate?: InputMaybe<TenantMemberAggregateBoolExp>;
  createdTenantRoles?: InputMaybe<TenantRoleBoolExp>;
  createdTenantRolesAggregate?: InputMaybe<TenantRoleAggregateBoolExp>;
  createdTransactions?: InputMaybe<TransactionBoolExp>;
  createdTransactionsAggregate?: InputMaybe<TransactionAggregateBoolExp>;
  createdUsers?: InputMaybe<UserBoolExp>;
  createdUsersAggregate?: InputMaybe<UserAggregateBoolExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  eventApprovalValidators?: InputMaybe<EventApprovalValidatorBoolExp>;
  eventApprovalValidatorsAggregate?: InputMaybe<EventApprovalValidatorAggregateBoolExp>;
  eventJoins?: InputMaybe<EventJoinBoolExp>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  firstName?: InputMaybe<StringComparisonExp>;
  following?: InputMaybe<FollowBoolExp>;
  followingAggregate?: InputMaybe<FollowAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isBot?: InputMaybe<BooleanComparisonExp>;
  isDarkModePreferred?: InputMaybe<BooleanComparisonExp>;
  isDataAnonymizedOnDeactivation?: InputMaybe<BooleanComparisonExp>;
  isDataExportedOnDeactivation?: InputMaybe<BooleanComparisonExp>;
  isIntroductionFinished?: InputMaybe<BooleanComparisonExp>;
  isOnboardingFinished?: InputMaybe<BooleanComparisonExp>;
  lastName?: InputMaybe<StringComparisonExp>;
  middleNames?: InputMaybe<StringArrayComparisonExp>;
  missionJoins?: InputMaybe<MissionJoinBoolExp>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  originalTenantScope?: InputMaybe<TenantBoolExp>;
  originalTenantScopeId?: InputMaybe<BigintComparisonExp>;
  passwordHash?: InputMaybe<StringComparisonExp>;
  points?: InputMaybe<FloatComparisonExp>;
  pointsProcessedMissionJoins?: InputMaybe<MissionJoinBoolExp>;
  pointsProcessedMissionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  processedActions?: InputMaybe<ActionBoolExp>;
  processedActionsAggregate?: InputMaybe<ActionAggregateBoolExp>;
  processedEventJoins?: InputMaybe<EventJoinBoolExp>;
  processedEventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  processedExpenses?: InputMaybe<ExpenseBoolExp>;
  processedExpensesAggregate?: InputMaybe<ExpenseAggregateBoolExp>;
  processedMissionJoins?: InputMaybe<MissionJoinBoolExp>;
  processedMissionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  processedParticipationEventJoins?: InputMaybe<EventJoinBoolExp>;
  processedParticipationEventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  processedReceivedAmountGrantAllocates?: InputMaybe<GrantAllocateBoolExp>;
  processedReceivedAmountGrantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateBoolExp>;
  processedReceivedAmountGrants?: InputMaybe<GrantBoolExp>;
  processedReceivedAmountGrantsAggregate?: InputMaybe<GrantAggregateBoolExp>;
  processedTeamJoins?: InputMaybe<TeamJoinBoolExp>;
  processedTeamJoinsAggregate?: InputMaybe<TeamJoinAggregateBoolExp>;
  processedTransactions?: InputMaybe<TransactionBoolExp>;
  processedTransactionsAggregate?: InputMaybe<TransactionAggregateBoolExp>;
  slug?: InputMaybe<StringComparisonExp>;
  supervisedEvents?: InputMaybe<EventSupervisorBoolExp>;
  supervisedEventsAggregate?: InputMaybe<EventSupervisorAggregateBoolExp>;
  supervisedProject?: InputMaybe<ProjectSupervisorBoolExp>;
  supervisedProjectAggregate?: InputMaybe<ProjectSupervisorAggregateBoolExp>;
  teamJoins?: InputMaybe<TeamJoinBoolExp>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateBoolExp>;
  teamMemberships?: InputMaybe<TeamMemberBoolExp>;
  teamMembershipsAggregate?: InputMaybe<TeamMemberAggregateBoolExp>;
  teamRoles?: InputMaybe<TeamRoleBoolExp>;
  teamRolesAggregate?: InputMaybe<TeamRoleAggregateBoolExp>;
  tenantMemberRoles?: InputMaybe<TenantMemberRoleBoolExp>;
  tenantMemberRolesAggregate?: InputMaybe<TenantMemberRoleAggregateBoolExp>;
  tenantMemberships?: InputMaybe<TenantMemberBoolExp>;
  tenantMembershipsAggregate?: InputMaybe<TenantMemberAggregateBoolExp>;
};

export enum UserConstraint {
  UserActorIdUnique = 'user_actor_id_unique',
  UserPkey = 'user_pkey',
  UserSlugUnique = 'user_slug_unique',
}

export type UserIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  originalTenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  points?: InputMaybe<Scalars['Float']['input']>;
};

export type UserInsertInput = {
  actions?: InputMaybe<ActionArrRelInsertInput>;
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  adminRoles?: InputMaybe<AdminRoleArrRelInsertInput>;
  createdActions?: InputMaybe<ActionArrRelInsertInput>;
  createdActorImages?: InputMaybe<ActorImageArrRelInsertInput>;
  createdActorTags?: InputMaybe<ActorTagArrRelInsertInput>;
  createdActors?: InputMaybe<ActorArrRelInsertInput>;
  createdAdminRoles?: InputMaybe<AdminRoleArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBankAccounts?: InputMaybe<BankAccountArrRelInsertInput>;
  createdBankInfos?: InputMaybe<BankInfoArrRelInsertInput>;
  createdBy?: InputMaybe<UserObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  createdCampusClusters?: InputMaybe<CampusClusterArrRelInsertInput>;
  createdCampuses?: InputMaybe<CampusArrRelInsertInput>;
  createdEventApprovalSteps?: InputMaybe<EventApprovalStepArrRelInsertInput>;
  createdEventApprovalValidators?: InputMaybe<EventApprovalValidatorArrRelInsertInput>;
  createdEventApprovals?: InputMaybe<EventApprovalArrRelInsertInput>;
  createdEventFavorites?: InputMaybe<EventFavoriteArrRelInsertInput>;
  createdEventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  createdEventOrganizes?: InputMaybe<EventOrganizeArrRelInsertInput>;
  createdEventSupervisors?: InputMaybe<EventSupervisorArrRelInsertInput>;
  createdEvents?: InputMaybe<EventArrRelInsertInput>;
  createdExpenseItems?: InputMaybe<ExpenseItemArrRelInsertInput>;
  createdExpenses?: InputMaybe<ExpenseArrRelInsertInput>;
  createdFileUploads?: InputMaybe<FileUploadArrRelInsertInput>;
  createdFormSubmissions?: InputMaybe<FormSubmissionArrRelInsertInput>;
  createdForms?: InputMaybe<FormArrRelInsertInput>;
  createdGrantAllocates?: InputMaybe<GrantAllocateArrRelInsertInput>;
  createdGrants?: InputMaybe<GrantArrRelInsertInput>;
  createdLocations?: InputMaybe<LocationArrRelInsertInput>;
  createdMissionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  createdMissions?: InputMaybe<MissionArrRelInsertInput>;
  createdProjectSupervisors?: InputMaybe<ProjectSupervisorArrRelInsertInput>;
  createdProjects?: InputMaybe<ProjectArrRelInsertInput>;
  createdRequiredDocuments?: InputMaybe<RequiredDocumentArrRelInsertInput>;
  createdRequiredRoles?: InputMaybe<RequiredRoleArrRelInsertInput>;
  createdSocials?: InputMaybe<SocialArrRelInsertInput>;
  createdTags?: InputMaybe<TagArrRelInsertInput>;
  createdTeamDocuments?: InputMaybe<TeamDocumentArrRelInsertInput>;
  createdTeamHistories?: InputMaybe<TeamHistoryArrRelInsertInput>;
  createdTeamJoins?: InputMaybe<TeamJoinArrRelInsertInput>;
  createdTeamMemberRoles?: InputMaybe<TeamMemberRoleArrRelInsertInput>;
  createdTeamMembers?: InputMaybe<TeamMemberArrRelInsertInput>;
  createdTeamRequiredRoles?: InputMaybe<TeamRequiredRoleArrRelInsertInput>;
  createdTeamRoles?: InputMaybe<TeamRoleArrRelInsertInput>;
  createdTeams?: InputMaybe<TeamArrRelInsertInput>;
  createdTenantMembers?: InputMaybe<TenantMemberArrRelInsertInput>;
  createdTenantRoles?: InputMaybe<TenantRoleArrRelInsertInput>;
  createdTransactions?: InputMaybe<TransactionArrRelInsertInput>;
  createdUsers?: InputMaybe<UserArrRelInsertInput>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventApprovalValidators?: InputMaybe<EventApprovalValidatorArrRelInsertInput>;
  eventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  following?: InputMaybe<FollowArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isBot?: InputMaybe<Scalars['Boolean']['input']>;
  isDarkModePreferred?: InputMaybe<Scalars['Boolean']['input']>;
  isDataAnonymizedOnDeactivation?: InputMaybe<Scalars['Boolean']['input']>;
  isDataExportedOnDeactivation?: InputMaybe<Scalars['Boolean']['input']>;
  isIntroductionFinished?: InputMaybe<Scalars['Boolean']['input']>;
  isOnboardingFinished?: InputMaybe<Scalars['Boolean']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  middleNames?: InputMaybe<Array<Scalars['String']['input']>>;
  missionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  originalTenantScope?: InputMaybe<TenantObjRelInsertInput>;
  originalTenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  passwordHash?: InputMaybe<Scalars['String']['input']>;
  points?: InputMaybe<Scalars['Float']['input']>;
  pointsProcessedMissionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  processedActions?: InputMaybe<ActionArrRelInsertInput>;
  processedEventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  processedExpenses?: InputMaybe<ExpenseArrRelInsertInput>;
  processedMissionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  processedParticipationEventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  processedReceivedAmountGrantAllocates?: InputMaybe<GrantAllocateArrRelInsertInput>;
  processedReceivedAmountGrants?: InputMaybe<GrantArrRelInsertInput>;
  processedTeamJoins?: InputMaybe<TeamJoinArrRelInsertInput>;
  processedTransactions?: InputMaybe<TransactionArrRelInsertInput>;
  slug?: InputMaybe<Scalars['String']['input']>;
  supervisedEvents?: InputMaybe<EventSupervisorArrRelInsertInput>;
  supervisedProject?: InputMaybe<ProjectSupervisorArrRelInsertInput>;
  teamJoins?: InputMaybe<TeamJoinArrRelInsertInput>;
  teamMemberships?: InputMaybe<TeamMemberArrRelInsertInput>;
  teamRoles?: InputMaybe<TeamRoleArrRelInsertInput>;
  tenantMemberRoles?: InputMaybe<TenantMemberRoleArrRelInsertInput>;
  tenantMemberships?: InputMaybe<TenantMemberArrRelInsertInput>;
};

export type UserMaxFields = {
  __typename?: 'UserMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  middleNames?: Maybe<Array<Scalars['String']['output']>>;
  originalTenantScopeId?: Maybe<Scalars['bigint']['output']>;
  passwordHash?: Maybe<Scalars['String']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
};

export type UserMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  firstName?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  lastName?: InputMaybe<OrderBy>;
  middleNames?: InputMaybe<OrderBy>;
  originalTenantScopeId?: InputMaybe<OrderBy>;
  passwordHash?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
};

export type UserMinFields = {
  __typename?: 'UserMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  middleNames?: Maybe<Array<Scalars['String']['output']>>;
  originalTenantScopeId?: Maybe<Scalars['bigint']['output']>;
  passwordHash?: Maybe<Scalars['String']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
};

export type UserMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  firstName?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  lastName?: InputMaybe<OrderBy>;
  middleNames?: InputMaybe<OrderBy>;
  originalTenantScopeId?: InputMaybe<OrderBy>;
  passwordHash?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
};

export type UserMutationResponse = {
  __typename?: 'UserMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<User>;
};

export type UserObjRelInsertInput = {
  data: UserInsertInput;
  onConflict?: InputMaybe<UserOnConflict>;
};

export type UserOnConflict = {
  constraint: UserConstraint;
  updateColumns?: Array<UserUpdateColumn>;
  where?: InputMaybe<UserBoolExp>;
};

export type UserOrderBy = {
  actionsAggregate?: InputMaybe<ActionAggregateOrderBy>;
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  adminRolesAggregate?: InputMaybe<AdminRoleAggregateOrderBy>;
  createdActionsAggregate?: InputMaybe<ActionAggregateOrderBy>;
  createdActorImagesAggregate?: InputMaybe<ActorImageAggregateOrderBy>;
  createdActorTagsAggregate?: InputMaybe<ActorTagAggregateOrderBy>;
  createdActorsAggregate?: InputMaybe<ActorAggregateOrderBy>;
  createdAdminRolesAggregate?: InputMaybe<AdminRoleAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBankAccountsAggregate?: InputMaybe<BankAccountAggregateOrderBy>;
  createdBankInfosAggregate?: InputMaybe<BankInfoAggregateOrderBy>;
  createdBy?: InputMaybe<UserOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  createdCampusClustersAggregate?: InputMaybe<CampusClusterAggregateOrderBy>;
  createdCampusesAggregate?: InputMaybe<CampusAggregateOrderBy>;
  createdEventApprovalStepsAggregate?: InputMaybe<EventApprovalStepAggregateOrderBy>;
  createdEventApprovalValidatorsAggregate?: InputMaybe<EventApprovalValidatorAggregateOrderBy>;
  createdEventApprovalsAggregate?: InputMaybe<EventApprovalAggregateOrderBy>;
  createdEventFavoritesAggregate?: InputMaybe<EventFavoriteAggregateOrderBy>;
  createdEventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  createdEventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateOrderBy>;
  createdEventSupervisorsAggregate?: InputMaybe<EventSupervisorAggregateOrderBy>;
  createdEventsAggregate?: InputMaybe<EventAggregateOrderBy>;
  createdExpenseItemsAggregate?: InputMaybe<ExpenseItemAggregateOrderBy>;
  createdExpensesAggregate?: InputMaybe<ExpenseAggregateOrderBy>;
  createdFileUploadsAggregate?: InputMaybe<FileUploadAggregateOrderBy>;
  createdFormSubmissionsAggregate?: InputMaybe<FormSubmissionAggregateOrderBy>;
  createdFormsAggregate?: InputMaybe<FormAggregateOrderBy>;
  createdGrantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateOrderBy>;
  createdGrantsAggregate?: InputMaybe<GrantAggregateOrderBy>;
  createdLocationsAggregate?: InputMaybe<LocationAggregateOrderBy>;
  createdMissionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  createdMissionsAggregate?: InputMaybe<MissionAggregateOrderBy>;
  createdProjectSupervisorsAggregate?: InputMaybe<ProjectSupervisorAggregateOrderBy>;
  createdProjectsAggregate?: InputMaybe<ProjectAggregateOrderBy>;
  createdRequiredDocumentsAggregate?: InputMaybe<RequiredDocumentAggregateOrderBy>;
  createdRequiredRolesAggregate?: InputMaybe<RequiredRoleAggregateOrderBy>;
  createdSocialsAggregate?: InputMaybe<SocialAggregateOrderBy>;
  createdTagsAggregate?: InputMaybe<TagAggregateOrderBy>;
  createdTeamDocumentsAggregate?: InputMaybe<TeamDocumentAggregateOrderBy>;
  createdTeamHistoriesAggregate?: InputMaybe<TeamHistoryAggregateOrderBy>;
  createdTeamJoinsAggregate?: InputMaybe<TeamJoinAggregateOrderBy>;
  createdTeamMemberRolesAggregate?: InputMaybe<TeamMemberRoleAggregateOrderBy>;
  createdTeamMembersAggregate?: InputMaybe<TeamMemberAggregateOrderBy>;
  createdTeamRequiredRolesAggregate?: InputMaybe<TeamRequiredRoleAggregateOrderBy>;
  createdTeamRolesAggregate?: InputMaybe<TeamRoleAggregateOrderBy>;
  createdTeamsAggregate?: InputMaybe<TeamAggregateOrderBy>;
  createdTenantMembersAggregate?: InputMaybe<TenantMemberAggregateOrderBy>;
  createdTenantRolesAggregate?: InputMaybe<TenantRoleAggregateOrderBy>;
  createdTransactionsAggregate?: InputMaybe<TransactionAggregateOrderBy>;
  createdUsersAggregate?: InputMaybe<UserAggregateOrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventApprovalValidatorsAggregate?: InputMaybe<EventApprovalValidatorAggregateOrderBy>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  firstName?: InputMaybe<OrderBy>;
  followingAggregate?: InputMaybe<FollowAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isBot?: InputMaybe<OrderBy>;
  isDarkModePreferred?: InputMaybe<OrderBy>;
  isDataAnonymizedOnDeactivation?: InputMaybe<OrderBy>;
  isDataExportedOnDeactivation?: InputMaybe<OrderBy>;
  isIntroductionFinished?: InputMaybe<OrderBy>;
  isOnboardingFinished?: InputMaybe<OrderBy>;
  lastName?: InputMaybe<OrderBy>;
  middleNames?: InputMaybe<OrderBy>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  originalTenantScope?: InputMaybe<TenantOrderBy>;
  originalTenantScopeId?: InputMaybe<OrderBy>;
  passwordHash?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedMissionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  processedActionsAggregate?: InputMaybe<ActionAggregateOrderBy>;
  processedEventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  processedExpensesAggregate?: InputMaybe<ExpenseAggregateOrderBy>;
  processedMissionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  processedParticipationEventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  processedReceivedAmountGrantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateOrderBy>;
  processedReceivedAmountGrantsAggregate?: InputMaybe<GrantAggregateOrderBy>;
  processedTeamJoinsAggregate?: InputMaybe<TeamJoinAggregateOrderBy>;
  processedTransactionsAggregate?: InputMaybe<TransactionAggregateOrderBy>;
  slug?: InputMaybe<OrderBy>;
  supervisedEventsAggregate?: InputMaybe<EventSupervisorAggregateOrderBy>;
  supervisedProjectAggregate?: InputMaybe<ProjectSupervisorAggregateOrderBy>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateOrderBy>;
  teamMembershipsAggregate?: InputMaybe<TeamMemberAggregateOrderBy>;
  teamRolesAggregate?: InputMaybe<TeamRoleAggregateOrderBy>;
  tenantMemberRolesAggregate?: InputMaybe<TenantMemberRoleAggregateOrderBy>;
  tenantMembershipsAggregate?: InputMaybe<TenantMemberAggregateOrderBy>;
};

export type UserPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum UserSelectColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FirstName = 'firstName',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsBot = 'isBot',
  IsDarkModePreferred = 'isDarkModePreferred',
  IsDataAnonymizedOnDeactivation = 'isDataAnonymizedOnDeactivation',
  IsDataExportedOnDeactivation = 'isDataExportedOnDeactivation',
  IsIntroductionFinished = 'isIntroductionFinished',
  IsOnboardingFinished = 'isOnboardingFinished',
  LastName = 'lastName',
  MiddleNames = 'middleNames',
  OriginalTenantScopeId = 'originalTenantScopeId',
  PasswordHash = 'passwordHash',
  Points = 'points',
  Slug = 'slug',
}

export enum UserSelectColumnUserAggregateBoolExpBool_AndArgumentsColumns {
  IsBot = 'isBot',
  IsDarkModePreferred = 'isDarkModePreferred',
  IsDataAnonymizedOnDeactivation = 'isDataAnonymizedOnDeactivation',
  IsDataExportedOnDeactivation = 'isDataExportedOnDeactivation',
  IsIntroductionFinished = 'isIntroductionFinished',
  IsOnboardingFinished = 'isOnboardingFinished',
}

export enum UserSelectColumnUserAggregateBoolExpBool_OrArgumentsColumns {
  IsBot = 'isBot',
  IsDarkModePreferred = 'isDarkModePreferred',
  IsDataAnonymizedOnDeactivation = 'isDataAnonymizedOnDeactivation',
  IsDataExportedOnDeactivation = 'isDataExportedOnDeactivation',
  IsIntroductionFinished = 'isIntroductionFinished',
  IsOnboardingFinished = 'isOnboardingFinished',
}

export type UserSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isBot?: InputMaybe<Scalars['Boolean']['input']>;
  isDarkModePreferred?: InputMaybe<Scalars['Boolean']['input']>;
  isDataAnonymizedOnDeactivation?: InputMaybe<Scalars['Boolean']['input']>;
  isDataExportedOnDeactivation?: InputMaybe<Scalars['Boolean']['input']>;
  isIntroductionFinished?: InputMaybe<Scalars['Boolean']['input']>;
  isOnboardingFinished?: InputMaybe<Scalars['Boolean']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  middleNames?: InputMaybe<Array<Scalars['String']['input']>>;
  originalTenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  passwordHash?: InputMaybe<Scalars['String']['input']>;
  points?: InputMaybe<Scalars['Float']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};

export type UserStddevFields = {
  __typename?: 'UserStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  originalTenantScopeId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
};

export type UserStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  originalTenantScopeId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
};

export type UserStddevPopFields = {
  __typename?: 'UserStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  originalTenantScopeId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
};

export type UserStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  originalTenantScopeId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
};

export type UserStddevSampFields = {
  __typename?: 'UserStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  originalTenantScopeId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
};

export type UserStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  originalTenantScopeId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
};

export type UserStreamCursorInput = {
  initialValue: UserStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type UserStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isBot?: InputMaybe<Scalars['Boolean']['input']>;
  isDarkModePreferred?: InputMaybe<Scalars['Boolean']['input']>;
  isDataAnonymizedOnDeactivation?: InputMaybe<Scalars['Boolean']['input']>;
  isDataExportedOnDeactivation?: InputMaybe<Scalars['Boolean']['input']>;
  isIntroductionFinished?: InputMaybe<Scalars['Boolean']['input']>;
  isOnboardingFinished?: InputMaybe<Scalars['Boolean']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  middleNames?: InputMaybe<Array<Scalars['String']['input']>>;
  originalTenantScopeId?: InputMaybe<Scalars['bigint']['input']>;
  passwordHash?: InputMaybe<Scalars['String']['input']>;
  points?: InputMaybe<Scalars['Float']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};

export type UserSumFields = {
  __typename?: 'UserSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  originalTenantScopeId?: Maybe<Scalars['bigint']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
};

export type UserSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  originalTenantScopeId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
};

export enum UserUpdateColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FirstName = 'firstName',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsBot = 'isBot',
  IsDarkModePreferred = 'isDarkModePreferred',
  IsDataAnonymizedOnDeactivation = 'isDataAnonymizedOnDeactivation',
  IsDataExportedOnDeactivation = 'isDataExportedOnDeactivation',
  IsIntroductionFinished = 'isIntroductionFinished',
  IsOnboardingFinished = 'isOnboardingFinished',
  LastName = 'lastName',
  MiddleNames = 'middleNames',
  OriginalTenantScopeId = 'originalTenantScopeId',
  PasswordHash = 'passwordHash',
  Points = 'points',
  Slug = 'slug',
}

export type UserUpdates = {
  _inc?: InputMaybe<UserIncInput>;
  _set?: InputMaybe<UserSetInput>;
  where: UserBoolExp;
};

export type UserVarPopFields = {
  __typename?: 'UserVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  originalTenantScopeId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
};

export type UserVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  originalTenantScopeId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
};

export type UserVarSampFields = {
  __typename?: 'UserVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  originalTenantScopeId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
};

export type UserVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  originalTenantScopeId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
};

export type UserVarianceFields = {
  __typename?: 'UserVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  originalTenantScopeId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
};

export type UserVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  originalTenantScopeId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
};

export type ActionAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ActionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ActionBoolExp>;
  predicate: IntComparisonExp;
};

export type ActorAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ActorSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ActorBoolExp>;
  predicate: IntComparisonExp;
};

export type ActorImageAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ActorImageSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ActorImageBoolExp>;
  predicate: IntComparisonExp;
};

export type ActorTagAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ActorTagSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ActorTagBoolExp>;
  predicate: IntComparisonExp;
};

export type AdminRoleAggregateBoolExpBool_And = {
  arguments: AdminRoleSelectColumnAdminRoleAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<AdminRoleBoolExp>;
  predicate: BooleanComparisonExp;
};

export type AdminRoleAggregateBoolExpBool_Or = {
  arguments: AdminRoleSelectColumnAdminRoleAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<AdminRoleBoolExp>;
  predicate: BooleanComparisonExp;
};

export type AdminRoleAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<AdminRoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<AdminRoleBoolExp>;
  predicate: IntComparisonExp;
};

export type BankAccountAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<BankAccountSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<BankAccountBoolExp>;
  predicate: IntComparisonExp;
};

export type BankInfoAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<BankInfoSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<BankInfoBoolExp>;
  predicate: IntComparisonExp;
};

export type CampusAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<CampusSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<CampusBoolExp>;
  predicate: IntComparisonExp;
};

export type CampusClusterAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<CampusClusterSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<CampusClusterBoolExp>;
  predicate: IntComparisonExp;
};

export type EventAggregateBoolExpBool_And = {
  arguments: EventSelectColumnEventAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EventAggregateBoolExpBool_Or = {
  arguments: EventSelectColumnEventAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EventAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventBoolExp>;
  predicate: IntComparisonExp;
};

export type EventApprovalAggregateBoolExpBool_And = {
  arguments: EventApprovalSelectColumnEventApprovalAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventApprovalBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EventApprovalAggregateBoolExpBool_Or = {
  arguments: EventApprovalSelectColumnEventApprovalAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventApprovalBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EventApprovalAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventApprovalSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventApprovalBoolExp>;
  predicate: IntComparisonExp;
};

export type EventApprovalStepAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventApprovalStepBoolExp>;
  predicate: IntComparisonExp;
};

export type EventApprovalValidatorAggregateBoolExpBool_And = {
  arguments: EventApprovalValidatorSelectColumnEventApprovalValidatorAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventApprovalValidatorBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EventApprovalValidatorAggregateBoolExpBool_Or = {
  arguments: EventApprovalValidatorSelectColumnEventApprovalValidatorAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventApprovalValidatorBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EventApprovalValidatorAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventApprovalValidatorSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventApprovalValidatorBoolExp>;
  predicate: IntComparisonExp;
};

export type EventFavoriteAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventFavoriteBoolExp>;
  predicate: IntComparisonExp;
};

export type EventJoinAggregateBoolExpBool_And = {
  arguments: EventJoinSelectColumnEventJoinAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventJoinBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EventJoinAggregateBoolExpBool_Or = {
  arguments: EventJoinSelectColumnEventJoinAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventJoinBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EventJoinAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventJoinSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventJoinBoolExp>;
  predicate: IntComparisonExp;
};

export type EventOrganizeAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventOrganizeBoolExp>;
  predicate: IntComparisonExp;
};

export type EventSupervisorAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventSupervisorBoolExp>;
  predicate: IntComparisonExp;
};

export type ExpenseAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ExpenseSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ExpenseBoolExp>;
  predicate: IntComparisonExp;
};

export type ExpenseItemAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ExpenseItemBoolExp>;
  predicate: IntComparisonExp;
};

export type ExpenseItemAttachmentsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
  predicate: IntComparisonExp;
};

export type FileUploadAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<FileUploadSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FileUploadBoolExp>;
  predicate: IntComparisonExp;
};

export type FollowAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<FollowSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FollowBoolExp>;
  predicate: IntComparisonExp;
};

export type FormAggregateBoolExpBool_And = {
  arguments: FormSelectColumnFormAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FormBoolExp>;
  predicate: BooleanComparisonExp;
};

export type FormAggregateBoolExpBool_Or = {
  arguments: FormSelectColumnFormAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FormBoolExp>;
  predicate: BooleanComparisonExp;
};

export type FormAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<FormSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FormBoolExp>;
  predicate: IntComparisonExp;
};

export type FormSubmissionAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FormSubmissionBoolExp>;
  predicate: IntComparisonExp;
};

export type GrantAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<GrantSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<GrantBoolExp>;
  predicate: IntComparisonExp;
};

export type GrantAllocateAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<GrantAllocateBoolExp>;
  predicate: IntComparisonExp;
};

export type GrantAllocateAttachmentsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
  predicate: IntComparisonExp;
};

export type GrantAttachmentsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<GrantAttachmentsBoolExp>;
  predicate: IntComparisonExp;
};

export type LegalUnitAggregateBoolExpBool_And = {
  arguments: LegalUnitSelectColumnLegalUnitAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<LegalUnitBoolExp>;
  predicate: BooleanComparisonExp;
};

export type LegalUnitAggregateBoolExpBool_Or = {
  arguments: LegalUnitSelectColumnLegalUnitAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<LegalUnitBoolExp>;
  predicate: BooleanComparisonExp;
};

export type LegalUnitAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<LegalUnitSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<LegalUnitBoolExp>;
  predicate: IntComparisonExp;
};

export type LocationAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<LocationSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<LocationBoolExp>;
  predicate: IntComparisonExp;
};

export type LocationImagesAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<LocationImagesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<LocationImagesBoolExp>;
  predicate: IntComparisonExp;
};

export type MissionAggregateBoolExpBool_And = {
  arguments: MissionSelectColumnMissionAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MissionBoolExp>;
  predicate: BooleanComparisonExp;
};

export type MissionAggregateBoolExpBool_Or = {
  arguments: MissionSelectColumnMissionAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MissionBoolExp>;
  predicate: BooleanComparisonExp;
};

export type MissionAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<MissionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MissionBoolExp>;
  predicate: IntComparisonExp;
};

export type MissionJoinAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<MissionJoinSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MissionJoinBoolExp>;
  predicate: IntComparisonExp;
};

export type ProjectAggregateBoolExpBool_And = {
  arguments: ProjectSelectColumnProjectAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectBoolExp>;
  predicate: BooleanComparisonExp;
};

export type ProjectAggregateBoolExpBool_Or = {
  arguments: ProjectSelectColumnProjectAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectBoolExp>;
  predicate: BooleanComparisonExp;
};

export type ProjectAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ProjectSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectBoolExp>;
  predicate: IntComparisonExp;
};

export type ProjectSupervisorAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ProjectSupervisorSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectSupervisorBoolExp>;
  predicate: IntComparisonExp;
};

export type RequiredDocumentAggregateBoolExpBool_And = {
  arguments: RequiredDocumentSelectColumnRequiredDocumentAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<RequiredDocumentBoolExp>;
  predicate: BooleanComparisonExp;
};

export type RequiredDocumentAggregateBoolExpBool_Or = {
  arguments: RequiredDocumentSelectColumnRequiredDocumentAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<RequiredDocumentBoolExp>;
  predicate: BooleanComparisonExp;
};

export type RequiredDocumentAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<RequiredDocumentSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<RequiredDocumentBoolExp>;
  predicate: IntComparisonExp;
};

export type RequiredRoleAggregateBoolExpBool_And = {
  arguments: RequiredRoleSelectColumnRequiredRoleAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<RequiredRoleBoolExp>;
  predicate: BooleanComparisonExp;
};

export type RequiredRoleAggregateBoolExpBool_Or = {
  arguments: RequiredRoleSelectColumnRequiredRoleAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<RequiredRoleBoolExp>;
  predicate: BooleanComparisonExp;
};

export type RequiredRoleAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<RequiredRoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<RequiredRoleBoolExp>;
  predicate: IntComparisonExp;
};

export type SocialAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<SocialSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<SocialBoolExp>;
  predicate: IntComparisonExp;
};

export type TagAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TagSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TagBoolExp>;
  predicate: IntComparisonExp;
};

export type TeamAggregateBoolExpBool_And = {
  arguments: TeamSelectColumnTeamAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamBoolExp>;
  predicate: BooleanComparisonExp;
};

export type TeamAggregateBoolExpBool_Or = {
  arguments: TeamSelectColumnTeamAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamBoolExp>;
  predicate: BooleanComparisonExp;
};

export type TeamAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TeamSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamBoolExp>;
  predicate: IntComparisonExp;
};

export type TeamDocumentAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TeamDocumentSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamDocumentBoolExp>;
  predicate: IntComparisonExp;
};

export type TeamHistoryAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TeamHistorySelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamHistoryBoolExp>;
  predicate: IntComparisonExp;
};

export type TeamJoinAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TeamJoinSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamJoinBoolExp>;
  predicate: IntComparisonExp;
};

export type TeamMemberAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TeamMemberSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamMemberBoolExp>;
  predicate: IntComparisonExp;
};

export type TeamMemberRoleAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TeamMemberRoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamMemberRoleBoolExp>;
  predicate: IntComparisonExp;
};

export type TeamRequiredRoleAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TeamRequiredRoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamRequiredRoleBoolExp>;
  predicate: IntComparisonExp;
};

export type TeamRoleAggregateBoolExpBool_And = {
  arguments: TeamRoleSelectColumnTeamRoleAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamRoleBoolExp>;
  predicate: BooleanComparisonExp;
};

export type TeamRoleAggregateBoolExpBool_Or = {
  arguments: TeamRoleSelectColumnTeamRoleAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamRoleBoolExp>;
  predicate: BooleanComparisonExp;
};

export type TeamRoleAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TeamRoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamRoleBoolExp>;
  predicate: IntComparisonExp;
};

export type TenantMemberAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TenantMemberSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TenantMemberBoolExp>;
  predicate: IntComparisonExp;
};

export type TenantMemberRoleAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TenantMemberRoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TenantMemberRoleBoolExp>;
  predicate: IntComparisonExp;
};

export type TenantRoleAggregateBoolExpBool_And = {
  arguments: TenantRoleSelectColumnTenantRoleAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TenantRoleBoolExp>;
  predicate: BooleanComparisonExp;
};

export type TenantRoleAggregateBoolExpBool_Or = {
  arguments: TenantRoleSelectColumnTenantRoleAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TenantRoleBoolExp>;
  predicate: BooleanComparisonExp;
};

export type TenantRoleAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TenantRoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TenantRoleBoolExp>;
  predicate: IntComparisonExp;
};

export type TransactionAggregateBoolExpBool_And = {
  arguments: TransactionSelectColumnTransactionAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TransactionBoolExp>;
  predicate: BooleanComparisonExp;
};

export type TransactionAggregateBoolExpBool_Or = {
  arguments: TransactionSelectColumnTransactionAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TransactionBoolExp>;
  predicate: BooleanComparisonExp;
};

export type TransactionAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TransactionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TransactionBoolExp>;
  predicate: IntComparisonExp;
};

export type TransactionAttachmentsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TransactionAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TransactionAttachmentsBoolExp>;
  predicate: IntComparisonExp;
};

export type UserAggregateBoolExpBool_And = {
  arguments: UserSelectColumnUserAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserBoolExp>;
  predicate: BooleanComparisonExp;
};

export type UserAggregateBoolExpBool_Or = {
  arguments: UserSelectColumnUserAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserBoolExp>;
  predicate: BooleanComparisonExp;
};

export type UserAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<UserSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserBoolExp>;
  predicate: IntComparisonExp;
};

export type GetTenantOidcInfoQueryVariables = Exact<{ [key: string]: never }>;

export type GetTenantOidcInfoQuery = {
  __typename?: 'Query';
  tenant: Array<{
    __typename: 'Tenant';
    id: string;
    isOidcEnabled: boolean;
    oidcName: string;
    domain: string;
    actor: {
      __typename: 'Actor';
      id: string;
      name: string;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      type: any;
    };
  }>;
};

export type GetMeQueryVariables = Exact<{ [key: string]: never }>;

export type GetMeQuery = {
  __typename?: 'Query';
  getCurrentUser: {
    __typename: 'User';
    id: string;
    createdAt: string;
    firstName: string;
    lastName: string;
    slug: string;
    actor: {
      __typename: 'Actor';
      id: string;
      bio: string;
      email: string | null;
      name: string;
      status: string;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      type: any;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
    };
    adminRoles: Array<{
      __typename: 'AdminRole';
      id: string;
      tenant: { __typename: 'Tenant'; id: string; domain: string } | null;
    }>;
    following: Array<{
      __typename: 'Follow';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        avatar: string | null;
        banner: string | null;
        type: any;
        team: { __typename: 'Team'; id: string; slug: string } | null;
      };
    }>;
    teamMemberships: Array<{
      __typename: 'TeamMember';
      id: string;
      createdAt: string;
      teamMemberRoles: Array<{
        __typename: 'TeamMemberRole';
        id: string;
        teamRole: {
          __typename: 'TeamRole';
          id: string;
          createdAt: string;
          color: any;
          type: any | null;
          name: string;
          canViewTreasury: boolean;
          canManageTreasury: boolean;
          canManageProfile: boolean;
          canViewJoins: boolean;
          canManageJoins: boolean;
          canManageMemberRoles: boolean;
          canManageRoles: boolean;
          canCreateEvents: boolean;
          canManageEvents: boolean;
          canViewDraftEvents: boolean;
          canCreateActions: boolean;
          canManageActions: boolean;
          canCreateContents: boolean;
          canManageContents: boolean;
        };
      }>;
      team: {
        __typename: 'Team';
        id: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      };
    }>;
    tenantMemberships: Array<{
      __typename: 'TenantMember';
      id: string;
      createdAt: string;
      tenantScopeId: string;
      tenantMemberRoles: Array<{
        __typename: 'TenantMemberRole';
        id: string;
        tenantRole: {
          __typename: 'TenantRole';
          id: string;
          createdAt: string;
          color: any;
          type: any;
          name: string;
          canViewHidden: boolean;
          canHide: boolean;
          canCreateTeam: boolean;
          canManageCampus: boolean;
          canManageEventApprovalSteps: boolean;
          canManageEventApprovals: boolean;
          canManageTenant: boolean;
        };
      }>;
    }>;
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      createdAt: string;
      state: any;
      isPresent: boolean | null;
      event: { __typename: 'Event'; id: string; slug: string };
    }>;
    teamJoins: Array<{
      __typename: 'TeamJoin';
      id: string;
      createdAt: string;
      state: any;
      team: {
        __typename: 'Team';
        id: string;
        createdAt: string;
        slug: string;
        type: any;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      };
    }>;
  } | null;
};

export type GetTenantQueryVariables = Exact<{
  domain: Scalars['String']['input'];
}>;

export type GetTenantQuery = {
  __typename?: 'Query';
  tenant: Array<{
    __typename: 'Tenant';
    id: string;
    createdAt: string;
    domain: string;
    pointName: string;
    actor: {
      __typename: 'Actor';
      id: string;
      bio: string;
      name: string;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      type: any;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
    };
    eventValidationForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
  }>;
};

export type GetEventJoinQueryVariables = Exact<{
  eventJoinId: Scalars['bigint']['input'];
  userId: Scalars['bigint']['input'];
}>;

export type GetEventJoinQuery = {
  __typename?: 'Query';
  eventJoinByPk: {
    __typename: 'EventJoin';
    id: string;
    isPresent: boolean | null;
    state: any;
    event: {
      __typename: 'Event';
      id: string;
      slug: string;
      start: string;
      end: string;
      maxParticipants: number | null;
      eventOrganizes: Array<{
        __typename: 'EventOrganize';
        id: string;
        eventSupervisors: Array<{
          __typename: 'EventSupervisor';
          id: string;
          user: {
            __typename: 'User';
            id: string;
            slug: string;
            actor: {
              __typename: 'Actor';
              id: string;
              name: string;
              avatar: string | null;
              banner: string | null;
              type: any;
            };
          };
        }>;
        team: { __typename: 'Team'; id: string; slug: string };
      }>;
    };
    joinedBy: {
      __typename: 'User';
      id: string;
      slug: string;
      actor: { __typename: 'Actor'; id: string; name: string; type: any };
    };
  } | null;
};

export type UpdateEventJoinMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: EventJoinSetInput;
}>;

export type UpdateEventJoinMutation = {
  __typename?: 'Mutation';
  updateEventJoinByPk: {
    __typename: 'EventJoin';
    id: string;
    state: any;
    processedAt: string | null;
    processedBy: {
      __typename: 'User';
      id: string;
      createdAt: string;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        bio: string;
        name: string;
        email: string | null;
        status: string;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    } | null;
  } | null;
};

export type GetEventQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetEventQuery = {
  __typename?: 'Query';
  event: Array<{
    __typename: 'Event';
    id: string;
    createdAt: string;
    description: string;
    start: string;
    end: string;
    slug: string;
    name: string;
    state: any;
    price: number;
    isPrivate: boolean;
    maxParticipants: number | null;
    pointsAwardedForAttendance: number;
    location: {
      __typename: 'Location';
      id: string;
      type: any;
      link: string;
      name: string;
      details: string;
      address: {
        __typename: 'Address';
        name: string;
        latitude: number | null;
        longitude: number | null;
        category: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: any;
        geoapifyId: string;
      } | null;
    };
    banner: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      eventSupervisors: Array<{
        __typename: 'EventSupervisor';
        id: string;
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          slug: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string | null;
            name: string;
            website: string | null;
            avatar: string | null;
            banner: string | null;
            bio: string;
            status: string;
            type: any;
          };
        };
      }>;
      team: {
        __typename: 'Team';
        id: string;
        slug: string;
        type: any;
        actor: {
          __typename: 'Actor';
          id: string;
          name: string;
          email: string | null;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
          socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
        };
        joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
        teamMembersAggregate: {
          __typename: 'TeamMemberAggregate';
          aggregate: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
        };
      };
      project: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: any;
        isPrivate: boolean;
      } | null;
    }>;
    eventJoinsAggregate: {
      __typename?: 'EventJoinAggregate';
      aggregate: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      createdAt: string;
      state: any;
      isPresent: boolean | null;
      joinedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          bio: string;
          name: string;
          email: string | null;
          website: string | null;
          status: string;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      };
    }>;
    joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
  }>;
};

export type InsertEventJoinMutationVariables = Exact<{
  object: EventJoinInsertInput;
}>;

export type InsertEventJoinMutation = {
  __typename?: 'Mutation';
  insertEventJoinOne: {
    __typename: 'EventJoin';
    id: string;
    createdAt: string;
    state: any;
    isPresent: boolean | null;
    event: { __typename: 'Event'; id: string; slug: string };
  } | null;
};

export type GetEventsQueryVariables = Exact<{
  where?: InputMaybe<EventBoolExp>;
  orderBy?: InputMaybe<Array<EventOrderBy> | EventOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetEventsQuery = {
  __typename?: 'Query';
  event: Array<{
    __typename: 'Event';
    id: string;
    createdAt: string;
    slug: string;
    start: string;
    end: string;
    maxParticipants: number | null;
    name: string;
    state: any;
    price: number;
    pointsAwardedForAttendance: number;
    isPrivate: boolean;
    description: string;
    banner: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
    location: {
      __typename: 'Location';
      id: string;
      type: any;
      link: string;
      name: string;
      details: string;
      address: {
        __typename: 'Address';
        name: string;
        latitude: number | null;
        longitude: number | null;
        category: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: any;
        geoapifyId: string;
      } | null;
    };
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      eventSupervisors: Array<{
        __typename: 'EventSupervisor';
        id: string;
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          slug: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string | null;
            name: string;
            website: string | null;
            avatar: string | null;
            banner: string | null;
            bio: string;
            status: string;
            type: any;
            socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
          };
        };
      }>;
      team: {
        __typename: 'Team';
        id: string;
        slug: string;
        type: any;
        actor: {
          __typename: 'Actor';
          id: string;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      };
      project: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: any;
        isPrivate: boolean;
      } | null;
    }>;
    eventJoinsAggregate: {
      __typename?: 'EventJoinAggregate';
      aggregate: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      createdAt: string;
      state: any;
      isPresent: boolean | null;
      joinedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          bio: string;
          status: string;
          type: any;
          socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
        };
      };
    }>;
  }>;
};

export type GetEventManageQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetEventManageQuery = {
  __typename?: 'Query';
  event: Array<{
    __typename: 'Event';
    id: string;
    createdAt: string;
    start: string;
    end: string;
    maxParticipants: number | null;
    name: string;
    slug: string;
    description: string;
    state: any;
    price: number;
    pointsAwardedForAttendance: number;
    isPrivate: boolean;
    location: {
      __typename: 'Location';
      id: string;
      createdAt: string;
      type: any;
      link: string;
      name: string;
      details: string;
      address: {
        __typename: 'Address';
        latitude: number | null;
        longitude: number | null;
        category: string;
        name: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: any;
        geoapifyId: string;
      } | null;
    };
    banner: { __typename: 'FileUpload'; id: string; createdAt: string; url: string; size: number; type: string } | null;
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      team: {
        __typename: 'Team';
        id: string;
        createdAt: string;
        slug: string;
        type: any;
        directorsCategoryName: string;
        managersCategoryName: string;
        membersCategoryName: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          name: string;
          email: string | null;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          bio: string;
          status: string;
          type: any;
          socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
        };
        joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
        teamMembersAggregate: {
          __typename?: 'TeamMemberAggregate';
          aggregate: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
        };
        projects: Array<{
          __typename: 'Project';
          id: string;
          name: string;
          slug: string;
          banner: { __typename: 'FileUpload'; id: string; url: string } | null;
        }>;
      };
      project: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: any;
        isPrivate: boolean;
      } | null;
      eventSupervisors: Array<{
        __typename: 'EventSupervisor';
        id: string;
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          slug: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string | null;
            name: string;
            website: string | null;
            avatar: string | null;
            banner: string | null;
            bio: string;
            status: string;
            type: any;
            socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
          };
        };
      }>;
    }>;
    eventJoinsAggregate: {
      __typename?: 'EventJoinAggregate';
      aggregate: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      createdAt: string;
      state: any;
      isPresent: boolean | null;
      processedAt: string | null;
      participationProcessedVia: any | null;
      participationProcessedAt: string | null;
      joinedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          bio: string;
          name: string;
          email: string | null;
          status: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      };
      joinFormSubmission: {
        __typename: 'FormSubmission';
        id: string;
        createdAt: string;
        submission: JSONType;
        form: { __typename: 'Form'; id: string; schema: JSONType };
      } | null;
      processedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          email: string | null;
          name: string;
          bio: string;
          status: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      } | null;
      participationProcessedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          email: string | null;
          name: string;
          bio: string;
          status: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      } | null;
    }>;
    joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
    eventApprovals: Array<{
      __typename: 'EventApproval';
      id: string;
      createdAt: string;
      isApproved: boolean;
      message: string;
      eventApprovalStep: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
        nextSteps: Array<{
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        }>;
        previousStep: {
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        } | null;
      } | null;
      createdBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      } | null;
    }>;
    nextApprovalStep: {
      __typename: 'EventApprovalStep';
      id: string;
      createdAt: string;
      name: string;
      description: string;
      order: number;
      nextSteps: Array<{
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      }>;
      previousStep: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      } | null;
    } | null;
    approvalSubmission: {
      __typename: 'FormSubmission';
      id: string;
      createdAt: string;
      submission: JSONType;
      form: { __typename: 'Form'; id: string; schema: JSONType };
    } | null;
  }>;
};

export type InsertAddressMutationVariables = Exact<{
  object: AddressInsertInput;
}>;

export type InsertAddressMutation = {
  __typename?: 'Mutation';
  insertAddressOne: {
    __typename: 'Address';
    name: string;
    category: string;
    country: any;
    state: string;
    zip: string;
    city: string;
    street: string;
    streetNumber: string;
    latitude: number | null;
    longitude: number | null;
    geoapifyId: string;
  } | null;
};

export type UpdateEventMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: EventSetInput;
}>;

export type UpdateEventMutation = {
  __typename?: 'Mutation';
  updateEventByPk: {
    __typename: 'Event';
    id: string;
    createdAt: string;
    start: string;
    end: string;
    maxParticipants: number | null;
    name: string;
    slug: string;
    description: string;
    state: any;
    price: number;
    pointsAwardedForAttendance: number;
    isPrivate: boolean;
    banner: { __typename: 'FileUpload'; id: string; createdAt: string; url: string; size: number; type: string } | null;
    eventApprovals: Array<{
      __typename: 'EventApproval';
      id: string;
      createdAt: string;
      isApproved: boolean;
      message: string;
      eventApprovalStep: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
        nextSteps: Array<{
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        }>;
        previousStep: {
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        } | null;
      } | null;
      createdBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      } | null;
    }>;
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      team: {
        __typename: 'Team';
        id: string;
        createdAt: string;
        type: any;
        slug: string;
        directorsCategoryName: string;
        managersCategoryName: string;
        membersCategoryName: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          name: string;
          email: string | null;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          bio: string;
          status: string;
          type: any;
          socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
        };
        joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
        teamMembersAggregate: {
          __typename?: 'TeamMemberAggregate';
          aggregate: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
        };
      };
      project: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: any;
        isPrivate: boolean;
      } | null;
      eventSupervisors: Array<{
        __typename: 'EventSupervisor';
        id: string;
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          slug: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string | null;
            name: string;
            website: string | null;
            avatar: string | null;
            banner: string | null;
            bio: string;
            status: string;
            type: any;
          };
        };
      }>;
    }>;
    eventJoinsAggregate: {
      __typename?: 'EventJoinAggregate';
      aggregate: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
    };
    joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
    location: {
      __typename: 'Location';
      id: string;
      createdAt: string;
      type: any;
      link: string;
      name: string;
      details: string;
      address: {
        __typename: 'Address';
        latitude: number | null;
        longitude: number | null;
        category: string;
        name: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: any;
        geoapifyId: string;
      } | null;
    };
    nextApprovalStep: {
      __typename: 'EventApprovalStep';
      id: string;
      createdAt: string;
      name: string;
      description: string;
      order: number;
      nextSteps: Array<{
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      }>;
      previousStep: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      } | null;
    } | null;
    approvalSubmission: {
      __typename: 'FormSubmission';
      id: string;
      createdAt: string;
      submission: JSONType;
      form: { __typename: 'Form'; id: string; schema: JSONType };
    } | null;
  } | null;
};

export type UpdateEventOrganizeProjectManyMutationVariables = Exact<{
  updates: Array<EventOrganizeUpdates> | EventOrganizeUpdates;
}>;

export type UpdateEventOrganizeProjectManyMutation = {
  __typename?: 'Mutation';
  updateEventOrganizeMany: Array<{
    __typename?: 'EventOrganizeMutationResponse';
    returning: Array<{
      __typename: 'EventOrganize';
      id: string;
      team: { __typename: 'Team'; id: string; type: any; slug: string };
      project: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: any;
        isPrivate: boolean;
      } | null;
    }>;
  } | null> | null;
};

export type UpdateLocationMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: LocationSetInput;
}>;

export type UpdateLocationMutation = {
  __typename?: 'Mutation';
  updateLocationByPk: {
    __typename: 'Location';
    id: string;
    createdAt: string;
    type: any;
    link: string;
    details: string;
    address: {
      __typename: 'Address';
      latitude: number | null;
      longitude: number | null;
      category: string;
      name: string;
      streetNumber: string;
      street: string;
      zip: string;
      city: string;
      state: string;
      country: any;
      geoapifyId: string;
    } | null;
  } | null;
};

export type GetProjectManageQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetProjectManageQuery = {
  __typename?: 'Query';
  project: Array<{
    __typename: 'Project';
    id: string;
    createdAt: string;
    slug: string;
    start: string | null;
    end: string | null;
    name: string;
    isPrivate: boolean;
    banner: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    team: {
      __typename: 'Team';
      id: string;
      type: any;
      slug: string;
      actor: { __typename: 'Actor'; id: string; avatar: string | null; banner: string | null; type: any };
    };
    eventOrganizes: Array<{
      __typename?: 'EventOrganize';
      eventSupervisors: Array<{
        __typename: 'EventSupervisor';
        id: string;
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          slug: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string | null;
            name: string;
            website: string | null;
            avatar: string | null;
            banner: string | null;
            bio: string;
            status: string;
            type: any;
            socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
          };
        };
      }>;
      team: {
        __typename: 'Team';
        id: string;
        type: any;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
        joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
        teamMembersAggregate: {
          __typename: 'TeamMemberAggregate';
          aggregate: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
        };
      };
      project: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: any;
        isPrivate: boolean;
      } | null;
    }>;
  }>;
};

export type GetTeamJoinsQueryVariables = Exact<{
  where?: InputMaybe<TeamJoinBoolExp>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy> | TeamJoinOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetTeamJoinsQuery = {
  __typename?: 'Query';
  teamJoin: Array<{
    __typename: 'TeamJoin';
    id: string;
    state: any;
    joinedBy: {
      __typename: 'User';
      id: string;
      createdAt: string;
      firstName: string;
      lastName: string;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        bio: string;
        name: string;
        email: string | null;
        website: string | null;
        status: string;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    };
    team: {
      __typename: 'Team';
      id: string;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        email: string | null;
        name: string;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    };
    joinFormSubmission: {
      __typename: 'FormSubmission';
      id: string;
      createdAt: string;
      submission: JSONType;
      form: { __typename: 'Form'; id: string; schema: JSONType };
    } | null;
  }>;
};

export type UpdateTeamJoinMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: TeamJoinSetInput;
}>;

export type UpdateTeamJoinMutation = {
  __typename?: 'Mutation';
  updateTeamJoinByPk: {
    __typename: 'TeamJoin';
    id: string;
    state: any;
    joinedBy: {
      __typename: 'User';
      id: string;
      createdAt: string;
      firstName: string;
      lastName: string;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        bio: string;
        name: string;
        email: string | null;
        website: string | null;
        status: string;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    };
  } | null;
};

export type GetUsersWithPointsQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetUsersWithPointsQuery = {
  __typename?: 'Query';
  user: Array<{
    __typename: 'User';
    id: string;
    createdAt: string;
    firstName: string;
    lastName: string;
    slug: string;
    actor: {
      __typename: 'Actor';
      id: string;
      bio: string;
      name: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      type: any;
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      processedAt: string | null;
      event: { __typename: 'Event'; id: string; slug: string; pointsAwardedForAttendance: number };
    }>;
    actions: Array<{ __typename: 'Action'; id: string; points: number | null; processedAt: string | null }>;
    missionJoins: Array<{
      __typename: 'MissionJoin';
      id: string;
      points: number | null;
      pointsProcessedAt: string | null;
    }>;
  }>;
};

export type DeleteSocialsMutationVariables = Exact<{
  where: SocialBoolExp;
}>;

export type DeleteSocialsMutation = {
  __typename?: 'Mutation';
  deleteSocial: {
    __typename?: 'SocialMutationResponse';
    returning: Array<{
      __typename: 'Social';
      id: string;
      deletedAt: string | null;
      type: any;
      pseudo: string;
      order: number;
      url: string;
    }>;
  } | null;
};

export type InsertSocialsMutationVariables = Exact<{
  objects: Array<SocialInsertInput> | SocialInsertInput;
}>;

export type InsertSocialsMutation = {
  __typename?: 'Mutation';
  insertSocial: {
    __typename?: 'SocialMutationResponse';
    returning: Array<{ __typename: 'Social'; id: string; type: any; pseudo: string; order: number; url: string }>;
  } | null;
};

export type UpdateSocialsMutationVariables = Exact<{
  updates: Array<SocialUpdates> | SocialUpdates;
}>;

export type UpdateSocialsMutation = {
  __typename?: 'Mutation';
  updateSocialMany: Array<{
    __typename?: 'SocialMutationResponse';
    returning: Array<{ __typename: 'Social'; id: string; type: any; pseudo: string; order: number; url: string }>;
  } | null> | null;
};

export type DeleteActorImageMutationVariables = Exact<{
  where: ActorImageBoolExp;
}>;

export type DeleteActorImageMutation = {
  __typename?: 'Mutation';
  deleteActorImage: {
    __typename?: 'ActorImageMutationResponse';
    returning: Array<{
      __typename: 'ActorImage';
      id: string;
      createdAt: string;
      type: any;
      actor: { __typename: 'Actor'; id: string; email: string | null; name: string; website: string | null; type: any };
      image: { __typename: 'FileUpload'; id: string; url: string };
    }>;
  } | null;
};

export type DeleteTeamMemberRoleMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;

export type DeleteTeamMemberRoleMutation = {
  __typename?: 'Mutation';
  deleteTeamMemberRoleByPk: { __typename: 'TeamMemberRole'; id: string; deletedAt: string | null } | null;
};

export type GetTeamManageQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetTeamManageQuery = {
  __typename?: 'Query';
  team: Array<{
    __typename: 'Team';
    id: string;
    createdAt: string;
    type: any;
    membershipFees: number;
    membershipDuration: string;
    slug: string;
    directorsCategoryName: string;
    managersCategoryName: string;
    membersCategoryName: string;
    isJoinFormActive: boolean;
    actor: {
      __typename: 'Actor';
      id: string;
      createdAt: string;
      email: string | null;
      name: string;
      avatar: string | null;
      banner: string | null;
      bio: string;
      status: string;
      website: string | null;
      type: any;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
    };
    joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
    parent: {
      __typename: 'Team';
      id: string;
      type: any;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string | null;
        name: string;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    } | null;
    teamRoles: Array<{
      __typename: 'TeamRole';
      id: string;
      createdAt: string;
      color: any;
      type: any | null;
      name: string;
      canViewTreasury: boolean;
      canManageTreasury: boolean;
      canManageProfile: boolean;
      canViewJoins: boolean;
      canManageJoins: boolean;
      canManageMemberRoles: boolean;
      canManageRoles: boolean;
      canCreateEvents: boolean;
      canManageEvents: boolean;
      canViewDraftEvents: boolean;
      canCreateActions: boolean;
      canManageActions: boolean;
      canCreateContents: boolean;
      canManageContents: boolean;
    }>;
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      createdAt: string;
      teamMemberRoles: Array<{
        __typename: 'TeamMemberRole';
        id: string;
        teamRole: {
          __typename: 'TeamRole';
          id: string;
          createdAt: string;
          color: any;
          type: any | null;
          name: string;
          canViewTreasury: boolean;
          canManageTreasury: boolean;
          canManageProfile: boolean;
          canViewJoins: boolean;
          canManageJoins: boolean;
          canManageMemberRoles: boolean;
          canManageRoles: boolean;
          canCreateEvents: boolean;
          canManageEvents: boolean;
          canViewDraftEvents: boolean;
          canCreateActions: boolean;
          canManageActions: boolean;
          canCreateContents: boolean;
          canManageContents: boolean;
        };
      }>;
      user: {
        __typename: 'User';
        id: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          bio: string;
          status: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
          socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
        };
      };
    }>;
    projects: Array<{
      __typename: 'Project';
      id: string;
      createdAt: string;
      color: any;
      description: string;
      isPrivate: boolean;
      name: string;
      slug: string;
      eventOrganizes: Array<{
        __typename: 'EventOrganize';
        id: string;
        createdAt: string;
        project: {
          __typename: 'Project';
          id: string;
          createdAt: string;
          name: string;
          slug: string;
          color: any;
          isPrivate: boolean;
        } | null;
        event: {
          __typename: 'Event';
          id: string;
          createdAt: string;
          start: string;
          end: string;
          maxParticipants: number | null;
          name: string;
          slug: string;
          description: string;
          state: any;
          price: number;
          pointsAwardedForAttendance: number;
          isPrivate: boolean;
          location: {
            __typename: 'Location';
            id: string;
            type: any;
            createdAt: string;
            link: string;
            name: string;
            details: string;
            address: {
              __typename: 'Address';
              latitude: number | null;
              longitude: number | null;
              category: string;
              name: string;
              streetNumber: string;
              street: string;
              zip: string;
              city: string;
              state: string;
              country: any;
              geoapifyId: string;
            } | null;
          };
          banner: {
            __typename: 'FileUpload';
            id: string;
            createdAt: string;
            url: string;
            size: number;
            type: string;
          } | null;
          eventOrganizes: Array<{
            __typename: 'EventOrganize';
            id: string;
            team: {
              __typename: 'Team';
              id: string;
              createdAt: string;
              type: any;
              slug: string;
              directorsCategoryName: string;
              managersCategoryName: string;
              membersCategoryName: string;
              actor: {
                __typename: 'Actor';
                id: string;
                createdAt: string;
                email: string | null;
                name: string;
                website: string | null;
                avatar: string | null;
                banner: string | null;
                bio: string;
                status: string;
                type: any;
                socials: Array<{
                  __typename: 'Social';
                  id: string;
                  pseudo: string;
                  url: string;
                  type: any;
                  order: number;
                }>;
              };
              joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
              teamMembersAggregate: {
                __typename?: 'TeamMemberAggregate';
                aggregate: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
              };
            };
            project: {
              __typename: 'Project';
              id: string;
              createdAt: string;
              name: string;
              slug: string;
              color: any;
              isPrivate: boolean;
            } | null;
            eventSupervisors: Array<{
              __typename: 'EventSupervisor';
              id: string;
              user: {
                __typename: 'User';
                id: string;
                createdAt: string;
                firstName: string;
                lastName: string;
                slug: string;
                actor: {
                  __typename: 'Actor';
                  id: string;
                  createdAt: string;
                  email: string | null;
                  name: string;
                  website: string | null;
                  avatar: string | null;
                  banner: string | null;
                  bio: string;
                  status: string;
                  type: any;
                  socials: Array<{
                    __typename: 'Social';
                    id: string;
                    pseudo: string;
                    url: string;
                    type: any;
                    order: number;
                  }>;
                };
              };
            }>;
          }>;
          eventJoinsAggregate: {
            __typename?: 'EventJoinAggregate';
            aggregate: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
          };
          eventJoins: Array<{
            __typename: 'EventJoin';
            id: string;
            createdAt: string;
            state: any;
            isPresent: boolean | null;
            joinedBy: {
              __typename: 'User';
              id: string;
              createdAt: string;
              firstName: string;
              lastName: string;
              slug: string;
              actor: {
                __typename: 'Actor';
                id: string;
                createdAt: string;
                email: string | null;
                name: string;
                website: string | null;
                avatar: string | null;
                banner: string | null;
                bio: string;
                status: string;
                type: any;
                socials: Array<{
                  __typename: 'Social';
                  id: string;
                  pseudo: string;
                  url: string;
                  type: any;
                  order: number;
                }>;
              };
            };
          }>;
        };
      }>;
      banner: {
        __typename: 'FileUpload';
        id: string;
        createdAt: string;
        url: string;
        size: number;
        type: string;
      } | null;
      projectSupervisors: Array<{
        __typename: 'ProjectSupervisor';
        id: string;
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          slug: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string | null;
            name: string;
            website: string | null;
            avatar: string | null;
            banner: string | null;
            bio: string;
            status: string;
            type: any;
            socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
          };
        };
      }>;
    }>;
    bankAccounts: Array<{
      __typename: 'BankAccount';
      id: string;
      createdAt: string;
      name: string | null;
      type: any;
      transactionsAggregate: {
        __typename?: 'TransactionAggregate';
        aggregate: {
          __typename?: 'TransactionAggregateFields';
          sum: { __typename?: 'TransactionSumFields'; amount: number | null } | null;
        } | null;
      };
      bankInfo: {
        __typename: 'BankInfo';
        id: string;
        createdAt: string;
        bicSwift: string;
        iban: string;
        branchAddress: {
          __typename: 'Address';
          latitude: number | null;
          longitude: number | null;
          category: string;
          name: string;
          streetNumber: string;
          street: string;
          zip: string;
          city: string;
          state: string;
          country: any;
          geoapifyId: string;
        };
        bank: {
          __typename: 'LegalUnit';
          id: string;
          type: any;
          legalName: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            website: string | null;
            name: string;
            type: any;
          };
        };
      } | null;
      team: {
        __typename: 'Team';
        id: string;
        createdAt: string;
        type: any;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      };
      childrenAccounts: Array<{
        __typename: 'BankAccount';
        id: string;
        createdAt: string;
        name: string | null;
        type: any;
        transactionsAggregate: {
          __typename?: 'TransactionAggregate';
          aggregate: {
            __typename?: 'TransactionAggregateFields';
            sum: { __typename?: 'TransactionSumFields'; amount: number | null } | null;
          } | null;
        };
        bankInfo: {
          __typename: 'BankInfo';
          id: string;
          createdAt: string;
          bicSwift: string;
          iban: string;
          branchAddress: {
            __typename: 'Address';
            latitude: number | null;
            longitude: number | null;
            category: string;
            name: string;
            streetNumber: string;
            street: string;
            zip: string;
            city: string;
            state: string;
            country: any;
            geoapifyId: string;
          };
          bank: {
            __typename: 'LegalUnit';
            id: string;
            type: any;
            legalName: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              website: string | null;
              name: string;
              type: any;
            };
          };
        } | null;
        team: {
          __typename: 'Team';
          id: string;
          createdAt: string;
          type: any;
          slug: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string | null;
            name: string;
            website: string | null;
            avatar: string | null;
            banner: string | null;
            type: any;
          };
        };
      }>;
      parent: {
        __typename: 'BankAccount';
        id: string;
        createdAt: string;
        name: string | null;
        type: any;
        transactionsAggregate: {
          __typename?: 'TransactionAggregate';
          aggregate: {
            __typename?: 'TransactionAggregateFields';
            sum: { __typename?: 'TransactionSumFields'; amount: number | null } | null;
          } | null;
        };
        bankInfo: {
          __typename: 'BankInfo';
          id: string;
          createdAt: string;
          bicSwift: string;
          iban: string;
          branchAddress: {
            __typename: 'Address';
            latitude: number | null;
            longitude: number | null;
            category: string;
            name: string;
            streetNumber: string;
            street: string;
            zip: string;
            city: string;
            state: string;
            country: any;
            geoapifyId: string;
          };
          bank: {
            __typename: 'LegalUnit';
            id: string;
            type: any;
            legalName: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              website: string | null;
              name: string;
              type: any;
            };
          };
        } | null;
        team: {
          __typename: 'Team';
          id: string;
          createdAt: string;
          type: any;
          slug: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string | null;
            name: string;
            website: string | null;
            avatar: string | null;
            banner: string | null;
            type: any;
          };
        };
      } | null;
    }>;
    teamHistories: Array<{ __typename: 'TeamHistory'; id: string; createdAt: string; happenedAt: string }>;
    childrenTeams: Array<{
      __typename: 'Team';
      id: string;
      createdAt: string;
      type: any;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string | null;
        name: string;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    }>;
  }>;
};

export type InsertActorImageMutationVariables = Exact<{
  object: ActorImageInsertInput;
}>;

export type InsertActorImageMutation = {
  __typename?: 'Mutation';
  insertActorImageOne: {
    __typename: 'ActorImage';
    id: string;
    createdAt: string;
    type: any;
    actor: { __typename: 'Actor'; id: string; email: string | null; name: string; website: string | null; type: any };
    image: { __typename: 'FileUpload'; id: string; url: string };
  } | null;
};

export type UpdateActorMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: ActorSetInput;
}>;

export type UpdateActorMutation = {
  __typename?: 'Mutation';
  updateActorByPk: {
    __typename: 'Actor';
    id: string;
    bio: string;
    name: string;
    status: string;
    email: string | null;
    website: string | null;
    avatar: string | null;
    banner: string | null;
    socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
  } | null;
};

export type UpdateTeamMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: TeamSetInput;
}>;

export type UpdateTeamMutation = {
  __typename?: 'Mutation';
  updateTeamByPk: {
    __typename: 'Team';
    id: string;
    createdAt: string;
    type: any;
    membershipFees: number;
    membershipDuration: string;
    slug: string;
    directorsCategoryName: string;
    managersCategoryName: string;
    membersCategoryName: string;
    actor: {
      __typename: 'Actor';
      id: string;
      bio: string;
      name: string;
      status: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      type: any;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
    };
    joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
    teamRoles: Array<{
      __typename: 'TeamRole';
      id: string;
      createdAt: string;
      color: any;
      type: any | null;
      name: string;
      canViewTreasury: boolean;
      canManageTreasury: boolean;
      canManageProfile: boolean;
      canViewJoins: boolean;
      canManageJoins: boolean;
      canManageMemberRoles: boolean;
      canManageRoles: boolean;
      canCreateEvents: boolean;
      canManageEvents: boolean;
      canViewDraftEvents: boolean;
      canCreateActions: boolean;
      canManageActions: boolean;
      canCreateContents: boolean;
      canManageContents: boolean;
    }>;
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      createdAt: string;
      teamMemberRoles: Array<{
        __typename: 'TeamMemberRole';
        id: string;
        teamRole: {
          __typename: 'TeamRole';
          id: string;
          createdAt: string;
          color: any;
          type: any | null;
          name: string;
          canViewTreasury: boolean;
          canManageTreasury: boolean;
          canManageProfile: boolean;
          canViewJoins: boolean;
          canManageJoins: boolean;
          canManageMemberRoles: boolean;
          canManageRoles: boolean;
          canCreateEvents: boolean;
          canManageEvents: boolean;
          canViewDraftEvents: boolean;
          canCreateActions: boolean;
          canManageActions: boolean;
          canCreateContents: boolean;
          canManageContents: boolean;
        };
      }>;
      user: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          bio: string;
          status: string;
          type: any;
          socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
        };
      };
    }>;
  } | null;
};

export type InsertBankAccountMutationVariables = Exact<{
  object: BankAccountInsertInput;
}>;

export type InsertBankAccountMutation = {
  __typename?: 'Mutation';
  insertBankAccountOne: { __typename: 'BankAccount'; id: string } | null;
};

export type InsertBankInfoMutationVariables = Exact<{
  object: BankInfoInsertInput;
}>;

export type InsertBankInfoMutation = {
  __typename?: 'Mutation';
  insertBankInfoOne: { __typename: 'BankInfo'; id: string } | null;
};

export type GetEventOrganizesQueryVariables = Exact<{
  where?: InputMaybe<EventOrganizeBoolExp>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy> | EventOrganizeOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetEventOrganizesQuery = {
  __typename?: 'Query';
  eventOrganize: Array<{
    __typename?: 'EventOrganize';
    event: {
      __typename: 'Event';
      id: string;
      name: string;
      state: any;
      start: string;
      end: string;
      maxParticipants: number | null;
      slug: string;
      banner: { __typename: 'FileUpload'; id: string; url: string } | null;
      eventApprovals: Array<{
        __typename: 'EventApproval';
        id: string;
        createdAt: string;
        isApproved: boolean;
        message: string;
        eventApprovalStep: {
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
          nextSteps: Array<{
            __typename: 'EventApprovalStep';
            id: string;
            createdAt: string;
            name: string;
            description: string;
            order: number;
          }>;
          previousStep: {
            __typename: 'EventApprovalStep';
            id: string;
            createdAt: string;
            name: string;
            description: string;
            order: number;
          } | null;
        } | null;
        createdBy: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          slug: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string | null;
            name: string;
            website: string | null;
            avatar: string | null;
            banner: string | null;
            type: any;
          };
        } | null;
      }>;
      approvalSubmission: { __typename: 'FormSubmission'; id: string; createdAt: string; submission: JSONType } | null;
      nextApprovalStep: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
        nextSteps: Array<{
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        }>;
        previousStep: {
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        } | null;
      } | null;
    };
    eventSupervisors: Array<{
      __typename: 'EventSupervisor';
      id: string;
      user: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          bio: string;
          status: string;
          type: any;
          socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
        };
      };
    }>;
    team: {
      __typename: 'Team';
      id: string;
      type: any;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
      joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
    };
    project: {
      __typename: 'Project';
      id: string;
      createdAt: string;
      name: string;
      slug: string;
      color: any;
      isPrivate: boolean;
    } | null;
  }>;
  event: Array<{
    __typename: 'Event';
    id: string;
    createdAt: string;
    slug: string;
    start: string;
    end: string;
    maxParticipants: number | null;
    name: string;
    state: any;
    price: number;
    pointsAwardedForAttendance: number;
    isPrivate: boolean;
    description: string;
    location: {
      __typename: 'Location';
      id: string;
      type: any;
      link: string;
      name: string;
      details: string;
      address: {
        __typename: 'Address';
        name: string;
        latitude: number | null;
        longitude: number | null;
        category: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: any;
        geoapifyId: string;
      } | null;
    };
    banner: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    eventJoinsAggregate: {
      __typename?: 'EventJoinAggregate';
      aggregate: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      createdAt: string;
      state: any;
      isPresent: boolean | null;
      joinedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          bio: string;
          status: string;
          type: any;
          socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
        };
      };
    }>;
  }>;
};

export type GetTransactionsQueryVariables = Exact<{
  where?: InputMaybe<TransactionBoolExp>;
  orderBy?: InputMaybe<Array<TransactionOrderBy> | TransactionOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetTransactionsQuery = {
  __typename?: 'Query';
  transaction: Array<{
    __typename: 'Transaction';
    id: string;
    createdAt: string;
    amount: number;
    type: any;
    description: string;
    method: any;
    payedAt: string;
    processedByType: any;
    processedBy: {
      __typename: 'User';
      id: string;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        email: string | null;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    } | null;
    payedBy: {
      __typename: 'Actor';
      id: string;
      name: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      team: { __typename: 'Team'; id: string; slug: string } | null;
      user: { __typename: 'User'; id: string; slug: string } | null;
    };
    receivedBy: {
      __typename: 'Actor';
      id: string;
      name: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      team: { __typename: 'Team'; id: string; slug: string } | null;
      user: { __typename: 'User'; id: string; slug: string } | null;
    };
    createdBy: {
      __typename: 'User';
      id: string;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        email: string | null;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    } | null;
    event: { __typename: 'Event'; id: string; slug: string; name: string } | null;
    project: { __typename: 'Project'; id: string; slug: string; name: string } | null;
    transactionAttachments: Array<{
      __typename?: 'TransactionAttachments';
      attachment: { __typename: 'FileUpload'; id: string; name: string; size: number; type: string; url: string };
    }>;
  }>;
};

export type GetTenantManageQueryVariables = Exact<{
  domain: Scalars['String']['input'];
}>;

export type GetTenantManageQuery = {
  __typename?: 'Query';
  tenant: Array<{
    __typename: 'Tenant';
    id: string;
    domain: string;
    pointName: string;
    actor: {
      __typename: 'Actor';
      id: string;
      name: string;
      avatar: string | null;
      banner: string | null;
      bio: string;
      email: string | null;
      website: string | null;
      status: string;
      type: any;
    };
    eventValidationForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
    eventApprovalSteps: Array<{ __typename: 'EventApprovalStep'; id: string; name: string; order: number }>;
    requiredDocuments: Array<{
      __typename: 'RequiredDocument';
      id: string;
      name: string;
      description: string;
      teamTypes: Array<string> | null;
      isRequired: boolean;
    }>;
    requiredRoles: Array<{
      __typename: 'RequiredRole';
      id: string;
      name: string;
      description: string;
      teamTypes: Array<string> | null;
      isRequired: boolean;
    }>;
  }>;
};

export type GetTeamDashboardQueryVariables = Exact<{ [key: string]: never }>;

export type GetTeamDashboardQuery = {
  __typename?: 'Query';
  team: Array<{
    __typename: 'Team';
    id: string;
    createdAt: string;
    type: any;
    directorsCategoryName: string;
    managersCategoryName: string;
    membersCategoryName: string;
    slug: string;
    membershipDuration: string;
    membershipFees: number;
    isJoinFormActive: boolean;
    teamDocuments: Array<{
      __typename: 'TeamDocument';
      id: string;
      name: string;
      fileUpload: {
        __typename: 'FileUpload';
        id: string;
        name: string;
        size: number;
        type: string;
        url: string;
      } | null;
    }>;
    actor: {
      __typename: 'Actor';
      id: string;
      createdAt: string;
      email: string | null;
      name: string;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      bio: string;
      status: string;
      type: any;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
    };
    joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
    teamMembersAggregate: {
      __typename?: 'TeamMemberAggregate';
      aggregate: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
    };
    teamRoles: Array<{
      __typename: 'TeamRole';
      id: string;
      createdAt: string;
      color: any;
      type: any | null;
      name: string;
      canViewTreasury: boolean;
      canManageTreasury: boolean;
      canManageProfile: boolean;
      canViewJoins: boolean;
      canManageJoins: boolean;
      canManageMemberRoles: boolean;
      canManageRoles: boolean;
      canCreateEvents: boolean;
      canManageEvents: boolean;
      canViewDraftEvents: boolean;
      canCreateActions: boolean;
      canManageActions: boolean;
      canCreateContents: boolean;
      canManageContents: boolean;
    }>;
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      createdAt: string;
      teamMemberRoles: Array<{
        __typename: 'TeamMemberRole';
        id: string;
        teamRole: {
          __typename: 'TeamRole';
          id: string;
          createdAt: string;
          color: any;
          type: any | null;
          name: string;
          canViewTreasury: boolean;
          canManageTreasury: boolean;
          canManageProfile: boolean;
          canViewJoins: boolean;
          canManageJoins: boolean;
          canManageMemberRoles: boolean;
          canManageRoles: boolean;
          canCreateEvents: boolean;
          canManageEvents: boolean;
          canViewDraftEvents: boolean;
          canCreateActions: boolean;
          canManageActions: boolean;
          canCreateContents: boolean;
          canManageContents: boolean;
        };
      }>;
      user: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          bio: string;
          status: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      };
    }>;
    bankAccounts: Array<{
      __typename: 'BankAccount';
      id: string;
      createdAt: string;
      name: string | null;
      type: any;
      transactionsAggregate: {
        __typename?: 'TransactionAggregate';
        aggregate: {
          __typename?: 'TransactionAggregateFields';
          sum: { __typename?: 'TransactionSumFields'; amount: number | null } | null;
        } | null;
      };
      bankInfo: {
        __typename: 'BankInfo';
        id: string;
        createdAt: string;
        bicSwift: string;
        iban: string;
        branchAddress: {
          __typename: 'Address';
          latitude: number | null;
          longitude: number | null;
          category: string;
          name: string;
          streetNumber: string;
          street: string;
          zip: string;
          city: string;
          state: string;
          country: any;
          geoapifyId: string;
        };
        bank: {
          __typename: 'LegalUnit';
          id: string;
          type: any;
          legalName: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            website: string | null;
            name: string;
            type: any;
          };
        };
      } | null;
      team: {
        __typename: 'Team';
        id: string;
        createdAt: string;
        type: any;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      };
      childrenAccounts: Array<{
        __typename: 'BankAccount';
        id: string;
        createdAt: string;
        name: string | null;
        type: any;
        transactionsAggregate: {
          __typename?: 'TransactionAggregate';
          aggregate: {
            __typename?: 'TransactionAggregateFields';
            sum: { __typename?: 'TransactionSumFields'; amount: number | null } | null;
          } | null;
        };
        bankInfo: {
          __typename: 'BankInfo';
          id: string;
          createdAt: string;
          bicSwift: string;
          iban: string;
          branchAddress: {
            __typename: 'Address';
            latitude: number | null;
            longitude: number | null;
            category: string;
            name: string;
            streetNumber: string;
            street: string;
            zip: string;
            city: string;
            state: string;
            country: any;
            geoapifyId: string;
          };
          bank: {
            __typename: 'LegalUnit';
            id: string;
            type: any;
            legalName: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              website: string | null;
              name: string;
              type: any;
            };
          };
        } | null;
        team: {
          __typename: 'Team';
          id: string;
          createdAt: string;
          type: any;
          slug: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string | null;
            name: string;
            website: string | null;
            avatar: string | null;
            banner: string | null;
            type: any;
          };
        };
      }>;
      parent: {
        __typename: 'BankAccount';
        id: string;
        createdAt: string;
        name: string | null;
        type: any;
        transactionsAggregate: {
          __typename?: 'TransactionAggregate';
          aggregate: {
            __typename?: 'TransactionAggregateFields';
            sum: { __typename?: 'TransactionSumFields'; amount: number | null } | null;
          } | null;
        };
        bankInfo: {
          __typename: 'BankInfo';
          id: string;
          createdAt: string;
          bicSwift: string;
          iban: string;
          branchAddress: {
            __typename: 'Address';
            latitude: number | null;
            longitude: number | null;
            category: string;
            name: string;
            streetNumber: string;
            street: string;
            zip: string;
            city: string;
            state: string;
            country: any;
            geoapifyId: string;
          };
          bank: {
            __typename: 'LegalUnit';
            id: string;
            type: any;
            legalName: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              website: string | null;
              name: string;
              type: any;
            };
          };
        } | null;
        team: {
          __typename: 'Team';
          id: string;
          createdAt: string;
          type: any;
          slug: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string | null;
            name: string;
            website: string | null;
            avatar: string | null;
            banner: string | null;
            type: any;
          };
        };
      } | null;
    }>;
    teamHistories: Array<{ __typename: 'TeamHistory'; id: string; createdAt: string; happenedAt: string }>;
    childrenTeams: Array<{
      __typename: 'Team';
      id: string;
      createdAt: string;
      type: any;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string | null;
        name: string;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    }>;
  }>;
};

export type GetEventsValidationQueryVariables = Exact<{
  where?: InputMaybe<EventBoolExp>;
  orderBy?: InputMaybe<Array<EventOrderBy> | EventOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetEventsValidationQuery = {
  __typename?: 'Query';
  event: Array<{
    __typename: 'Event';
    id: string;
    createdAt: string;
    slug: string;
    start: string;
    end: string;
    maxParticipants: number | null;
    name: string;
    state: any;
    price: number;
    pointsAwardedForAttendance: number;
    isPrivate: boolean;
    description: string;
    location: {
      __typename: 'Location';
      id: string;
      type: any;
      link: string;
      name: string;
      details: string;
      address: {
        __typename: 'Address';
        name: string;
        latitude: number | null;
        longitude: number | null;
        category: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: any;
        geoapifyId: string;
      } | null;
    };
    banner: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    nextApprovalStep: {
      __typename: 'EventApprovalStep';
      id: string;
      createdAt: string;
      name: string;
      description: string;
      order: number;
      nextSteps: Array<{
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      }>;
      previousStep: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      } | null;
    } | null;
    approvalSubmission: {
      __typename: 'FormSubmission';
      id: string;
      createdAt: string;
      submission: JSONType;
      form: { __typename: 'Form'; id: string; schema: JSONType };
    } | null;
    eventApprovals: Array<{
      __typename: 'EventApproval';
      id: string;
      createdAt: string;
      isApproved: boolean;
      message: string;
      eventApprovalStep: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
        nextSteps: Array<{
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        }>;
        previousStep: {
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        } | null;
      } | null;
      createdBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      } | null;
    }>;
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      eventSupervisors: Array<{
        __typename: 'EventSupervisor';
        id: string;
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          slug: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string | null;
            name: string;
            website: string | null;
            avatar: string | null;
            banner: string | null;
            bio: string;
            status: string;
            type: any;
            socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
          };
        };
      }>;
      team: {
        __typename: 'Team';
        id: string;
        type: any;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          name: string;
          email: string | null;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
        joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
        teamMembersAggregate: {
          __typename: 'TeamMemberAggregate';
          aggregate: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
        };
      };
      project: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: any;
        isPrivate: boolean;
      } | null;
    }>;
    eventJoinsAggregate: {
      __typename?: 'EventJoinAggregate';
      aggregate: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      createdAt: string;
      state: any;
      isPresent: boolean | null;
      processedAt: string | null;
      participationProcessedVia: any | null;
      participationProcessedAt: string | null;
      joinedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          bio: string;
          status: string;
          type: any;
          socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
        };
      };
      joinFormSubmission: { __typename: 'FormSubmission'; id: string; createdAt: string; submission: JSONType } | null;
      processedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          bio: string;
          status: string;
          type: any;
          socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
        };
      } | null;
    }>;
    joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
  }>;
};

export type GetTenantUsersWithPointsQueryVariables = Exact<{ [key: string]: never }>;

export type GetTenantUsersWithPointsQuery = {
  __typename?: 'Query';
  user: Array<{
    __typename: 'User';
    id: string;
    createdAt: string;
    firstName: string;
    lastName: string;
    slug: string;
    actor: {
      __typename: 'Actor';
      id: string;
      bio: string;
      name: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      type: any;
    };
    actions: Array<{ __typename: 'Action'; id: string; points: number | null; processedAt: string | null }>;
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      processedAt: string | null;
      event: { __typename: 'Event'; id: string; slug: string; pointsAwardedForAttendance: number };
    }>;
    missionJoins: Array<{
      __typename: 'MissionJoin';
      id: string;
      points: number | null;
      pointsProcessedAt: string | null;
    }>;
  }>;
};

export type GetProjectQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetProjectQuery = {
  __typename?: 'Query';
  project: Array<{
    __typename: 'Project';
    id: string;
    createdAt: string;
    slug: string;
    start: string | null;
    end: string | null;
    name: string;
    isPrivate: boolean;
    banner: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    team: {
      __typename: 'Team';
      id: string;
      type: any;
      slug: string;
      actor: { __typename: 'Actor'; id: string; avatar: string | null; banner: string | null; type: any };
    };
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      event: { __typename: 'Event'; id: string; slug: string; name: string };
      eventSupervisors: Array<{
        __typename: 'EventSupervisor';
        id: string;
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          slug: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string | null;
            name: string;
            website: string | null;
            avatar: string | null;
            banner: string | null;
            bio: string;
            status: string;
            type: any;
            socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
          };
        };
      }>;
      team: {
        __typename: 'Team';
        id: string;
        type: any;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
        joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
        teamMembersAggregate: {
          __typename: 'TeamMemberAggregate';
          aggregate: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
        };
      };
      project: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: any;
        isPrivate: boolean;
      } | null;
    }>;
  }>;
};

export type GetTeamQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetTeamQuery = {
  __typename?: 'Query';
  team: Array<{
    __typename: 'Team';
    id: string;
    createdAt: string;
    type: any;
    directorsCategoryName: string;
    managersCategoryName: string;
    membersCategoryName: string;
    membershipFees: number;
    membershipDuration: string;
    slug: string;
    actor: {
      __typename: 'Actor';
      id: string;
      bio: string;
      name: string;
      status: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      type: any;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
    };
    joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
    parent: {
      __typename: 'Team';
      id: string;
      type: any;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string | null;
        name: string;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    } | null;
    teamRoles: Array<{
      __typename: 'TeamRole';
      id: string;
      createdAt: string;
      color: any;
      type: any | null;
      name: string;
      canViewTreasury: boolean;
      canManageTreasury: boolean;
      canManageProfile: boolean;
      canViewJoins: boolean;
      canManageJoins: boolean;
      canManageMemberRoles: boolean;
      canManageRoles: boolean;
      canCreateEvents: boolean;
      canManageEvents: boolean;
      canViewDraftEvents: boolean;
      canCreateActions: boolean;
      canManageActions: boolean;
      canCreateContents: boolean;
      canManageContents: boolean;
    }>;
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      createdAt: string;
      teamMemberRoles: Array<{
        __typename: 'TeamMemberRole';
        id: string;
        teamRole: {
          __typename: 'TeamRole';
          id: string;
          createdAt: string;
          color: any;
          type: any | null;
          name: string;
          canViewTreasury: boolean;
          canManageTreasury: boolean;
          canManageProfile: boolean;
          canViewJoins: boolean;
          canManageJoins: boolean;
          canManageMemberRoles: boolean;
          canManageRoles: boolean;
          canCreateEvents: boolean;
          canManageEvents: boolean;
          canViewDraftEvents: boolean;
          canCreateActions: boolean;
          canManageActions: boolean;
          canCreateContents: boolean;
          canManageContents: boolean;
        };
      }>;
      user: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          bio: string;
          status: string;
          type: any;
          socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
        };
      };
    }>;
  }>;
};

export type InsertTeamJoinMutationVariables = Exact<{
  object: TeamJoinInsertInput;
}>;

export type InsertTeamJoinMutation = {
  __typename?: 'Mutation';
  insertTeamJoinOne: {
    __typename: 'TeamJoin';
    id: string;
    createdAt: string;
    state: any;
    team: {
      __typename: 'Team';
      id: string;
      createdAt: string;
      type: any;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string | null;
        name: string;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    };
  } | null;
};

export type GetTeamsQueryVariables = Exact<{
  where?: InputMaybe<TeamBoolExp>;
  orderBy?: InputMaybe<Array<TeamOrderBy> | TeamOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetTeamsQuery = {
  __typename?: 'Query';
  team: Array<{
    __typename: 'Team';
    id: string;
    createdAt: string;
    type: any;
    slug: string;
    directorsCategoryName: string;
    managersCategoryName: string;
    membersCategoryName: string;
    membershipFees: number;
    membershipDuration: string;
    actor: {
      __typename: 'Actor';
      id: string;
      status: string;
      bio: string;
      name: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      type: any;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
    };
    joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
    parent: {
      __typename: 'Team';
      id: string;
      type: any;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string | null;
        name: string;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    } | null;
    teamRoles: Array<{
      __typename: 'TeamRole';
      id: string;
      createdAt: string;
      color: any;
      type: any | null;
      name: string;
      canViewTreasury: boolean;
      canManageTreasury: boolean;
      canManageProfile: boolean;
      canViewJoins: boolean;
      canManageJoins: boolean;
      canManageMemberRoles: boolean;
      canManageRoles: boolean;
      canCreateEvents: boolean;
      canManageEvents: boolean;
      canViewDraftEvents: boolean;
      canCreateActions: boolean;
      canManageActions: boolean;
      canCreateContents: boolean;
      canManageContents: boolean;
    }>;
    teamMembersAggregate: {
      __typename?: 'TeamMemberAggregate';
      aggregate: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
    };
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      createdAt: string;
      teamMemberRoles: Array<{
        __typename: 'TeamMemberRole';
        id: string;
        teamRole: {
          __typename: 'TeamRole';
          id: string;
          createdAt: string;
          color: any;
          type: any | null;
          name: string;
          canViewTreasury: boolean;
          canManageTreasury: boolean;
          canManageProfile: boolean;
          canViewJoins: boolean;
          canManageJoins: boolean;
          canManageMemberRoles: boolean;
          canManageRoles: boolean;
          canCreateEvents: boolean;
          canManageEvents: boolean;
          canViewDraftEvents: boolean;
          canCreateActions: boolean;
          canManageActions: boolean;
          canCreateContents: boolean;
          canManageContents: boolean;
        };
      }>;
      user: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string | null;
          name: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          bio: string;
          status: string;
          type: any;
          socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
        };
      };
    }>;
  }>;
};

export type GetCategoriesQueryVariables = Exact<{
  where?: InputMaybe<TagBoolExp>;
  orderBy?: InputMaybe<Array<TagOrderBy> | TagOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetCategoriesQuery = {
  __typename?: 'Query';
  tag: Array<{
    __typename?: 'Tag';
    id: string;
    name: string;
    slug: string;
    color: any;
    icon: { __typename?: 'FileUpload'; id: string; name: string; url: string } | null;
  }>;
};

export type GetUserQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetUserQuery = {
  __typename?: 'Query';
  user: Array<{
    __typename: 'User';
    id: string;
    createdAt: string;
    firstName: string;
    lastName: string;
    slug: string;
    actor: {
      __typename: 'Actor';
      id: string;
      status: string;
      bio: string;
      name: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      type: any;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
    };
    teamMemberships: Array<{
      __typename: 'TeamMember';
      id: string;
      team: {
        __typename: 'Team';
        id: string;
        type: any;
        slug: string;
        actor: { __typename: 'Actor'; id: string; avatar: string | null; banner: string | null; type: any };
      };
    }>;
  }>;
};

export type GetUsersQueryVariables = Exact<{
  where?: InputMaybe<UserBoolExp>;
  orderBy?: InputMaybe<Array<UserOrderBy> | UserOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetUsersQuery = {
  __typename?: 'Query';
  user: Array<{
    __typename: 'User';
    id: string;
    createdAt: string;
    firstName: string;
    lastName: string;
    slug: string;
    actor: {
      __typename: 'Actor';
      id: string;
      name: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      type: any;
    };
    teamMemberships: Array<{
      __typename: 'TeamMember';
      id: string;
      team: {
        __typename: 'Team';
        id: string;
        type: any;
        slug: string;
        actor: { __typename: 'Actor'; id: string; avatar: string | null; banner: string | null; type: any };
      };
    }>;
  }>;
};

export type InsertEventApprovalMutationVariables = Exact<{
  object: EventApprovalInsertInput;
}>;

export type InsertEventApprovalMutation = {
  __typename?: 'Mutation';
  insertEventApprovalOne: {
    __typename: 'EventApproval';
    id: string;
    createdAt: string;
    isApproved: boolean;
    message: string;
    eventApprovalStep: {
      __typename: 'EventApprovalStep';
      id: string;
      createdAt: string;
      name: string;
      description: string;
      order: number;
      nextSteps: Array<{
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      }>;
      previousStep: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      } | null;
    } | null;
    createdBy: {
      __typename: 'User';
      id: string;
      createdAt: string;
      firstName: string;
      lastName: string;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string | null;
        name: string;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    } | null;
  } | null;
};

export type GetProjectsSelectQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetProjectsSelectQuery = {
  __typename?: 'Query';
  project: Array<{
    __typename: 'Project';
    id: string;
    createdAt: string;
    slug: string;
    start: string | null;
    end: string | null;
    name: string;
    isPrivate: boolean;
    banner: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      event: {
        __typename: 'Event';
        id: string;
        name: string;
        slug: string;
        banner: { __typename: 'FileUpload'; id: string; url: string } | null;
      };
    }>;
  }>;
};

export type GetTenantEventApprovalDetailsQueryVariables = Exact<{
  domain: Scalars['String']['input'];
}>;

export type GetTenantEventApprovalDetailsQuery = {
  __typename?: 'Query';
  tenant: Array<{
    __typename: 'Tenant';
    id: string;
    eventValidationForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
    eventApprovalSteps: Array<{ __typename: 'EventApprovalStep'; id: string; name: string; order: number }>;
  }>;
};

export type InsertEventMutationVariables = Exact<{
  object: EventInsertInput;
}>;

export type InsertEventMutation = {
  __typename?: 'Mutation';
  insertEventOne: {
    __typename: 'Event';
    id: string;
    createdAt: string;
    slug: string;
    start: string;
    end: string;
    maxParticipants: number | null;
    name: string;
    state: any;
    price: number;
    pointsAwardedForAttendance: number;
    isPrivate: boolean;
    description: string;
    location: {
      __typename: 'Location';
      id: string;
      type: any;
      link: string;
      name: string;
      details: string;
      address: {
        __typename: 'Address';
        name: string;
        latitude: number | null;
        longitude: number | null;
        category: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: any;
        geoapifyId: string;
      } | null;
    };
    banner: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      eventSupervisors: Array<{
        __typename: 'EventSupervisor';
        id: string;
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          slug: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string | null;
            name: string;
            website: string | null;
            avatar: string | null;
            banner: string | null;
            bio: string;
            status: string;
            type: any;
            socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
          };
        };
      }>;
      team: {
        __typename: 'Team';
        id: string;
        type: any;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          name: string;
          email: string | null;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
          socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
        };
        joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
        teamMembersAggregate: {
          __typename: 'TeamMemberAggregate';
          aggregate: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
        };
      };
      project: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: any;
        isPrivate: boolean;
      } | null;
    }>;
    eventJoinsAggregate: {
      __typename?: 'EventJoinAggregate';
      aggregate: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      createdAt: string;
      state: any;
      isPresent: boolean | null;
      processedAt: string | null;
      participationProcessedVia: any | null;
      participationProcessedAt: string | null;
      processedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          bio: string;
          name: string;
          email: string | null;
          status: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      } | null;
      joinedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          bio: string;
          name: string;
          email: string | null;
          website: string | null;
          status: string;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      };
    }>;
    joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
  } | null;
};

export type InsertTransactionMutationVariables = Exact<{
  object: TransactionInsertInput;
}>;

export type InsertTransactionMutation = {
  __typename?: 'Mutation';
  insertTransactionOne: {
    __typename: 'Transaction';
    id: string;
    createdAt: string;
    amount: number;
    description: string;
    method: any;
    payedAt: string;
    type: any;
    processedByType: any;
    processedBy: {
      __typename: 'User';
      id: string;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        email: string | null;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    } | null;
    payedBy: {
      __typename: 'Actor';
      id: string;
      name: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      team: { __typename: 'Team'; id: string; slug: string } | null;
      user: { __typename: 'User'; id: string; slug: string } | null;
    };
    receivedBy: {
      __typename: 'Actor';
      id: string;
      name: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      team: { __typename: 'Team'; id: string; slug: string } | null;
      user: { __typename: 'User'; id: string; slug: string } | null;
    };
    createdBy: {
      __typename: 'User';
      id: string;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        email: string | null;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    } | null;
    event: { __typename: 'Event'; id: string; slug: string; name: string } | null;
    project: { __typename: 'Project'; id: string; slug: string; name: string } | null;
    transactionAttachments: Array<{
      __typename?: 'TransactionAttachments';
      attachment: { __typename: 'FileUpload'; id: string; name: string; size: number; type: string; url: string };
    }>;
  } | null;
};

export type UpdateTransactionMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: TransactionSetInput;
}>;

export type UpdateTransactionMutation = {
  __typename?: 'Mutation';
  updateTransactionByPk: {
    __typename: 'Transaction';
    id: string;
    createdAt: string;
    amount: number;
    type: any;
    description: string;
    method: any;
    payedAt: string;
    processedByType: any;
    processedBy: {
      __typename: 'User';
      id: string;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        email: string | null;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    } | null;
    payedBy: {
      __typename: 'Actor';
      id: string;
      name: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      team: { __typename: 'Team'; id: string; slug: string } | null;
      user: { __typename: 'User'; id: string; slug: string } | null;
    };
    receivedBy: {
      __typename: 'Actor';
      id: string;
      name: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      team: { __typename: 'Team'; id: string; slug: string } | null;
      user: { __typename: 'User'; id: string; slug: string } | null;
    };
    createdBy: {
      __typename: 'User';
      id: string;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        email: string | null;
        website: string | null;
        avatar: string | null;
        banner: string | null;
        type: any;
      };
    } | null;
    event: { __typename: 'Event'; id: string; slug: string; name: string } | null;
    project: { __typename: 'Project'; id: string; slug: string; name: string } | null;
    transactionAttachments: Array<{
      __typename?: 'TransactionAttachments';
      attachment: { __typename: 'FileUpload'; id: string; name: string; size: number; type: string; url: string };
    }>;
  } | null;
};

export type DeleteFollowMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;

export type DeleteFollowMutation = {
  __typename?: 'Mutation';
  deleteFollowByPk: {
    __typename: 'Follow';
    id: string;
    deletedAt: string | null;
    actor: {
      __typename: 'Actor';
      id: string;
      email: string | null;
      name: string;
      website: string | null;
      type: any;
      team: { __typename: 'Team'; id: string; slug: string } | null;
      user: { __typename: 'User'; id: string; slug: string } | null;
    };
  } | null;
};

export type InsertFollowMutationVariables = Exact<{
  object: FollowInsertInput;
}>;

export type InsertFollowMutation = {
  __typename?: 'Mutation';
  insertFollowOne: {
    __typename: 'Follow';
    id: string;
    actor: {
      __typename: 'Actor';
      id: string;
      email: string | null;
      name: string;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      type: any;
      team: { __typename: 'Team'; id: string; slug: string } | null;
    };
    createdBy: {
      __typename: 'User';
      id: string;
      createdAt: string;
      firstName: string;
      lastName: string;
      slug: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string | null;
        name: string;
        type: any;
        website: string | null;
      };
    } | null;
  } | null;
};

export type InsertFileUploadMutationVariables = Exact<{
  object: FileUploadInsertInput;
}>;

export type InsertFileUploadMutation = {
  __typename?: 'Mutation';
  insertFileUploadOne: {
    __typename: 'FileUpload';
    id: string;
    name: string;
    url: string;
    createdAt: string;
    size: number;
    type: string;
  } | null;
};

export type GetLegalUnitsQueryVariables = Exact<{
  where?: InputMaybe<LegalUnitBoolExp>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy> | LegalUnitOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetLegalUnitsQuery = {
  __typename?: 'Query';
  legalUnit: Array<{
    __typename: 'LegalUnit';
    id: string;
    createdAt: string;
    type: any;
    legalName: string;
    slug: string;
    actor: {
      __typename: 'Actor';
      id: string;
      name: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      type: any;
    };
  }>;
};

export type InsertLegalUnitMutationVariables = Exact<{
  object: LegalUnitInsertInput;
}>;

export type InsertLegalUnitMutation = {
  __typename?: 'Mutation';
  insertLegalUnitOne: {
    __typename: 'LegalUnit';
    id: string;
    createdAt: string;
    type: any;
    legalName: string;
    slug: string;
    actor: {
      __typename: 'Actor';
      id: string;
      name: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      type: any;
    };
  } | null;
};

export type GetTeamPopoverQueryVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;

export type GetTeamPopoverQuery = {
  __typename?: 'Query';
  team: Array<{
    __typename: 'Team';
    id: string;
    createdAt: string;
    type: any;
    membershipFees: number;
    membershipDuration: string;
    slug: string;
    directorsCategoryName: string;
    managersCategoryName: string;
    membersCategoryName: string;
    actor: {
      __typename: 'Actor';
      id: string;
      bio: string;
      name: string;
      status: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
      type: any;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: any; order: number }>;
    };
    joinForm: { __typename: 'Form'; id: string; schema: JSONType } | null;
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      createdAt: string;
      teamMemberRoles: Array<{
        __typename: 'TeamMemberRole';
        id: string;
        teamRole: {
          __typename: 'TeamRole';
          id: string;
          createdAt: string;
          color: any;
          type: any | null;
          name: string;
          canViewTreasury: boolean;
          canManageTreasury: boolean;
          canManageProfile: boolean;
          canViewJoins: boolean;
          canManageJoins: boolean;
          canManageMemberRoles: boolean;
          canManageRoles: boolean;
          canCreateEvents: boolean;
          canManageEvents: boolean;
          canViewDraftEvents: boolean;
          canCreateActions: boolean;
          canManageActions: boolean;
          canCreateContents: boolean;
          canManageContents: boolean;
        };
      }>;
      user: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        slug: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          bio: string;
          email: string | null;
          name: string;
          status: string;
          website: string | null;
          avatar: string | null;
          banner: string | null;
          type: any;
        };
      };
    }>;
  }>;
};

export type GetUserPopoverQueryVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;

export type GetUserPopoverQuery = {
  __typename?: 'Query';
  userByPk: {
    __typename: 'User';
    id: string;
    createdAt: string;
    firstName: string;
    lastName: string;
    slug: string;
    actor: {
      __typename: 'Actor';
      id: string;
      bio: string;
      name: string;
      email: string | null;
      website: string | null;
      avatar: string | null;
      banner: string | null;
    };
    teamMemberships: Array<{
      __typename: 'TeamMember';
      id: string;
      team: {
        __typename: 'Team';
        id: string;
        type: any;
        slug: string;
        actor: { __typename: 'Actor'; id: string; avatar: string | null; banner: string | null; type: any };
      };
    }>;
  } | null;
};

export type UpdateFormMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: FormSetInput;
}>;

export type UpdateFormMutation = {
  __typename?: 'Mutation';
  updateFormByPk: { __typename: 'Form'; id: string; schema: JSONType } | null;
};

export type InsertRequiredDocumentMutationVariables = Exact<{
  object: RequiredDocumentInsertInput;
}>;

export type InsertRequiredDocumentMutation = {
  __typename?: 'Mutation';
  insertRequiredDocumentOne: {
    __typename: 'RequiredDocument';
    id: string;
    createdAt: string;
    name: string;
    description: string;
    teamTypes: Array<string> | null;
  } | null;
};

export type UpdateRequiredDocumentMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: RequiredDocumentSetInput;
}>;

export type UpdateRequiredDocumentMutation = {
  __typename?: 'Mutation';
  updateRequiredDocumentByPk: {
    __typename: 'RequiredDocument';
    id: string;
    createdAt: string;
    name: string;
    description: string;
    teamTypes: Array<string> | null;
  } | null;
};

export const GetTenantOidcInfoDocument = gql`
  query GetTenantOidcInfo {
    tenant {
      __typename
      id
      isOidcEnabled
      oidcName
      domain
      actor {
        __typename
        id
        name
        website
        avatar
        banner
        type
      }
    }
  }
`;

/**
 * __useGetTenantOidcInfoQuery__
 *
 * To run a query within a React component, call `useGetTenantOidcInfoQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTenantOidcInfoQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTenantOidcInfoQuery({
 *   variables: {
 *   },
 * });
 */
export function useGetTenantOidcInfoQuery(
  baseOptions?: Apollo.QueryHookOptions<GetTenantOidcInfoQuery, GetTenantOidcInfoQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTenantOidcInfoQuery, GetTenantOidcInfoQueryVariables>(GetTenantOidcInfoDocument, options);
}
export function useGetTenantOidcInfoLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTenantOidcInfoQuery, GetTenantOidcInfoQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTenantOidcInfoQuery, GetTenantOidcInfoQueryVariables>(
    GetTenantOidcInfoDocument,
    options,
  );
}
export type GetTenantOidcInfoQueryHookResult = ReturnType<typeof useGetTenantOidcInfoQuery>;
export type GetTenantOidcInfoLazyQueryHookResult = ReturnType<typeof useGetTenantOidcInfoLazyQuery>;
export type GetTenantOidcInfoQueryResult = Apollo.QueryResult<GetTenantOidcInfoQuery, GetTenantOidcInfoQueryVariables>;
export const GetMeDocument = gql`
  query GetMe {
    getCurrentUser {
      __typename
      id
      createdAt
      firstName
      lastName
      slug
      actor {
        __typename
        id
        bio
        email
        name
        status
        website
        avatar
        banner
        type
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      adminRoles {
        __typename
        id
        tenant {
          __typename
          id
          domain
        }
      }
      following {
        __typename
        id
        actor {
          __typename
          id
          name
          avatar
          banner
          type
          team {
            __typename
            id
            slug
          }
        }
      }
      teamMemberships {
        __typename
        id
        createdAt
        teamMemberRoles {
          __typename
          id
          teamRole {
            __typename
            id
            createdAt
            color
            type
            name
            canViewTreasury
            canManageTreasury
            canManageProfile
            canViewJoins
            canManageJoins
            canManageMemberRoles
            canManageRoles
            canCreateEvents
            canManageEvents
            canViewDraftEvents
            canCreateActions
            canManageActions
            canCreateContents
            canManageContents
          }
        }
        team {
          __typename
          id
          slug
          actor {
            __typename
            id
            email
            name
            website
            avatar
            banner
            type
          }
        }
      }
      tenantMemberships {
        __typename
        id
        createdAt
        tenantScopeId
        tenantMemberRoles {
          __typename
          id
          tenantRole {
            __typename
            id
            createdAt
            color
            type
            name
            canViewHidden
            canHide
            canCreateTeam
            canManageCampus
            canManageEventApprovalSteps
            canManageEventApprovals
            canManageTenant
          }
        }
      }
      eventJoins {
        __typename
        id
        createdAt
        state
        isPresent
        event {
          __typename
          id
          slug
        }
      }
      teamJoins {
        __typename
        id
        createdAt
        state
        team {
          __typename
          id
          createdAt
          slug
          type
          actor {
            __typename
            id
            createdAt
            email
            name
            website
            avatar
            banner
            type
          }
        }
      }
    }
  }
`;

/**
 * __useGetMeQuery__
 *
 * To run a query within a React component, call `useGetMeQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetMeQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetMeQuery({
 *   variables: {
 *   },
 * });
 */
export function useGetMeQuery(baseOptions?: Apollo.QueryHookOptions<GetMeQuery, GetMeQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetMeQuery, GetMeQueryVariables>(GetMeDocument, options);
}
export function useGetMeLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetMeQuery, GetMeQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetMeQuery, GetMeQueryVariables>(GetMeDocument, options);
}
export type GetMeQueryHookResult = ReturnType<typeof useGetMeQuery>;
export type GetMeLazyQueryHookResult = ReturnType<typeof useGetMeLazyQuery>;
export type GetMeQueryResult = Apollo.QueryResult<GetMeQuery, GetMeQueryVariables>;
export const GetTenantDocument = gql`
  query GetTenant($domain: String!) {
    tenant(where: { domain: { _eq: $domain } }, limit: 1) {
      __typename
      id
      createdAt
      domain
      pointName
      actor {
        __typename
        id
        bio
        name
        website
        avatar
        banner
        type
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      eventValidationForm {
        __typename
        id
        schema
      }
    }
  }
`;

/**
 * __useGetTenantQuery__
 *
 * To run a query within a React component, call `useGetTenantQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTenantQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTenantQuery({
 *   variables: {
 *      domain: // value for 'domain'
 *   },
 * });
 */
export function useGetTenantQuery(baseOptions: Apollo.QueryHookOptions<GetTenantQuery, GetTenantQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTenantQuery, GetTenantQueryVariables>(GetTenantDocument, options);
}
export function useGetTenantLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTenantQuery, GetTenantQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTenantQuery, GetTenantQueryVariables>(GetTenantDocument, options);
}
export type GetTenantQueryHookResult = ReturnType<typeof useGetTenantQuery>;
export type GetTenantLazyQueryHookResult = ReturnType<typeof useGetTenantLazyQuery>;
export type GetTenantQueryResult = Apollo.QueryResult<GetTenantQuery, GetTenantQueryVariables>;
export const GetEventJoinDocument = gql`
  query GetEventJoin($eventJoinId: bigint!, $userId: bigint!) {
    eventJoinByPk(id: $eventJoinId) {
      __typename
      id
      isPresent
      state
      event {
        __typename
        id
        slug
        start
        end
        maxParticipants
        eventOrganizes {
          __typename
          id
          eventSupervisors(where: { user: { id: { _eq: $userId } } }) {
            __typename
            id
            user {
              __typename
              id
              slug
              actor {
                __typename
                id
                name
                avatar
                banner
                type
              }
            }
          }
          team {
            __typename
            id
            slug
          }
        }
      }
      joinedBy {
        __typename
        id
        slug
        actor {
          __typename
          id
          name
          type
        }
      }
    }
  }
`;

/**
 * __useGetEventJoinQuery__
 *
 * To run a query within a React component, call `useGetEventJoinQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetEventJoinQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetEventJoinQuery({
 *   variables: {
 *      eventJoinId: // value for 'eventJoinId'
 *      userId: // value for 'userId'
 *   },
 * });
 */
export function useGetEventJoinQuery(
  baseOptions: Apollo.QueryHookOptions<GetEventJoinQuery, GetEventJoinQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetEventJoinQuery, GetEventJoinQueryVariables>(GetEventJoinDocument, options);
}
export function useGetEventJoinLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetEventJoinQuery, GetEventJoinQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetEventJoinQuery, GetEventJoinQueryVariables>(GetEventJoinDocument, options);
}
export type GetEventJoinQueryHookResult = ReturnType<typeof useGetEventJoinQuery>;
export type GetEventJoinLazyQueryHookResult = ReturnType<typeof useGetEventJoinLazyQuery>;
export type GetEventJoinQueryResult = Apollo.QueryResult<GetEventJoinQuery, GetEventJoinQueryVariables>;
export const UpdateEventJoinDocument = gql`
  mutation UpdateEventJoin($id: bigint!, $update: EventJoinSetInput!) {
    updateEventJoinByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      state
      processedAt
      processedBy {
        __typename
        id
        createdAt
        slug
        actor {
          __typename
          id
          bio
          name
          email
          status
          website
          avatar
          banner
          type
        }
      }
    }
  }
`;
export type UpdateEventJoinMutationFn = Apollo.MutationFunction<
  UpdateEventJoinMutation,
  UpdateEventJoinMutationVariables
>;

/**
 * __useUpdateEventJoinMutation__
 *
 * To run a mutation, you first call `useUpdateEventJoinMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateEventJoinMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateEventJoinMutation, { data, loading, error }] = useUpdateEventJoinMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateEventJoinMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateEventJoinMutation, UpdateEventJoinMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateEventJoinMutation, UpdateEventJoinMutationVariables>(
    UpdateEventJoinDocument,
    options,
  );
}
export type UpdateEventJoinMutationHookResult = ReturnType<typeof useUpdateEventJoinMutation>;
export type UpdateEventJoinMutationResult = Apollo.MutationResult<UpdateEventJoinMutation>;
export type UpdateEventJoinMutationOptions = Apollo.BaseMutationOptions<
  UpdateEventJoinMutation,
  UpdateEventJoinMutationVariables
>;
export const GetEventDocument = gql`
  query GetEvent($slug: String!) {
    event(where: { slug: { _eq: $slug } }, limit: 1) {
      __typename
      id
      createdAt
      description
      start
      end
      slug
      name
      state
      price
      isPrivate
      maxParticipants
      pointsAwardedForAttendance
      location {
        __typename
        id
        type
        link
        name
        details
        address {
          __typename
          name
          latitude
          longitude
          category
          streetNumber
          street
          zip
          city
          state
          country
          geoapifyId
        }
      }
      banner {
        __typename
        id
        url
        type
      }
      eventOrganizes {
        __typename
        id
        eventSupervisors {
          __typename
          id
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            slug
            actor {
              __typename
              id
              createdAt
              email
              name
              website
              avatar
              banner
              bio
              status
              type
            }
          }
        }
        team {
          __typename
          id
          slug
          type
          actor {
            __typename
            id
            name
            email
            website
            avatar
            banner
            type
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
          joinForm {
            __typename
            id
            schema
          }
          teamMembersAggregate {
            __typename
            aggregate {
              count
            }
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
      }
      eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
        aggregate {
          count
        }
      }
      eventJoins(where: { state: { _eq: "Approved" } }, limit: 12) {
        __typename
        id
        createdAt
        state
        isPresent
        joinedBy {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            bio
            name
            email
            website
            status
            avatar
            banner
            type
          }
        }
      }
      joinForm {
        __typename
        id
        schema
      }
    }
  }
`;

/**
 * __useGetEventQuery__
 *
 * To run a query within a React component, call `useGetEventQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetEventQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetEventQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetEventQuery(baseOptions: Apollo.QueryHookOptions<GetEventQuery, GetEventQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetEventQuery, GetEventQueryVariables>(GetEventDocument, options);
}
export function useGetEventLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetEventQuery, GetEventQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetEventQuery, GetEventQueryVariables>(GetEventDocument, options);
}
export type GetEventQueryHookResult = ReturnType<typeof useGetEventQuery>;
export type GetEventLazyQueryHookResult = ReturnType<typeof useGetEventLazyQuery>;
export type GetEventQueryResult = Apollo.QueryResult<GetEventQuery, GetEventQueryVariables>;
export const InsertEventJoinDocument = gql`
  mutation InsertEventJoin($object: EventJoinInsertInput!) {
    insertEventJoinOne(object: $object) {
      __typename
      id
      createdAt
      state
      isPresent
      event {
        __typename
        id
        slug
      }
    }
  }
`;
export type InsertEventJoinMutationFn = Apollo.MutationFunction<
  InsertEventJoinMutation,
  InsertEventJoinMutationVariables
>;

/**
 * __useInsertEventJoinMutation__
 *
 * To run a mutation, you first call `useInsertEventJoinMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertEventJoinMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertEventJoinMutation, { data, loading, error }] = useInsertEventJoinMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertEventJoinMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertEventJoinMutation, InsertEventJoinMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertEventJoinMutation, InsertEventJoinMutationVariables>(
    InsertEventJoinDocument,
    options,
  );
}
export type InsertEventJoinMutationHookResult = ReturnType<typeof useInsertEventJoinMutation>;
export type InsertEventJoinMutationResult = Apollo.MutationResult<InsertEventJoinMutation>;
export type InsertEventJoinMutationOptions = Apollo.BaseMutationOptions<
  InsertEventJoinMutation,
  InsertEventJoinMutationVariables
>;
export const GetEventsDocument = gql`
  query GetEvents($where: EventBoolExp, $orderBy: [EventOrderBy!], $limit: Int, $offset: Int) {
    event(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      createdAt
      slug
      start
      end
      maxParticipants
      name
      state
      price
      pointsAwardedForAttendance
      isPrivate
      description
      banner {
        __typename
        id
        url
        type
      }
      joinForm {
        __typename
        id
        schema
      }
      location {
        __typename
        id
        type
        link
        name
        details
        address {
          __typename
          name
          latitude
          longitude
          category
          streetNumber
          street
          zip
          city
          state
          country
          geoapifyId
        }
      }
      eventOrganizes {
        __typename
        id
        eventSupervisors {
          __typename
          id
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            slug
            actor {
              __typename
              id
              createdAt
              email
              name
              website
              avatar
              banner
              bio
              status
              type
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
        team {
          __typename
          id
          slug
          type
          actor {
            __typename
            id
            name
            website
            avatar
            banner
            type
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
      }
      eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
        aggregate {
          count
        }
      }
      eventJoins(where: { state: { _eq: "Approved" } }, limit: 12) {
        __typename
        id
        createdAt
        state
        isPresent
        joinedBy {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            website
            avatar
            banner
            bio
            status
            type
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetEventsQuery__
 *
 * To run a query within a React component, call `useGetEventsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetEventsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetEventsQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetEventsQuery(baseOptions?: Apollo.QueryHookOptions<GetEventsQuery, GetEventsQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetEventsQuery, GetEventsQueryVariables>(GetEventsDocument, options);
}
export function useGetEventsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetEventsQuery, GetEventsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetEventsQuery, GetEventsQueryVariables>(GetEventsDocument, options);
}
export type GetEventsQueryHookResult = ReturnType<typeof useGetEventsQuery>;
export type GetEventsLazyQueryHookResult = ReturnType<typeof useGetEventsLazyQuery>;
export type GetEventsQueryResult = Apollo.QueryResult<GetEventsQuery, GetEventsQueryVariables>;
export const GetEventManageDocument = gql`
  query GetEventManage($slug: String!) {
    event(where: { slug: { _eq: $slug } }, limit: 1) {
      __typename
      id
      createdAt
      start
      end
      maxParticipants
      name
      slug
      description
      state
      price
      pointsAwardedForAttendance
      isPrivate
      location {
        __typename
        id
        createdAt
        type
        link
        name
        details
        address {
          __typename
          latitude
          longitude
          category
          name
          streetNumber
          street
          zip
          city
          state
          country
          geoapifyId
        }
      }
      banner {
        __typename
        id
        createdAt
        url
        size
        type
      }
      eventOrganizes {
        __typename
        id
        team {
          __typename
          id
          createdAt
          slug
          type
          directorsCategoryName
          managersCategoryName
          membersCategoryName
          actor {
            __typename
            id
            createdAt
            name
            email
            website
            avatar
            banner
            bio
            status
            type
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
          joinForm {
            __typename
            id
            schema
          }
          teamMembersAggregate {
            aggregate {
              count
            }
          }
          projects {
            __typename
            id
            name
            slug
            banner {
              __typename
              id
              url
            }
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
        eventSupervisors {
          __typename
          id
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            slug
            actor {
              __typename
              id
              createdAt
              email
              name
              website
              avatar
              banner
              bio
              status
              type
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
      }
      eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
        aggregate {
          count
        }
      }
      eventJoins(orderBy: [{ participationProcessedAt: DESC }]) {
        __typename
        id
        createdAt
        state
        isPresent
        joinedBy {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            bio
            name
            email
            status
            website
            avatar
            banner
            type
          }
        }
        joinFormSubmission {
          __typename
          id
          createdAt
          submission
          form {
            __typename
            id
            schema
          }
        }
        processedBy {
          __typename
          id
          createdAt
          slug
          actor {
            __typename
            id
            email
            name
            bio
            status
            website
            avatar
            banner
            type
          }
        }
        processedAt
        participationProcessedVia
        participationProcessedAt
        participationProcessedBy {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            email
            name
            bio
            status
            website
            avatar
            banner
            type
          }
        }
      }
      joinForm {
        __typename
        id
        schema
      }
      eventApprovals {
        __typename
        id
        createdAt
        isApproved
        message
        eventApprovalStep {
          __typename
          id
          createdAt
          name
          description
          order
          nextSteps {
            __typename
            id
            createdAt
            name
            description
            order
          }
          previousStep {
            __typename
            id
            createdAt
            name
            description
            order
          }
        }
        createdBy {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            website
            avatar
            banner
            type
          }
        }
      }
      nextApprovalStep {
        __typename
        id
        createdAt
        name
        description
        order
        nextSteps {
          __typename
          id
          createdAt
          name
          description
          order
        }
        previousStep {
          __typename
          id
          createdAt
          name
          description
          order
        }
      }
      approvalSubmission {
        __typename
        id
        createdAt
        form {
          __typename
          id
          schema
        }
        submission
      }
    }
  }
`;

/**
 * __useGetEventManageQuery__
 *
 * To run a query within a React component, call `useGetEventManageQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetEventManageQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetEventManageQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetEventManageQuery(
  baseOptions: Apollo.QueryHookOptions<GetEventManageQuery, GetEventManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetEventManageQuery, GetEventManageQueryVariables>(GetEventManageDocument, options);
}
export function useGetEventManageLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetEventManageQuery, GetEventManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetEventManageQuery, GetEventManageQueryVariables>(GetEventManageDocument, options);
}
export type GetEventManageQueryHookResult = ReturnType<typeof useGetEventManageQuery>;
export type GetEventManageLazyQueryHookResult = ReturnType<typeof useGetEventManageLazyQuery>;
export type GetEventManageQueryResult = Apollo.QueryResult<GetEventManageQuery, GetEventManageQueryVariables>;
export const InsertAddressDocument = gql`
  mutation InsertAddress($object: AddressInsertInput!) {
    insertAddressOne(object: $object) {
      __typename
      name
      category
      country
      state
      zip
      city
      street
      streetNumber
      latitude
      longitude
      geoapifyId
    }
  }
`;
export type InsertAddressMutationFn = Apollo.MutationFunction<InsertAddressMutation, InsertAddressMutationVariables>;

/**
 * __useInsertAddressMutation__
 *
 * To run a mutation, you first call `useInsertAddressMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertAddressMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertAddressMutation, { data, loading, error }] = useInsertAddressMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertAddressMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertAddressMutation, InsertAddressMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertAddressMutation, InsertAddressMutationVariables>(InsertAddressDocument, options);
}
export type InsertAddressMutationHookResult = ReturnType<typeof useInsertAddressMutation>;
export type InsertAddressMutationResult = Apollo.MutationResult<InsertAddressMutation>;
export type InsertAddressMutationOptions = Apollo.BaseMutationOptions<
  InsertAddressMutation,
  InsertAddressMutationVariables
>;
export const UpdateEventDocument = gql`
  mutation UpdateEvent($id: bigint!, $update: EventSetInput!) {
    updateEventByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      createdAt
      start
      end
      maxParticipants
      name
      slug
      description
      state
      price
      pointsAwardedForAttendance
      isPrivate
      banner {
        __typename
        id
        createdAt
        url
        size
        type
      }
      eventApprovals {
        __typename
        id
        createdAt
        isApproved
        message
        eventApprovalStep {
          __typename
          id
          createdAt
          name
          description
          order
          nextSteps {
            __typename
            id
            createdAt
            name
            description
            order
          }
          previousStep {
            __typename
            id
            createdAt
            name
            description
            order
          }
        }
        createdBy {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            website
            avatar
            banner
            type
          }
        }
      }
      eventOrganizes {
        __typename
        id
        team {
          __typename
          id
          createdAt
          type
          slug
          actor {
            __typename
            id
            createdAt
            name
            email
            website
            avatar
            banner
            bio
            status
            type
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
          directorsCategoryName
          managersCategoryName
          membersCategoryName
          joinForm {
            __typename
            id
            schema
          }
          teamMembersAggregate {
            aggregate {
              count
            }
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
        eventSupervisors {
          __typename
          id
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            slug
            actor {
              __typename
              id
              createdAt
              email
              name
              website
              avatar
              banner
              bio
              status
              type
            }
          }
        }
      }
      eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
        aggregate {
          count
        }
      }
      joinForm {
        __typename
        id
        schema
      }
      location {
        __typename
        id
        createdAt
        type
        link
        name
        details
        address {
          __typename
          latitude
          longitude
          category
          name
          streetNumber
          street
          zip
          city
          state
          country
          geoapifyId
        }
      }
      nextApprovalStep {
        __typename
        id
        createdAt
        name
        description
        order
        nextSteps {
          __typename
          id
          createdAt
          name
          description
          order
        }
        previousStep {
          __typename
          id
          createdAt
          name
          description
          order
        }
      }
      approvalSubmission {
        __typename
        id
        createdAt
        submission
        form {
          __typename
          id
          schema
        }
      }
    }
  }
`;
export type UpdateEventMutationFn = Apollo.MutationFunction<UpdateEventMutation, UpdateEventMutationVariables>;

/**
 * __useUpdateEventMutation__
 *
 * To run a mutation, you first call `useUpdateEventMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateEventMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateEventMutation, { data, loading, error }] = useUpdateEventMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateEventMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateEventMutation, UpdateEventMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateEventMutation, UpdateEventMutationVariables>(UpdateEventDocument, options);
}
export type UpdateEventMutationHookResult = ReturnType<typeof useUpdateEventMutation>;
export type UpdateEventMutationResult = Apollo.MutationResult<UpdateEventMutation>;
export type UpdateEventMutationOptions = Apollo.BaseMutationOptions<UpdateEventMutation, UpdateEventMutationVariables>;
export const UpdateEventOrganizeProjectManyDocument = gql`
  mutation UpdateEventOrganizeProjectMany($updates: [EventOrganizeUpdates!]!) {
    updateEventOrganizeMany(updates: $updates) {
      returning {
        __typename
        id
        team {
          __typename
          id
          type
          slug
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
      }
    }
  }
`;
export type UpdateEventOrganizeProjectManyMutationFn = Apollo.MutationFunction<
  UpdateEventOrganizeProjectManyMutation,
  UpdateEventOrganizeProjectManyMutationVariables
>;

/**
 * __useUpdateEventOrganizeProjectManyMutation__
 *
 * To run a mutation, you first call `useUpdateEventOrganizeProjectManyMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateEventOrganizeProjectManyMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateEventOrganizeProjectManyMutation, { data, loading, error }] = useUpdateEventOrganizeProjectManyMutation({
 *   variables: {
 *      updates: // value for 'updates'
 *   },
 * });
 */
export function useUpdateEventOrganizeProjectManyMutation(
  baseOptions?: Apollo.MutationHookOptions<
    UpdateEventOrganizeProjectManyMutation,
    UpdateEventOrganizeProjectManyMutationVariables
  >,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateEventOrganizeProjectManyMutation, UpdateEventOrganizeProjectManyMutationVariables>(
    UpdateEventOrganizeProjectManyDocument,
    options,
  );
}
export type UpdateEventOrganizeProjectManyMutationHookResult = ReturnType<
  typeof useUpdateEventOrganizeProjectManyMutation
>;
export type UpdateEventOrganizeProjectManyMutationResult =
  Apollo.MutationResult<UpdateEventOrganizeProjectManyMutation>;
export type UpdateEventOrganizeProjectManyMutationOptions = Apollo.BaseMutationOptions<
  UpdateEventOrganizeProjectManyMutation,
  UpdateEventOrganizeProjectManyMutationVariables
>;
export const UpdateLocationDocument = gql`
  mutation UpdateLocation($id: bigint!, $update: LocationSetInput!) {
    updateLocationByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      createdAt
      type
      link
      details
      address {
        __typename
        latitude
        longitude
        category
        name
        streetNumber
        street
        zip
        city
        state
        country
        geoapifyId
      }
    }
  }
`;
export type UpdateLocationMutationFn = Apollo.MutationFunction<UpdateLocationMutation, UpdateLocationMutationVariables>;

/**
 * __useUpdateLocationMutation__
 *
 * To run a mutation, you first call `useUpdateLocationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateLocationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateLocationMutation, { data, loading, error }] = useUpdateLocationMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateLocationMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateLocationMutation, UpdateLocationMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateLocationMutation, UpdateLocationMutationVariables>(UpdateLocationDocument, options);
}
export type UpdateLocationMutationHookResult = ReturnType<typeof useUpdateLocationMutation>;
export type UpdateLocationMutationResult = Apollo.MutationResult<UpdateLocationMutation>;
export type UpdateLocationMutationOptions = Apollo.BaseMutationOptions<
  UpdateLocationMutation,
  UpdateLocationMutationVariables
>;
export const GetProjectManageDocument = gql`
  query GetProjectManage($slug: String!) {
    project(where: { slug: { _eq: $slug } }, limit: 1) {
      __typename
      id
      createdAt
      slug
      start
      end
      name
      isPrivate
      banner {
        __typename
        id
        url
        type
      }
      team {
        __typename
        id
        type
        slug
        actor {
          __typename
          id
          avatar
          banner
          type
        }
      }
      eventOrganizes {
        eventSupervisors {
          __typename
          id
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            slug
            actor {
              __typename
              id
              createdAt
              email
              name
              website
              avatar
              banner
              bio
              status
              type
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
        team {
          __typename
          id
          type
          slug
          actor {
            __typename
            id
            name
            website
            avatar
            banner
            type
          }
          joinForm {
            __typename
            id
            schema
          }
          teamMembersAggregate {
            __typename
            aggregate {
              count
            }
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
      }
    }
  }
`;

/**
 * __useGetProjectManageQuery__
 *
 * To run a query within a React component, call `useGetProjectManageQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetProjectManageQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetProjectManageQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetProjectManageQuery(
  baseOptions: Apollo.QueryHookOptions<GetProjectManageQuery, GetProjectManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetProjectManageQuery, GetProjectManageQueryVariables>(GetProjectManageDocument, options);
}
export function useGetProjectManageLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetProjectManageQuery, GetProjectManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetProjectManageQuery, GetProjectManageQueryVariables>(GetProjectManageDocument, options);
}
export type GetProjectManageQueryHookResult = ReturnType<typeof useGetProjectManageQuery>;
export type GetProjectManageLazyQueryHookResult = ReturnType<typeof useGetProjectManageLazyQuery>;
export type GetProjectManageQueryResult = Apollo.QueryResult<GetProjectManageQuery, GetProjectManageQueryVariables>;
export const GetTeamJoinsDocument = gql`
  query GetTeamJoins($where: TeamJoinBoolExp, $orderBy: [TeamJoinOrderBy!], $limit: Int, $offset: Int) {
    teamJoin(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      state
      joinedBy {
        __typename
        id
        createdAt
        firstName
        lastName
        slug
        actor {
          __typename
          id
          bio
          name
          email
          website
          status
          avatar
          banner
          type
        }
      }
      team {
        __typename
        id
        slug
        actor {
          __typename
          id
          email
          name
          website
          avatar
          banner
          type
        }
      }
      joinFormSubmission {
        __typename
        id
        createdAt
        submission
        form {
          __typename
          id
          schema
        }
      }
    }
  }
`;

/**
 * __useGetTeamJoinsQuery__
 *
 * To run a query within a React component, call `useGetTeamJoinsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTeamJoinsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTeamJoinsQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetTeamJoinsQuery(
  baseOptions?: Apollo.QueryHookOptions<GetTeamJoinsQuery, GetTeamJoinsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTeamJoinsQuery, GetTeamJoinsQueryVariables>(GetTeamJoinsDocument, options);
}
export function useGetTeamJoinsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTeamJoinsQuery, GetTeamJoinsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTeamJoinsQuery, GetTeamJoinsQueryVariables>(GetTeamJoinsDocument, options);
}
export type GetTeamJoinsQueryHookResult = ReturnType<typeof useGetTeamJoinsQuery>;
export type GetTeamJoinsLazyQueryHookResult = ReturnType<typeof useGetTeamJoinsLazyQuery>;
export type GetTeamJoinsQueryResult = Apollo.QueryResult<GetTeamJoinsQuery, GetTeamJoinsQueryVariables>;
export const UpdateTeamJoinDocument = gql`
  mutation UpdateTeamJoin($id: bigint!, $update: TeamJoinSetInput!) {
    updateTeamJoinByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      state
      joinedBy {
        __typename
        id
        createdAt
        firstName
        lastName
        slug
        actor {
          __typename
          id
          bio
          name
          email
          website
          status
          avatar
          banner
          type
        }
      }
    }
  }
`;
export type UpdateTeamJoinMutationFn = Apollo.MutationFunction<UpdateTeamJoinMutation, UpdateTeamJoinMutationVariables>;

/**
 * __useUpdateTeamJoinMutation__
 *
 * To run a mutation, you first call `useUpdateTeamJoinMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateTeamJoinMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateTeamJoinMutation, { data, loading, error }] = useUpdateTeamJoinMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateTeamJoinMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateTeamJoinMutation, UpdateTeamJoinMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateTeamJoinMutation, UpdateTeamJoinMutationVariables>(UpdateTeamJoinDocument, options);
}
export type UpdateTeamJoinMutationHookResult = ReturnType<typeof useUpdateTeamJoinMutation>;
export type UpdateTeamJoinMutationResult = Apollo.MutationResult<UpdateTeamJoinMutation>;
export type UpdateTeamJoinMutationOptions = Apollo.BaseMutationOptions<
  UpdateTeamJoinMutation,
  UpdateTeamJoinMutationVariables
>;
export const GetUsersWithPointsDocument = gql`
  query GetUsersWithPoints($slug: String!) {
    user(
      where: {
        _or: [
          { actions: { processedAt: { _isNull: false }, team: { slug: { _eq: $slug } } } }
          {
            eventJoins: {
              participationProcessedAt: { _isNull: false }
              event: { eventOrganizes: { team: { slug: { _eq: $slug } } } }
            }
          }
          { missionJoins: { pointsProcessedAt: { _isNull: false }, mission: { team: { slug: { _eq: $slug } } } } }
        ]
      }
    ) {
      __typename
      id
      createdAt
      firstName
      lastName
      slug
      actor {
        __typename
        id
        bio
        name
        email
        website
        avatar
        banner
        type
      }
      eventJoins(
        where: {
          participationProcessedAt: { _isNull: false }
          event: { eventOrganizes: { team: { slug: { _eq: $slug } } } }
        }
      ) {
        __typename
        id
        processedAt
        event {
          __typename
          id
          slug
          pointsAwardedForAttendance
        }
      }
      actions(where: { processedAt: { _isNull: false }, team: { slug: { _eq: $slug } } }) {
        __typename
        id
        points
        processedAt
      }
      missionJoins(where: { processedAt: { _isNull: false }, mission: { team: { slug: { _eq: $slug } } } }) {
        __typename
        id
        points
        pointsProcessedAt
      }
    }
  }
`;

/**
 * __useGetUsersWithPointsQuery__
 *
 * To run a query within a React component, call `useGetUsersWithPointsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetUsersWithPointsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetUsersWithPointsQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetUsersWithPointsQuery(
  baseOptions: Apollo.QueryHookOptions<GetUsersWithPointsQuery, GetUsersWithPointsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetUsersWithPointsQuery, GetUsersWithPointsQueryVariables>(
    GetUsersWithPointsDocument,
    options,
  );
}
export function useGetUsersWithPointsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetUsersWithPointsQuery, GetUsersWithPointsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetUsersWithPointsQuery, GetUsersWithPointsQueryVariables>(
    GetUsersWithPointsDocument,
    options,
  );
}
export type GetUsersWithPointsQueryHookResult = ReturnType<typeof useGetUsersWithPointsQuery>;
export type GetUsersWithPointsLazyQueryHookResult = ReturnType<typeof useGetUsersWithPointsLazyQuery>;
export type GetUsersWithPointsQueryResult = Apollo.QueryResult<
  GetUsersWithPointsQuery,
  GetUsersWithPointsQueryVariables
>;
export const DeleteSocialsDocument = gql`
  mutation DeleteSocials($where: SocialBoolExp!) {
    deleteSocial(where: $where) {
      returning {
        __typename
        id
        deletedAt
        type
        pseudo
        order
        url
      }
    }
  }
`;
export type DeleteSocialsMutationFn = Apollo.MutationFunction<DeleteSocialsMutation, DeleteSocialsMutationVariables>;

/**
 * __useDeleteSocialsMutation__
 *
 * To run a mutation, you first call `useDeleteSocialsMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteSocialsMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteSocialsMutation, { data, loading, error }] = useDeleteSocialsMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteSocialsMutation(
  baseOptions?: Apollo.MutationHookOptions<DeleteSocialsMutation, DeleteSocialsMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<DeleteSocialsMutation, DeleteSocialsMutationVariables>(DeleteSocialsDocument, options);
}
export type DeleteSocialsMutationHookResult = ReturnType<typeof useDeleteSocialsMutation>;
export type DeleteSocialsMutationResult = Apollo.MutationResult<DeleteSocialsMutation>;
export type DeleteSocialsMutationOptions = Apollo.BaseMutationOptions<
  DeleteSocialsMutation,
  DeleteSocialsMutationVariables
>;
export const InsertSocialsDocument = gql`
  mutation InsertSocials($objects: [SocialInsertInput!]!) {
    insertSocial(objects: $objects) {
      returning {
        __typename
        id
        type
        pseudo
        order
        url
      }
    }
  }
`;
export type InsertSocialsMutationFn = Apollo.MutationFunction<InsertSocialsMutation, InsertSocialsMutationVariables>;

/**
 * __useInsertSocialsMutation__
 *
 * To run a mutation, you first call `useInsertSocialsMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertSocialsMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertSocialsMutation, { data, loading, error }] = useInsertSocialsMutation({
 *   variables: {
 *      objects: // value for 'objects'
 *   },
 * });
 */
export function useInsertSocialsMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertSocialsMutation, InsertSocialsMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertSocialsMutation, InsertSocialsMutationVariables>(InsertSocialsDocument, options);
}
export type InsertSocialsMutationHookResult = ReturnType<typeof useInsertSocialsMutation>;
export type InsertSocialsMutationResult = Apollo.MutationResult<InsertSocialsMutation>;
export type InsertSocialsMutationOptions = Apollo.BaseMutationOptions<
  InsertSocialsMutation,
  InsertSocialsMutationVariables
>;
export const UpdateSocialsDocument = gql`
  mutation UpdateSocials($updates: [SocialUpdates!]!) {
    updateSocialMany(updates: $updates) {
      returning {
        __typename
        id
        type
        pseudo
        order
        url
      }
    }
  }
`;
export type UpdateSocialsMutationFn = Apollo.MutationFunction<UpdateSocialsMutation, UpdateSocialsMutationVariables>;

/**
 * __useUpdateSocialsMutation__
 *
 * To run a mutation, you first call `useUpdateSocialsMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateSocialsMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateSocialsMutation, { data, loading, error }] = useUpdateSocialsMutation({
 *   variables: {
 *      updates: // value for 'updates'
 *   },
 * });
 */
export function useUpdateSocialsMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateSocialsMutation, UpdateSocialsMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateSocialsMutation, UpdateSocialsMutationVariables>(UpdateSocialsDocument, options);
}
export type UpdateSocialsMutationHookResult = ReturnType<typeof useUpdateSocialsMutation>;
export type UpdateSocialsMutationResult = Apollo.MutationResult<UpdateSocialsMutation>;
export type UpdateSocialsMutationOptions = Apollo.BaseMutationOptions<
  UpdateSocialsMutation,
  UpdateSocialsMutationVariables
>;
export const DeleteActorImageDocument = gql`
  mutation DeleteActorImage($where: ActorImageBoolExp!) {
    deleteActorImage(where: $where) {
      returning {
        __typename
        id
        createdAt
        type
        actor {
          __typename
          id
          email
          name
          website
          type
        }
        image {
          __typename
          id
          url
        }
      }
    }
  }
`;
export type DeleteActorImageMutationFn = Apollo.MutationFunction<
  DeleteActorImageMutation,
  DeleteActorImageMutationVariables
>;

/**
 * __useDeleteActorImageMutation__
 *
 * To run a mutation, you first call `useDeleteActorImageMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteActorImageMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteActorImageMutation, { data, loading, error }] = useDeleteActorImageMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteActorImageMutation(
  baseOptions?: Apollo.MutationHookOptions<DeleteActorImageMutation, DeleteActorImageMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<DeleteActorImageMutation, DeleteActorImageMutationVariables>(
    DeleteActorImageDocument,
    options,
  );
}
export type DeleteActorImageMutationHookResult = ReturnType<typeof useDeleteActorImageMutation>;
export type DeleteActorImageMutationResult = Apollo.MutationResult<DeleteActorImageMutation>;
export type DeleteActorImageMutationOptions = Apollo.BaseMutationOptions<
  DeleteActorImageMutation,
  DeleteActorImageMutationVariables
>;
export const DeleteTeamMemberRoleDocument = gql`
  mutation DeleteTeamMemberRole($id: bigint!) {
    deleteTeamMemberRoleByPk(id: $id) {
      __typename
      id
      deletedAt
    }
  }
`;
export type DeleteTeamMemberRoleMutationFn = Apollo.MutationFunction<
  DeleteTeamMemberRoleMutation,
  DeleteTeamMemberRoleMutationVariables
>;

/**
 * __useDeleteTeamMemberRoleMutation__
 *
 * To run a mutation, you first call `useDeleteTeamMemberRoleMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteTeamMemberRoleMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteTeamMemberRoleMutation, { data, loading, error }] = useDeleteTeamMemberRoleMutation({
 *   variables: {
 *      id: // value for 'id'
 *   },
 * });
 */
export function useDeleteTeamMemberRoleMutation(
  baseOptions?: Apollo.MutationHookOptions<DeleteTeamMemberRoleMutation, DeleteTeamMemberRoleMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<DeleteTeamMemberRoleMutation, DeleteTeamMemberRoleMutationVariables>(
    DeleteTeamMemberRoleDocument,
    options,
  );
}
export type DeleteTeamMemberRoleMutationHookResult = ReturnType<typeof useDeleteTeamMemberRoleMutation>;
export type DeleteTeamMemberRoleMutationResult = Apollo.MutationResult<DeleteTeamMemberRoleMutation>;
export type DeleteTeamMemberRoleMutationOptions = Apollo.BaseMutationOptions<
  DeleteTeamMemberRoleMutation,
  DeleteTeamMemberRoleMutationVariables
>;
export const GetTeamManageDocument = gql`
  query GetTeamManage($slug: String!) {
    team(where: { slug: { _eq: $slug } }) {
      __typename
      id
      createdAt
      type
      membershipFees
      membershipDuration
      slug
      actor {
        __typename
        id
        createdAt
        email
        name
        avatar
        banner
        bio
        status
        website
        type
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      directorsCategoryName
      managersCategoryName
      membersCategoryName
      joinForm {
        __typename
        id
        schema
      }
      parent {
        __typename
        id
        type
        slug
        actor {
          __typename
          id
          createdAt
          email
          name
          website
          avatar
          banner
          type
        }
      }
      teamRoles {
        __typename
        id
        createdAt
        color
        type
        name
        canViewTreasury
        canManageTreasury
        canManageProfile
        canViewJoins
        canManageJoins
        canManageMemberRoles
        canManageRoles
        canCreateEvents
        canManageEvents
        canViewDraftEvents
        canCreateActions
        canManageActions
        canCreateContents
        canManageContents
      }
      teamMembers {
        __typename
        id
        createdAt
        teamMemberRoles {
          __typename
          id
          teamRole {
            __typename
            id
            createdAt
            color
            type
            name
            canViewTreasury
            canManageTreasury
            canManageProfile
            canViewJoins
            canManageJoins
            canManageMemberRoles
            canManageRoles
            canCreateEvents
            canManageEvents
            canViewDraftEvents
            canCreateActions
            canManageActions
            canCreateContents
            canManageContents
          }
        }
        user {
          __typename
          id
          firstName
          lastName
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            bio
            status
            website
            avatar
            banner
            type
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
        }
      }
      projects {
        __typename
        id
        createdAt
        color
        description
        isPrivate
        name
        slug
        eventOrganizes {
          __typename
          id
          createdAt
          project {
            __typename
            id
            createdAt
            name
            slug
            color
            isPrivate
          }
          event {
            __typename
            id
            createdAt
            start
            end
            maxParticipants
            name
            slug
            description
            location {
              __typename
              id
              type
              createdAt
              link
              name
              details
              address {
                __typename
                latitude
                longitude
                category
                name
                streetNumber
                street
                zip
                city
                state
                country
                geoapifyId
              }
            }
            state
            price
            pointsAwardedForAttendance
            banner {
              __typename
              id
              createdAt
              url
              size
              type
            }
            isPrivate
            eventOrganizes {
              __typename
              id
              team {
                __typename
                id
                createdAt
                type
                slug
                actor {
                  __typename
                  id
                  createdAt
                  email
                  name
                  website
                  avatar
                  banner
                  bio
                  status
                  type
                  socials(where: { deletedAt: { _isNull: true } }) {
                    __typename
                    id
                    pseudo
                    url
                    type
                    order
                  }
                }
                directorsCategoryName
                managersCategoryName
                membersCategoryName
                joinForm {
                  __typename
                  id
                  schema
                }
                teamMembersAggregate {
                  aggregate {
                    count
                  }
                }
              }
              project {
                __typename
                id
                createdAt
                name
                slug
                color
                isPrivate
              }
              eventSupervisors {
                __typename
                id
                user {
                  __typename
                  id
                  createdAt
                  firstName
                  lastName
                  slug
                  actor {
                    __typename
                    id
                    createdAt
                    email
                    name
                    website
                    avatar
                    banner
                    bio
                    status
                    type
                    socials(where: { deletedAt: { _isNull: true } }) {
                      __typename
                      id
                      pseudo
                      url
                      type
                      order
                    }
                  }
                }
              }
            }
            eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
              aggregate {
                count
              }
            }
            eventJoins(where: { state: { _eq: "Approved" } }, limit: 3) {
              __typename
              id
              createdAt
              state
              isPresent
              joinedBy {
                __typename
                id
                createdAt
                firstName
                lastName
                slug
                actor {
                  __typename
                  id
                  createdAt
                  email
                  name
                  website
                  avatar
                  banner
                  bio
                  status
                  type
                  socials(where: { deletedAt: { _isNull: true } }) {
                    __typename
                    id
                    pseudo
                    url
                    type
                    order
                  }
                }
              }
            }
          }
        }
        banner {
          __typename
          id
          createdAt
          url
          size
          type
        }
        projectSupervisors {
          __typename
          id
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            slug
            actor {
              __typename
              id
              createdAt
              email
              name
              website
              avatar
              banner
              bio
              status
              type
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
      }
      membershipDuration
      membershipFees
      isJoinFormActive
      bankAccounts {
        __typename
        id
        createdAt
        transactionsAggregate {
          aggregate {
            sum {
              amount
            }
          }
        }
        bankInfo {
          __typename
          id
          createdAt
          bicSwift
          iban
          branchAddress {
            __typename
            latitude
            longitude
            category
            name
            streetNumber
            street
            zip
            city
            state
            country
            geoapifyId
          }
          bank {
            __typename
            id
            type
            legalName
            actor {
              __typename
              id
              createdAt
              website
              name
              type
            }
          }
        }
        name
        team {
          __typename
          id
          createdAt
          type
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            website
            avatar
            banner
            type
          }
        }
        type
        childrenAccounts {
          __typename
          id
          createdAt
          transactionsAggregate {
            aggregate {
              sum {
                amount
              }
            }
          }
          name
          type
          bankInfo {
            __typename
            id
            createdAt
            bicSwift
            iban
            branchAddress {
              __typename
              latitude
              longitude
              category
              name
              streetNumber
              street
              zip
              city
              state
              country
              geoapifyId
            }
            bank {
              __typename
              id
              type
              legalName
              actor {
                __typename
                id
                createdAt
                website
                name
                type
              }
            }
          }
          team {
            __typename
            id
            createdAt
            type
            slug
            actor {
              __typename
              id
              createdAt
              email
              name
              website
              avatar
              banner
              type
            }
          }
        }
        parent {
          __typename
          id
          createdAt
          name
          type
          transactionsAggregate {
            aggregate {
              sum {
                amount
              }
            }
          }
          bankInfo {
            __typename
            id
            createdAt
            bicSwift
            iban
            branchAddress {
              __typename
              latitude
              longitude
              category
              name
              streetNumber
              street
              zip
              city
              state
              country
              geoapifyId
            }
            bank {
              __typename
              id
              type
              legalName
              actor {
                __typename
                id
                createdAt
                website
                name
                type
              }
            }
          }
          team {
            __typename
            id
            createdAt
            type
            slug
            actor {
              __typename
              id
              createdAt
              email
              name
              website
              avatar
              banner
              type
            }
          }
        }
      }
      teamHistories(where: { type: { _in: ["OkampusStart", "ExtraordinaryAssembly", "RegularAssembly", "Restart"] } }) {
        __typename
        id
        createdAt
        happenedAt
      }
      childrenTeams {
        __typename
        id
        createdAt
        type
        slug
        actor {
          __typename
          id
          createdAt
          email
          name
          website
          avatar
          banner
          type
        }
      }
    }
  }
`;

/**
 * __useGetTeamManageQuery__
 *
 * To run a query within a React component, call `useGetTeamManageQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTeamManageQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTeamManageQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetTeamManageQuery(
  baseOptions: Apollo.QueryHookOptions<GetTeamManageQuery, GetTeamManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTeamManageQuery, GetTeamManageQueryVariables>(GetTeamManageDocument, options);
}
export function useGetTeamManageLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTeamManageQuery, GetTeamManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTeamManageQuery, GetTeamManageQueryVariables>(GetTeamManageDocument, options);
}
export type GetTeamManageQueryHookResult = ReturnType<typeof useGetTeamManageQuery>;
export type GetTeamManageLazyQueryHookResult = ReturnType<typeof useGetTeamManageLazyQuery>;
export type GetTeamManageQueryResult = Apollo.QueryResult<GetTeamManageQuery, GetTeamManageQueryVariables>;
export const InsertActorImageDocument = gql`
  mutation InsertActorImage($object: ActorImageInsertInput!) {
    insertActorImageOne(object: $object) {
      __typename
      id
      createdAt
      type
      actor {
        __typename
        id
        email
        name
        website
        type
      }
      image {
        __typename
        id
        url
      }
    }
  }
`;
export type InsertActorImageMutationFn = Apollo.MutationFunction<
  InsertActorImageMutation,
  InsertActorImageMutationVariables
>;

/**
 * __useInsertActorImageMutation__
 *
 * To run a mutation, you first call `useInsertActorImageMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertActorImageMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertActorImageMutation, { data, loading, error }] = useInsertActorImageMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertActorImageMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertActorImageMutation, InsertActorImageMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertActorImageMutation, InsertActorImageMutationVariables>(
    InsertActorImageDocument,
    options,
  );
}
export type InsertActorImageMutationHookResult = ReturnType<typeof useInsertActorImageMutation>;
export type InsertActorImageMutationResult = Apollo.MutationResult<InsertActorImageMutation>;
export type InsertActorImageMutationOptions = Apollo.BaseMutationOptions<
  InsertActorImageMutation,
  InsertActorImageMutationVariables
>;
export const UpdateActorDocument = gql`
  mutation UpdateActor($id: bigint!, $update: ActorSetInput!) {
    updateActorByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      bio
      name
      status
      email
      website
      avatar
      banner
      socials(where: { deletedAt: { _isNull: true } }) {
        __typename
        id
        pseudo
        url
        type
        order
      }
    }
  }
`;
export type UpdateActorMutationFn = Apollo.MutationFunction<UpdateActorMutation, UpdateActorMutationVariables>;

/**
 * __useUpdateActorMutation__
 *
 * To run a mutation, you first call `useUpdateActorMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateActorMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateActorMutation, { data, loading, error }] = useUpdateActorMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateActorMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateActorMutation, UpdateActorMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateActorMutation, UpdateActorMutationVariables>(UpdateActorDocument, options);
}
export type UpdateActorMutationHookResult = ReturnType<typeof useUpdateActorMutation>;
export type UpdateActorMutationResult = Apollo.MutationResult<UpdateActorMutation>;
export type UpdateActorMutationOptions = Apollo.BaseMutationOptions<UpdateActorMutation, UpdateActorMutationVariables>;
export const UpdateTeamDocument = gql`
  mutation UpdateTeam($id: bigint!, $update: TeamSetInput!) {
    updateTeamByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      createdAt
      type
      membershipFees
      membershipDuration
      slug
      actor {
        __typename
        id
        bio
        name
        status
        email
        website
        avatar
        banner
        type
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      directorsCategoryName
      managersCategoryName
      membersCategoryName
      joinForm {
        __typename
        id
        schema
      }
      teamRoles {
        __typename
        id
        createdAt
        color
        type
        name
        canViewTreasury
        canManageTreasury
        canManageProfile
        canViewJoins
        canManageJoins
        canManageMemberRoles
        canManageRoles
        canCreateEvents
        canManageEvents
        canViewDraftEvents
        canCreateActions
        canManageActions
        canCreateContents
        canManageContents
      }
      teamMembers {
        __typename
        id
        createdAt
        teamMemberRoles {
          __typename
          id
          teamRole {
            __typename
            id
            createdAt
            color
            type
            name
            canViewTreasury
            canManageTreasury
            canManageProfile
            canViewJoins
            canManageJoins
            canManageMemberRoles
            canManageRoles
            canCreateEvents
            canManageEvents
            canViewDraftEvents
            canCreateActions
            canManageActions
            canCreateContents
            canManageContents
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            website
            avatar
            banner
            bio
            status
            type
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
        }
      }
    }
  }
`;
export type UpdateTeamMutationFn = Apollo.MutationFunction<UpdateTeamMutation, UpdateTeamMutationVariables>;

/**
 * __useUpdateTeamMutation__
 *
 * To run a mutation, you first call `useUpdateTeamMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateTeamMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateTeamMutation, { data, loading, error }] = useUpdateTeamMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateTeamMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateTeamMutation, UpdateTeamMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateTeamMutation, UpdateTeamMutationVariables>(UpdateTeamDocument, options);
}
export type UpdateTeamMutationHookResult = ReturnType<typeof useUpdateTeamMutation>;
export type UpdateTeamMutationResult = Apollo.MutationResult<UpdateTeamMutation>;
export type UpdateTeamMutationOptions = Apollo.BaseMutationOptions<UpdateTeamMutation, UpdateTeamMutationVariables>;
export const InsertBankAccountDocument = gql`
  mutation InsertBankAccount($object: BankAccountInsertInput!) {
    insertBankAccountOne(object: $object) {
      __typename
      id
    }
  }
`;
export type InsertBankAccountMutationFn = Apollo.MutationFunction<
  InsertBankAccountMutation,
  InsertBankAccountMutationVariables
>;

/**
 * __useInsertBankAccountMutation__
 *
 * To run a mutation, you first call `useInsertBankAccountMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertBankAccountMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertBankAccountMutation, { data, loading, error }] = useInsertBankAccountMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertBankAccountMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertBankAccountMutation, InsertBankAccountMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertBankAccountMutation, InsertBankAccountMutationVariables>(
    InsertBankAccountDocument,
    options,
  );
}
export type InsertBankAccountMutationHookResult = ReturnType<typeof useInsertBankAccountMutation>;
export type InsertBankAccountMutationResult = Apollo.MutationResult<InsertBankAccountMutation>;
export type InsertBankAccountMutationOptions = Apollo.BaseMutationOptions<
  InsertBankAccountMutation,
  InsertBankAccountMutationVariables
>;
export const InsertBankInfoDocument = gql`
  mutation InsertBankInfo($object: BankInfoInsertInput!) {
    insertBankInfoOne(object: $object) {
      __typename
      id
    }
  }
`;
export type InsertBankInfoMutationFn = Apollo.MutationFunction<InsertBankInfoMutation, InsertBankInfoMutationVariables>;

/**
 * __useInsertBankInfoMutation__
 *
 * To run a mutation, you first call `useInsertBankInfoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertBankInfoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertBankInfoMutation, { data, loading, error }] = useInsertBankInfoMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertBankInfoMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertBankInfoMutation, InsertBankInfoMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertBankInfoMutation, InsertBankInfoMutationVariables>(InsertBankInfoDocument, options);
}
export type InsertBankInfoMutationHookResult = ReturnType<typeof useInsertBankInfoMutation>;
export type InsertBankInfoMutationResult = Apollo.MutationResult<InsertBankInfoMutation>;
export type InsertBankInfoMutationOptions = Apollo.BaseMutationOptions<
  InsertBankInfoMutation,
  InsertBankInfoMutationVariables
>;
export const GetEventOrganizesDocument = gql`
  query GetEventOrganizes($where: EventOrganizeBoolExp, $orderBy: [EventOrganizeOrderBy!], $limit: Int, $offset: Int) {
    eventOrganize(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      event {
        __typename
        id
        name
        state
        start
        end
        maxParticipants
        slug
        banner {
          __typename
          id
          url
        }
        eventApprovals {
          __typename
          id
          createdAt
          isApproved
          message
          eventApprovalStep {
            __typename
            id
            createdAt
            name
            description
            order
            nextSteps {
              __typename
              id
              createdAt
              name
              description
              order
            }
            previousStep {
              __typename
              id
              createdAt
              name
              description
              order
            }
          }
          createdBy {
            __typename
            id
            createdAt
            firstName
            lastName
            slug
            actor {
              __typename
              id
              createdAt
              email
              name
              website
              avatar
              banner
              type
            }
          }
        }
        approvalSubmission {
          __typename
          id
          createdAt
          submission
        }
        nextApprovalStep {
          __typename
          id
          createdAt
          name
          description
          order
          nextSteps {
            __typename
            id
            createdAt
            name
            description
            order
          }
          previousStep {
            __typename
            id
            createdAt
            name
            description
            order
          }
        }
      }
      eventSupervisors {
        __typename
        id
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            website
            avatar
            banner
            bio
            status
            type
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
        }
      }
      team {
        __typename
        id
        type
        slug
        actor {
          __typename
          id
          name
          website
          avatar
          banner
          type
        }
        joinForm {
          __typename
          id
          schema
        }
      }
      project {
        __typename
        id
        createdAt
        name
        slug
        color
        isPrivate
      }
    }
    event {
      __typename
      id
      createdAt
      slug
      start
      end
      maxParticipants
      name
      state
      price
      pointsAwardedForAttendance
      isPrivate
      description
      location {
        __typename
        id
        type
        link
        name
        details
        address {
          __typename
          name
          latitude
          longitude
          category
          streetNumber
          street
          zip
          city
          state
          country
          geoapifyId
        }
      }
      banner {
        __typename
        id
        url
        type
      }
      eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
        aggregate {
          count
        }
      }
      eventJoins(where: { state: { _eq: "Approved" } }, limit: 12) {
        __typename
        id
        createdAt
        state
        isPresent
        joinedBy {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            website
            avatar
            banner
            bio
            status
            type
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetEventOrganizesQuery__
 *
 * To run a query within a React component, call `useGetEventOrganizesQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetEventOrganizesQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetEventOrganizesQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetEventOrganizesQuery(
  baseOptions?: Apollo.QueryHookOptions<GetEventOrganizesQuery, GetEventOrganizesQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetEventOrganizesQuery, GetEventOrganizesQueryVariables>(GetEventOrganizesDocument, options);
}
export function useGetEventOrganizesLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetEventOrganizesQuery, GetEventOrganizesQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetEventOrganizesQuery, GetEventOrganizesQueryVariables>(
    GetEventOrganizesDocument,
    options,
  );
}
export type GetEventOrganizesQueryHookResult = ReturnType<typeof useGetEventOrganizesQuery>;
export type GetEventOrganizesLazyQueryHookResult = ReturnType<typeof useGetEventOrganizesLazyQuery>;
export type GetEventOrganizesQueryResult = Apollo.QueryResult<GetEventOrganizesQuery, GetEventOrganizesQueryVariables>;
export const GetTransactionsDocument = gql`
  query GetTransactions($where: TransactionBoolExp, $orderBy: [TransactionOrderBy!], $limit: Int, $offset: Int) {
    transaction(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      createdAt
      amount
      type
      description
      method
      payedAt
      processedByType
      processedBy {
        __typename
        id
        slug
        actor {
          __typename
          id
          name
          email
          website
          avatar
          banner
          type
        }
      }
      payedBy {
        __typename
        id
        name
        email
        website
        avatar
        banner
        team {
          __typename
          id
          slug
        }
        user {
          __typename
          id
          slug
        }
      }
      receivedBy {
        __typename
        id
        name
        email
        website
        avatar
        banner
        team {
          __typename
          id
          slug
        }
        user {
          __typename
          id
          slug
        }
      }
      createdBy {
        __typename
        id
        slug
        actor {
          __typename
          id
          name
          email
          website
          avatar
          banner
          type
        }
      }
      event {
        __typename
        id
        slug
        name
      }
      project {
        __typename
        id
        slug
        name
      }
      transactionAttachments {
        attachment {
          __typename
          id
          name
          size
          type
          url
        }
      }
    }
  }
`;

/**
 * __useGetTransactionsQuery__
 *
 * To run a query within a React component, call `useGetTransactionsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTransactionsQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetTransactionsQuery(
  baseOptions?: Apollo.QueryHookOptions<GetTransactionsQuery, GetTransactionsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTransactionsQuery, GetTransactionsQueryVariables>(GetTransactionsDocument, options);
}
export function useGetTransactionsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTransactionsQuery, GetTransactionsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTransactionsQuery, GetTransactionsQueryVariables>(GetTransactionsDocument, options);
}
export type GetTransactionsQueryHookResult = ReturnType<typeof useGetTransactionsQuery>;
export type GetTransactionsLazyQueryHookResult = ReturnType<typeof useGetTransactionsLazyQuery>;
export type GetTransactionsQueryResult = Apollo.QueryResult<GetTransactionsQuery, GetTransactionsQueryVariables>;
export const GetTenantManageDocument = gql`
  query GetTenantManage($domain: String!) {
    tenant(where: { domain: { _eq: $domain } }) {
      __typename
      id
      domain
      pointName
      actor {
        __typename
        id
        name
        avatar
        banner
        bio
        email
        website
        status
        type
      }
      eventValidationForm {
        __typename
        id
        schema
      }
      eventApprovalSteps {
        __typename
        id
        name
        order
      }
      requiredDocuments {
        __typename
        id
        name
        description
        teamTypes
        isRequired
      }
      requiredRoles {
        __typename
        id
        name
        description
        teamTypes
        isRequired
      }
    }
  }
`;

/**
 * __useGetTenantManageQuery__
 *
 * To run a query within a React component, call `useGetTenantManageQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTenantManageQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTenantManageQuery({
 *   variables: {
 *      domain: // value for 'domain'
 *   },
 * });
 */
export function useGetTenantManageQuery(
  baseOptions: Apollo.QueryHookOptions<GetTenantManageQuery, GetTenantManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTenantManageQuery, GetTenantManageQueryVariables>(GetTenantManageDocument, options);
}
export function useGetTenantManageLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTenantManageQuery, GetTenantManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTenantManageQuery, GetTenantManageQueryVariables>(GetTenantManageDocument, options);
}
export type GetTenantManageQueryHookResult = ReturnType<typeof useGetTenantManageQuery>;
export type GetTenantManageLazyQueryHookResult = ReturnType<typeof useGetTenantManageLazyQuery>;
export type GetTenantManageQueryResult = Apollo.QueryResult<GetTenantManageQuery, GetTenantManageQueryVariables>;
export const GetTeamDashboardDocument = gql`
  query GetTeamDashboard {
    team(where: { type: { _in: ["Association", "Club"] } }, orderBy: { actor: { name: ASC } }) {
      __typename
      id
      createdAt
      type
      directorsCategoryName
      managersCategoryName
      membersCategoryName
      slug
      teamDocuments {
        __typename
        id
        name
        fileUpload {
          __typename
          id
          name
          size
          type
          url
        }
      }
      actor {
        __typename
        id
        createdAt
        email
        name
        website
        avatar
        banner
        bio
        status
        type
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      joinForm {
        __typename
        id
        schema
      }
      teamMembersAggregate {
        aggregate {
          count
        }
      }
      teamRoles(where: { deletedAt: { _isNull: false } }) {
        __typename
        id
        createdAt
        color
        type
        name
        canViewTreasury
        canManageTreasury
        canManageProfile
        canViewJoins
        canManageJoins
        canManageMemberRoles
        canManageRoles
        canCreateEvents
        canManageEvents
        canViewDraftEvents
        canCreateActions
        canManageActions
        canCreateContents
        canManageContents
      }
      teamMembers(
        where: {
          teamMemberRoles: { teamRole: { type: { _in: ["President", "Treasurer", "Secretary"] } } }
          deletedAt: { _isNull: true }
        }
      ) {
        __typename
        id
        createdAt
        teamMemberRoles {
          __typename
          id
          teamRole {
            __typename
            id
            createdAt
            color
            type
            name
            canViewTreasury
            canManageTreasury
            canManageProfile
            canViewJoins
            canManageJoins
            canManageMemberRoles
            canManageRoles
            canCreateEvents
            canManageEvents
            canViewDraftEvents
            canCreateActions
            canManageActions
            canCreateContents
            canManageContents
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            bio
            status
            website
            avatar
            banner
            type
          }
        }
      }
      membershipDuration
      membershipFees
      isJoinFormActive
      bankAccounts {
        __typename
        id
        createdAt
        transactionsAggregate {
          aggregate {
            sum {
              amount
            }
          }
        }
        bankInfo {
          __typename
          id
          createdAt
          bicSwift
          iban
          branchAddress {
            __typename
            latitude
            longitude
            category
            name
            streetNumber
            street
            zip
            city
            state
            country
            geoapifyId
          }
          bank {
            __typename
            id
            type
            legalName
            actor {
              __typename
              id
              createdAt
              website
              name
              type
            }
          }
        }
        name
        team {
          __typename
          id
          createdAt
          type
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            website
            avatar
            banner
            type
          }
        }
        type
        childrenAccounts {
          __typename
          id
          createdAt
          transactionsAggregate {
            aggregate {
              sum {
                amount
              }
            }
          }
          name
          type
          bankInfo {
            __typename
            id
            createdAt
            bicSwift
            iban
            branchAddress {
              __typename
              latitude
              longitude
              category
              name
              streetNumber
              street
              zip
              city
              state
              country
              geoapifyId
            }
            bank {
              __typename
              id
              type
              legalName
              actor {
                __typename
                id
                createdAt
                website
                name
                type
              }
            }
          }
          team {
            __typename
            id
            createdAt
            type
            slug
            actor {
              __typename
              id
              createdAt
              email
              name
              website
              avatar
              banner
              type
            }
          }
        }
        parent {
          __typename
          id
          createdAt
          name
          type
          transactionsAggregate {
            aggregate {
              sum {
                amount
              }
            }
          }
          bankInfo {
            __typename
            id
            createdAt
            bicSwift
            iban
            branchAddress {
              __typename
              latitude
              longitude
              category
              name
              streetNumber
              street
              zip
              city
              state
              country
              geoapifyId
            }
            bank {
              __typename
              id
              type
              legalName
              actor {
                __typename
                id
                createdAt
                website
                name
                type
              }
            }
          }
          team {
            __typename
            id
            createdAt
            type
            slug
            actor {
              __typename
              id
              createdAt
              email
              name
              website
              avatar
              banner
              type
            }
          }
        }
      }
      teamHistories(where: { type: { _in: ["OkampusStart", "ExtraordinaryAssembly", "RegularAssembly", "Restart"] } }) {
        __typename
        id
        createdAt
        happenedAt
      }
      childrenTeams {
        __typename
        id
        createdAt
        type
        slug
        actor {
          __typename
          id
          createdAt
          email
          name
          website
          avatar
          banner
          type
        }
      }
    }
  }
`;

/**
 * __useGetTeamDashboardQuery__
 *
 * To run a query within a React component, call `useGetTeamDashboardQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTeamDashboardQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTeamDashboardQuery({
 *   variables: {
 *   },
 * });
 */
export function useGetTeamDashboardQuery(
  baseOptions?: Apollo.QueryHookOptions<GetTeamDashboardQuery, GetTeamDashboardQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTeamDashboardQuery, GetTeamDashboardQueryVariables>(GetTeamDashboardDocument, options);
}
export function useGetTeamDashboardLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTeamDashboardQuery, GetTeamDashboardQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTeamDashboardQuery, GetTeamDashboardQueryVariables>(GetTeamDashboardDocument, options);
}
export type GetTeamDashboardQueryHookResult = ReturnType<typeof useGetTeamDashboardQuery>;
export type GetTeamDashboardLazyQueryHookResult = ReturnType<typeof useGetTeamDashboardLazyQuery>;
export type GetTeamDashboardQueryResult = Apollo.QueryResult<GetTeamDashboardQuery, GetTeamDashboardQueryVariables>;
export const GetEventsValidationDocument = gql`
  query GetEventsValidation($where: EventBoolExp, $orderBy: [EventOrderBy!], $limit: Int, $offset: Int) {
    event(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      createdAt
      slug
      start
      end
      maxParticipants
      name
      state
      price
      pointsAwardedForAttendance
      isPrivate
      description
      location {
        __typename
        id
        type
        link
        name
        details
        address {
          __typename
          name
          latitude
          longitude
          category
          streetNumber
          street
          zip
          city
          state
          country
          geoapifyId
        }
      }
      banner {
        __typename
        id
        url
        type
      }
      nextApprovalStep {
        __typename
        id
        createdAt
        name
        description
        order
        nextSteps {
          __typename
          id
          createdAt
          name
          description
          order
        }
        previousStep {
          __typename
          id
          createdAt
          name
          description
          order
        }
      }
      approvalSubmission {
        __typename
        id
        createdAt
        submission
        form {
          __typename
          id
          schema
        }
      }
      eventApprovals {
        __typename
        id
        createdAt
        isApproved
        message
        eventApprovalStep {
          __typename
          id
          createdAt
          name
          description
          order
          nextSteps {
            __typename
            id
            createdAt
            name
            description
            order
          }
          previousStep {
            __typename
            id
            createdAt
            name
            description
            order
          }
        }
        createdBy {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            website
            avatar
            banner
            type
          }
        }
      }
      eventOrganizes {
        __typename
        id
        eventSupervisors {
          __typename
          id
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            slug
            actor {
              __typename
              id
              createdAt
              email
              name
              website
              avatar
              banner
              bio
              status
              type
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
        team {
          __typename
          id
          type
          slug
          actor {
            __typename
            id
            name
            email
            website
            avatar
            banner
            type
          }
          joinForm {
            __typename
            id
            schema
          }
          teamMembersAggregate {
            __typename
            aggregate {
              count
            }
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
      }
      eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
        aggregate {
          count
        }
      }
      eventJoins(where: { state: { _eq: "Approved" } }, limit: 12) {
        __typename
        id
        createdAt
        state
        isPresent
        joinedBy {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            website
            avatar
            banner
            bio
            status
            type
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
        }
        joinFormSubmission {
          __typename
          id
          createdAt
          submission
        }
        processedBy {
          __typename
          id
          createdAt
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            website
            avatar
            banner
            bio
            status
            type
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
        }
        processedAt
        participationProcessedVia
        participationProcessedAt
      }
      joinForm {
        __typename
        id
        schema
      }
    }
  }
`;

/**
 * __useGetEventsValidationQuery__
 *
 * To run a query within a React component, call `useGetEventsValidationQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetEventsValidationQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetEventsValidationQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetEventsValidationQuery(
  baseOptions?: Apollo.QueryHookOptions<GetEventsValidationQuery, GetEventsValidationQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetEventsValidationQuery, GetEventsValidationQueryVariables>(
    GetEventsValidationDocument,
    options,
  );
}
export function useGetEventsValidationLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetEventsValidationQuery, GetEventsValidationQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetEventsValidationQuery, GetEventsValidationQueryVariables>(
    GetEventsValidationDocument,
    options,
  );
}
export type GetEventsValidationQueryHookResult = ReturnType<typeof useGetEventsValidationQuery>;
export type GetEventsValidationLazyQueryHookResult = ReturnType<typeof useGetEventsValidationLazyQuery>;
export type GetEventsValidationQueryResult = Apollo.QueryResult<
  GetEventsValidationQuery,
  GetEventsValidationQueryVariables
>;
export const GetTenantUsersWithPointsDocument = gql`
  query GetTenantUsersWithPoints {
    user(
      where: {
        _or: [
          { actions: { processedAt: { _isNull: false } } }
          { eventJoins: { participationProcessedAt: { _isNull: false } } }
          { missionJoins: { pointsProcessedAt: { _isNull: false } } }
        ]
      }
    ) {
      __typename
      id
      createdAt
      firstName
      lastName
      slug
      actor {
        __typename
        id
        bio
        name
        email
        website
        avatar
        banner
        type
      }
      actions(where: { processedAt: { _isNull: false } }) {
        __typename
        id
        points
        processedAt
      }
      eventJoins(where: { participationProcessedAt: { _isNull: false } }) {
        __typename
        id
        processedAt
        event {
          __typename
          id
          slug
          pointsAwardedForAttendance
        }
      }
      missionJoins(where: { pointsProcessedAt: { _isNull: false } }) {
        __typename
        id
        points
        pointsProcessedAt
      }
    }
  }
`;

/**
 * __useGetTenantUsersWithPointsQuery__
 *
 * To run a query within a React component, call `useGetTenantUsersWithPointsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTenantUsersWithPointsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTenantUsersWithPointsQuery({
 *   variables: {
 *   },
 * });
 */
export function useGetTenantUsersWithPointsQuery(
  baseOptions?: Apollo.QueryHookOptions<GetTenantUsersWithPointsQuery, GetTenantUsersWithPointsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTenantUsersWithPointsQuery, GetTenantUsersWithPointsQueryVariables>(
    GetTenantUsersWithPointsDocument,
    options,
  );
}
export function useGetTenantUsersWithPointsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTenantUsersWithPointsQuery, GetTenantUsersWithPointsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTenantUsersWithPointsQuery, GetTenantUsersWithPointsQueryVariables>(
    GetTenantUsersWithPointsDocument,
    options,
  );
}
export type GetTenantUsersWithPointsQueryHookResult = ReturnType<typeof useGetTenantUsersWithPointsQuery>;
export type GetTenantUsersWithPointsLazyQueryHookResult = ReturnType<typeof useGetTenantUsersWithPointsLazyQuery>;
export type GetTenantUsersWithPointsQueryResult = Apollo.QueryResult<
  GetTenantUsersWithPointsQuery,
  GetTenantUsersWithPointsQueryVariables
>;
export const GetProjectDocument = gql`
  query GetProject($slug: String!) {
    project(where: { slug: { _eq: $slug } }, limit: 1) {
      __typename
      id
      createdAt
      slug
      start
      end
      name
      isPrivate
      banner {
        __typename
        id
        url
        type
      }
      team {
        __typename
        id
        type
        slug
        actor {
          __typename
          id
          avatar
          banner
          type
        }
      }
      eventOrganizes {
        __typename
        id
        event {
          __typename
          id
          slug
          name
        }
        eventSupervisors {
          __typename
          id
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            slug
            actor {
              __typename
              id
              createdAt
              email
              name
              website
              avatar
              banner
              bio
              status
              type
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
        team {
          __typename
          id
          type
          slug
          actor {
            __typename
            id
            name
            website
            avatar
            banner
            type
          }
          joinForm {
            __typename
            id
            schema
          }
          teamMembersAggregate {
            __typename
            aggregate {
              count
            }
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
      }
    }
  }
`;

/**
 * __useGetProjectQuery__
 *
 * To run a query within a React component, call `useGetProjectQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetProjectQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetProjectQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetProjectQuery(baseOptions: Apollo.QueryHookOptions<GetProjectQuery, GetProjectQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetProjectQuery, GetProjectQueryVariables>(GetProjectDocument, options);
}
export function useGetProjectLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetProjectQuery, GetProjectQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetProjectQuery, GetProjectQueryVariables>(GetProjectDocument, options);
}
export type GetProjectQueryHookResult = ReturnType<typeof useGetProjectQuery>;
export type GetProjectLazyQueryHookResult = ReturnType<typeof useGetProjectLazyQuery>;
export type GetProjectQueryResult = Apollo.QueryResult<GetProjectQuery, GetProjectQueryVariables>;
export const GetTeamDocument = gql`
  query GetTeam($slug: String!) {
    team(where: { slug: { _eq: $slug } }, limit: 1) {
      __typename
      id
      createdAt
      type
      directorsCategoryName
      managersCategoryName
      membersCategoryName
      membershipFees
      membershipDuration
      slug
      actor {
        __typename
        id
        bio
        name
        status
        email
        website
        avatar
        banner
        type
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      joinForm {
        __typename
        id
        schema
      }
      parent {
        __typename
        id
        type
        slug
        actor {
          __typename
          id
          createdAt
          email
          name
          website
          avatar
          banner
          type
        }
      }
      teamRoles {
        __typename
        id
        createdAt
        color
        type
        name
        canViewTreasury
        canManageTreasury
        canManageProfile
        canViewJoins
        canManageJoins
        canManageMemberRoles
        canManageRoles
        canCreateEvents
        canManageEvents
        canViewDraftEvents
        canCreateActions
        canManageActions
        canCreateContents
        canManageContents
      }
      teamMembers {
        __typename
        id
        createdAt
        teamMemberRoles {
          __typename
          id
          teamRole {
            __typename
            id
            createdAt
            color
            type
            name
            canViewTreasury
            canManageTreasury
            canManageProfile
            canViewJoins
            canManageJoins
            canManageMemberRoles
            canManageRoles
            canCreateEvents
            canManageEvents
            canViewDraftEvents
            canCreateActions
            canManageActions
            canCreateContents
            canManageContents
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            website
            avatar
            banner
            bio
            status
            type
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetTeamQuery__
 *
 * To run a query within a React component, call `useGetTeamQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTeamQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTeamQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetTeamQuery(baseOptions: Apollo.QueryHookOptions<GetTeamQuery, GetTeamQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTeamQuery, GetTeamQueryVariables>(GetTeamDocument, options);
}
export function useGetTeamLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetTeamQuery, GetTeamQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTeamQuery, GetTeamQueryVariables>(GetTeamDocument, options);
}
export type GetTeamQueryHookResult = ReturnType<typeof useGetTeamQuery>;
export type GetTeamLazyQueryHookResult = ReturnType<typeof useGetTeamLazyQuery>;
export type GetTeamQueryResult = Apollo.QueryResult<GetTeamQuery, GetTeamQueryVariables>;
export const InsertTeamJoinDocument = gql`
  mutation InsertTeamJoin($object: TeamJoinInsertInput!) {
    insertTeamJoinOne(object: $object) {
      __typename
      id
      createdAt
      state
      team {
        __typename
        id
        createdAt
        type
        slug
        actor {
          __typename
          id
          createdAt
          email
          name
          website
          avatar
          banner
          type
        }
      }
    }
  }
`;
export type InsertTeamJoinMutationFn = Apollo.MutationFunction<InsertTeamJoinMutation, InsertTeamJoinMutationVariables>;

/**
 * __useInsertTeamJoinMutation__
 *
 * To run a mutation, you first call `useInsertTeamJoinMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertTeamJoinMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertTeamJoinMutation, { data, loading, error }] = useInsertTeamJoinMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertTeamJoinMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertTeamJoinMutation, InsertTeamJoinMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertTeamJoinMutation, InsertTeamJoinMutationVariables>(InsertTeamJoinDocument, options);
}
export type InsertTeamJoinMutationHookResult = ReturnType<typeof useInsertTeamJoinMutation>;
export type InsertTeamJoinMutationResult = Apollo.MutationResult<InsertTeamJoinMutation>;
export type InsertTeamJoinMutationOptions = Apollo.BaseMutationOptions<
  InsertTeamJoinMutation,
  InsertTeamJoinMutationVariables
>;
export const GetTeamsDocument = gql`
  query GetTeams($where: TeamBoolExp, $orderBy: [TeamOrderBy!], $limit: Int, $offset: Int) {
    team(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      createdAt
      type
      slug
      directorsCategoryName
      managersCategoryName
      membersCategoryName
      membershipFees
      membershipDuration
      actor {
        __typename
        id
        status
        bio
        name
        email
        website
        avatar
        banner
        type
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      joinForm {
        __typename
        id
        schema
      }
      parent {
        __typename
        id
        type
        slug
        actor {
          __typename
          id
          createdAt
          email
          name
          website
          avatar
          banner
          type
        }
      }
      teamRoles {
        __typename
        id
        createdAt
        color
        type
        name
        canViewTreasury
        canManageTreasury
        canManageProfile
        canViewJoins
        canManageJoins
        canManageMemberRoles
        canManageRoles
        canCreateEvents
        canManageEvents
        canViewDraftEvents
        canCreateActions
        canManageActions
        canCreateContents
        canManageContents
      }
      teamMembersAggregate {
        aggregate {
          count
        }
      }
      teamMembers {
        __typename
        id
        createdAt
        teamMemberRoles {
          __typename
          id
          teamRole {
            __typename
            id
            createdAt
            color
            type
            name
            canViewTreasury
            canManageTreasury
            canManageProfile
            canViewJoins
            canManageJoins
            canManageMemberRoles
            canManageRoles
            canCreateEvents
            canManageEvents
            canViewDraftEvents
            canCreateActions
            canManageActions
            canCreateContents
            canManageContents
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            createdAt
            email
            name
            website
            avatar
            banner
            bio
            status
            type
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetTeamsQuery__
 *
 * To run a query within a React component, call `useGetTeamsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTeamsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTeamsQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetTeamsQuery(baseOptions?: Apollo.QueryHookOptions<GetTeamsQuery, GetTeamsQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTeamsQuery, GetTeamsQueryVariables>(GetTeamsDocument, options);
}
export function useGetTeamsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetTeamsQuery, GetTeamsQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTeamsQuery, GetTeamsQueryVariables>(GetTeamsDocument, options);
}
export type GetTeamsQueryHookResult = ReturnType<typeof useGetTeamsQuery>;
export type GetTeamsLazyQueryHookResult = ReturnType<typeof useGetTeamsLazyQuery>;
export type GetTeamsQueryResult = Apollo.QueryResult<GetTeamsQuery, GetTeamsQueryVariables>;
export const GetCategoriesDocument = gql`
  query GetCategories($where: TagBoolExp, $orderBy: [TagOrderBy!], $limit: Int, $offset: Int) {
    tag(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      id
      name
      slug
      color
      icon {
        id
        name
        url
      }
    }
  }
`;

/**
 * __useGetCategoriesQuery__
 *
 * To run a query within a React component, call `useGetCategoriesQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetCategoriesQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetCategoriesQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetCategoriesQuery(
  baseOptions?: Apollo.QueryHookOptions<GetCategoriesQuery, GetCategoriesQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetCategoriesQuery, GetCategoriesQueryVariables>(GetCategoriesDocument, options);
}
export function useGetCategoriesLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetCategoriesQuery, GetCategoriesQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetCategoriesQuery, GetCategoriesQueryVariables>(GetCategoriesDocument, options);
}
export type GetCategoriesQueryHookResult = ReturnType<typeof useGetCategoriesQuery>;
export type GetCategoriesLazyQueryHookResult = ReturnType<typeof useGetCategoriesLazyQuery>;
export type GetCategoriesQueryResult = Apollo.QueryResult<GetCategoriesQuery, GetCategoriesQueryVariables>;
export const GetUserDocument = gql`
  query GetUser($slug: String!) {
    user(where: { slug: { _eq: $slug } }, limit: 1) {
      __typename
      id
      createdAt
      firstName
      lastName
      slug
      actor {
        __typename
        id
        status
        bio
        name
        email
        website
        avatar
        banner
        type
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      teamMemberships(where: { deletedAt: { _isNull: true } }) {
        __typename
        id
        team {
          __typename
          id
          type
          slug
          actor {
            __typename
            id
            avatar
            banner
            type
          }
        }
      }
    }
  }
`;

/**
 * __useGetUserQuery__
 *
 * To run a query within a React component, call `useGetUserQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetUserQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetUserQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetUserQuery(baseOptions: Apollo.QueryHookOptions<GetUserQuery, GetUserQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetUserQuery, GetUserQueryVariables>(GetUserDocument, options);
}
export function useGetUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetUserQuery, GetUserQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetUserQuery, GetUserQueryVariables>(GetUserDocument, options);
}
export type GetUserQueryHookResult = ReturnType<typeof useGetUserQuery>;
export type GetUserLazyQueryHookResult = ReturnType<typeof useGetUserLazyQuery>;
export type GetUserQueryResult = Apollo.QueryResult<GetUserQuery, GetUserQueryVariables>;
export const GetUsersDocument = gql`
  query GetUsers($where: UserBoolExp, $orderBy: [UserOrderBy!], $limit: Int, $offset: Int) {
    user(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      createdAt
      firstName
      lastName
      slug
      actor {
        __typename
        id
        name
        email
        website
        avatar
        banner
        type
      }
      teamMemberships(where: { deletedAt: { _isNull: true } }) {
        __typename
        id
        team {
          __typename
          id
          type
          slug
          actor {
            __typename
            id
            avatar
            banner
            type
          }
        }
      }
    }
  }
`;

/**
 * __useGetUsersQuery__
 *
 * To run a query within a React component, call `useGetUsersQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetUsersQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetUsersQuery(baseOptions?: Apollo.QueryHookOptions<GetUsersQuery, GetUsersQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetUsersQuery, GetUsersQueryVariables>(GetUsersDocument, options);
}
export function useGetUsersLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetUsersQuery, GetUsersQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetUsersQuery, GetUsersQueryVariables>(GetUsersDocument, options);
}
export type GetUsersQueryHookResult = ReturnType<typeof useGetUsersQuery>;
export type GetUsersLazyQueryHookResult = ReturnType<typeof useGetUsersLazyQuery>;
export type GetUsersQueryResult = Apollo.QueryResult<GetUsersQuery, GetUsersQueryVariables>;
export const InsertEventApprovalDocument = gql`
  mutation InsertEventApproval($object: EventApprovalInsertInput!) {
    insertEventApprovalOne(object: $object) {
      __typename
      id
      createdAt
      isApproved
      message
      eventApprovalStep {
        __typename
        id
        createdAt
        name
        description
        order
        nextSteps {
          __typename
          id
          createdAt
          name
          description
          order
        }
        previousStep {
          __typename
          id
          createdAt
          name
          description
          order
        }
      }
      createdBy {
        __typename
        id
        createdAt
        firstName
        lastName
        slug
        actor {
          __typename
          id
          createdAt
          email
          name
          website
          avatar
          banner
          type
        }
      }
    }
  }
`;
export type InsertEventApprovalMutationFn = Apollo.MutationFunction<
  InsertEventApprovalMutation,
  InsertEventApprovalMutationVariables
>;

/**
 * __useInsertEventApprovalMutation__
 *
 * To run a mutation, you first call `useInsertEventApprovalMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertEventApprovalMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertEventApprovalMutation, { data, loading, error }] = useInsertEventApprovalMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertEventApprovalMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertEventApprovalMutation, InsertEventApprovalMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertEventApprovalMutation, InsertEventApprovalMutationVariables>(
    InsertEventApprovalDocument,
    options,
  );
}
export type InsertEventApprovalMutationHookResult = ReturnType<typeof useInsertEventApprovalMutation>;
export type InsertEventApprovalMutationResult = Apollo.MutationResult<InsertEventApprovalMutation>;
export type InsertEventApprovalMutationOptions = Apollo.BaseMutationOptions<
  InsertEventApprovalMutation,
  InsertEventApprovalMutationVariables
>;
export const GetProjectsSelectDocument = gql`
  query GetProjectsSelect($slug: String!) {
    project(where: { team: { slug: { _eq: $slug } } }) {
      __typename
      id
      createdAt
      slug
      start
      end
      name
      isPrivate
      banner {
        __typename
        id
        url
        type
      }
      eventOrganizes {
        __typename
        id
        event {
          __typename
          id
          name
          slug
          banner {
            __typename
            id
            url
          }
        }
      }
    }
  }
`;

/**
 * __useGetProjectsSelectQuery__
 *
 * To run a query within a React component, call `useGetProjectsSelectQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetProjectsSelectQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetProjectsSelectQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetProjectsSelectQuery(
  baseOptions: Apollo.QueryHookOptions<GetProjectsSelectQuery, GetProjectsSelectQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetProjectsSelectQuery, GetProjectsSelectQueryVariables>(GetProjectsSelectDocument, options);
}
export function useGetProjectsSelectLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetProjectsSelectQuery, GetProjectsSelectQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetProjectsSelectQuery, GetProjectsSelectQueryVariables>(
    GetProjectsSelectDocument,
    options,
  );
}
export type GetProjectsSelectQueryHookResult = ReturnType<typeof useGetProjectsSelectQuery>;
export type GetProjectsSelectLazyQueryHookResult = ReturnType<typeof useGetProjectsSelectLazyQuery>;
export type GetProjectsSelectQueryResult = Apollo.QueryResult<GetProjectsSelectQuery, GetProjectsSelectQueryVariables>;
export const GetTenantEventApprovalDetailsDocument = gql`
  query GetTenantEventApprovalDetails($domain: String!) {
    tenant(where: { domain: { _eq: $domain } }) {
      __typename
      id
      eventValidationForm {
        __typename
        id
        schema
      }
      eventApprovalSteps {
        __typename
        id
        name
        order
      }
    }
  }
`;

/**
 * __useGetTenantEventApprovalDetailsQuery__
 *
 * To run a query within a React component, call `useGetTenantEventApprovalDetailsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTenantEventApprovalDetailsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTenantEventApprovalDetailsQuery({
 *   variables: {
 *      domain: // value for 'domain'
 *   },
 * });
 */
export function useGetTenantEventApprovalDetailsQuery(
  baseOptions: Apollo.QueryHookOptions<GetTenantEventApprovalDetailsQuery, GetTenantEventApprovalDetailsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTenantEventApprovalDetailsQuery, GetTenantEventApprovalDetailsQueryVariables>(
    GetTenantEventApprovalDetailsDocument,
    options,
  );
}
export function useGetTenantEventApprovalDetailsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<
    GetTenantEventApprovalDetailsQuery,
    GetTenantEventApprovalDetailsQueryVariables
  >,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTenantEventApprovalDetailsQuery, GetTenantEventApprovalDetailsQueryVariables>(
    GetTenantEventApprovalDetailsDocument,
    options,
  );
}
export type GetTenantEventApprovalDetailsQueryHookResult = ReturnType<typeof useGetTenantEventApprovalDetailsQuery>;
export type GetTenantEventApprovalDetailsLazyQueryHookResult = ReturnType<
  typeof useGetTenantEventApprovalDetailsLazyQuery
>;
export type GetTenantEventApprovalDetailsQueryResult = Apollo.QueryResult<
  GetTenantEventApprovalDetailsQuery,
  GetTenantEventApprovalDetailsQueryVariables
>;
export const InsertEventDocument = gql`
  mutation InsertEvent($object: EventInsertInput!) {
    insertEventOne(object: $object) {
      __typename
      id
      createdAt
      slug
      start
      end
      maxParticipants
      name
      state
      price
      pointsAwardedForAttendance
      isPrivate
      description
      location {
        __typename
        id
        type
        link
        name
        details
        address {
          __typename
          name
          latitude
          longitude
          category
          streetNumber
          street
          zip
          city
          state
          country
          geoapifyId
        }
      }
      banner {
        __typename
        id
        url
        type
      }
      eventOrganizes {
        __typename
        id
        eventSupervisors {
          __typename
          id
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            slug
            actor {
              __typename
              id
              createdAt
              email
              name
              website
              avatar
              banner
              bio
              status
              type
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
        team {
          __typename
          id
          type
          slug
          actor {
            __typename
            id
            name
            email
            website
            avatar
            banner
            type
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
          joinForm {
            __typename
            id
            schema
          }
          teamMembersAggregate {
            __typename
            aggregate {
              count
            }
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
      }
      eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
        aggregate {
          count
        }
      }
      eventJoins(where: { state: { _eq: "Approved" } }, limit: 12) {
        __typename
        id
        createdAt
        state
        isPresent
        processedAt
        participationProcessedVia
        participationProcessedAt
        processedBy {
          __typename
          id
          createdAt
          slug
          actor {
            __typename
            id
            bio
            name
            email
            status
            website
            avatar
            banner
            type
          }
        }
        joinedBy {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            bio
            name
            email
            website
            status
            avatar
            banner
            type
          }
        }
      }
      joinForm {
        __typename
        id
        schema
      }
    }
  }
`;
export type InsertEventMutationFn = Apollo.MutationFunction<InsertEventMutation, InsertEventMutationVariables>;

/**
 * __useInsertEventMutation__
 *
 * To run a mutation, you first call `useInsertEventMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertEventMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertEventMutation, { data, loading, error }] = useInsertEventMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertEventMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertEventMutation, InsertEventMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertEventMutation, InsertEventMutationVariables>(InsertEventDocument, options);
}
export type InsertEventMutationHookResult = ReturnType<typeof useInsertEventMutation>;
export type InsertEventMutationResult = Apollo.MutationResult<InsertEventMutation>;
export type InsertEventMutationOptions = Apollo.BaseMutationOptions<InsertEventMutation, InsertEventMutationVariables>;
export const InsertTransactionDocument = gql`
  mutation InsertTransaction($object: TransactionInsertInput!) {
    insertTransactionOne(object: $object) {
      __typename
      id
      createdAt
      amount
      description
      method
      payedAt
      type
      processedByType
      processedBy {
        __typename
        id
        slug
        actor {
          __typename
          id
          name
          email
          website
          avatar
          banner
          type
        }
      }
      payedBy {
        __typename
        id
        name
        email
        website
        avatar
        banner
        team {
          __typename
          id
          slug
        }
        user {
          __typename
          id
          slug
        }
      }
      receivedBy {
        __typename
        id
        name
        email
        website
        avatar
        banner
        team {
          __typename
          id
          slug
        }
        user {
          __typename
          id
          slug
        }
      }
      createdBy {
        __typename
        id
        slug
        actor {
          __typename
          id
          name
          email
          website
          avatar
          banner
          type
        }
      }
      event {
        __typename
        id
        slug
        name
      }
      project {
        __typename
        id
        slug
        name
      }
      transactionAttachments {
        attachment {
          __typename
          id
          name
          size
          type
          url
        }
      }
    }
  }
`;
export type InsertTransactionMutationFn = Apollo.MutationFunction<
  InsertTransactionMutation,
  InsertTransactionMutationVariables
>;

/**
 * __useInsertTransactionMutation__
 *
 * To run a mutation, you first call `useInsertTransactionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertTransactionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertTransactionMutation, { data, loading, error }] = useInsertTransactionMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertTransactionMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertTransactionMutation, InsertTransactionMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertTransactionMutation, InsertTransactionMutationVariables>(
    InsertTransactionDocument,
    options,
  );
}
export type InsertTransactionMutationHookResult = ReturnType<typeof useInsertTransactionMutation>;
export type InsertTransactionMutationResult = Apollo.MutationResult<InsertTransactionMutation>;
export type InsertTransactionMutationOptions = Apollo.BaseMutationOptions<
  InsertTransactionMutation,
  InsertTransactionMutationVariables
>;
export const UpdateTransactionDocument = gql`
  mutation UpdateTransaction($id: bigint!, $update: TransactionSetInput!) {
    updateTransactionByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      createdAt
      amount
      type
      description
      method
      payedAt
      processedByType
      processedBy {
        __typename
        id
        slug
        actor {
          __typename
          id
          name
          email
          website
          avatar
          banner
          type
        }
      }
      payedBy {
        __typename
        id
        name
        email
        website
        avatar
        banner
        team {
          __typename
          id
          slug
        }
        user {
          __typename
          id
          slug
        }
      }
      receivedBy {
        __typename
        id
        name
        email
        website
        avatar
        banner
        team {
          __typename
          id
          slug
        }
        user {
          __typename
          id
          slug
        }
      }
      createdBy {
        __typename
        id
        slug
        actor {
          __typename
          id
          name
          email
          website
          avatar
          banner
          type
        }
      }
      event {
        __typename
        id
        slug
        name
      }
      project {
        __typename
        id
        slug
        name
      }
      transactionAttachments {
        attachment {
          __typename
          id
          name
          size
          type
          url
        }
      }
    }
  }
`;
export type UpdateTransactionMutationFn = Apollo.MutationFunction<
  UpdateTransactionMutation,
  UpdateTransactionMutationVariables
>;

/**
 * __useUpdateTransactionMutation__
 *
 * To run a mutation, you first call `useUpdateTransactionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateTransactionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateTransactionMutation, { data, loading, error }] = useUpdateTransactionMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateTransactionMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateTransactionMutation, UpdateTransactionMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateTransactionMutation, UpdateTransactionMutationVariables>(
    UpdateTransactionDocument,
    options,
  );
}
export type UpdateTransactionMutationHookResult = ReturnType<typeof useUpdateTransactionMutation>;
export type UpdateTransactionMutationResult = Apollo.MutationResult<UpdateTransactionMutation>;
export type UpdateTransactionMutationOptions = Apollo.BaseMutationOptions<
  UpdateTransactionMutation,
  UpdateTransactionMutationVariables
>;
export const DeleteFollowDocument = gql`
  mutation DeleteFollow($id: bigint!) {
    deleteFollowByPk(id: $id) {
      __typename
      id
      deletedAt
      actor {
        __typename
        id
        email
        name
        website
        type
        team {
          __typename
          id
          slug
        }
        user {
          __typename
          id
          slug
        }
      }
    }
  }
`;
export type DeleteFollowMutationFn = Apollo.MutationFunction<DeleteFollowMutation, DeleteFollowMutationVariables>;

/**
 * __useDeleteFollowMutation__
 *
 * To run a mutation, you first call `useDeleteFollowMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteFollowMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteFollowMutation, { data, loading, error }] = useDeleteFollowMutation({
 *   variables: {
 *      id: // value for 'id'
 *   },
 * });
 */
export function useDeleteFollowMutation(
  baseOptions?: Apollo.MutationHookOptions<DeleteFollowMutation, DeleteFollowMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<DeleteFollowMutation, DeleteFollowMutationVariables>(DeleteFollowDocument, options);
}
export type DeleteFollowMutationHookResult = ReturnType<typeof useDeleteFollowMutation>;
export type DeleteFollowMutationResult = Apollo.MutationResult<DeleteFollowMutation>;
export type DeleteFollowMutationOptions = Apollo.BaseMutationOptions<
  DeleteFollowMutation,
  DeleteFollowMutationVariables
>;
export const InsertFollowDocument = gql`
  mutation InsertFollow($object: FollowInsertInput!) {
    insertFollowOne(object: $object) {
      __typename
      id
      actor {
        __typename
        id
        email
        name
        website
        avatar
        banner
        type
        team {
          __typename
          id
          slug
        }
      }
      createdBy {
        __typename
        id
        createdAt
        firstName
        lastName
        slug
        actor {
          __typename
          id
          createdAt
          email
          name
          type
          website
        }
      }
    }
  }
`;
export type InsertFollowMutationFn = Apollo.MutationFunction<InsertFollowMutation, InsertFollowMutationVariables>;

/**
 * __useInsertFollowMutation__
 *
 * To run a mutation, you first call `useInsertFollowMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertFollowMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertFollowMutation, { data, loading, error }] = useInsertFollowMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertFollowMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertFollowMutation, InsertFollowMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertFollowMutation, InsertFollowMutationVariables>(InsertFollowDocument, options);
}
export type InsertFollowMutationHookResult = ReturnType<typeof useInsertFollowMutation>;
export type InsertFollowMutationResult = Apollo.MutationResult<InsertFollowMutation>;
export type InsertFollowMutationOptions = Apollo.BaseMutationOptions<
  InsertFollowMutation,
  InsertFollowMutationVariables
>;
export const InsertFileUploadDocument = gql`
  mutation InsertFileUpload($object: FileUploadInsertInput!) {
    insertFileUploadOne(object: $object) {
      __typename
      id
      name
      url
      createdAt
      size
      type
    }
  }
`;
export type InsertFileUploadMutationFn = Apollo.MutationFunction<
  InsertFileUploadMutation,
  InsertFileUploadMutationVariables
>;

/**
 * __useInsertFileUploadMutation__
 *
 * To run a mutation, you first call `useInsertFileUploadMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertFileUploadMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertFileUploadMutation, { data, loading, error }] = useInsertFileUploadMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertFileUploadMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertFileUploadMutation, InsertFileUploadMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertFileUploadMutation, InsertFileUploadMutationVariables>(
    InsertFileUploadDocument,
    options,
  );
}
export type InsertFileUploadMutationHookResult = ReturnType<typeof useInsertFileUploadMutation>;
export type InsertFileUploadMutationResult = Apollo.MutationResult<InsertFileUploadMutation>;
export type InsertFileUploadMutationOptions = Apollo.BaseMutationOptions<
  InsertFileUploadMutation,
  InsertFileUploadMutationVariables
>;
export const GetLegalUnitsDocument = gql`
  query GetLegalUnits($where: LegalUnitBoolExp, $orderBy: [LegalUnitOrderBy!], $limit: Int, $offset: Int) {
    legalUnit(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      createdAt
      type
      legalName
      slug
      actor {
        __typename
        id
        name
        email
        website
        avatar
        banner
        type
      }
    }
  }
`;

/**
 * __useGetLegalUnitsQuery__
 *
 * To run a query within a React component, call `useGetLegalUnitsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetLegalUnitsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetLegalUnitsQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetLegalUnitsQuery(
  baseOptions?: Apollo.QueryHookOptions<GetLegalUnitsQuery, GetLegalUnitsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetLegalUnitsQuery, GetLegalUnitsQueryVariables>(GetLegalUnitsDocument, options);
}
export function useGetLegalUnitsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetLegalUnitsQuery, GetLegalUnitsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetLegalUnitsQuery, GetLegalUnitsQueryVariables>(GetLegalUnitsDocument, options);
}
export type GetLegalUnitsQueryHookResult = ReturnType<typeof useGetLegalUnitsQuery>;
export type GetLegalUnitsLazyQueryHookResult = ReturnType<typeof useGetLegalUnitsLazyQuery>;
export type GetLegalUnitsQueryResult = Apollo.QueryResult<GetLegalUnitsQuery, GetLegalUnitsQueryVariables>;
export const InsertLegalUnitDocument = gql`
  mutation InsertLegalUnit($object: LegalUnitInsertInput!) {
    insertLegalUnitOne(object: $object) {
      __typename
      id
      createdAt
      type
      legalName
      slug
      actor {
        __typename
        id
        name
        email
        website
        avatar
        banner
        type
      }
    }
  }
`;
export type InsertLegalUnitMutationFn = Apollo.MutationFunction<
  InsertLegalUnitMutation,
  InsertLegalUnitMutationVariables
>;

/**
 * __useInsertLegalUnitMutation__
 *
 * To run a mutation, you first call `useInsertLegalUnitMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertLegalUnitMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertLegalUnitMutation, { data, loading, error }] = useInsertLegalUnitMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertLegalUnitMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertLegalUnitMutation, InsertLegalUnitMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertLegalUnitMutation, InsertLegalUnitMutationVariables>(
    InsertLegalUnitDocument,
    options,
  );
}
export type InsertLegalUnitMutationHookResult = ReturnType<typeof useInsertLegalUnitMutation>;
export type InsertLegalUnitMutationResult = Apollo.MutationResult<InsertLegalUnitMutation>;
export type InsertLegalUnitMutationOptions = Apollo.BaseMutationOptions<
  InsertLegalUnitMutation,
  InsertLegalUnitMutationVariables
>;
export const GetTeamPopoverDocument = gql`
  query GetTeamPopover($id: bigint!) {
    team(where: { id: { _eq: $id } }, limit: 1) {
      __typename
      id
      createdAt
      type
      membershipFees
      membershipDuration
      slug
      actor {
        __typename
        id
        bio
        name
        status
        email
        website
        avatar
        banner
        type
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      directorsCategoryName
      managersCategoryName
      membersCategoryName
      joinForm {
        __typename
        id
        schema
      }
      teamMembers {
        __typename
        id
        createdAt
        teamMemberRoles {
          __typename
          id
          teamRole {
            __typename
            id
            createdAt
            color
            type
            name
            canViewTreasury
            canManageTreasury
            canManageProfile
            canViewJoins
            canManageJoins
            canManageMemberRoles
            canManageRoles
            canCreateEvents
            canManageEvents
            canViewDraftEvents
            canCreateActions
            canManageActions
            canCreateContents
            canManageContents
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          slug
          actor {
            __typename
            id
            createdAt
            bio
            email
            name
            status
            website
            avatar
            banner
            type
          }
        }
      }
    }
  }
`;

/**
 * __useGetTeamPopoverQuery__
 *
 * To run a query within a React component, call `useGetTeamPopoverQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTeamPopoverQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTeamPopoverQuery({
 *   variables: {
 *      id: // value for 'id'
 *   },
 * });
 */
export function useGetTeamPopoverQuery(
  baseOptions: Apollo.QueryHookOptions<GetTeamPopoverQuery, GetTeamPopoverQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTeamPopoverQuery, GetTeamPopoverQueryVariables>(GetTeamPopoverDocument, options);
}
export function useGetTeamPopoverLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTeamPopoverQuery, GetTeamPopoverQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTeamPopoverQuery, GetTeamPopoverQueryVariables>(GetTeamPopoverDocument, options);
}
export type GetTeamPopoverQueryHookResult = ReturnType<typeof useGetTeamPopoverQuery>;
export type GetTeamPopoverLazyQueryHookResult = ReturnType<typeof useGetTeamPopoverLazyQuery>;
export type GetTeamPopoverQueryResult = Apollo.QueryResult<GetTeamPopoverQuery, GetTeamPopoverQueryVariables>;
export const GetUserPopoverDocument = gql`
  query GetUserPopover($id: bigint!) {
    userByPk(id: $id) {
      __typename
      id
      createdAt
      firstName
      lastName
      slug
      actor {
        __typename
        id
        bio
        name
        email
        website
        avatar
        banner
      }
      teamMemberships(where: { deletedAt: { _isNull: true } }) {
        __typename
        id
        team {
          __typename
          id
          type
          slug
          actor {
            __typename
            id
            avatar
            banner
            type
          }
        }
      }
    }
  }
`;

/**
 * __useGetUserPopoverQuery__
 *
 * To run a query within a React component, call `useGetUserPopoverQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetUserPopoverQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetUserPopoverQuery({
 *   variables: {
 *      id: // value for 'id'
 *   },
 * });
 */
export function useGetUserPopoverQuery(
  baseOptions: Apollo.QueryHookOptions<GetUserPopoverQuery, GetUserPopoverQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetUserPopoverQuery, GetUserPopoverQueryVariables>(GetUserPopoverDocument, options);
}
export function useGetUserPopoverLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetUserPopoverQuery, GetUserPopoverQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetUserPopoverQuery, GetUserPopoverQueryVariables>(GetUserPopoverDocument, options);
}
export type GetUserPopoverQueryHookResult = ReturnType<typeof useGetUserPopoverQuery>;
export type GetUserPopoverLazyQueryHookResult = ReturnType<typeof useGetUserPopoverLazyQuery>;
export type GetUserPopoverQueryResult = Apollo.QueryResult<GetUserPopoverQuery, GetUserPopoverQueryVariables>;
export const UpdateFormDocument = gql`
  mutation UpdateForm($id: bigint!, $update: FormSetInput!) {
    updateFormByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      schema
    }
  }
`;
export type UpdateFormMutationFn = Apollo.MutationFunction<UpdateFormMutation, UpdateFormMutationVariables>;

/**
 * __useUpdateFormMutation__
 *
 * To run a mutation, you first call `useUpdateFormMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateFormMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateFormMutation, { data, loading, error }] = useUpdateFormMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateFormMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateFormMutation, UpdateFormMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateFormMutation, UpdateFormMutationVariables>(UpdateFormDocument, options);
}
export type UpdateFormMutationHookResult = ReturnType<typeof useUpdateFormMutation>;
export type UpdateFormMutationResult = Apollo.MutationResult<UpdateFormMutation>;
export type UpdateFormMutationOptions = Apollo.BaseMutationOptions<UpdateFormMutation, UpdateFormMutationVariables>;
export const InsertRequiredDocumentDocument = gql`
  mutation InsertRequiredDocument($object: RequiredDocumentInsertInput!) {
    insertRequiredDocumentOne(object: $object) {
      __typename
      id
      createdAt
      name
      description
      teamTypes
    }
  }
`;
export type InsertRequiredDocumentMutationFn = Apollo.MutationFunction<
  InsertRequiredDocumentMutation,
  InsertRequiredDocumentMutationVariables
>;

/**
 * __useInsertRequiredDocumentMutation__
 *
 * To run a mutation, you first call `useInsertRequiredDocumentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertRequiredDocumentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertRequiredDocumentMutation, { data, loading, error }] = useInsertRequiredDocumentMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertRequiredDocumentMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertRequiredDocumentMutation, InsertRequiredDocumentMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertRequiredDocumentMutation, InsertRequiredDocumentMutationVariables>(
    InsertRequiredDocumentDocument,
    options,
  );
}
export type InsertRequiredDocumentMutationHookResult = ReturnType<typeof useInsertRequiredDocumentMutation>;
export type InsertRequiredDocumentMutationResult = Apollo.MutationResult<InsertRequiredDocumentMutation>;
export type InsertRequiredDocumentMutationOptions = Apollo.BaseMutationOptions<
  InsertRequiredDocumentMutation,
  InsertRequiredDocumentMutationVariables
>;
export const UpdateRequiredDocumentDocument = gql`
  mutation UpdateRequiredDocument($id: bigint!, $update: RequiredDocumentSetInput!) {
    updateRequiredDocumentByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      createdAt
      name
      description
      teamTypes
    }
  }
`;
export type UpdateRequiredDocumentMutationFn = Apollo.MutationFunction<
  UpdateRequiredDocumentMutation,
  UpdateRequiredDocumentMutationVariables
>;

/**
 * __useUpdateRequiredDocumentMutation__
 *
 * To run a mutation, you first call `useUpdateRequiredDocumentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateRequiredDocumentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateRequiredDocumentMutation, { data, loading, error }] = useUpdateRequiredDocumentMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateRequiredDocumentMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateRequiredDocumentMutation, UpdateRequiredDocumentMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateRequiredDocumentMutation, UpdateRequiredDocumentMutationVariables>(
    UpdateRequiredDocumentDocument,
    options,
  );
}
export type UpdateRequiredDocumentMutationHookResult = ReturnType<typeof useUpdateRequiredDocumentMutation>;
export type UpdateRequiredDocumentMutationResult = Apollo.MutationResult<UpdateRequiredDocumentMutation>;
export type UpdateRequiredDocumentMutationOptions = Apollo.BaseMutationOptions<
  UpdateRequiredDocumentMutation,
  UpdateRequiredDocumentMutationVariables
>;
