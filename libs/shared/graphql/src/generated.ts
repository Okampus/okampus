import { gql } from '@apollo/client';
import * as Apollo from '@apollo/client';
import type { JSONType } from '@okampus/shared/types';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
const defaultOptions = {} as const;
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string };
  String: { input: string; output: string };
  Boolean: { input: boolean; output: boolean };
  Int: { input: number; output: number };
  Float: { input: number; output: number };
  Upload: { input: File; output: File };
  bigint: { input: string; output: string };
  jsonb: { input: JSONType; output: JSONType };
  smallint: { input: number; output: number };
  timestamptz: { input: string; output: string };
};

export type Account = {
  __typename?: 'Account';
  bank?: Maybe<Bank>;
  bankId?: Maybe<Scalars['bigint']['output']>;
  children: Array<Account>;
  childrenAggregate: AccountAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  finances: Array<Finance>;
  financesAggregate: FinanceAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  individual?: Maybe<Individual>;
  name: Scalars['String']['output'];
  parent?: Maybe<Account>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
};

export type AccountChildrenArgs = {
  distinctOn?: InputMaybe<Array<AccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountOrderBy>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type AccountChildrenAggregateArgs = {
  distinctOn?: InputMaybe<Array<AccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountOrderBy>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type AccountFinancesArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type AccountFinancesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type AccountAggregate = {
  __typename?: 'AccountAggregate';
  aggregate?: Maybe<AccountAggregateFields>;
  nodes: Array<Account>;
};

export type AccountAggregateBoolExp = {
  count?: InputMaybe<AccountAggregateBoolExpCount>;
};

export type AccountAggregateFields = {
  __typename?: 'AccountAggregateFields';
  avg?: Maybe<AccountAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<AccountMaxFields>;
  min?: Maybe<AccountMinFields>;
  stddev?: Maybe<AccountStddevFields>;
  stddevPop?: Maybe<AccountStddevPopFields>;
  stddevSamp?: Maybe<AccountStddevSampFields>;
  sum?: Maybe<AccountSumFields>;
  varPop?: Maybe<AccountVarPopFields>;
  varSamp?: Maybe<AccountVarSampFields>;
  variance?: Maybe<AccountVarianceFields>;
};

export type AccountAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<AccountSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AccountAggregateOrderBy = {
  avg?: InputMaybe<AccountAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<AccountMaxOrderBy>;
  min?: InputMaybe<AccountMinOrderBy>;
  stddev?: InputMaybe<AccountStddevOrderBy>;
  stddevPop?: InputMaybe<AccountStddevPopOrderBy>;
  stddevSamp?: InputMaybe<AccountStddevSampOrderBy>;
  sum?: InputMaybe<AccountSumOrderBy>;
  varPop?: InputMaybe<AccountVarPopOrderBy>;
  varSamp?: InputMaybe<AccountVarSampOrderBy>;
  variance?: InputMaybe<AccountVarianceOrderBy>;
};

export type AccountArrRelInsertInput = {
  data: Array<AccountInsertInput>;
  onConflict?: InputMaybe<AccountOnConflict>;
};

export type AccountAvgFields = {
  __typename?: 'AccountAvgFields';
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type AccountAvgOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type AccountBoolExp = {
  _and?: InputMaybe<Array<AccountBoolExp>>;
  _not?: InputMaybe<AccountBoolExp>;
  _or?: InputMaybe<Array<AccountBoolExp>>;
  bank?: InputMaybe<BankBoolExp>;
  bankId?: InputMaybe<BigintComparisonExp>;
  children?: InputMaybe<AccountBoolExp>;
  childrenAggregate?: InputMaybe<AccountAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  finances?: InputMaybe<FinanceBoolExp>;
  financesAggregate?: InputMaybe<FinanceAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  individual?: InputMaybe<IndividualBoolExp>;
  name?: InputMaybe<StringComparisonExp>;
  parent?: InputMaybe<AccountBoolExp>;
  parentId?: InputMaybe<BigintComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
};

export enum AccountConstraint {
  AccountPkey = 'account_pkey',
}

export type AccountIncInput = {
  bankId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type AccountInsertInput = {
  bank?: InputMaybe<BankObjRelInsertInput>;
  bankId?: InputMaybe<Scalars['bigint']['input']>;
  children?: InputMaybe<AccountArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  finances?: InputMaybe<FinanceArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individual?: InputMaybe<IndividualObjRelInsertInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  parent?: InputMaybe<AccountObjRelInsertInput>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type AccountMaxFields = {
  __typename?: 'AccountMaxFields';
  bankId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type AccountMaxOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type AccountMinFields = {
  __typename?: 'AccountMinFields';
  bankId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type AccountMinOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type AccountMutationResponse = {
  __typename?: 'AccountMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Account>;
};

export type AccountObjRelInsertInput = {
  data: AccountInsertInput;
  onConflict?: InputMaybe<AccountOnConflict>;
};

export type AccountOnConflict = {
  constraint: AccountConstraint;
  updateColumns?: Array<AccountUpdateColumn>;
  where?: InputMaybe<AccountBoolExp>;
};

export type AccountOrderBy = {
  bank?: InputMaybe<BankOrderBy>;
  bankId?: InputMaybe<OrderBy>;
  childrenAggregate?: InputMaybe<AccountAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  financesAggregate?: InputMaybe<FinanceAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individual?: InputMaybe<IndividualOrderBy>;
  name?: InputMaybe<OrderBy>;
  parent?: InputMaybe<AccountOrderBy>;
  parentId?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type AccountPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum AccountSelectColumn {
  BankId = 'bankId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  ParentId = 'parentId',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  Type = 'type',
}

export type AccountSetInput = {
  bankId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type AccountStddevFields = {
  __typename?: 'AccountStddevFields';
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type AccountStddevOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type AccountStddevPopFields = {
  __typename?: 'AccountStddevPopFields';
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type AccountStddevPopOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type AccountStddevSampFields = {
  __typename?: 'AccountStddevSampFields';
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type AccountStddevSampOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type AccountStreamCursorInput = {
  initialValue: AccountStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type AccountStreamCursorValueInput = {
  bankId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type AccountSumFields = {
  __typename?: 'AccountSumFields';
  bankId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type AccountSumOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum AccountUpdateColumn {
  BankId = 'bankId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  ParentId = 'parentId',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  Type = 'type',
}

export type AccountUpdates = {
  _inc?: InputMaybe<AccountIncInput>;
  _set?: InputMaybe<AccountSetInput>;
  where: AccountBoolExp;
};

export type AccountVarPopFields = {
  __typename?: 'AccountVarPopFields';
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type AccountVarPopOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type AccountVarSampFields = {
  __typename?: 'AccountVarSampFields';
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type AccountVarSampOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type AccountVarianceFields = {
  __typename?: 'AccountVarianceFields';
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type AccountVarianceOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Action = {
  __typename?: 'Action';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  eventJoin?: Maybe<EventJoin>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  points?: Maybe<Scalars['smallint']['output']>;
  pointsProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  pointsProcessedBy?: Maybe<Individual>;
  pointsProcessedById?: Maybe<Scalars['bigint']['output']>;
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  state: Scalars['String']['output'];
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  user: User;
  userId: Scalars['bigint']['output'];
};

export type ActionAggregate = {
  __typename?: 'ActionAggregate';
  aggregate?: Maybe<ActionAggregateFields>;
  nodes: Array<Action>;
};

export type ActionAggregateBoolExp = {
  count?: InputMaybe<ActionAggregateBoolExpCount>;
};

export type ActionAggregateFields = {
  __typename?: 'ActionAggregateFields';
  avg?: Maybe<ActionAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ActionMaxFields>;
  min?: Maybe<ActionMinFields>;
  stddev?: Maybe<ActionStddevFields>;
  stddevPop?: Maybe<ActionStddevPopFields>;
  stddevSamp?: Maybe<ActionStddevSampFields>;
  sum?: Maybe<ActionSumFields>;
  varPop?: Maybe<ActionVarPopFields>;
  varSamp?: Maybe<ActionVarSampFields>;
  variance?: Maybe<ActionVarianceFields>;
};

export type ActionAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ActionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ActionAggregateOrderBy = {
  avg?: InputMaybe<ActionAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ActionMaxOrderBy>;
  min?: InputMaybe<ActionMinOrderBy>;
  stddev?: InputMaybe<ActionStddevOrderBy>;
  stddevPop?: InputMaybe<ActionStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ActionStddevSampOrderBy>;
  sum?: InputMaybe<ActionSumOrderBy>;
  varPop?: InputMaybe<ActionVarPopOrderBy>;
  varSamp?: InputMaybe<ActionVarSampOrderBy>;
  variance?: InputMaybe<ActionVarianceOrderBy>;
};

export type ActionArrRelInsertInput = {
  data: Array<ActionInsertInput>;
  onConflict?: InputMaybe<ActionOnConflict>;
};

export type ActionAvgFields = {
  __typename?: 'ActionAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ActionAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionBoolExp = {
  _and?: InputMaybe<Array<ActionBoolExp>>;
  _not?: InputMaybe<ActionBoolExp>;
  _or?: InputMaybe<Array<ActionBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  eventJoin?: InputMaybe<EventJoinBoolExp>;
  eventJoinId?: InputMaybe<BigintComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  points?: InputMaybe<SmallintComparisonExp>;
  pointsProcessedAt?: InputMaybe<TimestamptzComparisonExp>;
  pointsProcessedBy?: InputMaybe<IndividualBoolExp>;
  pointsProcessedById?: InputMaybe<BigintComparisonExp>;
  project?: InputMaybe<ProjectBoolExp>;
  projectId?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<StringComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
  userId?: InputMaybe<BigintComparisonExp>;
};

export enum ActionConstraint {
  ActionPkey = 'action_pkey',
}

export type ActionIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  pointsProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActionInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventJoin?: InputMaybe<EventJoinObjRelInsertInput>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  pointsProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  pointsProcessedBy?: InputMaybe<IndividualObjRelInsertInput>;
  pointsProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<ProjectObjRelInsertInput>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActionMaxFields = {
  __typename?: 'ActionMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  points?: Maybe<Scalars['smallint']['output']>;
  pointsProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  pointsProcessedById?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ActionMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedAt?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionMinFields = {
  __typename?: 'ActionMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  points?: Maybe<Scalars['smallint']['output']>;
  pointsProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  pointsProcessedById?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ActionMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedAt?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionMutationResponse = {
  __typename?: 'ActionMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Action>;
};

export type ActionOnConflict = {
  constraint: ActionConstraint;
  updateColumns?: Array<ActionUpdateColumn>;
  where?: InputMaybe<ActionBoolExp>;
};

export type ActionOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventJoin?: InputMaybe<EventJoinOrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedAt?: InputMaybe<OrderBy>;
  pointsProcessedBy?: InputMaybe<IndividualOrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  project?: InputMaybe<ProjectOrderBy>;
  projectId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ActionSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventJoinId = 'eventJoinId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  Points = 'points',
  PointsProcessedAt = 'pointsProcessedAt',
  PointsProcessedById = 'pointsProcessedById',
  ProjectId = 'projectId',
  State = 'state',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  UserId = 'userId',
}

export type ActionSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  pointsProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  pointsProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActionStddevFields = {
  __typename?: 'ActionStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ActionStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionStddevPopFields = {
  __typename?: 'ActionStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ActionStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionStddevSampFields = {
  __typename?: 'ActionStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ActionStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionStreamCursorInput = {
  initialValue: ActionStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ActionStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  pointsProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  pointsProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActionSumFields = {
  __typename?: 'ActionSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  points?: Maybe<Scalars['smallint']['output']>;
  pointsProcessedById?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ActionSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum ActionUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventJoinId = 'eventJoinId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  Points = 'points',
  PointsProcessedAt = 'pointsProcessedAt',
  PointsProcessedById = 'pointsProcessedById',
  ProjectId = 'projectId',
  State = 'state',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  UserId = 'userId',
}

export type ActionUpdates = {
  _inc?: InputMaybe<ActionIncInput>;
  _set?: InputMaybe<ActionSetInput>;
  where: ActionBoolExp;
};

export type ActionVarPopFields = {
  __typename?: 'ActionVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ActionVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionVarSampFields = {
  __typename?: 'ActionVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ActionVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ActionVarianceFields = {
  __typename?: 'ActionVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ActionVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type Actor = {
  __typename?: 'Actor';
  actorImages: Array<ActorImage>;
  actorImagesAggregate: ActorImageAggregate;
  actorTags: Array<ActorTags>;
  actorTagsAggregate: ActorTagsAggregate;
  banks: Array<Bank>;
  banksAggregate: BankAggregate;
  bio: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  email: Scalars['String']['output'];
  followers: Array<Follow>;
  followersAggregate: FollowAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  ical: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  individual?: Maybe<Individual>;
  legalUnit?: Maybe<LegalUnit>;
  legalUnitLocation?: Maybe<LegalUnitLocation>;
  locations: Array<Location>;
  locationsAggregate: LocationAggregate;
  name: Scalars['String']['output'];
  ownedBots: Array<Bot>;
  ownedBotsAggregate: BotAggregate;
  payedFinances: Array<Finance>;
  payedFinancesAggregate: FinanceAggregate;
  receivedFinances: Array<Finance>;
  receivedFinancesAggregate: FinanceAggregate;
  reports: Array<Report>;
  reportsAggregate: ReportAggregate;
  shortcuts: Array<Shortcut>;
  shortcutsAggregate: ShortcutAggregate;
  slug: Scalars['String']['output'];
  socials: Array<Social>;
  socialsAggregate: SocialAggregate;
  status: Scalars['String']['output'];
  team?: Maybe<Team>;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  website: Scalars['String']['output'];
};

export type ActorActorImagesArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type ActorActorImagesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type ActorActorTagsArgs = {
  distinctOn?: InputMaybe<Array<ActorTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagsOrderBy>>;
  where?: InputMaybe<ActorTagsBoolExp>;
};

export type ActorActorTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagsOrderBy>>;
  where?: InputMaybe<ActorTagsBoolExp>;
};

export type ActorBanksArgs = {
  distinctOn?: InputMaybe<Array<BankSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankOrderBy>>;
  where?: InputMaybe<BankBoolExp>;
};

export type ActorBanksAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankOrderBy>>;
  where?: InputMaybe<BankBoolExp>;
};

export type ActorFollowersArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type ActorFollowersAggregateArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type ActorLocationsArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type ActorLocationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type ActorOwnedBotsArgs = {
  distinctOn?: InputMaybe<Array<BotSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BotOrderBy>>;
  where?: InputMaybe<BotBoolExp>;
};

export type ActorOwnedBotsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BotSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BotOrderBy>>;
  where?: InputMaybe<BotBoolExp>;
};

export type ActorPayedFinancesArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type ActorPayedFinancesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type ActorReceivedFinancesArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type ActorReceivedFinancesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type ActorReportsArgs = {
  distinctOn?: InputMaybe<Array<ReportSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReportOrderBy>>;
  where?: InputMaybe<ReportBoolExp>;
};

export type ActorReportsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ReportSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReportOrderBy>>;
  where?: InputMaybe<ReportBoolExp>;
};

export type ActorShortcutsArgs = {
  distinctOn?: InputMaybe<Array<ShortcutSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ShortcutOrderBy>>;
  where?: InputMaybe<ShortcutBoolExp>;
};

export type ActorShortcutsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ShortcutSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ShortcutOrderBy>>;
  where?: InputMaybe<ShortcutBoolExp>;
};

export type ActorSocialsArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type ActorSocialsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type ActorAggregate = {
  __typename?: 'ActorAggregate';
  aggregate?: Maybe<ActorAggregateFields>;
  nodes: Array<Actor>;
};

export type ActorAggregateBoolExp = {
  count?: InputMaybe<ActorAggregateBoolExpCount>;
};

export type ActorAggregateFields = {
  __typename?: 'ActorAggregateFields';
  avg?: Maybe<ActorAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ActorMaxFields>;
  min?: Maybe<ActorMinFields>;
  stddev?: Maybe<ActorStddevFields>;
  stddevPop?: Maybe<ActorStddevPopFields>;
  stddevSamp?: Maybe<ActorStddevSampFields>;
  sum?: Maybe<ActorSumFields>;
  varPop?: Maybe<ActorVarPopFields>;
  varSamp?: Maybe<ActorVarSampFields>;
  variance?: Maybe<ActorVarianceFields>;
};

export type ActorAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ActorSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ActorAggregateOrderBy = {
  avg?: InputMaybe<ActorAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ActorMaxOrderBy>;
  min?: InputMaybe<ActorMinOrderBy>;
  stddev?: InputMaybe<ActorStddevOrderBy>;
  stddevPop?: InputMaybe<ActorStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ActorStddevSampOrderBy>;
  sum?: InputMaybe<ActorSumOrderBy>;
  varPop?: InputMaybe<ActorVarPopOrderBy>;
  varSamp?: InputMaybe<ActorVarSampOrderBy>;
  variance?: InputMaybe<ActorVarianceOrderBy>;
};

export type ActorArrRelInsertInput = {
  data: Array<ActorInsertInput>;
  onConflict?: InputMaybe<ActorOnConflict>;
};

export type ActorAvgFields = {
  __typename?: 'ActorAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ActorAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ActorBoolExp = {
  _and?: InputMaybe<Array<ActorBoolExp>>;
  _not?: InputMaybe<ActorBoolExp>;
  _or?: InputMaybe<Array<ActorBoolExp>>;
  actorImages?: InputMaybe<ActorImageBoolExp>;
  actorImagesAggregate?: InputMaybe<ActorImageAggregateBoolExp>;
  actorTags?: InputMaybe<ActorTagsBoolExp>;
  actorTagsAggregate?: InputMaybe<ActorTagsAggregateBoolExp>;
  banks?: InputMaybe<BankBoolExp>;
  banksAggregate?: InputMaybe<BankAggregateBoolExp>;
  bio?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  email?: InputMaybe<StringComparisonExp>;
  followers?: InputMaybe<FollowBoolExp>;
  followersAggregate?: InputMaybe<FollowAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  ical?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  individual?: InputMaybe<IndividualBoolExp>;
  legalUnit?: InputMaybe<LegalUnitBoolExp>;
  legalUnitLocation?: InputMaybe<LegalUnitLocationBoolExp>;
  locations?: InputMaybe<LocationBoolExp>;
  locationsAggregate?: InputMaybe<LocationAggregateBoolExp>;
  name?: InputMaybe<StringComparisonExp>;
  ownedBots?: InputMaybe<BotBoolExp>;
  ownedBotsAggregate?: InputMaybe<BotAggregateBoolExp>;
  payedFinances?: InputMaybe<FinanceBoolExp>;
  payedFinancesAggregate?: InputMaybe<FinanceAggregateBoolExp>;
  receivedFinances?: InputMaybe<FinanceBoolExp>;
  receivedFinancesAggregate?: InputMaybe<FinanceAggregateBoolExp>;
  reports?: InputMaybe<ReportBoolExp>;
  reportsAggregate?: InputMaybe<ReportAggregateBoolExp>;
  shortcuts?: InputMaybe<ShortcutBoolExp>;
  shortcutsAggregate?: InputMaybe<ShortcutAggregateBoolExp>;
  slug?: InputMaybe<StringComparisonExp>;
  socials?: InputMaybe<SocialBoolExp>;
  socialsAggregate?: InputMaybe<SocialAggregateBoolExp>;
  status?: InputMaybe<StringComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  website?: InputMaybe<StringComparisonExp>;
};

export enum ActorConstraint {
  ActorIcalUnique = 'actor_ical_unique',
  ActorPkey = 'actor_pkey',
  ActorSlugUnique = 'actor_slug_unique',
}

export type ActorImage = {
  __typename?: 'ActorImage';
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  image: FileUpload;
  imageId: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
};

export type ActorImageAggregate = {
  __typename?: 'ActorImageAggregate';
  aggregate?: Maybe<ActorImageAggregateFields>;
  nodes: Array<ActorImage>;
};

export type ActorImageAggregateBoolExp = {
  count?: InputMaybe<ActorImageAggregateBoolExpCount>;
};

export type ActorImageAggregateFields = {
  __typename?: 'ActorImageAggregateFields';
  avg?: Maybe<ActorImageAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ActorImageMaxFields>;
  min?: Maybe<ActorImageMinFields>;
  stddev?: Maybe<ActorImageStddevFields>;
  stddevPop?: Maybe<ActorImageStddevPopFields>;
  stddevSamp?: Maybe<ActorImageStddevSampFields>;
  sum?: Maybe<ActorImageSumFields>;
  varPop?: Maybe<ActorImageVarPopFields>;
  varSamp?: Maybe<ActorImageVarSampFields>;
  variance?: Maybe<ActorImageVarianceFields>;
};

export type ActorImageAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ActorImageSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ActorImageAggregateOrderBy = {
  avg?: InputMaybe<ActorImageAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ActorImageMaxOrderBy>;
  min?: InputMaybe<ActorImageMinOrderBy>;
  stddev?: InputMaybe<ActorImageStddevOrderBy>;
  stddevPop?: InputMaybe<ActorImageStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ActorImageStddevSampOrderBy>;
  sum?: InputMaybe<ActorImageSumOrderBy>;
  varPop?: InputMaybe<ActorImageVarPopOrderBy>;
  varSamp?: InputMaybe<ActorImageVarSampOrderBy>;
  variance?: InputMaybe<ActorImageVarianceOrderBy>;
};

export type ActorImageArrRelInsertInput = {
  data: Array<ActorImageInsertInput>;
  onConflict?: InputMaybe<ActorImageOnConflict>;
};

export type ActorImageAvgFields = {
  __typename?: 'ActorImageAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ActorImageAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ActorImageBoolExp = {
  _and?: InputMaybe<Array<ActorImageBoolExp>>;
  _not?: InputMaybe<ActorImageBoolExp>;
  _or?: InputMaybe<Array<ActorImageBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  image?: InputMaybe<FileUploadBoolExp>;
  imageId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
};

export enum ActorImageConstraint {
  ActorImageImageIdUnique = 'actor_image_image_id_unique',
  ActorImagePkey = 'actor_image_pkey',
}

export type ActorImageIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  imageId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActorImageInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  image?: InputMaybe<FileUploadObjRelInsertInput>;
  imageId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ActorImageMaxFields = {
  __typename?: 'ActorImageMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  imageId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ActorImageMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ActorImageMinFields = {
  __typename?: 'ActorImageMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  imageId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ActorImageMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ActorImageMutationResponse = {
  __typename?: 'ActorImageMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ActorImage>;
};

export type ActorImageObjRelInsertInput = {
  data: ActorImageInsertInput;
  onConflict?: InputMaybe<ActorImageOnConflict>;
};

export type ActorImageOnConflict = {
  constraint: ActorImageConstraint;
  updateColumns?: Array<ActorImageUpdateColumn>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type ActorImageOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  image?: InputMaybe<FileUploadOrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ActorImagePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ActorImageSelectColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  ImageId = 'imageId',
  TenantId = 'tenantId',
  Type = 'type',
}

export type ActorImageSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  imageId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ActorImageStddevFields = {
  __typename?: 'ActorImageStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ActorImageStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ActorImageStddevPopFields = {
  __typename?: 'ActorImageStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ActorImageStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ActorImageStddevSampFields = {
  __typename?: 'ActorImageStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ActorImageStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ActorImageStreamCursorInput = {
  initialValue: ActorImageStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ActorImageStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  imageId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ActorImageSumFields = {
  __typename?: 'ActorImageSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  imageId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ActorImageSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum ActorImageUpdateColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  ImageId = 'imageId',
  TenantId = 'tenantId',
  Type = 'type',
}

export type ActorImageUpdates = {
  _inc?: InputMaybe<ActorImageIncInput>;
  _set?: InputMaybe<ActorImageSetInput>;
  where: ActorImageBoolExp;
};

export type ActorImageVarPopFields = {
  __typename?: 'ActorImageVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ActorImageVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ActorImageVarSampFields = {
  __typename?: 'ActorImageVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ActorImageVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ActorImageVarianceFields = {
  __typename?: 'ActorImageVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ActorImageVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ActorIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActorInsertInput = {
  actorImages?: InputMaybe<ActorImageArrRelInsertInput>;
  actorTags?: InputMaybe<ActorTagsArrRelInsertInput>;
  banks?: InputMaybe<BankArrRelInsertInput>;
  bio?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  followers?: InputMaybe<FollowArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  ical?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individual?: InputMaybe<IndividualObjRelInsertInput>;
  legalUnit?: InputMaybe<LegalUnitObjRelInsertInput>;
  legalUnitLocation?: InputMaybe<LegalUnitLocationObjRelInsertInput>;
  locations?: InputMaybe<LocationArrRelInsertInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  ownedBots?: InputMaybe<BotArrRelInsertInput>;
  payedFinances?: InputMaybe<FinanceArrRelInsertInput>;
  receivedFinances?: InputMaybe<FinanceArrRelInsertInput>;
  reports?: InputMaybe<ReportArrRelInsertInput>;
  shortcuts?: InputMaybe<ShortcutArrRelInsertInput>;
  slug?: InputMaybe<Scalars['String']['input']>;
  socials?: InputMaybe<SocialArrRelInsertInput>;
  status?: InputMaybe<Scalars['String']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

export type ActorMaxFields = {
  __typename?: 'ActorMaxFields';
  bio?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  ical?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  website?: Maybe<Scalars['String']['output']>;
};

export type ActorMaxOrderBy = {
  bio?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  email?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  ical?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  website?: InputMaybe<OrderBy>;
};

export type ActorMinFields = {
  __typename?: 'ActorMinFields';
  bio?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  ical?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  website?: Maybe<Scalars['String']['output']>;
};

export type ActorMinOrderBy = {
  bio?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  email?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  ical?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  website?: InputMaybe<OrderBy>;
};

export type ActorMutationResponse = {
  __typename?: 'ActorMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Actor>;
};

export type ActorObjRelInsertInput = {
  data: ActorInsertInput;
  onConflict?: InputMaybe<ActorOnConflict>;
};

export type ActorOnConflict = {
  constraint: ActorConstraint;
  updateColumns?: Array<ActorUpdateColumn>;
  where?: InputMaybe<ActorBoolExp>;
};

export type ActorOrderBy = {
  actorImagesAggregate?: InputMaybe<ActorImageAggregateOrderBy>;
  actorTagsAggregate?: InputMaybe<ActorTagsAggregateOrderBy>;
  banksAggregate?: InputMaybe<BankAggregateOrderBy>;
  bio?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  email?: InputMaybe<OrderBy>;
  followersAggregate?: InputMaybe<FollowAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  ical?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individual?: InputMaybe<IndividualOrderBy>;
  legalUnit?: InputMaybe<LegalUnitOrderBy>;
  legalUnitLocation?: InputMaybe<LegalUnitLocationOrderBy>;
  locationsAggregate?: InputMaybe<LocationAggregateOrderBy>;
  name?: InputMaybe<OrderBy>;
  ownedBotsAggregate?: InputMaybe<BotAggregateOrderBy>;
  payedFinancesAggregate?: InputMaybe<FinanceAggregateOrderBy>;
  receivedFinancesAggregate?: InputMaybe<FinanceAggregateOrderBy>;
  reportsAggregate?: InputMaybe<ReportAggregateOrderBy>;
  shortcutsAggregate?: InputMaybe<ShortcutAggregateOrderBy>;
  slug?: InputMaybe<OrderBy>;
  socialsAggregate?: InputMaybe<SocialAggregateOrderBy>;
  status?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  website?: InputMaybe<OrderBy>;
};

export type ActorPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ActorSelectColumn {
  Bio = 'bio',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Email = 'email',
  HiddenAt = 'hiddenAt',
  Ical = 'ical',
  Id = 'id',
  Name = 'name',
  Slug = 'slug',
  Status = 'status',
  TenantId = 'tenantId',
  Website = 'website',
}

export type ActorSetInput = {
  bio?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  ical?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

export type ActorStddevFields = {
  __typename?: 'ActorStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ActorStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ActorStddevPopFields = {
  __typename?: 'ActorStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ActorStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ActorStddevSampFields = {
  __typename?: 'ActorStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ActorStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ActorStreamCursorInput = {
  initialValue: ActorStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ActorStreamCursorValueInput = {
  bio?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  ical?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

export type ActorSumFields = {
  __typename?: 'ActorSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ActorSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ActorTags = {
  __typename?: 'ActorTags';
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  tag: Tag;
  tagId: Scalars['bigint']['output'];
};

export type ActorTagsAggregate = {
  __typename?: 'ActorTagsAggregate';
  aggregate?: Maybe<ActorTagsAggregateFields>;
  nodes: Array<ActorTags>;
};

export type ActorTagsAggregateBoolExp = {
  count?: InputMaybe<ActorTagsAggregateBoolExpCount>;
};

export type ActorTagsAggregateFields = {
  __typename?: 'ActorTagsAggregateFields';
  avg?: Maybe<ActorTagsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ActorTagsMaxFields>;
  min?: Maybe<ActorTagsMinFields>;
  stddev?: Maybe<ActorTagsStddevFields>;
  stddevPop?: Maybe<ActorTagsStddevPopFields>;
  stddevSamp?: Maybe<ActorTagsStddevSampFields>;
  sum?: Maybe<ActorTagsSumFields>;
  varPop?: Maybe<ActorTagsVarPopFields>;
  varSamp?: Maybe<ActorTagsVarSampFields>;
  variance?: Maybe<ActorTagsVarianceFields>;
};

export type ActorTagsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ActorTagsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ActorTagsAggregateOrderBy = {
  avg?: InputMaybe<ActorTagsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ActorTagsMaxOrderBy>;
  min?: InputMaybe<ActorTagsMinOrderBy>;
  stddev?: InputMaybe<ActorTagsStddevOrderBy>;
  stddevPop?: InputMaybe<ActorTagsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ActorTagsStddevSampOrderBy>;
  sum?: InputMaybe<ActorTagsSumOrderBy>;
  varPop?: InputMaybe<ActorTagsVarPopOrderBy>;
  varSamp?: InputMaybe<ActorTagsVarSampOrderBy>;
  variance?: InputMaybe<ActorTagsVarianceOrderBy>;
};

export type ActorTagsArrRelInsertInput = {
  data: Array<ActorTagsInsertInput>;
  onConflict?: InputMaybe<ActorTagsOnConflict>;
};

export type ActorTagsAvgFields = {
  __typename?: 'ActorTagsAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ActorTagsAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagsBoolExp = {
  _and?: InputMaybe<Array<ActorTagsBoolExp>>;
  _not?: InputMaybe<ActorTagsBoolExp>;
  _or?: InputMaybe<Array<ActorTagsBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  tag?: InputMaybe<TagBoolExp>;
  tagId?: InputMaybe<BigintComparisonExp>;
};

export enum ActorTagsConstraint {
  ActorTagsPkey = 'actor_tags_pkey',
}

export type ActorTagsIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActorTagsInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  tag?: InputMaybe<TagObjRelInsertInput>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActorTagsMaxFields = {
  __typename?: 'ActorTagsMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type ActorTagsMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagsMinFields = {
  __typename?: 'ActorTagsMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type ActorTagsMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagsMutationResponse = {
  __typename?: 'ActorTagsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ActorTags>;
};

export type ActorTagsOnConflict = {
  constraint: ActorTagsConstraint;
  updateColumns?: Array<ActorTagsUpdateColumn>;
  where?: InputMaybe<ActorTagsBoolExp>;
};

export type ActorTagsOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  tag?: InputMaybe<TagOrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagsPkColumnsInput = {
  actorId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export enum ActorTagsSelectColumn {
  ActorId = 'actorId',
  TagId = 'tagId',
}

export type ActorTagsSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActorTagsStddevFields = {
  __typename?: 'ActorTagsStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ActorTagsStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagsStddevPopFields = {
  __typename?: 'ActorTagsStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ActorTagsStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagsStddevSampFields = {
  __typename?: 'ActorTagsStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ActorTagsStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagsStreamCursorInput = {
  initialValue: ActorTagsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ActorTagsStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ActorTagsSumFields = {
  __typename?: 'ActorTagsSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type ActorTagsSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export enum ActorTagsUpdateColumn {
  ActorId = 'actorId',
  TagId = 'tagId',
}

export type ActorTagsUpdates = {
  _inc?: InputMaybe<ActorTagsIncInput>;
  _set?: InputMaybe<ActorTagsSetInput>;
  where: ActorTagsBoolExp;
};

export type ActorTagsVarPopFields = {
  __typename?: 'ActorTagsVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ActorTagsVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagsVarSampFields = {
  __typename?: 'ActorTagsVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ActorTagsVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ActorTagsVarianceFields = {
  __typename?: 'ActorTagsVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ActorTagsVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export enum ActorUpdateColumn {
  Bio = 'bio',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Email = 'email',
  HiddenAt = 'hiddenAt',
  Ical = 'ical',
  Id = 'id',
  Name = 'name',
  Slug = 'slug',
  Status = 'status',
  TenantId = 'tenantId',
  Website = 'website',
}

export type ActorUpdates = {
  _inc?: InputMaybe<ActorIncInput>;
  _set?: InputMaybe<ActorSetInput>;
  where: ActorBoolExp;
};

export type ActorVarPopFields = {
  __typename?: 'ActorVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ActorVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ActorVarSampFields = {
  __typename?: 'ActorVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ActorVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ActorVarianceFields = {
  __typename?: 'ActorVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ActorVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Address = {
  __typename?: 'Address';
  category: Scalars['String']['output'];
  city: Scalars['String']['output'];
  country: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  geoapifyId?: Maybe<Scalars['String']['output']>;
  id: Scalars['bigint']['output'];
  latitude?: Maybe<Scalars['Float']['output']>;
  locations: Array<Location>;
  locationsAggregate: LocationAggregate;
  longitude?: Maybe<Scalars['Float']['output']>;
  name: Scalars['String']['output'];
  state: Scalars['String']['output'];
  street: Scalars['String']['output'];
  streetNumber: Scalars['String']['output'];
  zip: Scalars['String']['output'];
};

export type AddressLocationsArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type AddressLocationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type AddressAggregate = {
  __typename?: 'AddressAggregate';
  aggregate?: Maybe<AddressAggregateFields>;
  nodes: Array<Address>;
};

export type AddressAggregateBoolExp = {
  count?: InputMaybe<AddressAggregateBoolExpCount>;
};

export type AddressAggregateFields = {
  __typename?: 'AddressAggregateFields';
  avg?: Maybe<AddressAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<AddressMaxFields>;
  min?: Maybe<AddressMinFields>;
  stddev?: Maybe<AddressStddevFields>;
  stddevPop?: Maybe<AddressStddevPopFields>;
  stddevSamp?: Maybe<AddressStddevSampFields>;
  sum?: Maybe<AddressSumFields>;
  varPop?: Maybe<AddressVarPopFields>;
  varSamp?: Maybe<AddressVarSampFields>;
  variance?: Maybe<AddressVarianceFields>;
};

export type AddressAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<AddressSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AddressAggregateOrderBy = {
  avg?: InputMaybe<AddressAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<AddressMaxOrderBy>;
  min?: InputMaybe<AddressMinOrderBy>;
  stddev?: InputMaybe<AddressStddevOrderBy>;
  stddevPop?: InputMaybe<AddressStddevPopOrderBy>;
  stddevSamp?: InputMaybe<AddressStddevSampOrderBy>;
  sum?: InputMaybe<AddressSumOrderBy>;
  varPop?: InputMaybe<AddressVarPopOrderBy>;
  varSamp?: InputMaybe<AddressVarSampOrderBy>;
  variance?: InputMaybe<AddressVarianceOrderBy>;
};

export type AddressArrRelInsertInput = {
  data: Array<AddressInsertInput>;
  onConflict?: InputMaybe<AddressOnConflict>;
};

export type AddressAvgFields = {
  __typename?: 'AddressAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AddressAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  latitude?: InputMaybe<OrderBy>;
  longitude?: InputMaybe<OrderBy>;
};

export type AddressBoolExp = {
  _and?: InputMaybe<Array<AddressBoolExp>>;
  _not?: InputMaybe<AddressBoolExp>;
  _or?: InputMaybe<Array<AddressBoolExp>>;
  category?: InputMaybe<StringComparisonExp>;
  city?: InputMaybe<StringComparisonExp>;
  country?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  geoapifyId?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  latitude?: InputMaybe<FloatComparisonExp>;
  locations?: InputMaybe<LocationBoolExp>;
  locationsAggregate?: InputMaybe<LocationAggregateBoolExp>;
  longitude?: InputMaybe<FloatComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  state?: InputMaybe<StringComparisonExp>;
  street?: InputMaybe<StringComparisonExp>;
  streetNumber?: InputMaybe<StringComparisonExp>;
  zip?: InputMaybe<StringComparisonExp>;
};

export enum AddressConstraint {
  AddressPkey = 'address_pkey',
}

export type AddressIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  latitude?: InputMaybe<Scalars['Float']['input']>;
  longitude?: InputMaybe<Scalars['Float']['input']>;
};

export type AddressInfo = {
  __typename?: 'AddressInfo';
  city: Scalars['String']['output'];
  cityCode: Scalars['String']['output'];
  streetName: Scalars['String']['output'];
  streetNumber?: Maybe<Scalars['Int']['output']>;
  streetType: Scalars['String']['output'];
};

export type AddressInfoInput = {
  city: Scalars['String']['input'];
  cityCode: Scalars['String']['input'];
  streetName: Scalars['String']['input'];
  streetNumber: Scalars['Int']['input'];
  streetType: Scalars['String']['input'];
};

export type AddressInsertInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  geoapifyId?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  latitude?: InputMaybe<Scalars['Float']['input']>;
  locations?: InputMaybe<LocationArrRelInsertInput>;
  longitude?: InputMaybe<Scalars['Float']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  street?: InputMaybe<Scalars['String']['input']>;
  streetNumber?: InputMaybe<Scalars['String']['input']>;
  zip?: InputMaybe<Scalars['String']['input']>;
};

export type AddressMaxFields = {
  __typename?: 'AddressMaxFields';
  category?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  geoapifyId?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  street?: Maybe<Scalars['String']['output']>;
  streetNumber?: Maybe<Scalars['String']['output']>;
  zip?: Maybe<Scalars['String']['output']>;
};

export type AddressMaxOrderBy = {
  category?: InputMaybe<OrderBy>;
  city?: InputMaybe<OrderBy>;
  country?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  geoapifyId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  latitude?: InputMaybe<OrderBy>;
  longitude?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  street?: InputMaybe<OrderBy>;
  streetNumber?: InputMaybe<OrderBy>;
  zip?: InputMaybe<OrderBy>;
};

export type AddressMinFields = {
  __typename?: 'AddressMinFields';
  category?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  geoapifyId?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  street?: Maybe<Scalars['String']['output']>;
  streetNumber?: Maybe<Scalars['String']['output']>;
  zip?: Maybe<Scalars['String']['output']>;
};

export type AddressMinOrderBy = {
  category?: InputMaybe<OrderBy>;
  city?: InputMaybe<OrderBy>;
  country?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  geoapifyId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  latitude?: InputMaybe<OrderBy>;
  longitude?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  street?: InputMaybe<OrderBy>;
  streetNumber?: InputMaybe<OrderBy>;
  zip?: InputMaybe<OrderBy>;
};

export type AddressMutationResponse = {
  __typename?: 'AddressMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Address>;
};

export type AddressObjRelInsertInput = {
  data: AddressInsertInput;
  onConflict?: InputMaybe<AddressOnConflict>;
};

export type AddressOnConflict = {
  constraint: AddressConstraint;
  updateColumns?: Array<AddressUpdateColumn>;
  where?: InputMaybe<AddressBoolExp>;
};

export type AddressOrderBy = {
  category?: InputMaybe<OrderBy>;
  city?: InputMaybe<OrderBy>;
  country?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  geoapifyId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  latitude?: InputMaybe<OrderBy>;
  locationsAggregate?: InputMaybe<LocationAggregateOrderBy>;
  longitude?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  street?: InputMaybe<OrderBy>;
  streetNumber?: InputMaybe<OrderBy>;
  zip?: InputMaybe<OrderBy>;
};

export type AddressPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum AddressSelectColumn {
  Category = 'category',
  City = 'city',
  Country = 'country',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  GeoapifyId = 'geoapifyId',
  Id = 'id',
  Latitude = 'latitude',
  Longitude = 'longitude',
  Name = 'name',
  State = 'state',
  Street = 'street',
  StreetNumber = 'streetNumber',
  Zip = 'zip',
}

export type AddressSetInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  geoapifyId?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  latitude?: InputMaybe<Scalars['Float']['input']>;
  longitude?: InputMaybe<Scalars['Float']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  street?: InputMaybe<Scalars['String']['input']>;
  streetNumber?: InputMaybe<Scalars['String']['input']>;
  zip?: InputMaybe<Scalars['String']['input']>;
};

export type AddressStddevFields = {
  __typename?: 'AddressStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AddressStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  latitude?: InputMaybe<OrderBy>;
  longitude?: InputMaybe<OrderBy>;
};

export type AddressStddevPopFields = {
  __typename?: 'AddressStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AddressStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  latitude?: InputMaybe<OrderBy>;
  longitude?: InputMaybe<OrderBy>;
};

export type AddressStddevSampFields = {
  __typename?: 'AddressStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AddressStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  latitude?: InputMaybe<OrderBy>;
  longitude?: InputMaybe<OrderBy>;
};

export type AddressStreamCursorInput = {
  initialValue: AddressStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type AddressStreamCursorValueInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  geoapifyId?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  latitude?: InputMaybe<Scalars['Float']['input']>;
  longitude?: InputMaybe<Scalars['Float']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  street?: InputMaybe<Scalars['String']['input']>;
  streetNumber?: InputMaybe<Scalars['String']['input']>;
  zip?: InputMaybe<Scalars['String']['input']>;
};

export type AddressSumFields = {
  __typename?: 'AddressSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AddressSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  latitude?: InputMaybe<OrderBy>;
  longitude?: InputMaybe<OrderBy>;
};

export enum AddressUpdateColumn {
  Category = 'category',
  City = 'city',
  Country = 'country',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  GeoapifyId = 'geoapifyId',
  Id = 'id',
  Latitude = 'latitude',
  Longitude = 'longitude',
  Name = 'name',
  State = 'state',
  Street = 'street',
  StreetNumber = 'streetNumber',
  Zip = 'zip',
}

export type AddressUpdates = {
  _inc?: InputMaybe<AddressIncInput>;
  _set?: InputMaybe<AddressSetInput>;
  where: AddressBoolExp;
};

export type AddressVarPopFields = {
  __typename?: 'AddressVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AddressVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  latitude?: InputMaybe<OrderBy>;
  longitude?: InputMaybe<OrderBy>;
};

export type AddressVarSampFields = {
  __typename?: 'AddressVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AddressVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  latitude?: InputMaybe<OrderBy>;
  longitude?: InputMaybe<OrderBy>;
};

export type AddressVarianceFields = {
  __typename?: 'AddressVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
};

export type AddressVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  latitude?: InputMaybe<OrderBy>;
  longitude?: InputMaybe<OrderBy>;
};

export type Bank = {
  __typename?: 'Bank';
  accounts: Array<Account>;
  accountsAggregate: AccountAggregate;
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  bicSwift: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  expenses: Array<Expense>;
  expensesAggregate: ExpenseAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  holderName: Scalars['String']['output'];
  iban: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  legalUnitLocation?: Maybe<LegalUnitLocation>;
  legalUnitLocationId?: Maybe<Scalars['bigint']['output']>;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type BankAccountsArgs = {
  distinctOn?: InputMaybe<Array<AccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountOrderBy>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type BankAccountsAggregateArgs = {
  distinctOn?: InputMaybe<Array<AccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountOrderBy>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type BankExpensesArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type BankExpensesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type BankAggregate = {
  __typename?: 'BankAggregate';
  aggregate?: Maybe<BankAggregateFields>;
  nodes: Array<Bank>;
};

export type BankAggregateBoolExp = {
  count?: InputMaybe<BankAggregateBoolExpCount>;
};

export type BankAggregateFields = {
  __typename?: 'BankAggregateFields';
  avg?: Maybe<BankAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<BankMaxFields>;
  min?: Maybe<BankMinFields>;
  stddev?: Maybe<BankStddevFields>;
  stddevPop?: Maybe<BankStddevPopFields>;
  stddevSamp?: Maybe<BankStddevSampFields>;
  sum?: Maybe<BankSumFields>;
  varPop?: Maybe<BankVarPopFields>;
  varSamp?: Maybe<BankVarSampFields>;
  variance?: Maybe<BankVarianceFields>;
};

export type BankAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<BankSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BankAggregateOrderBy = {
  avg?: InputMaybe<BankAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<BankMaxOrderBy>;
  min?: InputMaybe<BankMinOrderBy>;
  stddev?: InputMaybe<BankStddevOrderBy>;
  stddevPop?: InputMaybe<BankStddevPopOrderBy>;
  stddevSamp?: InputMaybe<BankStddevSampOrderBy>;
  sum?: InputMaybe<BankSumOrderBy>;
  varPop?: InputMaybe<BankVarPopOrderBy>;
  varSamp?: InputMaybe<BankVarSampOrderBy>;
  variance?: InputMaybe<BankVarianceOrderBy>;
};

export type BankArrRelInsertInput = {
  data: Array<BankInsertInput>;
  onConflict?: InputMaybe<BankOnConflict>;
};

export type BankAvgFields = {
  __typename?: 'BankAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  legalUnitLocationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type BankAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitLocationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BankBoolExp = {
  _and?: InputMaybe<Array<BankBoolExp>>;
  _not?: InputMaybe<BankBoolExp>;
  _or?: InputMaybe<Array<BankBoolExp>>;
  accounts?: InputMaybe<AccountBoolExp>;
  accountsAggregate?: InputMaybe<AccountAggregateBoolExp>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  bicSwift?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  expenses?: InputMaybe<ExpenseBoolExp>;
  expensesAggregate?: InputMaybe<ExpenseAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  holderName?: InputMaybe<StringComparisonExp>;
  iban?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  legalUnitLocation?: InputMaybe<LegalUnitLocationBoolExp>;
  legalUnitLocationId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum BankConstraint {
  BankPkey = 'bank_pkey',
}

export type BankIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  legalUnitLocationId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type BankInsertInput = {
  accounts?: InputMaybe<AccountArrRelInsertInput>;
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bicSwift?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  expenses?: InputMaybe<ExpenseArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  holderName?: InputMaybe<Scalars['String']['input']>;
  iban?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  legalUnitLocation?: InputMaybe<LegalUnitLocationObjRelInsertInput>;
  legalUnitLocationId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type BankMaxFields = {
  __typename?: 'BankMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  bicSwift?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  holderName?: Maybe<Scalars['String']['output']>;
  iban?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  legalUnitLocationId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type BankMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bicSwift?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  holderName?: InputMaybe<OrderBy>;
  iban?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitLocationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BankMinFields = {
  __typename?: 'BankMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  bicSwift?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  holderName?: Maybe<Scalars['String']['output']>;
  iban?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  legalUnitLocationId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type BankMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bicSwift?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  holderName?: InputMaybe<OrderBy>;
  iban?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitLocationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BankMutationResponse = {
  __typename?: 'BankMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Bank>;
};

export type BankObjRelInsertInput = {
  data: BankInsertInput;
  onConflict?: InputMaybe<BankOnConflict>;
};

export type BankOnConflict = {
  constraint: BankConstraint;
  updateColumns?: Array<BankUpdateColumn>;
  where?: InputMaybe<BankBoolExp>;
};

export type BankOrderBy = {
  accountsAggregate?: InputMaybe<AccountAggregateOrderBy>;
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  bicSwift?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  expensesAggregate?: InputMaybe<ExpenseAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  holderName?: InputMaybe<OrderBy>;
  iban?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitLocation?: InputMaybe<LegalUnitLocationOrderBy>;
  legalUnitLocationId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BankPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum BankSelectColumn {
  ActorId = 'actorId',
  BicSwift = 'bicSwift',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  HolderName = 'holderName',
  Iban = 'iban',
  Id = 'id',
  LegalUnitLocationId = 'legalUnitLocationId',
  TenantId = 'tenantId',
}

export type BankSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bicSwift?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  holderName?: InputMaybe<Scalars['String']['input']>;
  iban?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  legalUnitLocationId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type BankStddevFields = {
  __typename?: 'BankStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  legalUnitLocationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type BankStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitLocationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BankStddevPopFields = {
  __typename?: 'BankStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  legalUnitLocationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type BankStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitLocationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BankStddevSampFields = {
  __typename?: 'BankStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  legalUnitLocationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type BankStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitLocationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BankStreamCursorInput = {
  initialValue: BankStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type BankStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bicSwift?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  holderName?: InputMaybe<Scalars['String']['input']>;
  iban?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  legalUnitLocationId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type BankSumFields = {
  __typename?: 'BankSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  legalUnitLocationId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type BankSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitLocationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum BankUpdateColumn {
  ActorId = 'actorId',
  BicSwift = 'bicSwift',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  HolderName = 'holderName',
  Iban = 'iban',
  Id = 'id',
  LegalUnitLocationId = 'legalUnitLocationId',
  TenantId = 'tenantId',
}

export type BankUpdates = {
  _inc?: InputMaybe<BankIncInput>;
  _set?: InputMaybe<BankSetInput>;
  where: BankBoolExp;
};

export type BankVarPopFields = {
  __typename?: 'BankVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  legalUnitLocationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type BankVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitLocationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BankVarSampFields = {
  __typename?: 'BankVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  legalUnitLocationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type BankVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitLocationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BankVarianceFields = {
  __typename?: 'BankVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  legalUnitLocationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type BankVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitLocationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BigintComparisonExp = {
  _eq?: InputMaybe<Scalars['bigint']['input']>;
  _gt?: InputMaybe<Scalars['bigint']['input']>;
  _gte?: InputMaybe<Scalars['bigint']['input']>;
  _in?: InputMaybe<Array<Scalars['bigint']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['bigint']['input']>;
  _lte?: InputMaybe<Scalars['bigint']['input']>;
  _neq?: InputMaybe<Scalars['bigint']['input']>;
  _nin?: InputMaybe<Array<Scalars['bigint']['input']>>;
};

export type BooleanComparisonExp = {
  _eq?: InputMaybe<Scalars['Boolean']['input']>;
  _gt?: InputMaybe<Scalars['Boolean']['input']>;
  _gte?: InputMaybe<Scalars['Boolean']['input']>;
  _in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Boolean']['input']>;
  _lte?: InputMaybe<Scalars['Boolean']['input']>;
  _neq?: InputMaybe<Scalars['Boolean']['input']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']['input']>>;
};

export type Bot = {
  __typename?: 'Bot';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  individual: Individual;
  individualId: Scalars['bigint']['output'];
  owner: Actor;
  ownerId: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type BotAggregate = {
  __typename?: 'BotAggregate';
  aggregate?: Maybe<BotAggregateFields>;
  nodes: Array<Bot>;
};

export type BotAggregateBoolExp = {
  count?: InputMaybe<BotAggregateBoolExpCount>;
};

export type BotAggregateFields = {
  __typename?: 'BotAggregateFields';
  avg?: Maybe<BotAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<BotMaxFields>;
  min?: Maybe<BotMinFields>;
  stddev?: Maybe<BotStddevFields>;
  stddevPop?: Maybe<BotStddevPopFields>;
  stddevSamp?: Maybe<BotStddevSampFields>;
  sum?: Maybe<BotSumFields>;
  varPop?: Maybe<BotVarPopFields>;
  varSamp?: Maybe<BotVarSampFields>;
  variance?: Maybe<BotVarianceFields>;
};

export type BotAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<BotSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BotAggregateOrderBy = {
  avg?: InputMaybe<BotAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<BotMaxOrderBy>;
  min?: InputMaybe<BotMinOrderBy>;
  stddev?: InputMaybe<BotStddevOrderBy>;
  stddevPop?: InputMaybe<BotStddevPopOrderBy>;
  stddevSamp?: InputMaybe<BotStddevSampOrderBy>;
  sum?: InputMaybe<BotSumOrderBy>;
  varPop?: InputMaybe<BotVarPopOrderBy>;
  varSamp?: InputMaybe<BotVarSampOrderBy>;
  variance?: InputMaybe<BotVarianceOrderBy>;
};

export type BotArrRelInsertInput = {
  data: Array<BotInsertInput>;
  onConflict?: InputMaybe<BotOnConflict>;
};

export type BotAvgFields = {
  __typename?: 'BotAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
  ownerId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type BotAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  ownerId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BotBoolExp = {
  _and?: InputMaybe<Array<BotBoolExp>>;
  _not?: InputMaybe<BotBoolExp>;
  _or?: InputMaybe<Array<BotBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  individual?: InputMaybe<IndividualBoolExp>;
  individualId?: InputMaybe<BigintComparisonExp>;
  owner?: InputMaybe<ActorBoolExp>;
  ownerId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum BotConstraint {
  BotIndividualIdUnique = 'bot_individual_id_unique',
  BotPkey = 'bot_pkey',
}

export type BotIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  ownerId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type BotInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individual?: InputMaybe<IndividualObjRelInsertInput>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  owner?: InputMaybe<ActorObjRelInsertInput>;
  ownerId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type BotMaxFields = {
  __typename?: 'BotMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  individualId?: Maybe<Scalars['bigint']['output']>;
  ownerId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type BotMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  ownerId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BotMinFields = {
  __typename?: 'BotMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  individualId?: Maybe<Scalars['bigint']['output']>;
  ownerId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type BotMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  ownerId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BotMutationResponse = {
  __typename?: 'BotMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Bot>;
};

export type BotObjRelInsertInput = {
  data: BotInsertInput;
  onConflict?: InputMaybe<BotOnConflict>;
};

export type BotOnConflict = {
  constraint: BotConstraint;
  updateColumns?: Array<BotUpdateColumn>;
  where?: InputMaybe<BotBoolExp>;
};

export type BotOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individual?: InputMaybe<IndividualOrderBy>;
  individualId?: InputMaybe<OrderBy>;
  owner?: InputMaybe<ActorOrderBy>;
  ownerId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BotPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum BotSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IndividualId = 'individualId',
  OwnerId = 'ownerId',
  TenantId = 'tenantId',
}

export type BotSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  ownerId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type BotStddevFields = {
  __typename?: 'BotStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
  ownerId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type BotStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  ownerId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BotStddevPopFields = {
  __typename?: 'BotStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
  ownerId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type BotStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  ownerId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BotStddevSampFields = {
  __typename?: 'BotStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
  ownerId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type BotStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  ownerId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BotStreamCursorInput = {
  initialValue: BotStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type BotStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  ownerId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type BotSumFields = {
  __typename?: 'BotSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  individualId?: Maybe<Scalars['bigint']['output']>;
  ownerId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type BotSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  ownerId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum BotUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IndividualId = 'individualId',
  OwnerId = 'ownerId',
  TenantId = 'tenantId',
}

export type BotUpdates = {
  _inc?: InputMaybe<BotIncInput>;
  _set?: InputMaybe<BotSetInput>;
  where: BotBoolExp;
};

export type BotVarPopFields = {
  __typename?: 'BotVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
  ownerId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type BotVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  ownerId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BotVarSampFields = {
  __typename?: 'BotVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
  ownerId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type BotVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  ownerId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type BotVarianceFields = {
  __typename?: 'BotVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
  ownerId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type BotVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  ownerId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Campus = {
  __typename?: 'Campus';
  campusCluster: CampusCluster;
  campusClusterId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  location: Location;
  locationId: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type CampusAggregate = {
  __typename?: 'CampusAggregate';
  aggregate?: Maybe<CampusAggregateFields>;
  nodes: Array<Campus>;
};

export type CampusAggregateBoolExp = {
  count?: InputMaybe<CampusAggregateBoolExpCount>;
};

export type CampusAggregateFields = {
  __typename?: 'CampusAggregateFields';
  avg?: Maybe<CampusAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CampusMaxFields>;
  min?: Maybe<CampusMinFields>;
  stddev?: Maybe<CampusStddevFields>;
  stddevPop?: Maybe<CampusStddevPopFields>;
  stddevSamp?: Maybe<CampusStddevSampFields>;
  sum?: Maybe<CampusSumFields>;
  varPop?: Maybe<CampusVarPopFields>;
  varSamp?: Maybe<CampusVarSampFields>;
  variance?: Maybe<CampusVarianceFields>;
};

export type CampusAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<CampusSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CampusAggregateOrderBy = {
  avg?: InputMaybe<CampusAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<CampusMaxOrderBy>;
  min?: InputMaybe<CampusMinOrderBy>;
  stddev?: InputMaybe<CampusStddevOrderBy>;
  stddevPop?: InputMaybe<CampusStddevPopOrderBy>;
  stddevSamp?: InputMaybe<CampusStddevSampOrderBy>;
  sum?: InputMaybe<CampusSumOrderBy>;
  varPop?: InputMaybe<CampusVarPopOrderBy>;
  varSamp?: InputMaybe<CampusVarSampOrderBy>;
  variance?: InputMaybe<CampusVarianceOrderBy>;
};

export type CampusArrRelInsertInput = {
  data: Array<CampusInsertInput>;
  onConflict?: InputMaybe<CampusOnConflict>;
};

export type CampusAvgFields = {
  __typename?: 'CampusAvgFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CampusAvgOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusBoolExp = {
  _and?: InputMaybe<Array<CampusBoolExp>>;
  _not?: InputMaybe<CampusBoolExp>;
  _or?: InputMaybe<Array<CampusBoolExp>>;
  campusCluster?: InputMaybe<CampusClusterBoolExp>;
  campusClusterId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  location?: InputMaybe<LocationBoolExp>;
  locationId?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export type CampusCluster = {
  __typename?: 'CampusCluster';
  campuses: Array<Campus>;
  campusesAggregate: CampusAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  tenantOrganizes: Array<TenantOrganize>;
  tenantOrganizesAggregate: TenantOrganizeAggregate;
};

export type CampusClusterCampusesArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type CampusClusterCampusesAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type CampusClusterTenantOrganizesArgs = {
  distinctOn?: InputMaybe<Array<TenantOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrganizeOrderBy>>;
  where?: InputMaybe<TenantOrganizeBoolExp>;
};

export type CampusClusterTenantOrganizesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrganizeOrderBy>>;
  where?: InputMaybe<TenantOrganizeBoolExp>;
};

export type CampusClusterAggregate = {
  __typename?: 'CampusClusterAggregate';
  aggregate?: Maybe<CampusClusterAggregateFields>;
  nodes: Array<CampusCluster>;
};

export type CampusClusterAggregateBoolExp = {
  count?: InputMaybe<CampusClusterAggregateBoolExpCount>;
};

export type CampusClusterAggregateFields = {
  __typename?: 'CampusClusterAggregateFields';
  avg?: Maybe<CampusClusterAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CampusClusterMaxFields>;
  min?: Maybe<CampusClusterMinFields>;
  stddev?: Maybe<CampusClusterStddevFields>;
  stddevPop?: Maybe<CampusClusterStddevPopFields>;
  stddevSamp?: Maybe<CampusClusterStddevSampFields>;
  sum?: Maybe<CampusClusterSumFields>;
  varPop?: Maybe<CampusClusterVarPopFields>;
  varSamp?: Maybe<CampusClusterVarSampFields>;
  variance?: Maybe<CampusClusterVarianceFields>;
};

export type CampusClusterAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<CampusClusterSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CampusClusterAggregateOrderBy = {
  avg?: InputMaybe<CampusClusterAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<CampusClusterMaxOrderBy>;
  min?: InputMaybe<CampusClusterMinOrderBy>;
  stddev?: InputMaybe<CampusClusterStddevOrderBy>;
  stddevPop?: InputMaybe<CampusClusterStddevPopOrderBy>;
  stddevSamp?: InputMaybe<CampusClusterStddevSampOrderBy>;
  sum?: InputMaybe<CampusClusterSumOrderBy>;
  varPop?: InputMaybe<CampusClusterVarPopOrderBy>;
  varSamp?: InputMaybe<CampusClusterVarSampOrderBy>;
  variance?: InputMaybe<CampusClusterVarianceOrderBy>;
};

export type CampusClusterArrRelInsertInput = {
  data: Array<CampusClusterInsertInput>;
  onConflict?: InputMaybe<CampusClusterOnConflict>;
};

export type CampusClusterAvgFields = {
  __typename?: 'CampusClusterAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CampusClusterAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusClusterBoolExp = {
  _and?: InputMaybe<Array<CampusClusterBoolExp>>;
  _not?: InputMaybe<CampusClusterBoolExp>;
  _or?: InputMaybe<Array<CampusClusterBoolExp>>;
  campuses?: InputMaybe<CampusBoolExp>;
  campusesAggregate?: InputMaybe<CampusAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  tenantOrganizes?: InputMaybe<TenantOrganizeBoolExp>;
  tenantOrganizesAggregate?: InputMaybe<TenantOrganizeAggregateBoolExp>;
};

export enum CampusClusterConstraint {
  CampusClusterPkey = 'campus_cluster_pkey',
}

export type CampusClusterIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusClusterInsertInput = {
  campuses?: InputMaybe<CampusArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  tenantOrganizes?: InputMaybe<TenantOrganizeArrRelInsertInput>;
};

export type CampusClusterMaxFields = {
  __typename?: 'CampusClusterMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CampusClusterMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusClusterMinFields = {
  __typename?: 'CampusClusterMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CampusClusterMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusClusterMutationResponse = {
  __typename?: 'CampusClusterMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<CampusCluster>;
};

export type CampusClusterObjRelInsertInput = {
  data: CampusClusterInsertInput;
  onConflict?: InputMaybe<CampusClusterOnConflict>;
};

export type CampusClusterOnConflict = {
  constraint: CampusClusterConstraint;
  updateColumns?: Array<CampusClusterUpdateColumn>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type CampusClusterOrderBy = {
  campusesAggregate?: InputMaybe<CampusAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  tenantOrganizesAggregate?: InputMaybe<TenantOrganizeAggregateOrderBy>;
};

export type CampusClusterPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum CampusClusterSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  TenantId = 'tenantId',
}

export type CampusClusterSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusClusterStddevFields = {
  __typename?: 'CampusClusterStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CampusClusterStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusClusterStddevPopFields = {
  __typename?: 'CampusClusterStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CampusClusterStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusClusterStddevSampFields = {
  __typename?: 'CampusClusterStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CampusClusterStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusClusterStreamCursorInput = {
  initialValue: CampusClusterStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type CampusClusterStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusClusterSumFields = {
  __typename?: 'CampusClusterSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CampusClusterSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum CampusClusterUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  TenantId = 'tenantId',
}

export type CampusClusterUpdates = {
  _inc?: InputMaybe<CampusClusterIncInput>;
  _set?: InputMaybe<CampusClusterSetInput>;
  where: CampusClusterBoolExp;
};

export type CampusClusterVarPopFields = {
  __typename?: 'CampusClusterVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CampusClusterVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusClusterVarSampFields = {
  __typename?: 'CampusClusterVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CampusClusterVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusClusterVarianceFields = {
  __typename?: 'CampusClusterVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CampusClusterVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum CampusConstraint {
  CampusPkey = 'campus_pkey',
}

export type CampusIncInput = {
  campusClusterId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusInsertInput = {
  campusCluster?: InputMaybe<CampusClusterObjRelInsertInput>;
  campusClusterId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  location?: InputMaybe<LocationObjRelInsertInput>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusMaxFields = {
  __typename?: 'CampusMaxFields';
  campusClusterId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CampusMaxOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusMinFields = {
  __typename?: 'CampusMinFields';
  campusClusterId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CampusMinOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusMutationResponse = {
  __typename?: 'CampusMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Campus>;
};

export type CampusOnConflict = {
  constraint: CampusConstraint;
  updateColumns?: Array<CampusUpdateColumn>;
  where?: InputMaybe<CampusBoolExp>;
};

export type CampusOrderBy = {
  campusCluster?: InputMaybe<CampusClusterOrderBy>;
  campusClusterId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  location?: InputMaybe<LocationOrderBy>;
  locationId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum CampusSelectColumn {
  CampusClusterId = 'campusClusterId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  LocationId = 'locationId',
  Name = 'name',
  TenantId = 'tenantId',
}

export type CampusSetInput = {
  campusClusterId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusStddevFields = {
  __typename?: 'CampusStddevFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CampusStddevOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusStddevPopFields = {
  __typename?: 'CampusStddevPopFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CampusStddevPopOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusStddevSampFields = {
  __typename?: 'CampusStddevSampFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CampusStddevSampOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusStreamCursorInput = {
  initialValue: CampusStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type CampusStreamCursorValueInput = {
  campusClusterId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CampusSumFields = {
  __typename?: 'CampusSumFields';
  campusClusterId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CampusSumOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum CampusUpdateColumn {
  CampusClusterId = 'campusClusterId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  LocationId = 'locationId',
  Name = 'name',
  TenantId = 'tenantId',
}

export type CampusUpdates = {
  _inc?: InputMaybe<CampusIncInput>;
  _set?: InputMaybe<CampusSetInput>;
  where: CampusBoolExp;
};

export type CampusVarPopFields = {
  __typename?: 'CampusVarPopFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CampusVarPopOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusVarSampFields = {
  __typename?: 'CampusVarSampFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CampusVarSampOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CampusVarianceFields = {
  __typename?: 'CampusVarianceFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CampusVarianceOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Canteen = {
  __typename?: 'Canteen';
  canteenFoods: Array<CanteenFood>;
  canteenFoodsAggregate: CanteenFoodAggregate;
  canteenMenus: Array<CanteenMenu>;
  canteenMenusAggregate: CanteenMenuAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  team?: Maybe<Team>;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type CanteenCanteenFoodsArgs = {
  distinctOn?: InputMaybe<Array<CanteenFoodSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenFoodOrderBy>>;
  where?: InputMaybe<CanteenFoodBoolExp>;
};

export type CanteenCanteenFoodsAggregateArgs = {
  distinctOn?: InputMaybe<Array<CanteenFoodSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenFoodOrderBy>>;
  where?: InputMaybe<CanteenFoodBoolExp>;
};

export type CanteenCanteenMenusArgs = {
  distinctOn?: InputMaybe<Array<CanteenMenuSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenMenuOrderBy>>;
  where?: InputMaybe<CanteenMenuBoolExp>;
};

export type CanteenCanteenMenusAggregateArgs = {
  distinctOn?: InputMaybe<Array<CanteenMenuSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenMenuOrderBy>>;
  where?: InputMaybe<CanteenMenuBoolExp>;
};

export type CanteenAggregate = {
  __typename?: 'CanteenAggregate';
  aggregate?: Maybe<CanteenAggregateFields>;
  nodes: Array<Canteen>;
};

export type CanteenAggregateBoolExp = {
  count?: InputMaybe<CanteenAggregateBoolExpCount>;
};

export type CanteenAggregateFields = {
  __typename?: 'CanteenAggregateFields';
  avg?: Maybe<CanteenAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CanteenMaxFields>;
  min?: Maybe<CanteenMinFields>;
  stddev?: Maybe<CanteenStddevFields>;
  stddevPop?: Maybe<CanteenStddevPopFields>;
  stddevSamp?: Maybe<CanteenStddevSampFields>;
  sum?: Maybe<CanteenSumFields>;
  varPop?: Maybe<CanteenVarPopFields>;
  varSamp?: Maybe<CanteenVarSampFields>;
  variance?: Maybe<CanteenVarianceFields>;
};

export type CanteenAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<CanteenSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CanteenAggregateOrderBy = {
  avg?: InputMaybe<CanteenAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<CanteenMaxOrderBy>;
  min?: InputMaybe<CanteenMinOrderBy>;
  stddev?: InputMaybe<CanteenStddevOrderBy>;
  stddevPop?: InputMaybe<CanteenStddevPopOrderBy>;
  stddevSamp?: InputMaybe<CanteenStddevSampOrderBy>;
  sum?: InputMaybe<CanteenSumOrderBy>;
  varPop?: InputMaybe<CanteenVarPopOrderBy>;
  varSamp?: InputMaybe<CanteenVarSampOrderBy>;
  variance?: InputMaybe<CanteenVarianceOrderBy>;
};

export type CanteenArrRelInsertInput = {
  data: Array<CanteenInsertInput>;
  onConflict?: InputMaybe<CanteenOnConflict>;
};

export type CanteenAvgFields = {
  __typename?: 'CanteenAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenBoolExp = {
  _and?: InputMaybe<Array<CanteenBoolExp>>;
  _not?: InputMaybe<CanteenBoolExp>;
  _or?: InputMaybe<Array<CanteenBoolExp>>;
  canteenFoods?: InputMaybe<CanteenFoodBoolExp>;
  canteenFoodsAggregate?: InputMaybe<CanteenFoodAggregateBoolExp>;
  canteenMenus?: InputMaybe<CanteenMenuBoolExp>;
  canteenMenusAggregate?: InputMaybe<CanteenMenuAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum CanteenConstraint {
  CanteenPkey = 'canteen_pkey',
}

export type CanteenFood = {
  __typename?: 'CanteenFood';
  canteen: Canteen;
  canteenId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type CanteenFoodAggregate = {
  __typename?: 'CanteenFoodAggregate';
  aggregate?: Maybe<CanteenFoodAggregateFields>;
  nodes: Array<CanteenFood>;
};

export type CanteenFoodAggregateBoolExp = {
  count?: InputMaybe<CanteenFoodAggregateBoolExpCount>;
};

export type CanteenFoodAggregateFields = {
  __typename?: 'CanteenFoodAggregateFields';
  avg?: Maybe<CanteenFoodAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CanteenFoodMaxFields>;
  min?: Maybe<CanteenFoodMinFields>;
  stddev?: Maybe<CanteenFoodStddevFields>;
  stddevPop?: Maybe<CanteenFoodStddevPopFields>;
  stddevSamp?: Maybe<CanteenFoodStddevSampFields>;
  sum?: Maybe<CanteenFoodSumFields>;
  varPop?: Maybe<CanteenFoodVarPopFields>;
  varSamp?: Maybe<CanteenFoodVarSampFields>;
  variance?: Maybe<CanteenFoodVarianceFields>;
};

export type CanteenFoodAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<CanteenFoodSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CanteenFoodAggregateOrderBy = {
  avg?: InputMaybe<CanteenFoodAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<CanteenFoodMaxOrderBy>;
  min?: InputMaybe<CanteenFoodMinOrderBy>;
  stddev?: InputMaybe<CanteenFoodStddevOrderBy>;
  stddevPop?: InputMaybe<CanteenFoodStddevPopOrderBy>;
  stddevSamp?: InputMaybe<CanteenFoodStddevSampOrderBy>;
  sum?: InputMaybe<CanteenFoodSumOrderBy>;
  varPop?: InputMaybe<CanteenFoodVarPopOrderBy>;
  varSamp?: InputMaybe<CanteenFoodVarSampOrderBy>;
  variance?: InputMaybe<CanteenFoodVarianceOrderBy>;
};

export type CanteenFoodArrRelInsertInput = {
  data: Array<CanteenFoodInsertInput>;
  onConflict?: InputMaybe<CanteenFoodOnConflict>;
};

export type CanteenFoodAvgFields = {
  __typename?: 'CanteenFoodAvgFields';
  canteenId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenFoodAvgOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenFoodBoolExp = {
  _and?: InputMaybe<Array<CanteenFoodBoolExp>>;
  _not?: InputMaybe<CanteenFoodBoolExp>;
  _or?: InputMaybe<Array<CanteenFoodBoolExp>>;
  canteen?: InputMaybe<CanteenBoolExp>;
  canteenId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum CanteenFoodConstraint {
  CanteenFoodPkey = 'canteen_food_pkey',
}

export type CanteenFoodIncInput = {
  canteenId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CanteenFoodInsertInput = {
  canteen?: InputMaybe<CanteenObjRelInsertInput>;
  canteenId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CanteenFoodMaxFields = {
  __typename?: 'CanteenFoodMaxFields';
  canteenId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CanteenFoodMaxOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenFoodMinFields = {
  __typename?: 'CanteenFoodMinFields';
  canteenId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CanteenFoodMinOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenFoodMutationResponse = {
  __typename?: 'CanteenFoodMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<CanteenFood>;
};

export type CanteenFoodOnConflict = {
  constraint: CanteenFoodConstraint;
  updateColumns?: Array<CanteenFoodUpdateColumn>;
  where?: InputMaybe<CanteenFoodBoolExp>;
};

export type CanteenFoodOrderBy = {
  canteen?: InputMaybe<CanteenOrderBy>;
  canteenId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenFoodPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum CanteenFoodSelectColumn {
  CanteenId = 'canteenId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
}

export type CanteenFoodSetInput = {
  canteenId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CanteenFoodStddevFields = {
  __typename?: 'CanteenFoodStddevFields';
  canteenId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenFoodStddevOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenFoodStddevPopFields = {
  __typename?: 'CanteenFoodStddevPopFields';
  canteenId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenFoodStddevPopOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenFoodStddevSampFields = {
  __typename?: 'CanteenFoodStddevSampFields';
  canteenId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenFoodStddevSampOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenFoodStreamCursorInput = {
  initialValue: CanteenFoodStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type CanteenFoodStreamCursorValueInput = {
  canteenId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CanteenFoodSumFields = {
  __typename?: 'CanteenFoodSumFields';
  canteenId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CanteenFoodSumOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum CanteenFoodUpdateColumn {
  CanteenId = 'canteenId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
}

export type CanteenFoodUpdates = {
  _inc?: InputMaybe<CanteenFoodIncInput>;
  _set?: InputMaybe<CanteenFoodSetInput>;
  where: CanteenFoodBoolExp;
};

export type CanteenFoodVarPopFields = {
  __typename?: 'CanteenFoodVarPopFields';
  canteenId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenFoodVarPopOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenFoodVarSampFields = {
  __typename?: 'CanteenFoodVarSampFields';
  canteenId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenFoodVarSampOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenFoodVarianceFields = {
  __typename?: 'CanteenFoodVarianceFields';
  canteenId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenFoodVarianceOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CanteenInsertInput = {
  canteenFoods?: InputMaybe<CanteenFoodArrRelInsertInput>;
  canteenMenus?: InputMaybe<CanteenMenuArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CanteenMaxFields = {
  __typename?: 'CanteenMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CanteenMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenMenu = {
  __typename?: 'CanteenMenu';
  canteen: Canteen;
  canteenId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type CanteenMenuAggregate = {
  __typename?: 'CanteenMenuAggregate';
  aggregate?: Maybe<CanteenMenuAggregateFields>;
  nodes: Array<CanteenMenu>;
};

export type CanteenMenuAggregateBoolExp = {
  count?: InputMaybe<CanteenMenuAggregateBoolExpCount>;
};

export type CanteenMenuAggregateFields = {
  __typename?: 'CanteenMenuAggregateFields';
  avg?: Maybe<CanteenMenuAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CanteenMenuMaxFields>;
  min?: Maybe<CanteenMenuMinFields>;
  stddev?: Maybe<CanteenMenuStddevFields>;
  stddevPop?: Maybe<CanteenMenuStddevPopFields>;
  stddevSamp?: Maybe<CanteenMenuStddevSampFields>;
  sum?: Maybe<CanteenMenuSumFields>;
  varPop?: Maybe<CanteenMenuVarPopFields>;
  varSamp?: Maybe<CanteenMenuVarSampFields>;
  variance?: Maybe<CanteenMenuVarianceFields>;
};

export type CanteenMenuAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<CanteenMenuSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CanteenMenuAggregateOrderBy = {
  avg?: InputMaybe<CanteenMenuAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<CanteenMenuMaxOrderBy>;
  min?: InputMaybe<CanteenMenuMinOrderBy>;
  stddev?: InputMaybe<CanteenMenuStddevOrderBy>;
  stddevPop?: InputMaybe<CanteenMenuStddevPopOrderBy>;
  stddevSamp?: InputMaybe<CanteenMenuStddevSampOrderBy>;
  sum?: InputMaybe<CanteenMenuSumOrderBy>;
  varPop?: InputMaybe<CanteenMenuVarPopOrderBy>;
  varSamp?: InputMaybe<CanteenMenuVarSampOrderBy>;
  variance?: InputMaybe<CanteenMenuVarianceOrderBy>;
};

export type CanteenMenuArrRelInsertInput = {
  data: Array<CanteenMenuInsertInput>;
  onConflict?: InputMaybe<CanteenMenuOnConflict>;
};

export type CanteenMenuAvgFields = {
  __typename?: 'CanteenMenuAvgFields';
  canteenId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenMenuAvgOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenMenuBoolExp = {
  _and?: InputMaybe<Array<CanteenMenuBoolExp>>;
  _not?: InputMaybe<CanteenMenuBoolExp>;
  _or?: InputMaybe<Array<CanteenMenuBoolExp>>;
  canteen?: InputMaybe<CanteenBoolExp>;
  canteenId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum CanteenMenuConstraint {
  CanteenMenuPkey = 'canteen_menu_pkey',
}

export type CanteenMenuIncInput = {
  canteenId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CanteenMenuInsertInput = {
  canteen?: InputMaybe<CanteenObjRelInsertInput>;
  canteenId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CanteenMenuMaxFields = {
  __typename?: 'CanteenMenuMaxFields';
  canteenId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CanteenMenuMaxOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenMenuMinFields = {
  __typename?: 'CanteenMenuMinFields';
  canteenId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CanteenMenuMinOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenMenuMutationResponse = {
  __typename?: 'CanteenMenuMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<CanteenMenu>;
};

export type CanteenMenuOnConflict = {
  constraint: CanteenMenuConstraint;
  updateColumns?: Array<CanteenMenuUpdateColumn>;
  where?: InputMaybe<CanteenMenuBoolExp>;
};

export type CanteenMenuOrderBy = {
  canteen?: InputMaybe<CanteenOrderBy>;
  canteenId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenMenuPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum CanteenMenuSelectColumn {
  CanteenId = 'canteenId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
}

export type CanteenMenuSetInput = {
  canteenId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CanteenMenuStddevFields = {
  __typename?: 'CanteenMenuStddevFields';
  canteenId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenMenuStddevOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenMenuStddevPopFields = {
  __typename?: 'CanteenMenuStddevPopFields';
  canteenId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenMenuStddevPopOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenMenuStddevSampFields = {
  __typename?: 'CanteenMenuStddevSampFields';
  canteenId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenMenuStddevSampOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenMenuStreamCursorInput = {
  initialValue: CanteenMenuStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type CanteenMenuStreamCursorValueInput = {
  canteenId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CanteenMenuSumFields = {
  __typename?: 'CanteenMenuSumFields';
  canteenId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CanteenMenuSumOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum CanteenMenuUpdateColumn {
  CanteenId = 'canteenId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
}

export type CanteenMenuUpdates = {
  _inc?: InputMaybe<CanteenMenuIncInput>;
  _set?: InputMaybe<CanteenMenuSetInput>;
  where: CanteenMenuBoolExp;
};

export type CanteenMenuVarPopFields = {
  __typename?: 'CanteenMenuVarPopFields';
  canteenId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenMenuVarPopOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenMenuVarSampFields = {
  __typename?: 'CanteenMenuVarSampFields';
  canteenId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenMenuVarSampOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenMenuVarianceFields = {
  __typename?: 'CanteenMenuVarianceFields';
  canteenId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenMenuVarianceOrderBy = {
  canteenId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenMinFields = {
  __typename?: 'CanteenMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CanteenMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenMutationResponse = {
  __typename?: 'CanteenMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Canteen>;
};

export type CanteenObjRelInsertInput = {
  data: CanteenInsertInput;
  onConflict?: InputMaybe<CanteenOnConflict>;
};

export type CanteenOnConflict = {
  constraint: CanteenConstraint;
  updateColumns?: Array<CanteenUpdateColumn>;
  where?: InputMaybe<CanteenBoolExp>;
};

export type CanteenOrderBy = {
  canteenFoodsAggregate?: InputMaybe<CanteenFoodAggregateOrderBy>;
  canteenMenusAggregate?: InputMaybe<CanteenMenuAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum CanteenSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
}

export type CanteenSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CanteenStddevFields = {
  __typename?: 'CanteenStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenStddevPopFields = {
  __typename?: 'CanteenStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenStddevSampFields = {
  __typename?: 'CanteenStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenStreamCursorInput = {
  initialValue: CanteenStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type CanteenStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type CanteenSumFields = {
  __typename?: 'CanteenSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type CanteenSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum CanteenUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
}

export type CanteenUpdates = {
  _inc?: InputMaybe<CanteenIncInput>;
  _set?: InputMaybe<CanteenSetInput>;
  where: CanteenBoolExp;
};

export type CanteenVarPopFields = {
  __typename?: 'CanteenVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenVarSampFields = {
  __typename?: 'CanteenVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type CanteenVarianceFields = {
  __typename?: 'CanteenVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type CanteenVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ClassGroup = {
  __typename?: 'ClassGroup';
  classGroupTeachers: Array<ClassGroupTeacher>;
  classGroupTeachersAggregate: ClassGroupTeacherAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  subjectClassGroups: Array<SubjectClassGroups>;
  subjectClassGroupsAggregate: SubjectClassGroupsAggregate;
  team?: Maybe<Team>;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
};

export type ClassGroupClassGroupTeachersArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherBoolExp>;
};

export type ClassGroupClassGroupTeachersAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherBoolExp>;
};

export type ClassGroupSubjectClassGroupsArgs = {
  distinctOn?: InputMaybe<Array<SubjectClassGroupsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectClassGroupsOrderBy>>;
  where?: InputMaybe<SubjectClassGroupsBoolExp>;
};

export type ClassGroupSubjectClassGroupsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SubjectClassGroupsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectClassGroupsOrderBy>>;
  where?: InputMaybe<SubjectClassGroupsBoolExp>;
};

export type ClassGroupAggregate = {
  __typename?: 'ClassGroupAggregate';
  aggregate?: Maybe<ClassGroupAggregateFields>;
  nodes: Array<ClassGroup>;
};

export type ClassGroupAggregateBoolExp = {
  count?: InputMaybe<ClassGroupAggregateBoolExpCount>;
};

export type ClassGroupAggregateFields = {
  __typename?: 'ClassGroupAggregateFields';
  avg?: Maybe<ClassGroupAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ClassGroupMaxFields>;
  min?: Maybe<ClassGroupMinFields>;
  stddev?: Maybe<ClassGroupStddevFields>;
  stddevPop?: Maybe<ClassGroupStddevPopFields>;
  stddevSamp?: Maybe<ClassGroupStddevSampFields>;
  sum?: Maybe<ClassGroupSumFields>;
  varPop?: Maybe<ClassGroupVarPopFields>;
  varSamp?: Maybe<ClassGroupVarSampFields>;
  variance?: Maybe<ClassGroupVarianceFields>;
};

export type ClassGroupAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ClassGroupSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ClassGroupAggregateOrderBy = {
  avg?: InputMaybe<ClassGroupAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ClassGroupMaxOrderBy>;
  min?: InputMaybe<ClassGroupMinOrderBy>;
  stddev?: InputMaybe<ClassGroupStddevOrderBy>;
  stddevPop?: InputMaybe<ClassGroupStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ClassGroupStddevSampOrderBy>;
  sum?: InputMaybe<ClassGroupSumOrderBy>;
  varPop?: InputMaybe<ClassGroupVarPopOrderBy>;
  varSamp?: InputMaybe<ClassGroupVarSampOrderBy>;
  variance?: InputMaybe<ClassGroupVarianceOrderBy>;
};

export type ClassGroupArrRelInsertInput = {
  data: Array<ClassGroupInsertInput>;
  onConflict?: InputMaybe<ClassGroupOnConflict>;
};

export type ClassGroupAvgFields = {
  __typename?: 'ClassGroupAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ClassGroupBoolExp = {
  _and?: InputMaybe<Array<ClassGroupBoolExp>>;
  _not?: InputMaybe<ClassGroupBoolExp>;
  _or?: InputMaybe<Array<ClassGroupBoolExp>>;
  classGroupTeachers?: InputMaybe<ClassGroupTeacherBoolExp>;
  classGroupTeachersAggregate?: InputMaybe<ClassGroupTeacherAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  subjectClassGroups?: InputMaybe<SubjectClassGroupsBoolExp>;
  subjectClassGroupsAggregate?: InputMaybe<SubjectClassGroupsAggregateBoolExp>;
  team?: InputMaybe<TeamBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
};

export enum ClassGroupConstraint {
  ClassGroupPkey = 'class_group_pkey',
}

export type ClassGroupIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ClassGroupInsertInput = {
  classGroupTeachers?: InputMaybe<ClassGroupTeacherArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  subjectClassGroups?: InputMaybe<SubjectClassGroupsArrRelInsertInput>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ClassGroupMaxFields = {
  __typename?: 'ClassGroupMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ClassGroupMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ClassGroupMinFields = {
  __typename?: 'ClassGroupMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ClassGroupMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ClassGroupMutationResponse = {
  __typename?: 'ClassGroupMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ClassGroup>;
};

export type ClassGroupObjRelInsertInput = {
  data: ClassGroupInsertInput;
  onConflict?: InputMaybe<ClassGroupOnConflict>;
};

export type ClassGroupOnConflict = {
  constraint: ClassGroupConstraint;
  updateColumns?: Array<ClassGroupUpdateColumn>;
  where?: InputMaybe<ClassGroupBoolExp>;
};

export type ClassGroupOrderBy = {
  classGroupTeachersAggregate?: InputMaybe<ClassGroupTeacherAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  subjectClassGroupsAggregate?: InputMaybe<SubjectClassGroupsAggregateOrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ClassGroupPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ClassGroupSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
  Type = 'type',
}

export type ClassGroupSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ClassGroupStddevFields = {
  __typename?: 'ClassGroupStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ClassGroupStddevPopFields = {
  __typename?: 'ClassGroupStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ClassGroupStddevSampFields = {
  __typename?: 'ClassGroupStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ClassGroupStreamCursorInput = {
  initialValue: ClassGroupStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ClassGroupStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ClassGroupSumFields = {
  __typename?: 'ClassGroupSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ClassGroupSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacher = {
  __typename?: 'ClassGroupTeacher';
  classGroup: ClassGroup;
  classGroupId: Scalars['bigint']['output'];
  classGroupTeacherSubjects: Array<ClassGroupTeacherSubjects>;
  classGroupTeacherSubjectsAggregate: ClassGroupTeacherSubjectsAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  endDate?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  startDate: Scalars['timestamptz']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  user: User;
  userId: Scalars['bigint']['output'];
};

export type ClassGroupTeacherClassGroupTeacherSubjectsArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSubjectsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherSubjectsOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherSubjectsBoolExp>;
};

export type ClassGroupTeacherClassGroupTeacherSubjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSubjectsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherSubjectsOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherSubjectsBoolExp>;
};

export type ClassGroupTeacherAggregate = {
  __typename?: 'ClassGroupTeacherAggregate';
  aggregate?: Maybe<ClassGroupTeacherAggregateFields>;
  nodes: Array<ClassGroupTeacher>;
};

export type ClassGroupTeacherAggregateBoolExp = {
  count?: InputMaybe<ClassGroupTeacherAggregateBoolExpCount>;
};

export type ClassGroupTeacherAggregateFields = {
  __typename?: 'ClassGroupTeacherAggregateFields';
  avg?: Maybe<ClassGroupTeacherAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ClassGroupTeacherMaxFields>;
  min?: Maybe<ClassGroupTeacherMinFields>;
  stddev?: Maybe<ClassGroupTeacherStddevFields>;
  stddevPop?: Maybe<ClassGroupTeacherStddevPopFields>;
  stddevSamp?: Maybe<ClassGroupTeacherStddevSampFields>;
  sum?: Maybe<ClassGroupTeacherSumFields>;
  varPop?: Maybe<ClassGroupTeacherVarPopFields>;
  varSamp?: Maybe<ClassGroupTeacherVarSampFields>;
  variance?: Maybe<ClassGroupTeacherVarianceFields>;
};

export type ClassGroupTeacherAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ClassGroupTeacherSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ClassGroupTeacherAggregateOrderBy = {
  avg?: InputMaybe<ClassGroupTeacherAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ClassGroupTeacherMaxOrderBy>;
  min?: InputMaybe<ClassGroupTeacherMinOrderBy>;
  stddev?: InputMaybe<ClassGroupTeacherStddevOrderBy>;
  stddevPop?: InputMaybe<ClassGroupTeacherStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ClassGroupTeacherStddevSampOrderBy>;
  sum?: InputMaybe<ClassGroupTeacherSumOrderBy>;
  varPop?: InputMaybe<ClassGroupTeacherVarPopOrderBy>;
  varSamp?: InputMaybe<ClassGroupTeacherVarSampOrderBy>;
  variance?: InputMaybe<ClassGroupTeacherVarianceOrderBy>;
};

export type ClassGroupTeacherArrRelInsertInput = {
  data: Array<ClassGroupTeacherInsertInput>;
  onConflict?: InputMaybe<ClassGroupTeacherOnConflict>;
};

export type ClassGroupTeacherAvgFields = {
  __typename?: 'ClassGroupTeacherAvgFields';
  classGroupId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupTeacherAvgOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherBoolExp = {
  _and?: InputMaybe<Array<ClassGroupTeacherBoolExp>>;
  _not?: InputMaybe<ClassGroupTeacherBoolExp>;
  _or?: InputMaybe<Array<ClassGroupTeacherBoolExp>>;
  classGroup?: InputMaybe<ClassGroupBoolExp>;
  classGroupId?: InputMaybe<BigintComparisonExp>;
  classGroupTeacherSubjects?: InputMaybe<ClassGroupTeacherSubjectsBoolExp>;
  classGroupTeacherSubjectsAggregate?: InputMaybe<ClassGroupTeacherSubjectsAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  endDate?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  startDate?: InputMaybe<TimestamptzComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
  userId?: InputMaybe<BigintComparisonExp>;
};

export enum ClassGroupTeacherConstraint {
  ClassGroupTeacherPkey = 'class_group_teacher_pkey',
}

export type ClassGroupTeacherIncInput = {
  classGroupId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ClassGroupTeacherInsertInput = {
  classGroup?: InputMaybe<ClassGroupObjRelInsertInput>;
  classGroupId?: InputMaybe<Scalars['bigint']['input']>;
  classGroupTeacherSubjects?: InputMaybe<ClassGroupTeacherSubjectsArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  endDate?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  startDate?: InputMaybe<Scalars['timestamptz']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ClassGroupTeacherMaxFields = {
  __typename?: 'ClassGroupTeacherMaxFields';
  classGroupId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  endDate?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  startDate?: Maybe<Scalars['timestamptz']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ClassGroupTeacherMaxOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  endDate?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  startDate?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherMinFields = {
  __typename?: 'ClassGroupTeacherMinFields';
  classGroupId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  endDate?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  startDate?: Maybe<Scalars['timestamptz']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ClassGroupTeacherMinOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  endDate?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  startDate?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherMutationResponse = {
  __typename?: 'ClassGroupTeacherMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ClassGroupTeacher>;
};

export type ClassGroupTeacherObjRelInsertInput = {
  data: ClassGroupTeacherInsertInput;
  onConflict?: InputMaybe<ClassGroupTeacherOnConflict>;
};

export type ClassGroupTeacherOnConflict = {
  constraint: ClassGroupTeacherConstraint;
  updateColumns?: Array<ClassGroupTeacherUpdateColumn>;
  where?: InputMaybe<ClassGroupTeacherBoolExp>;
};

export type ClassGroupTeacherOrderBy = {
  classGroup?: InputMaybe<ClassGroupOrderBy>;
  classGroupId?: InputMaybe<OrderBy>;
  classGroupTeacherSubjectsAggregate?: InputMaybe<ClassGroupTeacherSubjectsAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  endDate?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  startDate?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ClassGroupTeacherSelectColumn {
  ClassGroupId = 'classGroupId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EndDate = 'endDate',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  StartDate = 'startDate',
  TenantId = 'tenantId',
  UserId = 'userId',
}

export type ClassGroupTeacherSetInput = {
  classGroupId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  endDate?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  startDate?: InputMaybe<Scalars['timestamptz']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ClassGroupTeacherStddevFields = {
  __typename?: 'ClassGroupTeacherStddevFields';
  classGroupId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupTeacherStddevOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherStddevPopFields = {
  __typename?: 'ClassGroupTeacherStddevPopFields';
  classGroupId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupTeacherStddevPopOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherStddevSampFields = {
  __typename?: 'ClassGroupTeacherStddevSampFields';
  classGroupId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupTeacherStddevSampOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherStreamCursorInput = {
  initialValue: ClassGroupTeacherStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ClassGroupTeacherStreamCursorValueInput = {
  classGroupId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  endDate?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  startDate?: InputMaybe<Scalars['timestamptz']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ClassGroupTeacherSubjects = {
  __typename?: 'ClassGroupTeacherSubjects';
  classGroupTeacher: ClassGroupTeacher;
  classGroupTeacherId: Scalars['bigint']['output'];
  subject: Subject;
  subjectId: Scalars['bigint']['output'];
};

export type ClassGroupTeacherSubjectsAggregate = {
  __typename?: 'ClassGroupTeacherSubjectsAggregate';
  aggregate?: Maybe<ClassGroupTeacherSubjectsAggregateFields>;
  nodes: Array<ClassGroupTeacherSubjects>;
};

export type ClassGroupTeacherSubjectsAggregateBoolExp = {
  count?: InputMaybe<ClassGroupTeacherSubjectsAggregateBoolExpCount>;
};

export type ClassGroupTeacherSubjectsAggregateFields = {
  __typename?: 'ClassGroupTeacherSubjectsAggregateFields';
  avg?: Maybe<ClassGroupTeacherSubjectsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ClassGroupTeacherSubjectsMaxFields>;
  min?: Maybe<ClassGroupTeacherSubjectsMinFields>;
  stddev?: Maybe<ClassGroupTeacherSubjectsStddevFields>;
  stddevPop?: Maybe<ClassGroupTeacherSubjectsStddevPopFields>;
  stddevSamp?: Maybe<ClassGroupTeacherSubjectsStddevSampFields>;
  sum?: Maybe<ClassGroupTeacherSubjectsSumFields>;
  varPop?: Maybe<ClassGroupTeacherSubjectsVarPopFields>;
  varSamp?: Maybe<ClassGroupTeacherSubjectsVarSampFields>;
  variance?: Maybe<ClassGroupTeacherSubjectsVarianceFields>;
};

export type ClassGroupTeacherSubjectsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ClassGroupTeacherSubjectsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ClassGroupTeacherSubjectsAggregateOrderBy = {
  avg?: InputMaybe<ClassGroupTeacherSubjectsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ClassGroupTeacherSubjectsMaxOrderBy>;
  min?: InputMaybe<ClassGroupTeacherSubjectsMinOrderBy>;
  stddev?: InputMaybe<ClassGroupTeacherSubjectsStddevOrderBy>;
  stddevPop?: InputMaybe<ClassGroupTeacherSubjectsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ClassGroupTeacherSubjectsStddevSampOrderBy>;
  sum?: InputMaybe<ClassGroupTeacherSubjectsSumOrderBy>;
  varPop?: InputMaybe<ClassGroupTeacherSubjectsVarPopOrderBy>;
  varSamp?: InputMaybe<ClassGroupTeacherSubjectsVarSampOrderBy>;
  variance?: InputMaybe<ClassGroupTeacherSubjectsVarianceOrderBy>;
};

export type ClassGroupTeacherSubjectsArrRelInsertInput = {
  data: Array<ClassGroupTeacherSubjectsInsertInput>;
  onConflict?: InputMaybe<ClassGroupTeacherSubjectsOnConflict>;
};

export type ClassGroupTeacherSubjectsAvgFields = {
  __typename?: 'ClassGroupTeacherSubjectsAvgFields';
  classGroupTeacherId?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupTeacherSubjectsAvgOrderBy = {
  classGroupTeacherId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherSubjectsBoolExp = {
  _and?: InputMaybe<Array<ClassGroupTeacherSubjectsBoolExp>>;
  _not?: InputMaybe<ClassGroupTeacherSubjectsBoolExp>;
  _or?: InputMaybe<Array<ClassGroupTeacherSubjectsBoolExp>>;
  classGroupTeacher?: InputMaybe<ClassGroupTeacherBoolExp>;
  classGroupTeacherId?: InputMaybe<BigintComparisonExp>;
  subject?: InputMaybe<SubjectBoolExp>;
  subjectId?: InputMaybe<BigintComparisonExp>;
};

export enum ClassGroupTeacherSubjectsConstraint {
  ClassGroupTeacherSubjectsPkey = 'class_group_teacher_subjects_pkey',
}

export type ClassGroupTeacherSubjectsIncInput = {
  classGroupTeacherId?: InputMaybe<Scalars['bigint']['input']>;
  subjectId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ClassGroupTeacherSubjectsInsertInput = {
  classGroupTeacher?: InputMaybe<ClassGroupTeacherObjRelInsertInput>;
  classGroupTeacherId?: InputMaybe<Scalars['bigint']['input']>;
  subject?: InputMaybe<SubjectObjRelInsertInput>;
  subjectId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ClassGroupTeacherSubjectsMaxFields = {
  __typename?: 'ClassGroupTeacherSubjectsMaxFields';
  classGroupTeacherId?: Maybe<Scalars['bigint']['output']>;
  subjectId?: Maybe<Scalars['bigint']['output']>;
};

export type ClassGroupTeacherSubjectsMaxOrderBy = {
  classGroupTeacherId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherSubjectsMinFields = {
  __typename?: 'ClassGroupTeacherSubjectsMinFields';
  classGroupTeacherId?: Maybe<Scalars['bigint']['output']>;
  subjectId?: Maybe<Scalars['bigint']['output']>;
};

export type ClassGroupTeacherSubjectsMinOrderBy = {
  classGroupTeacherId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherSubjectsMutationResponse = {
  __typename?: 'ClassGroupTeacherSubjectsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ClassGroupTeacherSubjects>;
};

export type ClassGroupTeacherSubjectsOnConflict = {
  constraint: ClassGroupTeacherSubjectsConstraint;
  updateColumns?: Array<ClassGroupTeacherSubjectsUpdateColumn>;
  where?: InputMaybe<ClassGroupTeacherSubjectsBoolExp>;
};

export type ClassGroupTeacherSubjectsOrderBy = {
  classGroupTeacher?: InputMaybe<ClassGroupTeacherOrderBy>;
  classGroupTeacherId?: InputMaybe<OrderBy>;
  subject?: InputMaybe<SubjectOrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherSubjectsPkColumnsInput = {
  classGroupTeacherId: Scalars['bigint']['input'];
  subjectId: Scalars['bigint']['input'];
};

export enum ClassGroupTeacherSubjectsSelectColumn {
  ClassGroupTeacherId = 'classGroupTeacherId',
  SubjectId = 'subjectId',
}

export type ClassGroupTeacherSubjectsSetInput = {
  classGroupTeacherId?: InputMaybe<Scalars['bigint']['input']>;
  subjectId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ClassGroupTeacherSubjectsStddevFields = {
  __typename?: 'ClassGroupTeacherSubjectsStddevFields';
  classGroupTeacherId?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupTeacherSubjectsStddevOrderBy = {
  classGroupTeacherId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherSubjectsStddevPopFields = {
  __typename?: 'ClassGroupTeacherSubjectsStddevPopFields';
  classGroupTeacherId?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupTeacherSubjectsStddevPopOrderBy = {
  classGroupTeacherId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherSubjectsStddevSampFields = {
  __typename?: 'ClassGroupTeacherSubjectsStddevSampFields';
  classGroupTeacherId?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupTeacherSubjectsStddevSampOrderBy = {
  classGroupTeacherId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherSubjectsStreamCursorInput = {
  initialValue: ClassGroupTeacherSubjectsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ClassGroupTeacherSubjectsStreamCursorValueInput = {
  classGroupTeacherId?: InputMaybe<Scalars['bigint']['input']>;
  subjectId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ClassGroupTeacherSubjectsSumFields = {
  __typename?: 'ClassGroupTeacherSubjectsSumFields';
  classGroupTeacherId?: Maybe<Scalars['bigint']['output']>;
  subjectId?: Maybe<Scalars['bigint']['output']>;
};

export type ClassGroupTeacherSubjectsSumOrderBy = {
  classGroupTeacherId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export enum ClassGroupTeacherSubjectsUpdateColumn {
  ClassGroupTeacherId = 'classGroupTeacherId',
  SubjectId = 'subjectId',
}

export type ClassGroupTeacherSubjectsUpdates = {
  _inc?: InputMaybe<ClassGroupTeacherSubjectsIncInput>;
  _set?: InputMaybe<ClassGroupTeacherSubjectsSetInput>;
  where: ClassGroupTeacherSubjectsBoolExp;
};

export type ClassGroupTeacherSubjectsVarPopFields = {
  __typename?: 'ClassGroupTeacherSubjectsVarPopFields';
  classGroupTeacherId?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupTeacherSubjectsVarPopOrderBy = {
  classGroupTeacherId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherSubjectsVarSampFields = {
  __typename?: 'ClassGroupTeacherSubjectsVarSampFields';
  classGroupTeacherId?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupTeacherSubjectsVarSampOrderBy = {
  classGroupTeacherId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherSubjectsVarianceFields = {
  __typename?: 'ClassGroupTeacherSubjectsVarianceFields';
  classGroupTeacherId?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupTeacherSubjectsVarianceOrderBy = {
  classGroupTeacherId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherSumFields = {
  __typename?: 'ClassGroupTeacherSumFields';
  classGroupId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ClassGroupTeacherSumOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum ClassGroupTeacherUpdateColumn {
  ClassGroupId = 'classGroupId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EndDate = 'endDate',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  StartDate = 'startDate',
  TenantId = 'tenantId',
  UserId = 'userId',
}

export type ClassGroupTeacherUpdates = {
  _inc?: InputMaybe<ClassGroupTeacherIncInput>;
  _set?: InputMaybe<ClassGroupTeacherSetInput>;
  where: ClassGroupTeacherBoolExp;
};

export type ClassGroupTeacherVarPopFields = {
  __typename?: 'ClassGroupTeacherVarPopFields';
  classGroupId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupTeacherVarPopOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherVarSampFields = {
  __typename?: 'ClassGroupTeacherVarSampFields';
  classGroupId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupTeacherVarSampOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ClassGroupTeacherVarianceFields = {
  __typename?: 'ClassGroupTeacherVarianceFields';
  classGroupId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupTeacherVarianceOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum ClassGroupUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
  Type = 'type',
}

export type ClassGroupUpdates = {
  _inc?: InputMaybe<ClassGroupIncInput>;
  _set?: InputMaybe<ClassGroupSetInput>;
  where: ClassGroupBoolExp;
};

export type ClassGroupVarPopFields = {
  __typename?: 'ClassGroupVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ClassGroupVarSampFields = {
  __typename?: 'ClassGroupVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ClassGroupVarianceFields = {
  __typename?: 'ClassGroupVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ClassGroupVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Cohort = {
  __typename?: 'Cohort';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  team?: Maybe<Team>;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  year: Scalars['smallint']['output'];
};

export type CohortAggregate = {
  __typename?: 'CohortAggregate';
  aggregate?: Maybe<CohortAggregateFields>;
  nodes: Array<Cohort>;
};

export type CohortAggregateBoolExp = {
  count?: InputMaybe<CohortAggregateBoolExpCount>;
};

export type CohortAggregateFields = {
  __typename?: 'CohortAggregateFields';
  avg?: Maybe<CohortAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CohortMaxFields>;
  min?: Maybe<CohortMinFields>;
  stddev?: Maybe<CohortStddevFields>;
  stddevPop?: Maybe<CohortStddevPopFields>;
  stddevSamp?: Maybe<CohortStddevSampFields>;
  sum?: Maybe<CohortSumFields>;
  varPop?: Maybe<CohortVarPopFields>;
  varSamp?: Maybe<CohortVarSampFields>;
  variance?: Maybe<CohortVarianceFields>;
};

export type CohortAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<CohortSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CohortAggregateOrderBy = {
  avg?: InputMaybe<CohortAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<CohortMaxOrderBy>;
  min?: InputMaybe<CohortMinOrderBy>;
  stddev?: InputMaybe<CohortStddevOrderBy>;
  stddevPop?: InputMaybe<CohortStddevPopOrderBy>;
  stddevSamp?: InputMaybe<CohortStddevSampOrderBy>;
  sum?: InputMaybe<CohortSumOrderBy>;
  varPop?: InputMaybe<CohortVarPopOrderBy>;
  varSamp?: InputMaybe<CohortVarSampOrderBy>;
  variance?: InputMaybe<CohortVarianceOrderBy>;
};

export type CohortArrRelInsertInput = {
  data: Array<CohortInsertInput>;
  onConflict?: InputMaybe<CohortOnConflict>;
};

export type CohortAvgFields = {
  __typename?: 'CohortAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  year?: Maybe<Scalars['Float']['output']>;
};

export type CohortAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  year?: InputMaybe<OrderBy>;
};

export type CohortBoolExp = {
  _and?: InputMaybe<Array<CohortBoolExp>>;
  _not?: InputMaybe<CohortBoolExp>;
  _or?: InputMaybe<Array<CohortBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  year?: InputMaybe<SmallintComparisonExp>;
};

export enum CohortConstraint {
  CohortPkey = 'cohort_pkey',
}

export type CohortIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  year?: InputMaybe<Scalars['smallint']['input']>;
};

export type CohortInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  year?: InputMaybe<Scalars['smallint']['input']>;
};

export type CohortMaxFields = {
  __typename?: 'CohortMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  year?: Maybe<Scalars['smallint']['output']>;
};

export type CohortMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  year?: InputMaybe<OrderBy>;
};

export type CohortMinFields = {
  __typename?: 'CohortMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  year?: Maybe<Scalars['smallint']['output']>;
};

export type CohortMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  year?: InputMaybe<OrderBy>;
};

export type CohortMutationResponse = {
  __typename?: 'CohortMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Cohort>;
};

export type CohortObjRelInsertInput = {
  data: CohortInsertInput;
  onConflict?: InputMaybe<CohortOnConflict>;
};

export type CohortOnConflict = {
  constraint: CohortConstraint;
  updateColumns?: Array<CohortUpdateColumn>;
  where?: InputMaybe<CohortBoolExp>;
};

export type CohortOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  year?: InputMaybe<OrderBy>;
};

export type CohortPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum CohortSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
  Year = 'year',
}

export type CohortSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  year?: InputMaybe<Scalars['smallint']['input']>;
};

export type CohortStddevFields = {
  __typename?: 'CohortStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  year?: Maybe<Scalars['Float']['output']>;
};

export type CohortStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  year?: InputMaybe<OrderBy>;
};

export type CohortStddevPopFields = {
  __typename?: 'CohortStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  year?: Maybe<Scalars['Float']['output']>;
};

export type CohortStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  year?: InputMaybe<OrderBy>;
};

export type CohortStddevSampFields = {
  __typename?: 'CohortStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  year?: Maybe<Scalars['Float']['output']>;
};

export type CohortStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  year?: InputMaybe<OrderBy>;
};

export type CohortStreamCursorInput = {
  initialValue: CohortStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type CohortStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  year?: InputMaybe<Scalars['smallint']['input']>;
};

export type CohortSumFields = {
  __typename?: 'CohortSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  year?: Maybe<Scalars['smallint']['output']>;
};

export type CohortSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  year?: InputMaybe<OrderBy>;
};

export enum CohortUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
  Year = 'year',
}

export type CohortUpdates = {
  _inc?: InputMaybe<CohortIncInput>;
  _set?: InputMaybe<CohortSetInput>;
  where: CohortBoolExp;
};

export type CohortVarPopFields = {
  __typename?: 'CohortVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  year?: Maybe<Scalars['Float']['output']>;
};

export type CohortVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  year?: InputMaybe<OrderBy>;
};

export type CohortVarSampFields = {
  __typename?: 'CohortVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  year?: Maybe<Scalars['Float']['output']>;
};

export type CohortVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  year?: InputMaybe<OrderBy>;
};

export type CohortVarianceFields = {
  __typename?: 'CohortVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  year?: Maybe<Scalars['Float']['output']>;
};

export type CohortVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  year?: InputMaybe<OrderBy>;
};

export type CompanyInfo = {
  __typename?: 'CompanyInfo';
  activity?: Maybe<Scalars['String']['output']>;
  address: AddressInfo;
  name: Scalars['String']['output'];
  nationalId: Scalars['String']['output'];
  type?: Maybe<Scalars['String']['output']>;
};

export type Content = {
  __typename?: 'Content';
  children: Array<Content>;
  childrenAggregate: ContentAggregate;
  contentAttachments: Array<ContentAttachments>;
  contentAttachmentsAggregate: ContentAttachmentsAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  favorites: Array<Favorite>;
  favoritesAggregate: FavoriteAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isAnonymous: Scalars['Boolean']['output'];
  issue?: Maybe<Issue>;
  parent?: Maybe<Content>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  reactions: Array<Reaction>;
  reactionsAggregate: ReactionAggregate;
  replies: Array<Content>;
  repliesAggregate: ContentAggregate;
  replyingTo?: Maybe<Content>;
  replyingToId?: Maybe<Scalars['bigint']['output']>;
  reports: Array<Report>;
  reportsAggregate: ReportAggregate;
  team?: Maybe<Team>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  text: Scalars['String']['output'];
  thread?: Maybe<Thread>;
  validations: Array<Validation>;
  validationsAggregate: ValidationAggregate;
  views: Array<View>;
  viewsAggregate: ViewAggregate;
  votes: Array<Vote>;
  votesAggregate: VoteAggregate;
};

export type ContentChildrenArgs = {
  distinctOn?: InputMaybe<Array<ContentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentOrderBy>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type ContentChildrenAggregateArgs = {
  distinctOn?: InputMaybe<Array<ContentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentOrderBy>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type ContentContentAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<ContentAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentAttachmentsOrderBy>>;
  where?: InputMaybe<ContentAttachmentsBoolExp>;
};

export type ContentContentAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ContentAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentAttachmentsOrderBy>>;
  where?: InputMaybe<ContentAttachmentsBoolExp>;
};

export type ContentFavoritesArgs = {
  distinctOn?: InputMaybe<Array<FavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FavoriteOrderBy>>;
  where?: InputMaybe<FavoriteBoolExp>;
};

export type ContentFavoritesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FavoriteOrderBy>>;
  where?: InputMaybe<FavoriteBoolExp>;
};

export type ContentReactionsArgs = {
  distinctOn?: InputMaybe<Array<ReactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReactionOrderBy>>;
  where?: InputMaybe<ReactionBoolExp>;
};

export type ContentReactionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ReactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReactionOrderBy>>;
  where?: InputMaybe<ReactionBoolExp>;
};

export type ContentRepliesArgs = {
  distinctOn?: InputMaybe<Array<ContentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentOrderBy>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type ContentRepliesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ContentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentOrderBy>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type ContentReportsArgs = {
  distinctOn?: InputMaybe<Array<ReportSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReportOrderBy>>;
  where?: InputMaybe<ReportBoolExp>;
};

export type ContentReportsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ReportSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReportOrderBy>>;
  where?: InputMaybe<ReportBoolExp>;
};

export type ContentValidationsArgs = {
  distinctOn?: InputMaybe<Array<ValidationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ValidationOrderBy>>;
  where?: InputMaybe<ValidationBoolExp>;
};

export type ContentValidationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ValidationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ValidationOrderBy>>;
  where?: InputMaybe<ValidationBoolExp>;
};

export type ContentViewsArgs = {
  distinctOn?: InputMaybe<Array<ViewSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ViewOrderBy>>;
  where?: InputMaybe<ViewBoolExp>;
};

export type ContentViewsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ViewSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ViewOrderBy>>;
  where?: InputMaybe<ViewBoolExp>;
};

export type ContentVotesArgs = {
  distinctOn?: InputMaybe<Array<VoteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<VoteOrderBy>>;
  where?: InputMaybe<VoteBoolExp>;
};

export type ContentVotesAggregateArgs = {
  distinctOn?: InputMaybe<Array<VoteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<VoteOrderBy>>;
  where?: InputMaybe<VoteBoolExp>;
};

export type ContentAggregate = {
  __typename?: 'ContentAggregate';
  aggregate?: Maybe<ContentAggregateFields>;
  nodes: Array<Content>;
};

export type ContentAggregateBoolExp = {
  bool_and?: InputMaybe<ContentAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<ContentAggregateBoolExpBool_Or>;
  count?: InputMaybe<ContentAggregateBoolExpCount>;
};

export type ContentAggregateFields = {
  __typename?: 'ContentAggregateFields';
  avg?: Maybe<ContentAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ContentMaxFields>;
  min?: Maybe<ContentMinFields>;
  stddev?: Maybe<ContentStddevFields>;
  stddevPop?: Maybe<ContentStddevPopFields>;
  stddevSamp?: Maybe<ContentStddevSampFields>;
  sum?: Maybe<ContentSumFields>;
  varPop?: Maybe<ContentVarPopFields>;
  varSamp?: Maybe<ContentVarSampFields>;
  variance?: Maybe<ContentVarianceFields>;
};

export type ContentAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ContentSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentAggregateOrderBy = {
  avg?: InputMaybe<ContentAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ContentMaxOrderBy>;
  min?: InputMaybe<ContentMinOrderBy>;
  stddev?: InputMaybe<ContentStddevOrderBy>;
  stddevPop?: InputMaybe<ContentStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ContentStddevSampOrderBy>;
  sum?: InputMaybe<ContentSumOrderBy>;
  varPop?: InputMaybe<ContentVarPopOrderBy>;
  varSamp?: InputMaybe<ContentVarSampOrderBy>;
  variance?: InputMaybe<ContentVarianceOrderBy>;
};

export type ContentArrRelInsertInput = {
  data: Array<ContentInsertInput>;
  onConflict?: InputMaybe<ContentOnConflict>;
};

export type ContentAttachments = {
  __typename?: 'ContentAttachments';
  content: Content;
  contentId: Scalars['bigint']['output'];
  fileUpload: FileUpload;
  fileUploadId: Scalars['bigint']['output'];
};

export type ContentAttachmentsAggregate = {
  __typename?: 'ContentAttachmentsAggregate';
  aggregate?: Maybe<ContentAttachmentsAggregateFields>;
  nodes: Array<ContentAttachments>;
};

export type ContentAttachmentsAggregateBoolExp = {
  count?: InputMaybe<ContentAttachmentsAggregateBoolExpCount>;
};

export type ContentAttachmentsAggregateFields = {
  __typename?: 'ContentAttachmentsAggregateFields';
  avg?: Maybe<ContentAttachmentsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ContentAttachmentsMaxFields>;
  min?: Maybe<ContentAttachmentsMinFields>;
  stddev?: Maybe<ContentAttachmentsStddevFields>;
  stddevPop?: Maybe<ContentAttachmentsStddevPopFields>;
  stddevSamp?: Maybe<ContentAttachmentsStddevSampFields>;
  sum?: Maybe<ContentAttachmentsSumFields>;
  varPop?: Maybe<ContentAttachmentsVarPopFields>;
  varSamp?: Maybe<ContentAttachmentsVarSampFields>;
  variance?: Maybe<ContentAttachmentsVarianceFields>;
};

export type ContentAttachmentsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ContentAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentAttachmentsAggregateOrderBy = {
  avg?: InputMaybe<ContentAttachmentsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ContentAttachmentsMaxOrderBy>;
  min?: InputMaybe<ContentAttachmentsMinOrderBy>;
  stddev?: InputMaybe<ContentAttachmentsStddevOrderBy>;
  stddevPop?: InputMaybe<ContentAttachmentsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ContentAttachmentsStddevSampOrderBy>;
  sum?: InputMaybe<ContentAttachmentsSumOrderBy>;
  varPop?: InputMaybe<ContentAttachmentsVarPopOrderBy>;
  varSamp?: InputMaybe<ContentAttachmentsVarSampOrderBy>;
  variance?: InputMaybe<ContentAttachmentsVarianceOrderBy>;
};

export type ContentAttachmentsArrRelInsertInput = {
  data: Array<ContentAttachmentsInsertInput>;
  onConflict?: InputMaybe<ContentAttachmentsOnConflict>;
};

export type ContentAttachmentsAvgFields = {
  __typename?: 'ContentAttachmentsAvgFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ContentAttachmentsAvgOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ContentAttachmentsBoolExp = {
  _and?: InputMaybe<Array<ContentAttachmentsBoolExp>>;
  _not?: InputMaybe<ContentAttachmentsBoolExp>;
  _or?: InputMaybe<Array<ContentAttachmentsBoolExp>>;
  content?: InputMaybe<ContentBoolExp>;
  contentId?: InputMaybe<BigintComparisonExp>;
  fileUpload?: InputMaybe<FileUploadBoolExp>;
  fileUploadId?: InputMaybe<BigintComparisonExp>;
};

export enum ContentAttachmentsConstraint {
  ContentAttachmentsPkey = 'content_attachments_pkey',
}

export type ContentAttachmentsIncInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ContentAttachmentsInsertInput = {
  content?: InputMaybe<ContentObjRelInsertInput>;
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  fileUpload?: InputMaybe<FileUploadObjRelInsertInput>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ContentAttachmentsMaxFields = {
  __typename?: 'ContentAttachmentsMaxFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
};

export type ContentAttachmentsMaxOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ContentAttachmentsMinFields = {
  __typename?: 'ContentAttachmentsMinFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
};

export type ContentAttachmentsMinOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ContentAttachmentsMutationResponse = {
  __typename?: 'ContentAttachmentsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ContentAttachments>;
};

export type ContentAttachmentsOnConflict = {
  constraint: ContentAttachmentsConstraint;
  updateColumns?: Array<ContentAttachmentsUpdateColumn>;
  where?: InputMaybe<ContentAttachmentsBoolExp>;
};

export type ContentAttachmentsOrderBy = {
  content?: InputMaybe<ContentOrderBy>;
  contentId?: InputMaybe<OrderBy>;
  fileUpload?: InputMaybe<FileUploadOrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ContentAttachmentsPkColumnsInput = {
  contentId: Scalars['bigint']['input'];
  fileUploadId: Scalars['bigint']['input'];
};

export enum ContentAttachmentsSelectColumn {
  ContentId = 'contentId',
  FileUploadId = 'fileUploadId',
}

export type ContentAttachmentsSetInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ContentAttachmentsStddevFields = {
  __typename?: 'ContentAttachmentsStddevFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ContentAttachmentsStddevOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ContentAttachmentsStddevPopFields = {
  __typename?: 'ContentAttachmentsStddevPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ContentAttachmentsStddevPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ContentAttachmentsStddevSampFields = {
  __typename?: 'ContentAttachmentsStddevSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ContentAttachmentsStddevSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ContentAttachmentsStreamCursorInput = {
  initialValue: ContentAttachmentsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ContentAttachmentsStreamCursorValueInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ContentAttachmentsSumFields = {
  __typename?: 'ContentAttachmentsSumFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
};

export type ContentAttachmentsSumOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export enum ContentAttachmentsUpdateColumn {
  ContentId = 'contentId',
  FileUploadId = 'fileUploadId',
}

export type ContentAttachmentsUpdates = {
  _inc?: InputMaybe<ContentAttachmentsIncInput>;
  _set?: InputMaybe<ContentAttachmentsSetInput>;
  where: ContentAttachmentsBoolExp;
};

export type ContentAttachmentsVarPopFields = {
  __typename?: 'ContentAttachmentsVarPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ContentAttachmentsVarPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ContentAttachmentsVarSampFields = {
  __typename?: 'ContentAttachmentsVarSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ContentAttachmentsVarSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ContentAttachmentsVarianceFields = {
  __typename?: 'ContentAttachmentsVarianceFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ContentAttachmentsVarianceOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ContentAvgFields = {
  __typename?: 'ContentAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  replyingToId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ContentAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  replyingToId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ContentBoolExp = {
  _and?: InputMaybe<Array<ContentBoolExp>>;
  _not?: InputMaybe<ContentBoolExp>;
  _or?: InputMaybe<Array<ContentBoolExp>>;
  children?: InputMaybe<ContentBoolExp>;
  childrenAggregate?: InputMaybe<ContentAggregateBoolExp>;
  contentAttachments?: InputMaybe<ContentAttachmentsBoolExp>;
  contentAttachmentsAggregate?: InputMaybe<ContentAttachmentsAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  favorites?: InputMaybe<FavoriteBoolExp>;
  favoritesAggregate?: InputMaybe<FavoriteAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isAnonymous?: InputMaybe<BooleanComparisonExp>;
  issue?: InputMaybe<IssueBoolExp>;
  parent?: InputMaybe<ContentBoolExp>;
  parentId?: InputMaybe<BigintComparisonExp>;
  reactions?: InputMaybe<ReactionBoolExp>;
  reactionsAggregate?: InputMaybe<ReactionAggregateBoolExp>;
  replies?: InputMaybe<ContentBoolExp>;
  repliesAggregate?: InputMaybe<ContentAggregateBoolExp>;
  replyingTo?: InputMaybe<ContentBoolExp>;
  replyingToId?: InputMaybe<BigintComparisonExp>;
  reports?: InputMaybe<ReportBoolExp>;
  reportsAggregate?: InputMaybe<ReportAggregateBoolExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  text?: InputMaybe<StringComparisonExp>;
  thread?: InputMaybe<ThreadBoolExp>;
  validations?: InputMaybe<ValidationBoolExp>;
  validationsAggregate?: InputMaybe<ValidationAggregateBoolExp>;
  views?: InputMaybe<ViewBoolExp>;
  viewsAggregate?: InputMaybe<ViewAggregateBoolExp>;
  votes?: InputMaybe<VoteBoolExp>;
  votesAggregate?: InputMaybe<VoteAggregateBoolExp>;
};

export enum ContentConstraint {
  ContentPkey = 'content_pkey',
}

export type ContentIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  replyingToId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ContentInsertInput = {
  children?: InputMaybe<ContentArrRelInsertInput>;
  contentAttachments?: InputMaybe<ContentAttachmentsArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  favorites?: InputMaybe<FavoriteArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAnonymous?: InputMaybe<Scalars['Boolean']['input']>;
  issue?: InputMaybe<IssueObjRelInsertInput>;
  parent?: InputMaybe<ContentObjRelInsertInput>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  reactions?: InputMaybe<ReactionArrRelInsertInput>;
  replies?: InputMaybe<ContentArrRelInsertInput>;
  replyingTo?: InputMaybe<ContentObjRelInsertInput>;
  replyingToId?: InputMaybe<Scalars['bigint']['input']>;
  reports?: InputMaybe<ReportArrRelInsertInput>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  thread?: InputMaybe<ThreadObjRelInsertInput>;
  validations?: InputMaybe<ValidationArrRelInsertInput>;
  views?: InputMaybe<ViewArrRelInsertInput>;
  votes?: InputMaybe<VoteArrRelInsertInput>;
};

export type ContentMaxFields = {
  __typename?: 'ContentMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  replyingToId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  text?: Maybe<Scalars['String']['output']>;
};

export type ContentMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  replyingToId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  text?: InputMaybe<OrderBy>;
};

export type ContentMinFields = {
  __typename?: 'ContentMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  replyingToId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  text?: Maybe<Scalars['String']['output']>;
};

export type ContentMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  replyingToId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  text?: InputMaybe<OrderBy>;
};

export type ContentMutationResponse = {
  __typename?: 'ContentMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Content>;
};

export type ContentObjRelInsertInput = {
  data: ContentInsertInput;
  onConflict?: InputMaybe<ContentOnConflict>;
};

export type ContentOnConflict = {
  constraint: ContentConstraint;
  updateColumns?: Array<ContentUpdateColumn>;
  where?: InputMaybe<ContentBoolExp>;
};

export type ContentOrderBy = {
  childrenAggregate?: InputMaybe<ContentAggregateOrderBy>;
  contentAttachmentsAggregate?: InputMaybe<ContentAttachmentsAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  favoritesAggregate?: InputMaybe<FavoriteAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isAnonymous?: InputMaybe<OrderBy>;
  issue?: InputMaybe<IssueOrderBy>;
  parent?: InputMaybe<ContentOrderBy>;
  parentId?: InputMaybe<OrderBy>;
  reactionsAggregate?: InputMaybe<ReactionAggregateOrderBy>;
  repliesAggregate?: InputMaybe<ContentAggregateOrderBy>;
  replyingTo?: InputMaybe<ContentOrderBy>;
  replyingToId?: InputMaybe<OrderBy>;
  reportsAggregate?: InputMaybe<ReportAggregateOrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  text?: InputMaybe<OrderBy>;
  thread?: InputMaybe<ThreadOrderBy>;
  validationsAggregate?: InputMaybe<ValidationAggregateOrderBy>;
  viewsAggregate?: InputMaybe<ViewAggregateOrderBy>;
  votesAggregate?: InputMaybe<VoteAggregateOrderBy>;
};

export type ContentPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ContentSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsAnonymous = 'isAnonymous',
  ParentId = 'parentId',
  ReplyingToId = 'replyingToId',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  Text = 'text',
}

export enum ContentSelectColumnContentAggregateBoolExpBool_AndArgumentsColumns {
  IsAnonymous = 'isAnonymous',
}

export enum ContentSelectColumnContentAggregateBoolExpBool_OrArgumentsColumns {
  IsAnonymous = 'isAnonymous',
}

export type ContentSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAnonymous?: InputMaybe<Scalars['Boolean']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  replyingToId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type ContentStddevFields = {
  __typename?: 'ContentStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  replyingToId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ContentStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  replyingToId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ContentStddevPopFields = {
  __typename?: 'ContentStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  replyingToId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ContentStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  replyingToId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ContentStddevSampFields = {
  __typename?: 'ContentStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  replyingToId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ContentStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  replyingToId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ContentStreamCursorInput = {
  initialValue: ContentStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ContentStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAnonymous?: InputMaybe<Scalars['Boolean']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  replyingToId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type ContentSumFields = {
  __typename?: 'ContentSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  replyingToId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ContentSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  replyingToId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum ContentUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsAnonymous = 'isAnonymous',
  ParentId = 'parentId',
  ReplyingToId = 'replyingToId',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  Text = 'text',
}

export type ContentUpdates = {
  _inc?: InputMaybe<ContentIncInput>;
  _set?: InputMaybe<ContentSetInput>;
  where: ContentBoolExp;
};

export type ContentVarPopFields = {
  __typename?: 'ContentVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  replyingToId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ContentVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  replyingToId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ContentVarSampFields = {
  __typename?: 'ContentVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  replyingToId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ContentVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  replyingToId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ContentVarianceFields = {
  __typename?: 'ContentVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  replyingToId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ContentVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  replyingToId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum CursorOrdering {
  Asc = 'ASC',
  Desc = 'DESC',
}

export type Document = {
  __typename?: 'Document';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  file?: Maybe<FileUpload>;
  fileId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  subject?: Maybe<Subject>;
  subjectId?: Maybe<Scalars['bigint']['output']>;
  team?: Maybe<Team>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
  yearVersion?: Maybe<Scalars['smallint']['output']>;
};

export type DocumentAggregate = {
  __typename?: 'DocumentAggregate';
  aggregate?: Maybe<DocumentAggregateFields>;
  nodes: Array<Document>;
};

export type DocumentAggregateBoolExp = {
  count?: InputMaybe<DocumentAggregateBoolExpCount>;
};

export type DocumentAggregateFields = {
  __typename?: 'DocumentAggregateFields';
  avg?: Maybe<DocumentAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<DocumentMaxFields>;
  min?: Maybe<DocumentMinFields>;
  stddev?: Maybe<DocumentStddevFields>;
  stddevPop?: Maybe<DocumentStddevPopFields>;
  stddevSamp?: Maybe<DocumentStddevSampFields>;
  sum?: Maybe<DocumentSumFields>;
  varPop?: Maybe<DocumentVarPopFields>;
  varSamp?: Maybe<DocumentVarSampFields>;
  variance?: Maybe<DocumentVarianceFields>;
};

export type DocumentAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<DocumentSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DocumentAggregateOrderBy = {
  avg?: InputMaybe<DocumentAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<DocumentMaxOrderBy>;
  min?: InputMaybe<DocumentMinOrderBy>;
  stddev?: InputMaybe<DocumentStddevOrderBy>;
  stddevPop?: InputMaybe<DocumentStddevPopOrderBy>;
  stddevSamp?: InputMaybe<DocumentStddevSampOrderBy>;
  sum?: InputMaybe<DocumentSumOrderBy>;
  varPop?: InputMaybe<DocumentVarPopOrderBy>;
  varSamp?: InputMaybe<DocumentVarSampOrderBy>;
  variance?: InputMaybe<DocumentVarianceOrderBy>;
};

export type DocumentArrRelInsertInput = {
  data: Array<DocumentInsertInput>;
  onConflict?: InputMaybe<DocumentOnConflict>;
};

export type DocumentAvgFields = {
  __typename?: 'DocumentAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  fileId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  yearVersion?: Maybe<Scalars['Float']['output']>;
};

export type DocumentAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type DocumentBoolExp = {
  _and?: InputMaybe<Array<DocumentBoolExp>>;
  _not?: InputMaybe<DocumentBoolExp>;
  _or?: InputMaybe<Array<DocumentBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  file?: InputMaybe<FileUploadBoolExp>;
  fileId?: InputMaybe<BigintComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  subject?: InputMaybe<SubjectBoolExp>;
  subjectId?: InputMaybe<BigintComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
  yearVersion?: InputMaybe<SmallintComparisonExp>;
};

export enum DocumentConstraint {
  DocumentFileIdUnique = 'document_file_id_unique',
  DocumentPkey = 'document_pkey',
}

export type DocumentIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  fileId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  subjectId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  yearVersion?: InputMaybe<Scalars['smallint']['input']>;
};

export type DocumentInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  file?: InputMaybe<FileUploadObjRelInsertInput>;
  fileId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  subject?: InputMaybe<SubjectObjRelInsertInput>;
  subjectId?: InputMaybe<Scalars['bigint']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  yearVersion?: InputMaybe<Scalars['smallint']['input']>;
};

export type DocumentMaxFields = {
  __typename?: 'DocumentMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  fileId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  subjectId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  yearVersion?: Maybe<Scalars['smallint']['output']>;
};

export type DocumentMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  fileId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type DocumentMinFields = {
  __typename?: 'DocumentMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  fileId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  subjectId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  yearVersion?: Maybe<Scalars['smallint']['output']>;
};

export type DocumentMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  fileId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type DocumentMutationResponse = {
  __typename?: 'DocumentMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Document>;
};

export type DocumentObjRelInsertInput = {
  data: DocumentInsertInput;
  onConflict?: InputMaybe<DocumentOnConflict>;
};

export type DocumentOnConflict = {
  constraint: DocumentConstraint;
  updateColumns?: Array<DocumentUpdateColumn>;
  where?: InputMaybe<DocumentBoolExp>;
};

export type DocumentOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  file?: InputMaybe<FileUploadOrderBy>;
  fileId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  subject?: InputMaybe<SubjectOrderBy>;
  subjectId?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type DocumentPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum DocumentSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  FileId = 'fileId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  SubjectId = 'subjectId',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  Type = 'type',
  YearVersion = 'yearVersion',
}

export type DocumentSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  fileId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  subjectId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  yearVersion?: InputMaybe<Scalars['smallint']['input']>;
};

export type DocumentStddevFields = {
  __typename?: 'DocumentStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  fileId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  yearVersion?: Maybe<Scalars['Float']['output']>;
};

export type DocumentStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type DocumentStddevPopFields = {
  __typename?: 'DocumentStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  fileId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  yearVersion?: Maybe<Scalars['Float']['output']>;
};

export type DocumentStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type DocumentStddevSampFields = {
  __typename?: 'DocumentStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  fileId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  yearVersion?: Maybe<Scalars['Float']['output']>;
};

export type DocumentStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type DocumentStreamCursorInput = {
  initialValue: DocumentStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type DocumentStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  fileId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  subjectId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  yearVersion?: InputMaybe<Scalars['smallint']['input']>;
};

export type DocumentSumFields = {
  __typename?: 'DocumentSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  fileId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  subjectId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  yearVersion?: Maybe<Scalars['smallint']['output']>;
};

export type DocumentSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export enum DocumentUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  FileId = 'fileId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  SubjectId = 'subjectId',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  Type = 'type',
  YearVersion = 'yearVersion',
}

export type DocumentUpdates = {
  _inc?: InputMaybe<DocumentIncInput>;
  _set?: InputMaybe<DocumentSetInput>;
  where: DocumentBoolExp;
};

export type DocumentVarPopFields = {
  __typename?: 'DocumentVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  fileId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  yearVersion?: Maybe<Scalars['Float']['output']>;
};

export type DocumentVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type DocumentVarSampFields = {
  __typename?: 'DocumentVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  fileId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  yearVersion?: Maybe<Scalars['Float']['output']>;
};

export type DocumentVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type DocumentVarianceFields = {
  __typename?: 'DocumentVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  fileId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  yearVersion?: Maybe<Scalars['Float']['output']>;
};

export type DocumentVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  fileId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  yearVersion?: InputMaybe<OrderBy>;
};

export type Event = {
  __typename?: 'Event';
  banner?: Maybe<FileUpload>;
  bannerId?: Maybe<Scalars['bigint']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  end: Scalars['timestamptz']['output'];
  eventApprovalSubmission?: Maybe<FormSubmission>;
  eventApprovalSubmissionId?: Maybe<Scalars['bigint']['output']>;
  eventApprovals: Array<EventApproval>;
  eventApprovalsAggregate: EventApprovalAggregate;
  eventFavorites: Array<EventFavorite>;
  eventFavoritesAggregate: EventFavoriteAggregate;
  eventJoins: Array<EventJoin>;
  eventJoinsAggregate: EventJoinAggregate;
  eventOrganizes: Array<EventOrganize>;
  eventOrganizesAggregate: EventOrganizeAggregate;
  eventTags: Array<EventTags>;
  eventTagsAggregate: EventTagsAggregate;
  finances: Array<Finance>;
  financesAggregate: FinanceAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isAutoAcceptingJoins: Scalars['Boolean']['output'];
  isPrivate: Scalars['Boolean']['output'];
  isTemplate: Scalars['Boolean']['output'];
  joinForm?: Maybe<Form>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  location?: Maybe<Location>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  maxParticipants?: Maybe<Scalars['smallint']['output']>;
  meta: Scalars['jsonb']['output'];
  name: Scalars['String']['output'];
  nextEventApprovalStep?: Maybe<EventApprovalStep>;
  nextEventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  pointsAwardedForAttendance: Scalars['Float']['output'];
  price: Scalars['Float']['output'];
  slug: Scalars['String']['output'];
  start: Scalars['timestamptz']['output'];
  state: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type EventEventApprovalsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type EventEventApprovalsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type EventEventFavoritesArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type EventEventFavoritesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type EventEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type EventEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type EventEventOrganizesArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type EventEventOrganizesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type EventEventTagsArgs = {
  distinctOn?: InputMaybe<Array<EventTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventTagsOrderBy>>;
  where?: InputMaybe<EventTagsBoolExp>;
};

export type EventEventTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventTagsOrderBy>>;
  where?: InputMaybe<EventTagsBoolExp>;
};

export type EventFinancesArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type EventFinancesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type EventMetaArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

export type EventAggregate = {
  __typename?: 'EventAggregate';
  aggregate?: Maybe<EventAggregateFields>;
  nodes: Array<Event>;
};

export type EventAggregateBoolExp = {
  bool_and?: InputMaybe<EventAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<EventAggregateBoolExpBool_Or>;
  count?: InputMaybe<EventAggregateBoolExpCount>;
};

export type EventAggregateFields = {
  __typename?: 'EventAggregateFields';
  avg?: Maybe<EventAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventMaxFields>;
  min?: Maybe<EventMinFields>;
  stddev?: Maybe<EventStddevFields>;
  stddevPop?: Maybe<EventStddevPopFields>;
  stddevSamp?: Maybe<EventStddevSampFields>;
  sum?: Maybe<EventSumFields>;
  varPop?: Maybe<EventVarPopFields>;
  varSamp?: Maybe<EventVarSampFields>;
  variance?: Maybe<EventVarianceFields>;
};

export type EventAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventAggregateOrderBy = {
  avg?: InputMaybe<EventAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventMaxOrderBy>;
  min?: InputMaybe<EventMinOrderBy>;
  stddev?: InputMaybe<EventStddevOrderBy>;
  stddevPop?: InputMaybe<EventStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventStddevSampOrderBy>;
  sum?: InputMaybe<EventSumOrderBy>;
  varPop?: InputMaybe<EventVarPopOrderBy>;
  varSamp?: InputMaybe<EventVarSampOrderBy>;
  variance?: InputMaybe<EventVarianceOrderBy>;
};

export type EventAppendInput = {
  meta?: InputMaybe<Scalars['jsonb']['input']>;
};

export type EventApproval = {
  __typename?: 'EventApproval';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  event?: Maybe<Event>;
  eventApprovalStep?: Maybe<EventApprovalStep>;
  eventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isApproved: Scalars['Boolean']['output'];
  message: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type EventApprovalAggregate = {
  __typename?: 'EventApprovalAggregate';
  aggregate?: Maybe<EventApprovalAggregateFields>;
  nodes: Array<EventApproval>;
};

export type EventApprovalAggregateBoolExp = {
  bool_and?: InputMaybe<EventApprovalAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<EventApprovalAggregateBoolExpBool_Or>;
  count?: InputMaybe<EventApprovalAggregateBoolExpCount>;
};

export type EventApprovalAggregateFields = {
  __typename?: 'EventApprovalAggregateFields';
  avg?: Maybe<EventApprovalAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventApprovalMaxFields>;
  min?: Maybe<EventApprovalMinFields>;
  stddev?: Maybe<EventApprovalStddevFields>;
  stddevPop?: Maybe<EventApprovalStddevPopFields>;
  stddevSamp?: Maybe<EventApprovalStddevSampFields>;
  sum?: Maybe<EventApprovalSumFields>;
  varPop?: Maybe<EventApprovalVarPopFields>;
  varSamp?: Maybe<EventApprovalVarSampFields>;
  variance?: Maybe<EventApprovalVarianceFields>;
};

export type EventApprovalAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventApprovalSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventApprovalAggregateOrderBy = {
  avg?: InputMaybe<EventApprovalAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventApprovalMaxOrderBy>;
  min?: InputMaybe<EventApprovalMinOrderBy>;
  stddev?: InputMaybe<EventApprovalStddevOrderBy>;
  stddevPop?: InputMaybe<EventApprovalStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventApprovalStddevSampOrderBy>;
  sum?: InputMaybe<EventApprovalSumOrderBy>;
  varPop?: InputMaybe<EventApprovalVarPopOrderBy>;
  varSamp?: InputMaybe<EventApprovalVarSampOrderBy>;
  variance?: InputMaybe<EventApprovalVarianceOrderBy>;
};

export type EventApprovalArrRelInsertInput = {
  data: Array<EventApprovalInsertInput>;
  onConflict?: InputMaybe<EventApprovalOnConflict>;
};

export type EventApprovalAvgFields = {
  __typename?: 'EventApprovalAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalBoolExp = {
  _and?: InputMaybe<Array<EventApprovalBoolExp>>;
  _not?: InputMaybe<EventApprovalBoolExp>;
  _or?: InputMaybe<Array<EventApprovalBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  event?: InputMaybe<EventBoolExp>;
  eventApprovalStep?: InputMaybe<EventApprovalStepBoolExp>;
  eventApprovalStepId?: InputMaybe<BigintComparisonExp>;
  eventId?: InputMaybe<BigintComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isApproved?: InputMaybe<BooleanComparisonExp>;
  message?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum EventApprovalConstraint {
  EventApprovalPkey = 'event_approval_pkey',
}

export type EventApprovalIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  event?: InputMaybe<EventObjRelInsertInput>;
  eventApprovalStep?: InputMaybe<EventApprovalStepObjRelInsertInput>;
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isApproved?: InputMaybe<Scalars['Boolean']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalMaxFields = {
  __typename?: 'EventApprovalMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  message?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalMinFields = {
  __typename?: 'EventApprovalMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  message?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalMutationResponse = {
  __typename?: 'EventApprovalMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventApproval>;
};

export type EventApprovalOnConflict = {
  constraint: EventApprovalConstraint;
  updateColumns?: Array<EventApprovalUpdateColumn>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type EventApprovalOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  event?: InputMaybe<EventOrderBy>;
  eventApprovalStep?: InputMaybe<EventApprovalStepOrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isApproved?: InputMaybe<OrderBy>;
  message?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum EventApprovalSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventApprovalStepId = 'eventApprovalStepId',
  EventId = 'eventId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsApproved = 'isApproved',
  Message = 'message',
  TenantId = 'tenantId',
}

export enum EventApprovalSelectColumnEventApprovalAggregateBoolExpBool_AndArgumentsColumns {
  IsApproved = 'isApproved',
}

export enum EventApprovalSelectColumnEventApprovalAggregateBoolExpBool_OrArgumentsColumns {
  IsApproved = 'isApproved',
}

export type EventApprovalSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isApproved?: InputMaybe<Scalars['Boolean']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStddevFields = {
  __typename?: 'EventApprovalStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalStddevPopFields = {
  __typename?: 'EventApprovalStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalStddevSampFields = {
  __typename?: 'EventApprovalStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalStep = {
  __typename?: 'EventApprovalStep';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  eventApprovalStepNotifiees: Array<EventApprovalStepNotifiees>;
  eventApprovalStepNotifieesAggregate: EventApprovalStepNotifieesAggregate;
  eventApprovalStepValidators: Array<EventApprovalStepValidators>;
  eventApprovalStepValidatorsAggregate: EventApprovalStepValidatorsAggregate;
  eventApprovals: Array<EventApproval>;
  eventApprovalsAggregate: EventApprovalAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  nextStepEvents: Array<Event>;
  nextStepEventsAggregate: EventAggregate;
  nextSteps: Array<EventApprovalStep>;
  nextStepsAggregate: EventApprovalStepAggregate;
  order: Scalars['Int']['output'];
  previousStep?: Maybe<EventApprovalStep>;
  previousStepId?: Maybe<Scalars['bigint']['output']>;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type EventApprovalStepEventApprovalStepNotifieesArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepNotifieesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepNotifieesOrderBy>>;
  where?: InputMaybe<EventApprovalStepNotifieesBoolExp>;
};

export type EventApprovalStepEventApprovalStepNotifieesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepNotifieesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepNotifieesOrderBy>>;
  where?: InputMaybe<EventApprovalStepNotifieesBoolExp>;
};

export type EventApprovalStepEventApprovalStepValidatorsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepValidatorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepValidatorsOrderBy>>;
  where?: InputMaybe<EventApprovalStepValidatorsBoolExp>;
};

export type EventApprovalStepEventApprovalStepValidatorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepValidatorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepValidatorsOrderBy>>;
  where?: InputMaybe<EventApprovalStepValidatorsBoolExp>;
};

export type EventApprovalStepEventApprovalsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type EventApprovalStepEventApprovalsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type EventApprovalStepNextStepEventsArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type EventApprovalStepNextStepEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type EventApprovalStepNextStepsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type EventApprovalStepNextStepsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type EventApprovalStepAggregate = {
  __typename?: 'EventApprovalStepAggregate';
  aggregate?: Maybe<EventApprovalStepAggregateFields>;
  nodes: Array<EventApprovalStep>;
};

export type EventApprovalStepAggregateBoolExp = {
  count?: InputMaybe<EventApprovalStepAggregateBoolExpCount>;
};

export type EventApprovalStepAggregateFields = {
  __typename?: 'EventApprovalStepAggregateFields';
  avg?: Maybe<EventApprovalStepAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventApprovalStepMaxFields>;
  min?: Maybe<EventApprovalStepMinFields>;
  stddev?: Maybe<EventApprovalStepStddevFields>;
  stddevPop?: Maybe<EventApprovalStepStddevPopFields>;
  stddevSamp?: Maybe<EventApprovalStepStddevSampFields>;
  sum?: Maybe<EventApprovalStepSumFields>;
  varPop?: Maybe<EventApprovalStepVarPopFields>;
  varSamp?: Maybe<EventApprovalStepVarSampFields>;
  variance?: Maybe<EventApprovalStepVarianceFields>;
};

export type EventApprovalStepAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventApprovalStepAggregateOrderBy = {
  avg?: InputMaybe<EventApprovalStepAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventApprovalStepMaxOrderBy>;
  min?: InputMaybe<EventApprovalStepMinOrderBy>;
  stddev?: InputMaybe<EventApprovalStepStddevOrderBy>;
  stddevPop?: InputMaybe<EventApprovalStepStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventApprovalStepStddevSampOrderBy>;
  sum?: InputMaybe<EventApprovalStepSumOrderBy>;
  varPop?: InputMaybe<EventApprovalStepVarPopOrderBy>;
  varSamp?: InputMaybe<EventApprovalStepVarSampOrderBy>;
  variance?: InputMaybe<EventApprovalStepVarianceOrderBy>;
};

export type EventApprovalStepArrRelInsertInput = {
  data: Array<EventApprovalStepInsertInput>;
  onConflict?: InputMaybe<EventApprovalStepOnConflict>;
};

export type EventApprovalStepAvgFields = {
  __typename?: 'EventApprovalStepAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  previousStepId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepBoolExp = {
  _and?: InputMaybe<Array<EventApprovalStepBoolExp>>;
  _not?: InputMaybe<EventApprovalStepBoolExp>;
  _or?: InputMaybe<Array<EventApprovalStepBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  eventApprovalStepNotifiees?: InputMaybe<EventApprovalStepNotifieesBoolExp>;
  eventApprovalStepNotifieesAggregate?: InputMaybe<EventApprovalStepNotifieesAggregateBoolExp>;
  eventApprovalStepValidators?: InputMaybe<EventApprovalStepValidatorsBoolExp>;
  eventApprovalStepValidatorsAggregate?: InputMaybe<EventApprovalStepValidatorsAggregateBoolExp>;
  eventApprovals?: InputMaybe<EventApprovalBoolExp>;
  eventApprovalsAggregate?: InputMaybe<EventApprovalAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  nextStepEvents?: InputMaybe<EventBoolExp>;
  nextStepEventsAggregate?: InputMaybe<EventAggregateBoolExp>;
  nextSteps?: InputMaybe<EventApprovalStepBoolExp>;
  nextStepsAggregate?: InputMaybe<EventApprovalStepAggregateBoolExp>;
  order?: InputMaybe<IntComparisonExp>;
  previousStep?: InputMaybe<EventApprovalStepBoolExp>;
  previousStepId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum EventApprovalStepConstraint {
  EventApprovalStepPkey = 'event_approval_step_pkey',
}

export type EventApprovalStepIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  previousStepId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventApprovalStepNotifiees?: InputMaybe<EventApprovalStepNotifieesArrRelInsertInput>;
  eventApprovalStepValidators?: InputMaybe<EventApprovalStepValidatorsArrRelInsertInput>;
  eventApprovals?: InputMaybe<EventApprovalArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nextStepEvents?: InputMaybe<EventArrRelInsertInput>;
  nextSteps?: InputMaybe<EventApprovalStepArrRelInsertInput>;
  order?: InputMaybe<Scalars['Int']['input']>;
  previousStep?: InputMaybe<EventApprovalStepObjRelInsertInput>;
  previousStepId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepMaxFields = {
  __typename?: 'EventApprovalStepMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  previousStepId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalStepMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepMinFields = {
  __typename?: 'EventApprovalStepMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  previousStepId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalStepMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepMutationResponse = {
  __typename?: 'EventApprovalStepMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventApprovalStep>;
};

export type EventApprovalStepNotifiees = {
  __typename?: 'EventApprovalStepNotifiees';
  eventApprovalStep: EventApprovalStep;
  eventApprovalStepId: Scalars['bigint']['output'];
  individual: Individual;
  individualId: Scalars['bigint']['output'];
};

export type EventApprovalStepNotifieesAggregate = {
  __typename?: 'EventApprovalStepNotifieesAggregate';
  aggregate?: Maybe<EventApprovalStepNotifieesAggregateFields>;
  nodes: Array<EventApprovalStepNotifiees>;
};

export type EventApprovalStepNotifieesAggregateBoolExp = {
  count?: InputMaybe<EventApprovalStepNotifieesAggregateBoolExpCount>;
};

export type EventApprovalStepNotifieesAggregateFields = {
  __typename?: 'EventApprovalStepNotifieesAggregateFields';
  avg?: Maybe<EventApprovalStepNotifieesAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventApprovalStepNotifieesMaxFields>;
  min?: Maybe<EventApprovalStepNotifieesMinFields>;
  stddev?: Maybe<EventApprovalStepNotifieesStddevFields>;
  stddevPop?: Maybe<EventApprovalStepNotifieesStddevPopFields>;
  stddevSamp?: Maybe<EventApprovalStepNotifieesStddevSampFields>;
  sum?: Maybe<EventApprovalStepNotifieesSumFields>;
  varPop?: Maybe<EventApprovalStepNotifieesVarPopFields>;
  varSamp?: Maybe<EventApprovalStepNotifieesVarSampFields>;
  variance?: Maybe<EventApprovalStepNotifieesVarianceFields>;
};

export type EventApprovalStepNotifieesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventApprovalStepNotifieesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventApprovalStepNotifieesAggregateOrderBy = {
  avg?: InputMaybe<EventApprovalStepNotifieesAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventApprovalStepNotifieesMaxOrderBy>;
  min?: InputMaybe<EventApprovalStepNotifieesMinOrderBy>;
  stddev?: InputMaybe<EventApprovalStepNotifieesStddevOrderBy>;
  stddevPop?: InputMaybe<EventApprovalStepNotifieesStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventApprovalStepNotifieesStddevSampOrderBy>;
  sum?: InputMaybe<EventApprovalStepNotifieesSumOrderBy>;
  varPop?: InputMaybe<EventApprovalStepNotifieesVarPopOrderBy>;
  varSamp?: InputMaybe<EventApprovalStepNotifieesVarSampOrderBy>;
  variance?: InputMaybe<EventApprovalStepNotifieesVarianceOrderBy>;
};

export type EventApprovalStepNotifieesArrRelInsertInput = {
  data: Array<EventApprovalStepNotifieesInsertInput>;
  onConflict?: InputMaybe<EventApprovalStepNotifieesOnConflict>;
};

export type EventApprovalStepNotifieesAvgFields = {
  __typename?: 'EventApprovalStepNotifieesAvgFields';
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepNotifieesAvgOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepNotifieesBoolExp = {
  _and?: InputMaybe<Array<EventApprovalStepNotifieesBoolExp>>;
  _not?: InputMaybe<EventApprovalStepNotifieesBoolExp>;
  _or?: InputMaybe<Array<EventApprovalStepNotifieesBoolExp>>;
  eventApprovalStep?: InputMaybe<EventApprovalStepBoolExp>;
  eventApprovalStepId?: InputMaybe<BigintComparisonExp>;
  individual?: InputMaybe<IndividualBoolExp>;
  individualId?: InputMaybe<BigintComparisonExp>;
};

export enum EventApprovalStepNotifieesConstraint {
  EventApprovalStepNotifieesPkey = 'event_approval_step_notifiees_pkey',
}

export type EventApprovalStepNotifieesIncInput = {
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepNotifieesInsertInput = {
  eventApprovalStep?: InputMaybe<EventApprovalStepObjRelInsertInput>;
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  individual?: InputMaybe<IndividualObjRelInsertInput>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepNotifieesMaxFields = {
  __typename?: 'EventApprovalStepNotifieesMaxFields';
  eventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  individualId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalStepNotifieesMaxOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepNotifieesMinFields = {
  __typename?: 'EventApprovalStepNotifieesMinFields';
  eventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  individualId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalStepNotifieesMinOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepNotifieesMutationResponse = {
  __typename?: 'EventApprovalStepNotifieesMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventApprovalStepNotifiees>;
};

export type EventApprovalStepNotifieesOnConflict = {
  constraint: EventApprovalStepNotifieesConstraint;
  updateColumns?: Array<EventApprovalStepNotifieesUpdateColumn>;
  where?: InputMaybe<EventApprovalStepNotifieesBoolExp>;
};

export type EventApprovalStepNotifieesOrderBy = {
  eventApprovalStep?: InputMaybe<EventApprovalStepOrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individual?: InputMaybe<IndividualOrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepNotifieesPkColumnsInput = {
  eventApprovalStepId: Scalars['bigint']['input'];
  individualId: Scalars['bigint']['input'];
};

export enum EventApprovalStepNotifieesSelectColumn {
  EventApprovalStepId = 'eventApprovalStepId',
  IndividualId = 'individualId',
}

export type EventApprovalStepNotifieesSetInput = {
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepNotifieesStddevFields = {
  __typename?: 'EventApprovalStepNotifieesStddevFields';
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepNotifieesStddevOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepNotifieesStddevPopFields = {
  __typename?: 'EventApprovalStepNotifieesStddevPopFields';
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepNotifieesStddevPopOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepNotifieesStddevSampFields = {
  __typename?: 'EventApprovalStepNotifieesStddevSampFields';
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepNotifieesStddevSampOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepNotifieesStreamCursorInput = {
  initialValue: EventApprovalStepNotifieesStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventApprovalStepNotifieesStreamCursorValueInput = {
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepNotifieesSumFields = {
  __typename?: 'EventApprovalStepNotifieesSumFields';
  eventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  individualId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalStepNotifieesSumOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export enum EventApprovalStepNotifieesUpdateColumn {
  EventApprovalStepId = 'eventApprovalStepId',
  IndividualId = 'individualId',
}

export type EventApprovalStepNotifieesUpdates = {
  _inc?: InputMaybe<EventApprovalStepNotifieesIncInput>;
  _set?: InputMaybe<EventApprovalStepNotifieesSetInput>;
  where: EventApprovalStepNotifieesBoolExp;
};

export type EventApprovalStepNotifieesVarPopFields = {
  __typename?: 'EventApprovalStepNotifieesVarPopFields';
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepNotifieesVarPopOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepNotifieesVarSampFields = {
  __typename?: 'EventApprovalStepNotifieesVarSampFields';
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepNotifieesVarSampOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepNotifieesVarianceFields = {
  __typename?: 'EventApprovalStepNotifieesVarianceFields';
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepNotifieesVarianceOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepObjRelInsertInput = {
  data: EventApprovalStepInsertInput;
  onConflict?: InputMaybe<EventApprovalStepOnConflict>;
};

export type EventApprovalStepOnConflict = {
  constraint: EventApprovalStepConstraint;
  updateColumns?: Array<EventApprovalStepUpdateColumn>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type EventApprovalStepOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventApprovalStepNotifieesAggregate?: InputMaybe<EventApprovalStepNotifieesAggregateOrderBy>;
  eventApprovalStepValidatorsAggregate?: InputMaybe<EventApprovalStepValidatorsAggregateOrderBy>;
  eventApprovalsAggregate?: InputMaybe<EventApprovalAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  nextStepEventsAggregate?: InputMaybe<EventAggregateOrderBy>;
  nextStepsAggregate?: InputMaybe<EventApprovalStepAggregateOrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStep?: InputMaybe<EventApprovalStepOrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum EventApprovalStepSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  Order = 'order',
  PreviousStepId = 'previousStepId',
  TenantId = 'tenantId',
}

export type EventApprovalStepSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  previousStepId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepStddevFields = {
  __typename?: 'EventApprovalStepStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  previousStepId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepStddevPopFields = {
  __typename?: 'EventApprovalStepStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  previousStepId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepStddevSampFields = {
  __typename?: 'EventApprovalStepStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  previousStepId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepStreamCursorInput = {
  initialValue: EventApprovalStepStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventApprovalStepStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  previousStepId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepSumFields = {
  __typename?: 'EventApprovalStepSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  previousStepId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalStepSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum EventApprovalStepUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  Order = 'order',
  PreviousStepId = 'previousStepId',
  TenantId = 'tenantId',
}

export type EventApprovalStepUpdates = {
  _inc?: InputMaybe<EventApprovalStepIncInput>;
  _set?: InputMaybe<EventApprovalStepSetInput>;
  where: EventApprovalStepBoolExp;
};

export type EventApprovalStepValidators = {
  __typename?: 'EventApprovalStepValidators';
  eventApprovalStep: EventApprovalStep;
  eventApprovalStepId: Scalars['bigint']['output'];
  individual: Individual;
  individualId: Scalars['bigint']['output'];
};

export type EventApprovalStepValidatorsAggregate = {
  __typename?: 'EventApprovalStepValidatorsAggregate';
  aggregate?: Maybe<EventApprovalStepValidatorsAggregateFields>;
  nodes: Array<EventApprovalStepValidators>;
};

export type EventApprovalStepValidatorsAggregateBoolExp = {
  count?: InputMaybe<EventApprovalStepValidatorsAggregateBoolExpCount>;
};

export type EventApprovalStepValidatorsAggregateFields = {
  __typename?: 'EventApprovalStepValidatorsAggregateFields';
  avg?: Maybe<EventApprovalStepValidatorsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventApprovalStepValidatorsMaxFields>;
  min?: Maybe<EventApprovalStepValidatorsMinFields>;
  stddev?: Maybe<EventApprovalStepValidatorsStddevFields>;
  stddevPop?: Maybe<EventApprovalStepValidatorsStddevPopFields>;
  stddevSamp?: Maybe<EventApprovalStepValidatorsStddevSampFields>;
  sum?: Maybe<EventApprovalStepValidatorsSumFields>;
  varPop?: Maybe<EventApprovalStepValidatorsVarPopFields>;
  varSamp?: Maybe<EventApprovalStepValidatorsVarSampFields>;
  variance?: Maybe<EventApprovalStepValidatorsVarianceFields>;
};

export type EventApprovalStepValidatorsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventApprovalStepValidatorsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventApprovalStepValidatorsAggregateOrderBy = {
  avg?: InputMaybe<EventApprovalStepValidatorsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventApprovalStepValidatorsMaxOrderBy>;
  min?: InputMaybe<EventApprovalStepValidatorsMinOrderBy>;
  stddev?: InputMaybe<EventApprovalStepValidatorsStddevOrderBy>;
  stddevPop?: InputMaybe<EventApprovalStepValidatorsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventApprovalStepValidatorsStddevSampOrderBy>;
  sum?: InputMaybe<EventApprovalStepValidatorsSumOrderBy>;
  varPop?: InputMaybe<EventApprovalStepValidatorsVarPopOrderBy>;
  varSamp?: InputMaybe<EventApprovalStepValidatorsVarSampOrderBy>;
  variance?: InputMaybe<EventApprovalStepValidatorsVarianceOrderBy>;
};

export type EventApprovalStepValidatorsArrRelInsertInput = {
  data: Array<EventApprovalStepValidatorsInsertInput>;
  onConflict?: InputMaybe<EventApprovalStepValidatorsOnConflict>;
};

export type EventApprovalStepValidatorsAvgFields = {
  __typename?: 'EventApprovalStepValidatorsAvgFields';
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepValidatorsAvgOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepValidatorsBoolExp = {
  _and?: InputMaybe<Array<EventApprovalStepValidatorsBoolExp>>;
  _not?: InputMaybe<EventApprovalStepValidatorsBoolExp>;
  _or?: InputMaybe<Array<EventApprovalStepValidatorsBoolExp>>;
  eventApprovalStep?: InputMaybe<EventApprovalStepBoolExp>;
  eventApprovalStepId?: InputMaybe<BigintComparisonExp>;
  individual?: InputMaybe<IndividualBoolExp>;
  individualId?: InputMaybe<BigintComparisonExp>;
};

export enum EventApprovalStepValidatorsConstraint {
  EventApprovalStepValidatorsPkey = 'event_approval_step_validators_pkey',
}

export type EventApprovalStepValidatorsIncInput = {
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepValidatorsInsertInput = {
  eventApprovalStep?: InputMaybe<EventApprovalStepObjRelInsertInput>;
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  individual?: InputMaybe<IndividualObjRelInsertInput>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepValidatorsMaxFields = {
  __typename?: 'EventApprovalStepValidatorsMaxFields';
  eventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  individualId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalStepValidatorsMaxOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepValidatorsMinFields = {
  __typename?: 'EventApprovalStepValidatorsMinFields';
  eventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  individualId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalStepValidatorsMinOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepValidatorsMutationResponse = {
  __typename?: 'EventApprovalStepValidatorsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventApprovalStepValidators>;
};

export type EventApprovalStepValidatorsOnConflict = {
  constraint: EventApprovalStepValidatorsConstraint;
  updateColumns?: Array<EventApprovalStepValidatorsUpdateColumn>;
  where?: InputMaybe<EventApprovalStepValidatorsBoolExp>;
};

export type EventApprovalStepValidatorsOrderBy = {
  eventApprovalStep?: InputMaybe<EventApprovalStepOrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individual?: InputMaybe<IndividualOrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepValidatorsPkColumnsInput = {
  eventApprovalStepId: Scalars['bigint']['input'];
  individualId: Scalars['bigint']['input'];
};

export enum EventApprovalStepValidatorsSelectColumn {
  EventApprovalStepId = 'eventApprovalStepId',
  IndividualId = 'individualId',
}

export type EventApprovalStepValidatorsSetInput = {
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepValidatorsStddevFields = {
  __typename?: 'EventApprovalStepValidatorsStddevFields';
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepValidatorsStddevOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepValidatorsStddevPopFields = {
  __typename?: 'EventApprovalStepValidatorsStddevPopFields';
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepValidatorsStddevPopOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepValidatorsStddevSampFields = {
  __typename?: 'EventApprovalStepValidatorsStddevSampFields';
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepValidatorsStddevSampOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepValidatorsStreamCursorInput = {
  initialValue: EventApprovalStepValidatorsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventApprovalStepValidatorsStreamCursorValueInput = {
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalStepValidatorsSumFields = {
  __typename?: 'EventApprovalStepValidatorsSumFields';
  eventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  individualId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalStepValidatorsSumOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export enum EventApprovalStepValidatorsUpdateColumn {
  EventApprovalStepId = 'eventApprovalStepId',
  IndividualId = 'individualId',
}

export type EventApprovalStepValidatorsUpdates = {
  _inc?: InputMaybe<EventApprovalStepValidatorsIncInput>;
  _set?: InputMaybe<EventApprovalStepValidatorsSetInput>;
  where: EventApprovalStepValidatorsBoolExp;
};

export type EventApprovalStepValidatorsVarPopFields = {
  __typename?: 'EventApprovalStepValidatorsVarPopFields';
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepValidatorsVarPopOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepValidatorsVarSampFields = {
  __typename?: 'EventApprovalStepValidatorsVarSampFields';
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepValidatorsVarSampOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepValidatorsVarianceFields = {
  __typename?: 'EventApprovalStepValidatorsVarianceFields';
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepValidatorsVarianceOrderBy = {
  eventApprovalStepId?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepVarPopFields = {
  __typename?: 'EventApprovalStepVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  previousStepId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepVarSampFields = {
  __typename?: 'EventApprovalStepVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  previousStepId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalStepVarianceFields = {
  __typename?: 'EventApprovalStepVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  previousStepId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalStepVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  previousStepId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalStreamCursorInput = {
  initialValue: EventApprovalStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventApprovalStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isApproved?: InputMaybe<Scalars['Boolean']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventApprovalSumFields = {
  __typename?: 'EventApprovalSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventApprovalSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum EventApprovalUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventApprovalStepId = 'eventApprovalStepId',
  EventId = 'eventId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsApproved = 'isApproved',
  Message = 'message',
  TenantId = 'tenantId',
}

export type EventApprovalUpdates = {
  _inc?: InputMaybe<EventApprovalIncInput>;
  _set?: InputMaybe<EventApprovalSetInput>;
  where: EventApprovalBoolExp;
};

export type EventApprovalVarPopFields = {
  __typename?: 'EventApprovalVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalVarSampFields = {
  __typename?: 'EventApprovalVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventApprovalVarianceFields = {
  __typename?: 'EventApprovalVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventApprovalVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventApprovalStepId?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventArrRelInsertInput = {
  data: Array<EventInsertInput>;
  onConflict?: InputMaybe<EventOnConflict>;
};

export type EventAvgFields = {
  __typename?: 'EventAvgFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  maxParticipants?: Maybe<Scalars['Float']['output']>;
  nextEventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventAvgOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventApprovalSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextEventApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventBoolExp = {
  _and?: InputMaybe<Array<EventBoolExp>>;
  _not?: InputMaybe<EventBoolExp>;
  _or?: InputMaybe<Array<EventBoolExp>>;
  banner?: InputMaybe<FileUploadBoolExp>;
  bannerId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  end?: InputMaybe<TimestamptzComparisonExp>;
  eventApprovalSubmission?: InputMaybe<FormSubmissionBoolExp>;
  eventApprovalSubmissionId?: InputMaybe<BigintComparisonExp>;
  eventApprovals?: InputMaybe<EventApprovalBoolExp>;
  eventApprovalsAggregate?: InputMaybe<EventApprovalAggregateBoolExp>;
  eventFavorites?: InputMaybe<EventFavoriteBoolExp>;
  eventFavoritesAggregate?: InputMaybe<EventFavoriteAggregateBoolExp>;
  eventJoins?: InputMaybe<EventJoinBoolExp>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  eventOrganizes?: InputMaybe<EventOrganizeBoolExp>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateBoolExp>;
  eventTags?: InputMaybe<EventTagsBoolExp>;
  eventTagsAggregate?: InputMaybe<EventTagsAggregateBoolExp>;
  finances?: InputMaybe<FinanceBoolExp>;
  financesAggregate?: InputMaybe<FinanceAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isAutoAcceptingJoins?: InputMaybe<BooleanComparisonExp>;
  isPrivate?: InputMaybe<BooleanComparisonExp>;
  isTemplate?: InputMaybe<BooleanComparisonExp>;
  joinForm?: InputMaybe<FormBoolExp>;
  joinFormId?: InputMaybe<BigintComparisonExp>;
  location?: InputMaybe<LocationBoolExp>;
  locationId?: InputMaybe<BigintComparisonExp>;
  maxParticipants?: InputMaybe<SmallintComparisonExp>;
  meta?: InputMaybe<JsonbComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  nextEventApprovalStep?: InputMaybe<EventApprovalStepBoolExp>;
  nextEventApprovalStepId?: InputMaybe<BigintComparisonExp>;
  pointsAwardedForAttendance?: InputMaybe<FloatComparisonExp>;
  price?: InputMaybe<FloatComparisonExp>;
  slug?: InputMaybe<StringComparisonExp>;
  start?: InputMaybe<TimestamptzComparisonExp>;
  state?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum EventConstraint {
  EventEventApprovalSubmissionIdUnique = 'event_event_approval_submission_id_unique',
  EventPkey = 'event_pkey',
  EventSlugUnique = 'event_slug_unique',
}

export type EventDeleteAtPathInput = {
  meta?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type EventDeleteElemInput = {
  meta?: InputMaybe<Scalars['Int']['input']>;
};

export type EventDeleteKeyInput = {
  meta?: InputMaybe<Scalars['String']['input']>;
};

export type EventFavorite = {
  __typename?: 'EventFavorite';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  event: Event;
  eventId: Scalars['bigint']['output'];
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type EventFavoriteAggregate = {
  __typename?: 'EventFavoriteAggregate';
  aggregate?: Maybe<EventFavoriteAggregateFields>;
  nodes: Array<EventFavorite>;
};

export type EventFavoriteAggregateBoolExp = {
  count?: InputMaybe<EventFavoriteAggregateBoolExpCount>;
};

export type EventFavoriteAggregateFields = {
  __typename?: 'EventFavoriteAggregateFields';
  avg?: Maybe<EventFavoriteAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventFavoriteMaxFields>;
  min?: Maybe<EventFavoriteMinFields>;
  stddev?: Maybe<EventFavoriteStddevFields>;
  stddevPop?: Maybe<EventFavoriteStddevPopFields>;
  stddevSamp?: Maybe<EventFavoriteStddevSampFields>;
  sum?: Maybe<EventFavoriteSumFields>;
  varPop?: Maybe<EventFavoriteVarPopFields>;
  varSamp?: Maybe<EventFavoriteVarSampFields>;
  variance?: Maybe<EventFavoriteVarianceFields>;
};

export type EventFavoriteAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventFavoriteAggregateOrderBy = {
  avg?: InputMaybe<EventFavoriteAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventFavoriteMaxOrderBy>;
  min?: InputMaybe<EventFavoriteMinOrderBy>;
  stddev?: InputMaybe<EventFavoriteStddevOrderBy>;
  stddevPop?: InputMaybe<EventFavoriteStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventFavoriteStddevSampOrderBy>;
  sum?: InputMaybe<EventFavoriteSumOrderBy>;
  varPop?: InputMaybe<EventFavoriteVarPopOrderBy>;
  varSamp?: InputMaybe<EventFavoriteVarSampOrderBy>;
  variance?: InputMaybe<EventFavoriteVarianceOrderBy>;
};

export type EventFavoriteArrRelInsertInput = {
  data: Array<EventFavoriteInsertInput>;
  onConflict?: InputMaybe<EventFavoriteOnConflict>;
};

export type EventFavoriteAvgFields = {
  __typename?: 'EventFavoriteAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventFavoriteAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventFavoriteBoolExp = {
  _and?: InputMaybe<Array<EventFavoriteBoolExp>>;
  _not?: InputMaybe<EventFavoriteBoolExp>;
  _or?: InputMaybe<Array<EventFavoriteBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  event?: InputMaybe<EventBoolExp>;
  eventId?: InputMaybe<BigintComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum EventFavoriteConstraint {
  EventFavoritePkey = 'event_favorite_pkey',
}

export type EventFavoriteIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventFavoriteInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  event?: InputMaybe<EventObjRelInsertInput>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventFavoriteMaxFields = {
  __typename?: 'EventFavoriteMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventFavoriteMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventFavoriteMinFields = {
  __typename?: 'EventFavoriteMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventFavoriteMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventFavoriteMutationResponse = {
  __typename?: 'EventFavoriteMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventFavorite>;
};

export type EventFavoriteOnConflict = {
  constraint: EventFavoriteConstraint;
  updateColumns?: Array<EventFavoriteUpdateColumn>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type EventFavoriteOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  event?: InputMaybe<EventOrderBy>;
  eventId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventFavoritePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum EventFavoriteSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventId = 'eventId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
}

export type EventFavoriteSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventFavoriteStddevFields = {
  __typename?: 'EventFavoriteStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventFavoriteStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventFavoriteStddevPopFields = {
  __typename?: 'EventFavoriteStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventFavoriteStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventFavoriteStddevSampFields = {
  __typename?: 'EventFavoriteStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventFavoriteStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventFavoriteStreamCursorInput = {
  initialValue: EventFavoriteStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventFavoriteStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventFavoriteSumFields = {
  __typename?: 'EventFavoriteSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventFavoriteSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum EventFavoriteUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventId = 'eventId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
}

export type EventFavoriteUpdates = {
  _inc?: InputMaybe<EventFavoriteIncInput>;
  _set?: InputMaybe<EventFavoriteSetInput>;
  where: EventFavoriteBoolExp;
};

export type EventFavoriteVarPopFields = {
  __typename?: 'EventFavoriteVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventFavoriteVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventFavoriteVarSampFields = {
  __typename?: 'EventFavoriteVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventFavoriteVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventFavoriteVarianceFields = {
  __typename?: 'EventFavoriteVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventFavoriteVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventIncInput = {
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventApprovalSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  maxParticipants?: InputMaybe<Scalars['smallint']['input']>;
  nextEventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  pointsAwardedForAttendance?: InputMaybe<Scalars['Float']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventInsertInput = {
  banner?: InputMaybe<FileUploadObjRelInsertInput>;
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['timestamptz']['input']>;
  eventApprovalSubmission?: InputMaybe<FormSubmissionObjRelInsertInput>;
  eventApprovalSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  eventApprovals?: InputMaybe<EventApprovalArrRelInsertInput>;
  eventFavorites?: InputMaybe<EventFavoriteArrRelInsertInput>;
  eventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  eventOrganizes?: InputMaybe<EventOrganizeArrRelInsertInput>;
  eventTags?: InputMaybe<EventTagsArrRelInsertInput>;
  finances?: InputMaybe<FinanceArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAutoAcceptingJoins?: InputMaybe<Scalars['Boolean']['input']>;
  isPrivate?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  joinForm?: InputMaybe<FormObjRelInsertInput>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  location?: InputMaybe<LocationObjRelInsertInput>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  maxParticipants?: InputMaybe<Scalars['smallint']['input']>;
  meta?: InputMaybe<Scalars['jsonb']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nextEventApprovalStep?: InputMaybe<EventApprovalStepObjRelInsertInput>;
  nextEventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  pointsAwardedForAttendance?: InputMaybe<Scalars['Float']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventJoin = {
  __typename?: 'EventJoin';
  actions: Array<Action>;
  actionsAggregate: ActionAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  event: Event;
  eventId: Scalars['bigint']['output'];
  formSubmission?: Maybe<FormSubmission>;
  formSubmissionId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isPresent?: Maybe<Scalars['Boolean']['output']>;
  joinedBy: User;
  joinedById: Scalars['bigint']['output'];
  linkedMissionJoin?: Maybe<MissionJoin>;
  missionJoin?: Maybe<MissionJoin>;
  missionJoinId?: Maybe<Scalars['bigint']['output']>;
  participationProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  participationProcessedBy?: Maybe<Individual>;
  participationProcessedById?: Maybe<Scalars['bigint']['output']>;
  participationProcessedVia?: Maybe<Scalars['String']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedBy?: Maybe<Individual>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  qrCode?: Maybe<FileUpload>;
  qrCodeId?: Maybe<Scalars['bigint']['output']>;
  state: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type EventJoinActionsArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type EventJoinActionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type EventJoinAggregate = {
  __typename?: 'EventJoinAggregate';
  aggregate?: Maybe<EventJoinAggregateFields>;
  nodes: Array<EventJoin>;
};

export type EventJoinAggregateBoolExp = {
  bool_and?: InputMaybe<EventJoinAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<EventJoinAggregateBoolExpBool_Or>;
  count?: InputMaybe<EventJoinAggregateBoolExpCount>;
};

export type EventJoinAggregateFields = {
  __typename?: 'EventJoinAggregateFields';
  avg?: Maybe<EventJoinAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventJoinMaxFields>;
  min?: Maybe<EventJoinMinFields>;
  stddev?: Maybe<EventJoinStddevFields>;
  stddevPop?: Maybe<EventJoinStddevPopFields>;
  stddevSamp?: Maybe<EventJoinStddevSampFields>;
  sum?: Maybe<EventJoinSumFields>;
  varPop?: Maybe<EventJoinVarPopFields>;
  varSamp?: Maybe<EventJoinVarSampFields>;
  variance?: Maybe<EventJoinVarianceFields>;
};

export type EventJoinAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventJoinSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventJoinAggregateOrderBy = {
  avg?: InputMaybe<EventJoinAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventJoinMaxOrderBy>;
  min?: InputMaybe<EventJoinMinOrderBy>;
  stddev?: InputMaybe<EventJoinStddevOrderBy>;
  stddevPop?: InputMaybe<EventJoinStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventJoinStddevSampOrderBy>;
  sum?: InputMaybe<EventJoinSumOrderBy>;
  varPop?: InputMaybe<EventJoinVarPopOrderBy>;
  varSamp?: InputMaybe<EventJoinVarSampOrderBy>;
  variance?: InputMaybe<EventJoinVarianceOrderBy>;
};

export type EventJoinArrRelInsertInput = {
  data: Array<EventJoinInsertInput>;
  onConflict?: InputMaybe<EventJoinOnConflict>;
};

export type EventJoinAvgFields = {
  __typename?: 'EventJoinAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionJoinId?: Maybe<Scalars['Float']['output']>;
  participationProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  qrCodeId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventJoinAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventJoinBoolExp = {
  _and?: InputMaybe<Array<EventJoinBoolExp>>;
  _not?: InputMaybe<EventJoinBoolExp>;
  _or?: InputMaybe<Array<EventJoinBoolExp>>;
  actions?: InputMaybe<ActionBoolExp>;
  actionsAggregate?: InputMaybe<ActionAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  event?: InputMaybe<EventBoolExp>;
  eventId?: InputMaybe<BigintComparisonExp>;
  formSubmission?: InputMaybe<FormSubmissionBoolExp>;
  formSubmissionId?: InputMaybe<BigintComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isPresent?: InputMaybe<BooleanComparisonExp>;
  joinedBy?: InputMaybe<UserBoolExp>;
  joinedById?: InputMaybe<BigintComparisonExp>;
  linkedMissionJoin?: InputMaybe<MissionJoinBoolExp>;
  missionJoin?: InputMaybe<MissionJoinBoolExp>;
  missionJoinId?: InputMaybe<BigintComparisonExp>;
  participationProcessedAt?: InputMaybe<TimestamptzComparisonExp>;
  participationProcessedBy?: InputMaybe<IndividualBoolExp>;
  participationProcessedById?: InputMaybe<BigintComparisonExp>;
  participationProcessedVia?: InputMaybe<StringComparisonExp>;
  processedAt?: InputMaybe<TimestamptzComparisonExp>;
  processedBy?: InputMaybe<IndividualBoolExp>;
  processedById?: InputMaybe<BigintComparisonExp>;
  qrCode?: InputMaybe<FileUploadBoolExp>;
  qrCodeId?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum EventJoinConstraint {
  EventJoinPkey = 'event_join_pkey',
}

export type EventJoinIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  formSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  missionJoinId?: InputMaybe<Scalars['bigint']['input']>;
  participationProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  qrCodeId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventJoinInsertInput = {
  actions?: InputMaybe<ActionArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  event?: InputMaybe<EventObjRelInsertInput>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  formSubmission?: InputMaybe<FormSubmissionObjRelInsertInput>;
  formSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPresent?: InputMaybe<Scalars['Boolean']['input']>;
  joinedBy?: InputMaybe<UserObjRelInsertInput>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  linkedMissionJoin?: InputMaybe<MissionJoinObjRelInsertInput>;
  missionJoin?: InputMaybe<MissionJoinObjRelInsertInput>;
  missionJoinId?: InputMaybe<Scalars['bigint']['input']>;
  participationProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  participationProcessedBy?: InputMaybe<IndividualObjRelInsertInput>;
  participationProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  participationProcessedVia?: InputMaybe<Scalars['String']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedBy?: InputMaybe<IndividualObjRelInsertInput>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  qrCode?: InputMaybe<FileUploadObjRelInsertInput>;
  qrCodeId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventJoinMaxFields = {
  __typename?: 'EventJoinMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  formSubmissionId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  missionJoinId?: Maybe<Scalars['bigint']['output']>;
  participationProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  participationProcessedById?: Maybe<Scalars['bigint']['output']>;
  participationProcessedVia?: Maybe<Scalars['String']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  qrCodeId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventJoinMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedAt?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  participationProcessedVia?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventJoinMinFields = {
  __typename?: 'EventJoinMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  formSubmissionId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  missionJoinId?: Maybe<Scalars['bigint']['output']>;
  participationProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  participationProcessedById?: Maybe<Scalars['bigint']['output']>;
  participationProcessedVia?: Maybe<Scalars['String']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  qrCodeId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventJoinMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedAt?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  participationProcessedVia?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventJoinMutationResponse = {
  __typename?: 'EventJoinMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventJoin>;
};

export type EventJoinObjRelInsertInput = {
  data: EventJoinInsertInput;
  onConflict?: InputMaybe<EventJoinOnConflict>;
};

export type EventJoinOnConflict = {
  constraint: EventJoinConstraint;
  updateColumns?: Array<EventJoinUpdateColumn>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type EventJoinOrderBy = {
  actionsAggregate?: InputMaybe<ActionAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  event?: InputMaybe<EventOrderBy>;
  eventId?: InputMaybe<OrderBy>;
  formSubmission?: InputMaybe<FormSubmissionOrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isPresent?: InputMaybe<OrderBy>;
  joinedBy?: InputMaybe<UserOrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  linkedMissionJoin?: InputMaybe<MissionJoinOrderBy>;
  missionJoin?: InputMaybe<MissionJoinOrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedAt?: InputMaybe<OrderBy>;
  participationProcessedBy?: InputMaybe<IndividualOrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  participationProcessedVia?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedBy?: InputMaybe<IndividualOrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCode?: InputMaybe<FileUploadOrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventJoinPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum EventJoinSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventId = 'eventId',
  FormSubmissionId = 'formSubmissionId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsPresent = 'isPresent',
  JoinedById = 'joinedById',
  MissionJoinId = 'missionJoinId',
  ParticipationProcessedAt = 'participationProcessedAt',
  ParticipationProcessedById = 'participationProcessedById',
  ParticipationProcessedVia = 'participationProcessedVia',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  QrCodeId = 'qrCodeId',
  State = 'state',
  TenantId = 'tenantId',
}

export enum EventJoinSelectColumnEventJoinAggregateBoolExpBool_AndArgumentsColumns {
  IsPresent = 'isPresent',
}

export enum EventJoinSelectColumnEventJoinAggregateBoolExpBool_OrArgumentsColumns {
  IsPresent = 'isPresent',
}

export type EventJoinSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  formSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPresent?: InputMaybe<Scalars['Boolean']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  missionJoinId?: InputMaybe<Scalars['bigint']['input']>;
  participationProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  participationProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  participationProcessedVia?: InputMaybe<Scalars['String']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  qrCodeId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventJoinStddevFields = {
  __typename?: 'EventJoinStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionJoinId?: Maybe<Scalars['Float']['output']>;
  participationProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  qrCodeId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventJoinStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventJoinStddevPopFields = {
  __typename?: 'EventJoinStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionJoinId?: Maybe<Scalars['Float']['output']>;
  participationProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  qrCodeId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventJoinStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventJoinStddevSampFields = {
  __typename?: 'EventJoinStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionJoinId?: Maybe<Scalars['Float']['output']>;
  participationProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  qrCodeId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventJoinStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventJoinStreamCursorInput = {
  initialValue: EventJoinStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventJoinStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  formSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPresent?: InputMaybe<Scalars['Boolean']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  missionJoinId?: InputMaybe<Scalars['bigint']['input']>;
  participationProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  participationProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  participationProcessedVia?: InputMaybe<Scalars['String']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  qrCodeId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventJoinSumFields = {
  __typename?: 'EventJoinSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  formSubmissionId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  missionJoinId?: Maybe<Scalars['bigint']['output']>;
  participationProcessedById?: Maybe<Scalars['bigint']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  qrCodeId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventJoinSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum EventJoinUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventId = 'eventId',
  FormSubmissionId = 'formSubmissionId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsPresent = 'isPresent',
  JoinedById = 'joinedById',
  MissionJoinId = 'missionJoinId',
  ParticipationProcessedAt = 'participationProcessedAt',
  ParticipationProcessedById = 'participationProcessedById',
  ParticipationProcessedVia = 'participationProcessedVia',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  QrCodeId = 'qrCodeId',
  State = 'state',
  TenantId = 'tenantId',
}

export type EventJoinUpdates = {
  _inc?: InputMaybe<EventJoinIncInput>;
  _set?: InputMaybe<EventJoinSetInput>;
  where: EventJoinBoolExp;
};

export type EventJoinVarPopFields = {
  __typename?: 'EventJoinVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionJoinId?: Maybe<Scalars['Float']['output']>;
  participationProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  qrCodeId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventJoinVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventJoinVarSampFields = {
  __typename?: 'EventJoinVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionJoinId?: Maybe<Scalars['Float']['output']>;
  participationProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  qrCodeId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventJoinVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventJoinVarianceFields = {
  __typename?: 'EventJoinVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionJoinId?: Maybe<Scalars['Float']['output']>;
  participationProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  qrCodeId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventJoinVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionJoinId?: InputMaybe<OrderBy>;
  participationProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  qrCodeId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventMaxFields = {
  __typename?: 'EventMaxFields';
  bannerId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  end?: Maybe<Scalars['timestamptz']['output']>;
  eventApprovalSubmissionId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  maxParticipants?: Maybe<Scalars['smallint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nextEventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  start?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventMaxOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  end?: InputMaybe<OrderBy>;
  eventApprovalSubmissionId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  nextEventApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  start?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventMinFields = {
  __typename?: 'EventMinFields';
  bannerId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  end?: Maybe<Scalars['timestamptz']['output']>;
  eventApprovalSubmissionId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  maxParticipants?: Maybe<Scalars['smallint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nextEventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  start?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventMinOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  end?: InputMaybe<OrderBy>;
  eventApprovalSubmissionId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  nextEventApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  start?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventMutationResponse = {
  __typename?: 'EventMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Event>;
};

export type EventObjRelInsertInput = {
  data: EventInsertInput;
  onConflict?: InputMaybe<EventOnConflict>;
};

export type EventOnConflict = {
  constraint: EventConstraint;
  updateColumns?: Array<EventUpdateColumn>;
  where?: InputMaybe<EventBoolExp>;
};

export type EventOrderBy = {
  banner?: InputMaybe<FileUploadOrderBy>;
  bannerId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  end?: InputMaybe<OrderBy>;
  eventApprovalSubmission?: InputMaybe<FormSubmissionOrderBy>;
  eventApprovalSubmissionId?: InputMaybe<OrderBy>;
  eventApprovalsAggregate?: InputMaybe<EventApprovalAggregateOrderBy>;
  eventFavoritesAggregate?: InputMaybe<EventFavoriteAggregateOrderBy>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateOrderBy>;
  eventTagsAggregate?: InputMaybe<EventTagsAggregateOrderBy>;
  financesAggregate?: InputMaybe<FinanceAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isAutoAcceptingJoins?: InputMaybe<OrderBy>;
  isPrivate?: InputMaybe<OrderBy>;
  isTemplate?: InputMaybe<OrderBy>;
  joinForm?: InputMaybe<FormOrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  location?: InputMaybe<LocationOrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  meta?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  nextEventApprovalStep?: InputMaybe<EventApprovalStepOrderBy>;
  nextEventApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  start?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventOrganize = {
  __typename?: 'EventOrganize';
  createdAt: Scalars['timestamptz']['output'];
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  event: Event;
  eventId: Scalars['bigint']['output'];
  eventSupervisors: Array<EventSupervisor>;
  eventSupervisorsAggregate: EventSupervisorAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  individual?: Maybe<Individual>;
  missions: Array<Mission>;
  missionsAggregate: MissionAggregate;
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type EventOrganizeEventSupervisorsArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type EventOrganizeEventSupervisorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type EventOrganizeMissionsArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type EventOrganizeMissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type EventOrganizeAggregate = {
  __typename?: 'EventOrganizeAggregate';
  aggregate?: Maybe<EventOrganizeAggregateFields>;
  nodes: Array<EventOrganize>;
};

export type EventOrganizeAggregateBoolExp = {
  count?: InputMaybe<EventOrganizeAggregateBoolExpCount>;
};

export type EventOrganizeAggregateFields = {
  __typename?: 'EventOrganizeAggregateFields';
  avg?: Maybe<EventOrganizeAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventOrganizeMaxFields>;
  min?: Maybe<EventOrganizeMinFields>;
  stddev?: Maybe<EventOrganizeStddevFields>;
  stddevPop?: Maybe<EventOrganizeStddevPopFields>;
  stddevSamp?: Maybe<EventOrganizeStddevSampFields>;
  sum?: Maybe<EventOrganizeSumFields>;
  varPop?: Maybe<EventOrganizeVarPopFields>;
  varSamp?: Maybe<EventOrganizeVarSampFields>;
  variance?: Maybe<EventOrganizeVarianceFields>;
};

export type EventOrganizeAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventOrganizeAggregateOrderBy = {
  avg?: InputMaybe<EventOrganizeAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventOrganizeMaxOrderBy>;
  min?: InputMaybe<EventOrganizeMinOrderBy>;
  stddev?: InputMaybe<EventOrganizeStddevOrderBy>;
  stddevPop?: InputMaybe<EventOrganizeStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventOrganizeStddevSampOrderBy>;
  sum?: InputMaybe<EventOrganizeSumOrderBy>;
  varPop?: InputMaybe<EventOrganizeVarPopOrderBy>;
  varSamp?: InputMaybe<EventOrganizeVarSampOrderBy>;
  variance?: InputMaybe<EventOrganizeVarianceOrderBy>;
};

export type EventOrganizeArrRelInsertInput = {
  data: Array<EventOrganizeInsertInput>;
  onConflict?: InputMaybe<EventOrganizeOnConflict>;
};

export type EventOrganizeAvgFields = {
  __typename?: 'EventOrganizeAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventOrganizeAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventOrganizeBoolExp = {
  _and?: InputMaybe<Array<EventOrganizeBoolExp>>;
  _not?: InputMaybe<EventOrganizeBoolExp>;
  _or?: InputMaybe<Array<EventOrganizeBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  event?: InputMaybe<EventBoolExp>;
  eventId?: InputMaybe<BigintComparisonExp>;
  eventSupervisors?: InputMaybe<EventSupervisorBoolExp>;
  eventSupervisorsAggregate?: InputMaybe<EventSupervisorAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  individual?: InputMaybe<IndividualBoolExp>;
  missions?: InputMaybe<MissionBoolExp>;
  missionsAggregate?: InputMaybe<MissionAggregateBoolExp>;
  project?: InputMaybe<ProjectBoolExp>;
  projectId?: InputMaybe<BigintComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum EventOrganizeConstraint {
  EventOrganizePkey = 'event_organize_pkey',
}

export type EventOrganizeIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventOrganizeInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  event?: InputMaybe<EventObjRelInsertInput>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  eventSupervisors?: InputMaybe<EventSupervisorArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individual?: InputMaybe<IndividualObjRelInsertInput>;
  missions?: InputMaybe<MissionArrRelInsertInput>;
  project?: InputMaybe<ProjectObjRelInsertInput>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventOrganizeMaxFields = {
  __typename?: 'EventOrganizeMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventOrganizeMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventOrganizeMinFields = {
  __typename?: 'EventOrganizeMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventOrganizeMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventOrganizeMutationResponse = {
  __typename?: 'EventOrganizeMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventOrganize>;
};

export type EventOrganizeObjRelInsertInput = {
  data: EventOrganizeInsertInput;
  onConflict?: InputMaybe<EventOrganizeOnConflict>;
};

export type EventOrganizeOnConflict = {
  constraint: EventOrganizeConstraint;
  updateColumns?: Array<EventOrganizeUpdateColumn>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type EventOrganizeOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  event?: InputMaybe<EventOrderBy>;
  eventId?: InputMaybe<OrderBy>;
  eventSupervisorsAggregate?: InputMaybe<EventSupervisorAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individual?: InputMaybe<IndividualOrderBy>;
  missionsAggregate?: InputMaybe<MissionAggregateOrderBy>;
  project?: InputMaybe<ProjectOrderBy>;
  projectId?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventOrganizePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum EventOrganizeSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventId = 'eventId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  ProjectId = 'projectId',
  TeamId = 'teamId',
  TenantId = 'tenantId',
}

export type EventOrganizeSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventOrganizeStddevFields = {
  __typename?: 'EventOrganizeStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventOrganizeStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventOrganizeStddevPopFields = {
  __typename?: 'EventOrganizeStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventOrganizeStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventOrganizeStddevSampFields = {
  __typename?: 'EventOrganizeStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventOrganizeStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventOrganizeStreamCursorInput = {
  initialValue: EventOrganizeStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventOrganizeStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventOrganizeSumFields = {
  __typename?: 'EventOrganizeSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventOrganizeSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum EventOrganizeUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventId = 'eventId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  ProjectId = 'projectId',
  TeamId = 'teamId',
  TenantId = 'tenantId',
}

export type EventOrganizeUpdates = {
  _inc?: InputMaybe<EventOrganizeIncInput>;
  _set?: InputMaybe<EventOrganizeSetInput>;
  where: EventOrganizeBoolExp;
};

export type EventOrganizeVarPopFields = {
  __typename?: 'EventOrganizeVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventOrganizeVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventOrganizeVarSampFields = {
  __typename?: 'EventOrganizeVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventOrganizeVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventOrganizeVarianceFields = {
  __typename?: 'EventOrganizeVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventOrganizeVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export type EventPrependInput = {
  meta?: InputMaybe<Scalars['jsonb']['input']>;
};

export enum EventSelectColumn {
  BannerId = 'bannerId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  End = 'end',
  EventApprovalSubmissionId = 'eventApprovalSubmissionId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsAutoAcceptingJoins = 'isAutoAcceptingJoins',
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
  JoinFormId = 'joinFormId',
  LocationId = 'locationId',
  MaxParticipants = 'maxParticipants',
  Meta = 'meta',
  Name = 'name',
  NextEventApprovalStepId = 'nextEventApprovalStepId',
  PointsAwardedForAttendance = 'pointsAwardedForAttendance',
  Price = 'price',
  Slug = 'slug',
  Start = 'start',
  State = 'state',
  TenantId = 'tenantId',
}

export enum EventSelectColumnEventAggregateBoolExpBool_AndArgumentsColumns {
  IsAutoAcceptingJoins = 'isAutoAcceptingJoins',
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
}

export enum EventSelectColumnEventAggregateBoolExpBool_OrArgumentsColumns {
  IsAutoAcceptingJoins = 'isAutoAcceptingJoins',
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
}

export type EventSetInput = {
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['timestamptz']['input']>;
  eventApprovalSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAutoAcceptingJoins?: InputMaybe<Scalars['Boolean']['input']>;
  isPrivate?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  maxParticipants?: InputMaybe<Scalars['smallint']['input']>;
  meta?: InputMaybe<Scalars['jsonb']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nextEventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  pointsAwardedForAttendance?: InputMaybe<Scalars['Float']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventStddevFields = {
  __typename?: 'EventStddevFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  maxParticipants?: Maybe<Scalars['Float']['output']>;
  nextEventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventStddevOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventApprovalSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextEventApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventStddevPopFields = {
  __typename?: 'EventStddevPopFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  maxParticipants?: Maybe<Scalars['Float']['output']>;
  nextEventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventStddevPopOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventApprovalSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextEventApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventStddevSampFields = {
  __typename?: 'EventStddevSampFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  maxParticipants?: Maybe<Scalars['Float']['output']>;
  nextEventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventStddevSampOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventApprovalSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextEventApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventStreamCursorInput = {
  initialValue: EventStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventStreamCursorValueInput = {
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['timestamptz']['input']>;
  eventApprovalSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAutoAcceptingJoins?: InputMaybe<Scalars['Boolean']['input']>;
  isPrivate?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  maxParticipants?: InputMaybe<Scalars['smallint']['input']>;
  meta?: InputMaybe<Scalars['jsonb']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nextEventApprovalStepId?: InputMaybe<Scalars['bigint']['input']>;
  pointsAwardedForAttendance?: InputMaybe<Scalars['Float']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventSumFields = {
  __typename?: 'EventSumFields';
  bannerId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventApprovalSubmissionId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  maxParticipants?: Maybe<Scalars['smallint']['output']>;
  nextEventApprovalStepId?: Maybe<Scalars['bigint']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type EventSumOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventApprovalSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextEventApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventSupervisor = {
  __typename?: 'EventSupervisor';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventOrganize: EventOrganize;
  eventOrganizeId: Scalars['bigint']['output'];
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  title: Scalars['String']['output'];
  user: User;
  userId: Scalars['bigint']['output'];
};

export type EventSupervisorAggregate = {
  __typename?: 'EventSupervisorAggregate';
  aggregate?: Maybe<EventSupervisorAggregateFields>;
  nodes: Array<EventSupervisor>;
};

export type EventSupervisorAggregateBoolExp = {
  count?: InputMaybe<EventSupervisorAggregateBoolExpCount>;
};

export type EventSupervisorAggregateFields = {
  __typename?: 'EventSupervisorAggregateFields';
  avg?: Maybe<EventSupervisorAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventSupervisorMaxFields>;
  min?: Maybe<EventSupervisorMinFields>;
  stddev?: Maybe<EventSupervisorStddevFields>;
  stddevPop?: Maybe<EventSupervisorStddevPopFields>;
  stddevSamp?: Maybe<EventSupervisorStddevSampFields>;
  sum?: Maybe<EventSupervisorSumFields>;
  varPop?: Maybe<EventSupervisorVarPopFields>;
  varSamp?: Maybe<EventSupervisorVarSampFields>;
  variance?: Maybe<EventSupervisorVarianceFields>;
};

export type EventSupervisorAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventSupervisorAggregateOrderBy = {
  avg?: InputMaybe<EventSupervisorAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventSupervisorMaxOrderBy>;
  min?: InputMaybe<EventSupervisorMinOrderBy>;
  stddev?: InputMaybe<EventSupervisorStddevOrderBy>;
  stddevPop?: InputMaybe<EventSupervisorStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventSupervisorStddevSampOrderBy>;
  sum?: InputMaybe<EventSupervisorSumOrderBy>;
  varPop?: InputMaybe<EventSupervisorVarPopOrderBy>;
  varSamp?: InputMaybe<EventSupervisorVarSampOrderBy>;
  variance?: InputMaybe<EventSupervisorVarianceOrderBy>;
};

export type EventSupervisorArrRelInsertInput = {
  data: Array<EventSupervisorInsertInput>;
  onConflict?: InputMaybe<EventSupervisorOnConflict>;
};

export type EventSupervisorAvgFields = {
  __typename?: 'EventSupervisorAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventSupervisorAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorBoolExp = {
  _and?: InputMaybe<Array<EventSupervisorBoolExp>>;
  _not?: InputMaybe<EventSupervisorBoolExp>;
  _or?: InputMaybe<Array<EventSupervisorBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  eventOrganize?: InputMaybe<EventOrganizeBoolExp>;
  eventOrganizeId?: InputMaybe<BigintComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  title?: InputMaybe<StringComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
  userId?: InputMaybe<BigintComparisonExp>;
};

export enum EventSupervisorConstraint {
  EventSupervisorPkey = 'event_supervisor_pkey',
}

export type EventSupervisorIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventOrganizeId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventSupervisorInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventOrganize?: InputMaybe<EventOrganizeObjRelInsertInput>;
  eventOrganizeId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventSupervisorMaxFields = {
  __typename?: 'EventSupervisorMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventOrganizeId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type EventSupervisorMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  title?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorMinFields = {
  __typename?: 'EventSupervisorMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventOrganizeId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type EventSupervisorMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  title?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorMutationResponse = {
  __typename?: 'EventSupervisorMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventSupervisor>;
};

export type EventSupervisorOnConflict = {
  constraint: EventSupervisorConstraint;
  updateColumns?: Array<EventSupervisorUpdateColumn>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type EventSupervisorOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventOrganize?: InputMaybe<EventOrganizeOrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  title?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum EventSupervisorSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventOrganizeId = 'eventOrganizeId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
  Title = 'title',
  UserId = 'userId',
}

export type EventSupervisorSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventOrganizeId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventSupervisorStddevFields = {
  __typename?: 'EventSupervisorStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventSupervisorStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorStddevPopFields = {
  __typename?: 'EventSupervisorStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventSupervisorStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorStddevSampFields = {
  __typename?: 'EventSupervisorStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventSupervisorStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorStreamCursorInput = {
  initialValue: EventSupervisorStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventSupervisorStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventOrganizeId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventSupervisorSumFields = {
  __typename?: 'EventSupervisorSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventOrganizeId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type EventSupervisorSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum EventSupervisorUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventOrganizeId = 'eventOrganizeId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
  Title = 'title',
  UserId = 'userId',
}

export type EventSupervisorUpdates = {
  _inc?: InputMaybe<EventSupervisorIncInput>;
  _set?: InputMaybe<EventSupervisorSetInput>;
  where: EventSupervisorBoolExp;
};

export type EventSupervisorVarPopFields = {
  __typename?: 'EventSupervisorVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventSupervisorVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorVarSampFields = {
  __typename?: 'EventSupervisorVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventSupervisorVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventSupervisorVarianceFields = {
  __typename?: 'EventSupervisorVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventOrganizeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type EventSupervisorVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventOrganizeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type EventTags = {
  __typename?: 'EventTags';
  event: Event;
  eventId: Scalars['bigint']['output'];
  tag: Tag;
  tagId: Scalars['bigint']['output'];
};

export type EventTagsAggregate = {
  __typename?: 'EventTagsAggregate';
  aggregate?: Maybe<EventTagsAggregateFields>;
  nodes: Array<EventTags>;
};

export type EventTagsAggregateBoolExp = {
  count?: InputMaybe<EventTagsAggregateBoolExpCount>;
};

export type EventTagsAggregateFields = {
  __typename?: 'EventTagsAggregateFields';
  avg?: Maybe<EventTagsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventTagsMaxFields>;
  min?: Maybe<EventTagsMinFields>;
  stddev?: Maybe<EventTagsStddevFields>;
  stddevPop?: Maybe<EventTagsStddevPopFields>;
  stddevSamp?: Maybe<EventTagsStddevSampFields>;
  sum?: Maybe<EventTagsSumFields>;
  varPop?: Maybe<EventTagsVarPopFields>;
  varSamp?: Maybe<EventTagsVarSampFields>;
  variance?: Maybe<EventTagsVarianceFields>;
};

export type EventTagsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EventTagsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventTagsAggregateOrderBy = {
  avg?: InputMaybe<EventTagsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EventTagsMaxOrderBy>;
  min?: InputMaybe<EventTagsMinOrderBy>;
  stddev?: InputMaybe<EventTagsStddevOrderBy>;
  stddevPop?: InputMaybe<EventTagsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<EventTagsStddevSampOrderBy>;
  sum?: InputMaybe<EventTagsSumOrderBy>;
  varPop?: InputMaybe<EventTagsVarPopOrderBy>;
  varSamp?: InputMaybe<EventTagsVarSampOrderBy>;
  variance?: InputMaybe<EventTagsVarianceOrderBy>;
};

export type EventTagsArrRelInsertInput = {
  data: Array<EventTagsInsertInput>;
  onConflict?: InputMaybe<EventTagsOnConflict>;
};

export type EventTagsAvgFields = {
  __typename?: 'EventTagsAvgFields';
  eventId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type EventTagsAvgOrderBy = {
  eventId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type EventTagsBoolExp = {
  _and?: InputMaybe<Array<EventTagsBoolExp>>;
  _not?: InputMaybe<EventTagsBoolExp>;
  _or?: InputMaybe<Array<EventTagsBoolExp>>;
  event?: InputMaybe<EventBoolExp>;
  eventId?: InputMaybe<BigintComparisonExp>;
  tag?: InputMaybe<TagBoolExp>;
  tagId?: InputMaybe<BigintComparisonExp>;
};

export enum EventTagsConstraint {
  EventTagsPkey = 'event_tags_pkey',
}

export type EventTagsIncInput = {
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventTagsInsertInput = {
  event?: InputMaybe<EventObjRelInsertInput>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  tag?: InputMaybe<TagObjRelInsertInput>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventTagsMaxFields = {
  __typename?: 'EventTagsMaxFields';
  eventId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type EventTagsMaxOrderBy = {
  eventId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type EventTagsMinFields = {
  __typename?: 'EventTagsMinFields';
  eventId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type EventTagsMinOrderBy = {
  eventId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type EventTagsMutationResponse = {
  __typename?: 'EventTagsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<EventTags>;
};

export type EventTagsOnConflict = {
  constraint: EventTagsConstraint;
  updateColumns?: Array<EventTagsUpdateColumn>;
  where?: InputMaybe<EventTagsBoolExp>;
};

export type EventTagsOrderBy = {
  event?: InputMaybe<EventOrderBy>;
  eventId?: InputMaybe<OrderBy>;
  tag?: InputMaybe<TagOrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type EventTagsPkColumnsInput = {
  eventId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export enum EventTagsSelectColumn {
  EventId = 'eventId',
  TagId = 'tagId',
}

export type EventTagsSetInput = {
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventTagsStddevFields = {
  __typename?: 'EventTagsStddevFields';
  eventId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type EventTagsStddevOrderBy = {
  eventId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type EventTagsStddevPopFields = {
  __typename?: 'EventTagsStddevPopFields';
  eventId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type EventTagsStddevPopOrderBy = {
  eventId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type EventTagsStddevSampFields = {
  __typename?: 'EventTagsStddevSampFields';
  eventId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type EventTagsStddevSampOrderBy = {
  eventId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type EventTagsStreamCursorInput = {
  initialValue: EventTagsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type EventTagsStreamCursorValueInput = {
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type EventTagsSumFields = {
  __typename?: 'EventTagsSumFields';
  eventId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type EventTagsSumOrderBy = {
  eventId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export enum EventTagsUpdateColumn {
  EventId = 'eventId',
  TagId = 'tagId',
}

export type EventTagsUpdates = {
  _inc?: InputMaybe<EventTagsIncInput>;
  _set?: InputMaybe<EventTagsSetInput>;
  where: EventTagsBoolExp;
};

export type EventTagsVarPopFields = {
  __typename?: 'EventTagsVarPopFields';
  eventId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type EventTagsVarPopOrderBy = {
  eventId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type EventTagsVarSampFields = {
  __typename?: 'EventTagsVarSampFields';
  eventId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type EventTagsVarSampOrderBy = {
  eventId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type EventTagsVarianceFields = {
  __typename?: 'EventTagsVarianceFields';
  eventId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type EventTagsVarianceOrderBy = {
  eventId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export enum EventUpdateColumn {
  BannerId = 'bannerId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  End = 'end',
  EventApprovalSubmissionId = 'eventApprovalSubmissionId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsAutoAcceptingJoins = 'isAutoAcceptingJoins',
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
  JoinFormId = 'joinFormId',
  LocationId = 'locationId',
  MaxParticipants = 'maxParticipants',
  Meta = 'meta',
  Name = 'name',
  NextEventApprovalStepId = 'nextEventApprovalStepId',
  PointsAwardedForAttendance = 'pointsAwardedForAttendance',
  Price = 'price',
  Slug = 'slug',
  Start = 'start',
  State = 'state',
  TenantId = 'tenantId',
}

export type EventUpdates = {
  _append?: InputMaybe<EventAppendInput>;
  _deleteAtPath?: InputMaybe<EventDeleteAtPathInput>;
  _deleteElem?: InputMaybe<EventDeleteElemInput>;
  _deleteKey?: InputMaybe<EventDeleteKeyInput>;
  _inc?: InputMaybe<EventIncInput>;
  _prepend?: InputMaybe<EventPrependInput>;
  _set?: InputMaybe<EventSetInput>;
  where: EventBoolExp;
};

export type EventVarPopFields = {
  __typename?: 'EventVarPopFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  maxParticipants?: Maybe<Scalars['Float']['output']>;
  nextEventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventVarPopOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventApprovalSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextEventApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventVarSampFields = {
  __typename?: 'EventVarSampFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  maxParticipants?: Maybe<Scalars['Float']['output']>;
  nextEventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventVarSampOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventApprovalSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextEventApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type EventVarianceFields = {
  __typename?: 'EventVarianceFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventApprovalSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  maxParticipants?: Maybe<Scalars['Float']['output']>;
  nextEventApprovalStepId?: Maybe<Scalars['Float']['output']>;
  pointsAwardedForAttendance?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type EventVarianceOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventApprovalSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  maxParticipants?: InputMaybe<OrderBy>;
  nextEventApprovalStepId?: InputMaybe<OrderBy>;
  pointsAwardedForAttendance?: InputMaybe<OrderBy>;
  price?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Expense = {
  __typename?: 'Expense';
  bank: Bank;
  bankId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  expenseItems: Array<ExpenseItem>;
  expenseItemsAggregate: ExpenseItemAggregate;
  expenseReportId: Scalars['bigint']['output'];
  fileUpload: FileUpload;
  finance?: Maybe<Finance>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  lastNotifiedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedBy?: Maybe<Individual>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  state: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type ExpenseExpenseItemsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type ExpenseExpenseItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type ExpenseAggregate = {
  __typename?: 'ExpenseAggregate';
  aggregate?: Maybe<ExpenseAggregateFields>;
  nodes: Array<Expense>;
};

export type ExpenseAggregateBoolExp = {
  count?: InputMaybe<ExpenseAggregateBoolExpCount>;
};

export type ExpenseAggregateFields = {
  __typename?: 'ExpenseAggregateFields';
  avg?: Maybe<ExpenseAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ExpenseMaxFields>;
  min?: Maybe<ExpenseMinFields>;
  stddev?: Maybe<ExpenseStddevFields>;
  stddevPop?: Maybe<ExpenseStddevPopFields>;
  stddevSamp?: Maybe<ExpenseStddevSampFields>;
  sum?: Maybe<ExpenseSumFields>;
  varPop?: Maybe<ExpenseVarPopFields>;
  varSamp?: Maybe<ExpenseVarSampFields>;
  variance?: Maybe<ExpenseVarianceFields>;
};

export type ExpenseAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ExpenseSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ExpenseAggregateOrderBy = {
  avg?: InputMaybe<ExpenseAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ExpenseMaxOrderBy>;
  min?: InputMaybe<ExpenseMinOrderBy>;
  stddev?: InputMaybe<ExpenseStddevOrderBy>;
  stddevPop?: InputMaybe<ExpenseStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ExpenseStddevSampOrderBy>;
  sum?: InputMaybe<ExpenseSumOrderBy>;
  varPop?: InputMaybe<ExpenseVarPopOrderBy>;
  varSamp?: InputMaybe<ExpenseVarSampOrderBy>;
  variance?: InputMaybe<ExpenseVarianceOrderBy>;
};

export type ExpenseArrRelInsertInput = {
  data: Array<ExpenseInsertInput>;
  onConflict?: InputMaybe<ExpenseOnConflict>;
};

export type ExpenseAvgFields = {
  __typename?: 'ExpenseAvgFields';
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseReportId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseAvgOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ExpenseBoolExp = {
  _and?: InputMaybe<Array<ExpenseBoolExp>>;
  _not?: InputMaybe<ExpenseBoolExp>;
  _or?: InputMaybe<Array<ExpenseBoolExp>>;
  bank?: InputMaybe<BankBoolExp>;
  bankId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  expenseItems?: InputMaybe<ExpenseItemBoolExp>;
  expenseItemsAggregate?: InputMaybe<ExpenseItemAggregateBoolExp>;
  expenseReportId?: InputMaybe<BigintComparisonExp>;
  fileUpload?: InputMaybe<FileUploadBoolExp>;
  finance?: InputMaybe<FinanceBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  lastNotifiedAt?: InputMaybe<TimestamptzComparisonExp>;
  processedAt?: InputMaybe<TimestamptzComparisonExp>;
  processedBy?: InputMaybe<IndividualBoolExp>;
  processedById?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum ExpenseConstraint {
  ExpensePkey = 'expense_pkey',
}

export type ExpenseIncInput = {
  bankId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  expenseReportId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseInsertInput = {
  bank?: InputMaybe<BankObjRelInsertInput>;
  bankId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  expenseItems?: InputMaybe<ExpenseItemArrRelInsertInput>;
  expenseReportId?: InputMaybe<Scalars['bigint']['input']>;
  fileUpload?: InputMaybe<FileUploadObjRelInsertInput>;
  finance?: InputMaybe<FinanceObjRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  lastNotifiedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedBy?: InputMaybe<IndividualObjRelInsertInput>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseItem = {
  __typename?: 'ExpenseItem';
  category: Scalars['String']['output'];
  company?: Maybe<LegalUnit>;
  companyId?: Maybe<Scalars['bigint']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  expense?: Maybe<Expense>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  expenseItemAttachments: Array<ExpenseItemAttachments>;
  expenseItemAttachmentsAggregate: ExpenseItemAttachmentsAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  payedAt?: Maybe<Scalars['timestamptz']['output']>;
  quantity: Scalars['smallint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  unitCost: Scalars['Float']['output'];
};

export type ExpenseItemExpenseItemAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type ExpenseItemExpenseItemAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type ExpenseItemAggregate = {
  __typename?: 'ExpenseItemAggregate';
  aggregate?: Maybe<ExpenseItemAggregateFields>;
  nodes: Array<ExpenseItem>;
};

export type ExpenseItemAggregateBoolExp = {
  count?: InputMaybe<ExpenseItemAggregateBoolExpCount>;
};

export type ExpenseItemAggregateFields = {
  __typename?: 'ExpenseItemAggregateFields';
  avg?: Maybe<ExpenseItemAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ExpenseItemMaxFields>;
  min?: Maybe<ExpenseItemMinFields>;
  stddev?: Maybe<ExpenseItemStddevFields>;
  stddevPop?: Maybe<ExpenseItemStddevPopFields>;
  stddevSamp?: Maybe<ExpenseItemStddevSampFields>;
  sum?: Maybe<ExpenseItemSumFields>;
  varPop?: Maybe<ExpenseItemVarPopFields>;
  varSamp?: Maybe<ExpenseItemVarSampFields>;
  variance?: Maybe<ExpenseItemVarianceFields>;
};

export type ExpenseItemAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ExpenseItemAggregateOrderBy = {
  avg?: InputMaybe<ExpenseItemAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ExpenseItemMaxOrderBy>;
  min?: InputMaybe<ExpenseItemMinOrderBy>;
  stddev?: InputMaybe<ExpenseItemStddevOrderBy>;
  stddevPop?: InputMaybe<ExpenseItemStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ExpenseItemStddevSampOrderBy>;
  sum?: InputMaybe<ExpenseItemSumOrderBy>;
  varPop?: InputMaybe<ExpenseItemVarPopOrderBy>;
  varSamp?: InputMaybe<ExpenseItemVarSampOrderBy>;
  variance?: InputMaybe<ExpenseItemVarianceOrderBy>;
};

export type ExpenseItemArrRelInsertInput = {
  data: Array<ExpenseItemInsertInput>;
  onConflict?: InputMaybe<ExpenseItemOnConflict>;
};

export type ExpenseItemAttachments = {
  __typename?: 'ExpenseItemAttachments';
  attachment: FileUpload;
  expenseItem: ExpenseItem;
  expenseItemId: Scalars['bigint']['output'];
  fileUploadId: Scalars['bigint']['output'];
};

export type ExpenseItemAttachmentsAggregate = {
  __typename?: 'ExpenseItemAttachmentsAggregate';
  aggregate?: Maybe<ExpenseItemAttachmentsAggregateFields>;
  nodes: Array<ExpenseItemAttachments>;
};

export type ExpenseItemAttachmentsAggregateBoolExp = {
  count?: InputMaybe<ExpenseItemAttachmentsAggregateBoolExpCount>;
};

export type ExpenseItemAttachmentsAggregateFields = {
  __typename?: 'ExpenseItemAttachmentsAggregateFields';
  avg?: Maybe<ExpenseItemAttachmentsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ExpenseItemAttachmentsMaxFields>;
  min?: Maybe<ExpenseItemAttachmentsMinFields>;
  stddev?: Maybe<ExpenseItemAttachmentsStddevFields>;
  stddevPop?: Maybe<ExpenseItemAttachmentsStddevPopFields>;
  stddevSamp?: Maybe<ExpenseItemAttachmentsStddevSampFields>;
  sum?: Maybe<ExpenseItemAttachmentsSumFields>;
  varPop?: Maybe<ExpenseItemAttachmentsVarPopFields>;
  varSamp?: Maybe<ExpenseItemAttachmentsVarSampFields>;
  variance?: Maybe<ExpenseItemAttachmentsVarianceFields>;
};

export type ExpenseItemAttachmentsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ExpenseItemAttachmentsAggregateOrderBy = {
  avg?: InputMaybe<ExpenseItemAttachmentsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ExpenseItemAttachmentsMaxOrderBy>;
  min?: InputMaybe<ExpenseItemAttachmentsMinOrderBy>;
  stddev?: InputMaybe<ExpenseItemAttachmentsStddevOrderBy>;
  stddevPop?: InputMaybe<ExpenseItemAttachmentsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ExpenseItemAttachmentsStddevSampOrderBy>;
  sum?: InputMaybe<ExpenseItemAttachmentsSumOrderBy>;
  varPop?: InputMaybe<ExpenseItemAttachmentsVarPopOrderBy>;
  varSamp?: InputMaybe<ExpenseItemAttachmentsVarSampOrderBy>;
  variance?: InputMaybe<ExpenseItemAttachmentsVarianceOrderBy>;
};

export type ExpenseItemAttachmentsArrRelInsertInput = {
  data: Array<ExpenseItemAttachmentsInsertInput>;
  onConflict?: InputMaybe<ExpenseItemAttachmentsOnConflict>;
};

export type ExpenseItemAttachmentsAvgFields = {
  __typename?: 'ExpenseItemAttachmentsAvgFields';
  expenseItemId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAttachmentsAvgOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsBoolExp = {
  _and?: InputMaybe<Array<ExpenseItemAttachmentsBoolExp>>;
  _not?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
  _or?: InputMaybe<Array<ExpenseItemAttachmentsBoolExp>>;
  attachment?: InputMaybe<FileUploadBoolExp>;
  expenseItem?: InputMaybe<ExpenseItemBoolExp>;
  expenseItemId?: InputMaybe<BigintComparisonExp>;
  fileUploadId?: InputMaybe<BigintComparisonExp>;
};

export enum ExpenseItemAttachmentsConstraint {
  ExpenseItemAttachmentsPkey = 'expense_item_attachments_pkey',
}

export type ExpenseItemAttachmentsIncInput = {
  expenseItemId?: InputMaybe<Scalars['bigint']['input']>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseItemAttachmentsInsertInput = {
  attachment?: InputMaybe<FileUploadObjRelInsertInput>;
  expenseItem?: InputMaybe<ExpenseItemObjRelInsertInput>;
  expenseItemId?: InputMaybe<Scalars['bigint']['input']>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseItemAttachmentsMaxFields = {
  __typename?: 'ExpenseItemAttachmentsMaxFields';
  expenseItemId?: Maybe<Scalars['bigint']['output']>;
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
};

export type ExpenseItemAttachmentsMaxOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsMinFields = {
  __typename?: 'ExpenseItemAttachmentsMinFields';
  expenseItemId?: Maybe<Scalars['bigint']['output']>;
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
};

export type ExpenseItemAttachmentsMinOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsMutationResponse = {
  __typename?: 'ExpenseItemAttachmentsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ExpenseItemAttachments>;
};

export type ExpenseItemAttachmentsOnConflict = {
  constraint: ExpenseItemAttachmentsConstraint;
  updateColumns?: Array<ExpenseItemAttachmentsUpdateColumn>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type ExpenseItemAttachmentsOrderBy = {
  attachment?: InputMaybe<FileUploadOrderBy>;
  expenseItem?: InputMaybe<ExpenseItemOrderBy>;
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsPkColumnsInput = {
  expenseItemId: Scalars['bigint']['input'];
  fileUploadId: Scalars['bigint']['input'];
};

export enum ExpenseItemAttachmentsSelectColumn {
  ExpenseItemId = 'expenseItemId',
  FileUploadId = 'fileUploadId',
}

export type ExpenseItemAttachmentsSetInput = {
  expenseItemId?: InputMaybe<Scalars['bigint']['input']>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseItemAttachmentsStddevFields = {
  __typename?: 'ExpenseItemAttachmentsStddevFields';
  expenseItemId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAttachmentsStddevOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsStddevPopFields = {
  __typename?: 'ExpenseItemAttachmentsStddevPopFields';
  expenseItemId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAttachmentsStddevPopOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsStddevSampFields = {
  __typename?: 'ExpenseItemAttachmentsStddevSampFields';
  expenseItemId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAttachmentsStddevSampOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsStreamCursorInput = {
  initialValue: ExpenseItemAttachmentsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ExpenseItemAttachmentsStreamCursorValueInput = {
  expenseItemId?: InputMaybe<Scalars['bigint']['input']>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseItemAttachmentsSumFields = {
  __typename?: 'ExpenseItemAttachmentsSumFields';
  expenseItemId?: Maybe<Scalars['bigint']['output']>;
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
};

export type ExpenseItemAttachmentsSumOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export enum ExpenseItemAttachmentsUpdateColumn {
  ExpenseItemId = 'expenseItemId',
  FileUploadId = 'fileUploadId',
}

export type ExpenseItemAttachmentsUpdates = {
  _inc?: InputMaybe<ExpenseItemAttachmentsIncInput>;
  _set?: InputMaybe<ExpenseItemAttachmentsSetInput>;
  where: ExpenseItemAttachmentsBoolExp;
};

export type ExpenseItemAttachmentsVarPopFields = {
  __typename?: 'ExpenseItemAttachmentsVarPopFields';
  expenseItemId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAttachmentsVarPopOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsVarSampFields = {
  __typename?: 'ExpenseItemAttachmentsVarSampFields';
  expenseItemId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAttachmentsVarSampOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAttachmentsVarianceFields = {
  __typename?: 'ExpenseItemAttachmentsVarianceFields';
  expenseItemId?: Maybe<Scalars['Float']['output']>;
  fileUploadId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAttachmentsVarianceOrderBy = {
  expenseItemId?: InputMaybe<OrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
};

export type ExpenseItemAvgFields = {
  __typename?: 'ExpenseItemAvgFields';
  companyId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemAvgOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemBoolExp = {
  _and?: InputMaybe<Array<ExpenseItemBoolExp>>;
  _not?: InputMaybe<ExpenseItemBoolExp>;
  _or?: InputMaybe<Array<ExpenseItemBoolExp>>;
  category?: InputMaybe<StringComparisonExp>;
  company?: InputMaybe<LegalUnitBoolExp>;
  companyId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  expense?: InputMaybe<ExpenseBoolExp>;
  expenseId?: InputMaybe<BigintComparisonExp>;
  expenseItemAttachments?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
  expenseItemAttachmentsAggregate?: InputMaybe<ExpenseItemAttachmentsAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  payedAt?: InputMaybe<TimestamptzComparisonExp>;
  quantity?: InputMaybe<SmallintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  unitCost?: InputMaybe<FloatComparisonExp>;
};

export enum ExpenseItemConstraint {
  ExpenseItemPkey = 'expense_item_pkey',
}

export type ExpenseItemIncInput = {
  companyId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  unitCost?: InputMaybe<Scalars['Float']['input']>;
};

export type ExpenseItemInsertInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  company?: InputMaybe<LegalUnitObjRelInsertInput>;
  companyId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  expense?: InputMaybe<ExpenseObjRelInsertInput>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  expenseItemAttachments?: InputMaybe<ExpenseItemAttachmentsArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  payedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  unitCost?: InputMaybe<Scalars['Float']['input']>;
};

export type ExpenseItemMaxFields = {
  __typename?: 'ExpenseItemMaxFields';
  category?: Maybe<Scalars['String']['output']>;
  companyId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  payedAt?: Maybe<Scalars['timestamptz']['output']>;
  quantity?: Maybe<Scalars['smallint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemMaxOrderBy = {
  category?: InputMaybe<OrderBy>;
  companyId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  payedAt?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemMinFields = {
  __typename?: 'ExpenseItemMinFields';
  category?: Maybe<Scalars['String']['output']>;
  companyId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  payedAt?: Maybe<Scalars['timestamptz']['output']>;
  quantity?: Maybe<Scalars['smallint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemMinOrderBy = {
  category?: InputMaybe<OrderBy>;
  companyId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  payedAt?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemMutationResponse = {
  __typename?: 'ExpenseItemMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ExpenseItem>;
};

export type ExpenseItemObjRelInsertInput = {
  data: ExpenseItemInsertInput;
  onConflict?: InputMaybe<ExpenseItemOnConflict>;
};

export type ExpenseItemOnConflict = {
  constraint: ExpenseItemConstraint;
  updateColumns?: Array<ExpenseItemUpdateColumn>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type ExpenseItemOrderBy = {
  category?: InputMaybe<OrderBy>;
  company?: InputMaybe<LegalUnitOrderBy>;
  companyId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  expense?: InputMaybe<ExpenseOrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  expenseItemAttachmentsAggregate?: InputMaybe<ExpenseItemAttachmentsAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  payedAt?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ExpenseItemSelectColumn {
  Category = 'category',
  CompanyId = 'companyId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExpenseId = 'expenseId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  PayedAt = 'payedAt',
  Quantity = 'quantity',
  TenantId = 'tenantId',
  UnitCost = 'unitCost',
}

export type ExpenseItemSetInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  companyId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  payedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  unitCost?: InputMaybe<Scalars['Float']['input']>;
};

export type ExpenseItemStddevFields = {
  __typename?: 'ExpenseItemStddevFields';
  companyId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemStddevOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemStddevPopFields = {
  __typename?: 'ExpenseItemStddevPopFields';
  companyId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemStddevPopOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemStddevSampFields = {
  __typename?: 'ExpenseItemStddevSampFields';
  companyId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemStddevSampOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemStreamCursorInput = {
  initialValue: ExpenseItemStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ExpenseItemStreamCursorValueInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  companyId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  payedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  unitCost?: InputMaybe<Scalars['Float']['input']>;
};

export type ExpenseItemSumFields = {
  __typename?: 'ExpenseItemSumFields';
  companyId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  quantity?: Maybe<Scalars['smallint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemSumOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export enum ExpenseItemUpdateColumn {
  Category = 'category',
  CompanyId = 'companyId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExpenseId = 'expenseId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  PayedAt = 'payedAt',
  Quantity = 'quantity',
  TenantId = 'tenantId',
  UnitCost = 'unitCost',
}

export type ExpenseItemUpdates = {
  _inc?: InputMaybe<ExpenseItemIncInput>;
  _set?: InputMaybe<ExpenseItemSetInput>;
  where: ExpenseItemBoolExp;
};

export type ExpenseItemVarPopFields = {
  __typename?: 'ExpenseItemVarPopFields';
  companyId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemVarPopOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemVarSampFields = {
  __typename?: 'ExpenseItemVarSampFields';
  companyId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemVarSampOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseItemVarianceFields = {
  __typename?: 'ExpenseItemVarianceFields';
  companyId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  unitCost?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseItemVarianceOrderBy = {
  companyId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  unitCost?: InputMaybe<OrderBy>;
};

export type ExpenseMaxFields = {
  __typename?: 'ExpenseMaxFields';
  bankId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  expenseReportId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  lastNotifiedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ExpenseMaxOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  lastNotifiedAt?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ExpenseMinFields = {
  __typename?: 'ExpenseMinFields';
  bankId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  expenseReportId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  lastNotifiedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ExpenseMinOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  lastNotifiedAt?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ExpenseMutationResponse = {
  __typename?: 'ExpenseMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Expense>;
};

export type ExpenseObjRelInsertInput = {
  data: ExpenseInsertInput;
  onConflict?: InputMaybe<ExpenseOnConflict>;
};

export type ExpenseOnConflict = {
  constraint: ExpenseConstraint;
  updateColumns?: Array<ExpenseUpdateColumn>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type ExpenseOrderBy = {
  bank?: InputMaybe<BankOrderBy>;
  bankId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  expenseItemsAggregate?: InputMaybe<ExpenseItemAggregateOrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  fileUpload?: InputMaybe<FileUploadOrderBy>;
  finance?: InputMaybe<FinanceOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  lastNotifiedAt?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedBy?: InputMaybe<IndividualOrderBy>;
  processedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ExpensePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ExpenseSelectColumn {
  BankId = 'bankId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExpenseReportId = 'expenseReportId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  LastNotifiedAt = 'lastNotifiedAt',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  State = 'state',
  TenantId = 'tenantId',
}

export type ExpenseSetInput = {
  bankId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  expenseReportId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  lastNotifiedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseStddevFields = {
  __typename?: 'ExpenseStddevFields';
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseReportId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseStddevOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ExpenseStddevPopFields = {
  __typename?: 'ExpenseStddevPopFields';
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseReportId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseStddevPopOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ExpenseStddevSampFields = {
  __typename?: 'ExpenseStddevSampFields';
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseReportId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseStddevSampOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ExpenseStreamCursorInput = {
  initialValue: ExpenseStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ExpenseStreamCursorValueInput = {
  bankId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  expenseReportId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  lastNotifiedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ExpenseSumFields = {
  __typename?: 'ExpenseSumFields';
  bankId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  expenseReportId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ExpenseSumOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum ExpenseUpdateColumn {
  BankId = 'bankId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExpenseReportId = 'expenseReportId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  LastNotifiedAt = 'lastNotifiedAt',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  State = 'state',
  TenantId = 'tenantId',
}

export type ExpenseUpdates = {
  _inc?: InputMaybe<ExpenseIncInput>;
  _set?: InputMaybe<ExpenseSetInput>;
  where: ExpenseBoolExp;
};

export type ExpenseVarPopFields = {
  __typename?: 'ExpenseVarPopFields';
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseReportId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseVarPopOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ExpenseVarSampFields = {
  __typename?: 'ExpenseVarSampFields';
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseReportId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseVarSampOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ExpenseVarianceFields = {
  __typename?: 'ExpenseVarianceFields';
  bankId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  expenseReportId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ExpenseVarianceOrderBy = {
  bankId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  expenseReportId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Favorite = {
  __typename?: 'Favorite';
  content: Content;
  contentId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type FavoriteAggregate = {
  __typename?: 'FavoriteAggregate';
  aggregate?: Maybe<FavoriteAggregateFields>;
  nodes: Array<Favorite>;
};

export type FavoriteAggregateBoolExp = {
  count?: InputMaybe<FavoriteAggregateBoolExpCount>;
};

export type FavoriteAggregateFields = {
  __typename?: 'FavoriteAggregateFields';
  avg?: Maybe<FavoriteAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FavoriteMaxFields>;
  min?: Maybe<FavoriteMinFields>;
  stddev?: Maybe<FavoriteStddevFields>;
  stddevPop?: Maybe<FavoriteStddevPopFields>;
  stddevSamp?: Maybe<FavoriteStddevSampFields>;
  sum?: Maybe<FavoriteSumFields>;
  varPop?: Maybe<FavoriteVarPopFields>;
  varSamp?: Maybe<FavoriteVarSampFields>;
  variance?: Maybe<FavoriteVarianceFields>;
};

export type FavoriteAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FavoriteSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FavoriteAggregateOrderBy = {
  avg?: InputMaybe<FavoriteAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<FavoriteMaxOrderBy>;
  min?: InputMaybe<FavoriteMinOrderBy>;
  stddev?: InputMaybe<FavoriteStddevOrderBy>;
  stddevPop?: InputMaybe<FavoriteStddevPopOrderBy>;
  stddevSamp?: InputMaybe<FavoriteStddevSampOrderBy>;
  sum?: InputMaybe<FavoriteSumOrderBy>;
  varPop?: InputMaybe<FavoriteVarPopOrderBy>;
  varSamp?: InputMaybe<FavoriteVarSampOrderBy>;
  variance?: InputMaybe<FavoriteVarianceOrderBy>;
};

export type FavoriteArrRelInsertInput = {
  data: Array<FavoriteInsertInput>;
  onConflict?: InputMaybe<FavoriteOnConflict>;
};

export type FavoriteAvgFields = {
  __typename?: 'FavoriteAvgFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FavoriteAvgOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FavoriteBoolExp = {
  _and?: InputMaybe<Array<FavoriteBoolExp>>;
  _not?: InputMaybe<FavoriteBoolExp>;
  _or?: InputMaybe<Array<FavoriteBoolExp>>;
  content?: InputMaybe<ContentBoolExp>;
  contentId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum FavoriteConstraint {
  FavoritePkey = 'favorite_pkey',
}

export type FavoriteIncInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FavoriteInsertInput = {
  content?: InputMaybe<ContentObjRelInsertInput>;
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FavoriteMaxFields = {
  __typename?: 'FavoriteMaxFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type FavoriteMaxOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FavoriteMinFields = {
  __typename?: 'FavoriteMinFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type FavoriteMinOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FavoriteMutationResponse = {
  __typename?: 'FavoriteMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Favorite>;
};

export type FavoriteOnConflict = {
  constraint: FavoriteConstraint;
  updateColumns?: Array<FavoriteUpdateColumn>;
  where?: InputMaybe<FavoriteBoolExp>;
};

export type FavoriteOrderBy = {
  content?: InputMaybe<ContentOrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FavoritePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum FavoriteSelectColumn {
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
}

export type FavoriteSetInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FavoriteStddevFields = {
  __typename?: 'FavoriteStddevFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FavoriteStddevOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FavoriteStddevPopFields = {
  __typename?: 'FavoriteStddevPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FavoriteStddevPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FavoriteStddevSampFields = {
  __typename?: 'FavoriteStddevSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FavoriteStddevSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FavoriteStreamCursorInput = {
  initialValue: FavoriteStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type FavoriteStreamCursorValueInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FavoriteSumFields = {
  __typename?: 'FavoriteSumFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type FavoriteSumOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum FavoriteUpdateColumn {
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
}

export type FavoriteUpdates = {
  _inc?: InputMaybe<FavoriteIncInput>;
  _set?: InputMaybe<FavoriteSetInput>;
  where: FavoriteBoolExp;
};

export type FavoriteVarPopFields = {
  __typename?: 'FavoriteVarPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FavoriteVarPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FavoriteVarSampFields = {
  __typename?: 'FavoriteVarSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FavoriteVarSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FavoriteVarianceFields = {
  __typename?: 'FavoriteVarianceFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FavoriteVarianceOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FileUpload = {
  __typename?: 'FileUpload';
  actorImage?: Maybe<ActorImage>;
  contentAttachments: Array<ContentAttachments>;
  contentAttachmentsAggregate: ContentAttachmentsAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  document?: Maybe<Document>;
  eventJoins: Array<EventJoin>;
  eventJoinsAggregate: EventJoinAggregate;
  events: Array<Event>;
  eventsAggregate: EventAggregate;
  expenseItemAttachments: Array<ExpenseItemAttachments>;
  expenseItemAttachmentsAggregate: ExpenseItemAttachmentsAggregate;
  expenses: Array<Expense>;
  expensesAggregate: ExpenseAggregate;
  fileLastModifiedAt: Scalars['timestamptz']['output'];
  financeAttachments: Array<FinanceAttachments>;
  financeAttachmentsAggregate: FinanceAttachmentsAggregate;
  formSubmissionAttachments: Array<FormSubmissionAttachments>;
  formSubmissionAttachmentsAggregate: FormSubmissionAttachmentsAggregate;
  grantAllocateAttachments: Array<GrantAllocateAttachments>;
  grantAllocateAttachmentsAggregate: GrantAllocateAttachmentsAggregate;
  grantAllocates: Array<GrantAllocate>;
  grantAllocatesAggregate: GrantAllocateAggregate;
  grantAttachments: Array<GrantAttachments>;
  grantAttachmentsAggregate: GrantAttachmentsAggregate;
  grants: Array<Grant>;
  grantsAggregate: GrantAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  locationImages: Array<LocationImages>;
  locationImagesAggregate: LocationImagesAggregate;
  name: Scalars['String']['output'];
  projects: Array<Project>;
  projectsAggregate: ProjectAggregate;
  signatureGrants: Array<Grant>;
  signatureGrantsAggregate: GrantAggregate;
  signedGrantAllocates: Array<GrantAllocate>;
  signedGrantAllocatesAggregate: GrantAllocateAggregate;
  size: Scalars['Int']['output'];
  tags: Array<Tag>;
  tagsAggregate: TagAggregate;
  teams: Array<Team>;
  teamsAggregate: TeamAggregate;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type FileUploadContentAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<ContentAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentAttachmentsOrderBy>>;
  where?: InputMaybe<ContentAttachmentsBoolExp>;
};

export type FileUploadContentAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ContentAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentAttachmentsOrderBy>>;
  where?: InputMaybe<ContentAttachmentsBoolExp>;
};

export type FileUploadEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type FileUploadEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type FileUploadEventsArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type FileUploadEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type FileUploadExpenseItemAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type FileUploadExpenseItemAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type FileUploadExpensesArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type FileUploadExpensesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type FileUploadFinanceAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<FinanceAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceAttachmentsOrderBy>>;
  where?: InputMaybe<FinanceAttachmentsBoolExp>;
};

export type FileUploadFinanceAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceAttachmentsOrderBy>>;
  where?: InputMaybe<FinanceAttachmentsBoolExp>;
};

export type FileUploadFormSubmissionAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionAttachmentsOrderBy>>;
  where?: InputMaybe<FormSubmissionAttachmentsBoolExp>;
};

export type FileUploadFormSubmissionAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionAttachmentsOrderBy>>;
  where?: InputMaybe<FormSubmissionAttachmentsBoolExp>;
};

export type FileUploadGrantAllocateAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type FileUploadGrantAllocateAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type FileUploadGrantAllocatesArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type FileUploadGrantAllocatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type FileUploadGrantAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type FileUploadGrantAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type FileUploadGrantsArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type FileUploadGrantsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type FileUploadLocationImagesArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type FileUploadLocationImagesAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type FileUploadProjectsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type FileUploadProjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type FileUploadSignatureGrantsArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type FileUploadSignatureGrantsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type FileUploadSignedGrantAllocatesArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type FileUploadSignedGrantAllocatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type FileUploadTagsArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type FileUploadTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type FileUploadTeamsArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type FileUploadTeamsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type FileUploadAggregate = {
  __typename?: 'FileUploadAggregate';
  aggregate?: Maybe<FileUploadAggregateFields>;
  nodes: Array<FileUpload>;
};

export type FileUploadAggregateBoolExp = {
  count?: InputMaybe<FileUploadAggregateBoolExpCount>;
};

export type FileUploadAggregateFields = {
  __typename?: 'FileUploadAggregateFields';
  avg?: Maybe<FileUploadAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FileUploadMaxFields>;
  min?: Maybe<FileUploadMinFields>;
  stddev?: Maybe<FileUploadStddevFields>;
  stddevPop?: Maybe<FileUploadStddevPopFields>;
  stddevSamp?: Maybe<FileUploadStddevSampFields>;
  sum?: Maybe<FileUploadSumFields>;
  varPop?: Maybe<FileUploadVarPopFields>;
  varSamp?: Maybe<FileUploadVarSampFields>;
  variance?: Maybe<FileUploadVarianceFields>;
};

export type FileUploadAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FileUploadSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FileUploadAggregateOrderBy = {
  avg?: InputMaybe<FileUploadAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<FileUploadMaxOrderBy>;
  min?: InputMaybe<FileUploadMinOrderBy>;
  stddev?: InputMaybe<FileUploadStddevOrderBy>;
  stddevPop?: InputMaybe<FileUploadStddevPopOrderBy>;
  stddevSamp?: InputMaybe<FileUploadStddevSampOrderBy>;
  sum?: InputMaybe<FileUploadSumOrderBy>;
  varPop?: InputMaybe<FileUploadVarPopOrderBy>;
  varSamp?: InputMaybe<FileUploadVarSampOrderBy>;
  variance?: InputMaybe<FileUploadVarianceOrderBy>;
};

export type FileUploadArrRelInsertInput = {
  data: Array<FileUploadInsertInput>;
  onConflict?: InputMaybe<FileUploadOnConflict>;
};

export type FileUploadAvgFields = {
  __typename?: 'FileUploadAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FileUploadAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FileUploadBoolExp = {
  _and?: InputMaybe<Array<FileUploadBoolExp>>;
  _not?: InputMaybe<FileUploadBoolExp>;
  _or?: InputMaybe<Array<FileUploadBoolExp>>;
  actorImage?: InputMaybe<ActorImageBoolExp>;
  contentAttachments?: InputMaybe<ContentAttachmentsBoolExp>;
  contentAttachmentsAggregate?: InputMaybe<ContentAttachmentsAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  document?: InputMaybe<DocumentBoolExp>;
  eventJoins?: InputMaybe<EventJoinBoolExp>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  events?: InputMaybe<EventBoolExp>;
  eventsAggregate?: InputMaybe<EventAggregateBoolExp>;
  expenseItemAttachments?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
  expenseItemAttachmentsAggregate?: InputMaybe<ExpenseItemAttachmentsAggregateBoolExp>;
  expenses?: InputMaybe<ExpenseBoolExp>;
  expensesAggregate?: InputMaybe<ExpenseAggregateBoolExp>;
  fileLastModifiedAt?: InputMaybe<TimestamptzComparisonExp>;
  financeAttachments?: InputMaybe<FinanceAttachmentsBoolExp>;
  financeAttachmentsAggregate?: InputMaybe<FinanceAttachmentsAggregateBoolExp>;
  formSubmissionAttachments?: InputMaybe<FormSubmissionAttachmentsBoolExp>;
  formSubmissionAttachmentsAggregate?: InputMaybe<FormSubmissionAttachmentsAggregateBoolExp>;
  grantAllocateAttachments?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
  grantAllocateAttachmentsAggregate?: InputMaybe<GrantAllocateAttachmentsAggregateBoolExp>;
  grantAllocates?: InputMaybe<GrantAllocateBoolExp>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateBoolExp>;
  grantAttachments?: InputMaybe<GrantAttachmentsBoolExp>;
  grantAttachmentsAggregate?: InputMaybe<GrantAttachmentsAggregateBoolExp>;
  grants?: InputMaybe<GrantBoolExp>;
  grantsAggregate?: InputMaybe<GrantAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  locationImages?: InputMaybe<LocationImagesBoolExp>;
  locationImagesAggregate?: InputMaybe<LocationImagesAggregateBoolExp>;
  name?: InputMaybe<StringComparisonExp>;
  projects?: InputMaybe<ProjectBoolExp>;
  projectsAggregate?: InputMaybe<ProjectAggregateBoolExp>;
  signatureGrants?: InputMaybe<GrantBoolExp>;
  signatureGrantsAggregate?: InputMaybe<GrantAggregateBoolExp>;
  signedGrantAllocates?: InputMaybe<GrantAllocateBoolExp>;
  signedGrantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateBoolExp>;
  size?: InputMaybe<IntComparisonExp>;
  tags?: InputMaybe<TagBoolExp>;
  tagsAggregate?: InputMaybe<TagAggregateBoolExp>;
  teams?: InputMaybe<TeamBoolExp>;
  teamsAggregate?: InputMaybe<TeamAggregateBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
  url?: InputMaybe<StringComparisonExp>;
};

export enum FileUploadConstraint {
  FileUploadPkey = 'file_upload_pkey',
}

export type FileUploadIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FileUploadInsertInput = {
  actorImage?: InputMaybe<ActorImageObjRelInsertInput>;
  contentAttachments?: InputMaybe<ContentAttachmentsArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  document?: InputMaybe<DocumentObjRelInsertInput>;
  eventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  events?: InputMaybe<EventArrRelInsertInput>;
  expenseItemAttachments?: InputMaybe<ExpenseItemAttachmentsArrRelInsertInput>;
  expenses?: InputMaybe<ExpenseArrRelInsertInput>;
  fileLastModifiedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  financeAttachments?: InputMaybe<FinanceAttachmentsArrRelInsertInput>;
  formSubmissionAttachments?: InputMaybe<FormSubmissionAttachmentsArrRelInsertInput>;
  grantAllocateAttachments?: InputMaybe<GrantAllocateAttachmentsArrRelInsertInput>;
  grantAllocates?: InputMaybe<GrantAllocateArrRelInsertInput>;
  grantAttachments?: InputMaybe<GrantAttachmentsArrRelInsertInput>;
  grants?: InputMaybe<GrantArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  locationImages?: InputMaybe<LocationImagesArrRelInsertInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  projects?: InputMaybe<ProjectArrRelInsertInput>;
  signatureGrants?: InputMaybe<GrantArrRelInsertInput>;
  signedGrantAllocates?: InputMaybe<GrantAllocateArrRelInsertInput>;
  size?: InputMaybe<Scalars['Int']['input']>;
  tags?: InputMaybe<TagArrRelInsertInput>;
  teams?: InputMaybe<TeamArrRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type FileUploadMaxFields = {
  __typename?: 'FileUploadMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  fileLastModifiedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type FileUploadMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  fileLastModifiedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  url?: InputMaybe<OrderBy>;
};

export type FileUploadMinFields = {
  __typename?: 'FileUploadMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  fileLastModifiedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type FileUploadMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  fileLastModifiedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  url?: InputMaybe<OrderBy>;
};

export type FileUploadMutationResponse = {
  __typename?: 'FileUploadMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<FileUpload>;
};

export type FileUploadObjRelInsertInput = {
  data: FileUploadInsertInput;
  onConflict?: InputMaybe<FileUploadOnConflict>;
};

export type FileUploadOnConflict = {
  constraint: FileUploadConstraint;
  updateColumns?: Array<FileUploadUpdateColumn>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type FileUploadOrderBy = {
  actorImage?: InputMaybe<ActorImageOrderBy>;
  contentAttachmentsAggregate?: InputMaybe<ContentAttachmentsAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  document?: InputMaybe<DocumentOrderBy>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  eventsAggregate?: InputMaybe<EventAggregateOrderBy>;
  expenseItemAttachmentsAggregate?: InputMaybe<ExpenseItemAttachmentsAggregateOrderBy>;
  expensesAggregate?: InputMaybe<ExpenseAggregateOrderBy>;
  fileLastModifiedAt?: InputMaybe<OrderBy>;
  financeAttachmentsAggregate?: InputMaybe<FinanceAttachmentsAggregateOrderBy>;
  formSubmissionAttachmentsAggregate?: InputMaybe<FormSubmissionAttachmentsAggregateOrderBy>;
  grantAllocateAttachmentsAggregate?: InputMaybe<GrantAllocateAttachmentsAggregateOrderBy>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateOrderBy>;
  grantAttachmentsAggregate?: InputMaybe<GrantAttachmentsAggregateOrderBy>;
  grantsAggregate?: InputMaybe<GrantAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationImagesAggregate?: InputMaybe<LocationImagesAggregateOrderBy>;
  name?: InputMaybe<OrderBy>;
  projectsAggregate?: InputMaybe<ProjectAggregateOrderBy>;
  signatureGrantsAggregate?: InputMaybe<GrantAggregateOrderBy>;
  signedGrantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateOrderBy>;
  size?: InputMaybe<OrderBy>;
  tagsAggregate?: InputMaybe<TagAggregateOrderBy>;
  teamsAggregate?: InputMaybe<TeamAggregateOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  url?: InputMaybe<OrderBy>;
};

export type FileUploadPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum FileUploadSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FileLastModifiedAt = 'fileLastModifiedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  Size = 'size',
  TenantId = 'tenantId',
  Type = 'type',
  Url = 'url',
}

export type FileUploadSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  fileLastModifiedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type FileUploadStddevFields = {
  __typename?: 'FileUploadStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FileUploadStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FileUploadStddevPopFields = {
  __typename?: 'FileUploadStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FileUploadStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FileUploadStddevSampFields = {
  __typename?: 'FileUploadStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FileUploadStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FileUploadStreamCursorInput = {
  initialValue: FileUploadStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type FileUploadStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  fileLastModifiedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type FileUploadSumFields = {
  __typename?: 'FileUploadSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type FileUploadSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum FileUploadUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FileLastModifiedAt = 'fileLastModifiedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  Size = 'size',
  TenantId = 'tenantId',
  Type = 'type',
  Url = 'url',
}

export type FileUploadUpdates = {
  _inc?: InputMaybe<FileUploadIncInput>;
  _set?: InputMaybe<FileUploadSetInput>;
  where: FileUploadBoolExp;
};

export type FileUploadVarPopFields = {
  __typename?: 'FileUploadVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FileUploadVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FileUploadVarSampFields = {
  __typename?: 'FileUploadVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FileUploadVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FileUploadVarianceFields = {
  __typename?: 'FileUploadVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FileUploadVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Finance = {
  __typename?: 'Finance';
  account: Account;
  accountId: Scalars['bigint']['output'];
  amount: Scalars['Float']['output'];
  category: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  event?: Maybe<Event>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  expense?: Maybe<Expense>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  financeAttachments: Array<FinanceAttachments>;
  financeAttachmentsAggregate: FinanceAttachmentsAggregate;
  financeTags: Array<FinanceTags>;
  financeTagsAggregate: FinanceTagsAggregate;
  grantAllocates: Array<GrantAllocate>;
  grantAllocatesAggregate: GrantAllocateAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  initiatedBy?: Maybe<Individual>;
  initiatedById?: Maybe<Scalars['bigint']['output']>;
  isOnline: Scalars['Boolean']['output'];
  location?: Maybe<Location>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  method: Scalars['String']['output'];
  payedAt: Scalars['timestamptz']['output'];
  payedBy: Actor;
  payedById: Scalars['bigint']['output'];
  payedByType: Scalars['String']['output'];
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  receivedBy: Actor;
  receivedById: Scalars['bigint']['output'];
  state: Scalars['String']['output'];
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type FinanceFinanceAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<FinanceAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceAttachmentsOrderBy>>;
  where?: InputMaybe<FinanceAttachmentsBoolExp>;
};

export type FinanceFinanceAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceAttachmentsOrderBy>>;
  where?: InputMaybe<FinanceAttachmentsBoolExp>;
};

export type FinanceFinanceTagsArgs = {
  distinctOn?: InputMaybe<Array<FinanceTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceTagsOrderBy>>;
  where?: InputMaybe<FinanceTagsBoolExp>;
};

export type FinanceFinanceTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceTagsOrderBy>>;
  where?: InputMaybe<FinanceTagsBoolExp>;
};

export type FinanceGrantAllocatesArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type FinanceGrantAllocatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type FinanceAggregate = {
  __typename?: 'FinanceAggregate';
  aggregate?: Maybe<FinanceAggregateFields>;
  nodes: Array<Finance>;
};

export type FinanceAggregateBoolExp = {
  bool_and?: InputMaybe<FinanceAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<FinanceAggregateBoolExpBool_Or>;
  count?: InputMaybe<FinanceAggregateBoolExpCount>;
};

export type FinanceAggregateFields = {
  __typename?: 'FinanceAggregateFields';
  avg?: Maybe<FinanceAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FinanceMaxFields>;
  min?: Maybe<FinanceMinFields>;
  stddev?: Maybe<FinanceStddevFields>;
  stddevPop?: Maybe<FinanceStddevPopFields>;
  stddevSamp?: Maybe<FinanceStddevSampFields>;
  sum?: Maybe<FinanceSumFields>;
  varPop?: Maybe<FinanceVarPopFields>;
  varSamp?: Maybe<FinanceVarSampFields>;
  variance?: Maybe<FinanceVarianceFields>;
};

export type FinanceAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FinanceSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FinanceAggregateOrderBy = {
  avg?: InputMaybe<FinanceAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<FinanceMaxOrderBy>;
  min?: InputMaybe<FinanceMinOrderBy>;
  stddev?: InputMaybe<FinanceStddevOrderBy>;
  stddevPop?: InputMaybe<FinanceStddevPopOrderBy>;
  stddevSamp?: InputMaybe<FinanceStddevSampOrderBy>;
  sum?: InputMaybe<FinanceSumOrderBy>;
  varPop?: InputMaybe<FinanceVarPopOrderBy>;
  varSamp?: InputMaybe<FinanceVarSampOrderBy>;
  variance?: InputMaybe<FinanceVarianceOrderBy>;
};

export type FinanceArrRelInsertInput = {
  data: Array<FinanceInsertInput>;
  onConflict?: InputMaybe<FinanceOnConflict>;
};

export type FinanceAttachments = {
  __typename?: 'FinanceAttachments';
  attachment: FileUpload;
  fileUploadId: Scalars['bigint']['output'];
  finance: Finance;
  financeId: Scalars['bigint']['output'];
};

export type FinanceAttachmentsAggregate = {
  __typename?: 'FinanceAttachmentsAggregate';
  aggregate?: Maybe<FinanceAttachmentsAggregateFields>;
  nodes: Array<FinanceAttachments>;
};

export type FinanceAttachmentsAggregateBoolExp = {
  count?: InputMaybe<FinanceAttachmentsAggregateBoolExpCount>;
};

export type FinanceAttachmentsAggregateFields = {
  __typename?: 'FinanceAttachmentsAggregateFields';
  avg?: Maybe<FinanceAttachmentsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FinanceAttachmentsMaxFields>;
  min?: Maybe<FinanceAttachmentsMinFields>;
  stddev?: Maybe<FinanceAttachmentsStddevFields>;
  stddevPop?: Maybe<FinanceAttachmentsStddevPopFields>;
  stddevSamp?: Maybe<FinanceAttachmentsStddevSampFields>;
  sum?: Maybe<FinanceAttachmentsSumFields>;
  varPop?: Maybe<FinanceAttachmentsVarPopFields>;
  varSamp?: Maybe<FinanceAttachmentsVarSampFields>;
  variance?: Maybe<FinanceAttachmentsVarianceFields>;
};

export type FinanceAttachmentsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FinanceAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FinanceAttachmentsAggregateOrderBy = {
  avg?: InputMaybe<FinanceAttachmentsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<FinanceAttachmentsMaxOrderBy>;
  min?: InputMaybe<FinanceAttachmentsMinOrderBy>;
  stddev?: InputMaybe<FinanceAttachmentsStddevOrderBy>;
  stddevPop?: InputMaybe<FinanceAttachmentsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<FinanceAttachmentsStddevSampOrderBy>;
  sum?: InputMaybe<FinanceAttachmentsSumOrderBy>;
  varPop?: InputMaybe<FinanceAttachmentsVarPopOrderBy>;
  varSamp?: InputMaybe<FinanceAttachmentsVarSampOrderBy>;
  variance?: InputMaybe<FinanceAttachmentsVarianceOrderBy>;
};

export type FinanceAttachmentsArrRelInsertInput = {
  data: Array<FinanceAttachmentsInsertInput>;
  onConflict?: InputMaybe<FinanceAttachmentsOnConflict>;
};

export type FinanceAttachmentsAvgFields = {
  __typename?: 'FinanceAttachmentsAvgFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  financeId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceAttachmentsAvgOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
};

export type FinanceAttachmentsBoolExp = {
  _and?: InputMaybe<Array<FinanceAttachmentsBoolExp>>;
  _not?: InputMaybe<FinanceAttachmentsBoolExp>;
  _or?: InputMaybe<Array<FinanceAttachmentsBoolExp>>;
  attachment?: InputMaybe<FileUploadBoolExp>;
  fileUploadId?: InputMaybe<BigintComparisonExp>;
  finance?: InputMaybe<FinanceBoolExp>;
  financeId?: InputMaybe<BigintComparisonExp>;
};

export enum FinanceAttachmentsConstraint {
  FinanceAttachmentsPkey = 'finance_attachments_pkey',
}

export type FinanceAttachmentsIncInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  financeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FinanceAttachmentsInsertInput = {
  attachment?: InputMaybe<FileUploadObjRelInsertInput>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  finance?: InputMaybe<FinanceObjRelInsertInput>;
  financeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FinanceAttachmentsMaxFields = {
  __typename?: 'FinanceAttachmentsMaxFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  financeId?: Maybe<Scalars['bigint']['output']>;
};

export type FinanceAttachmentsMaxOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
};

export type FinanceAttachmentsMinFields = {
  __typename?: 'FinanceAttachmentsMinFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  financeId?: Maybe<Scalars['bigint']['output']>;
};

export type FinanceAttachmentsMinOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
};

export type FinanceAttachmentsMutationResponse = {
  __typename?: 'FinanceAttachmentsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<FinanceAttachments>;
};

export type FinanceAttachmentsOnConflict = {
  constraint: FinanceAttachmentsConstraint;
  updateColumns?: Array<FinanceAttachmentsUpdateColumn>;
  where?: InputMaybe<FinanceAttachmentsBoolExp>;
};

export type FinanceAttachmentsOrderBy = {
  attachment?: InputMaybe<FileUploadOrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  finance?: InputMaybe<FinanceOrderBy>;
  financeId?: InputMaybe<OrderBy>;
};

export type FinanceAttachmentsPkColumnsInput = {
  fileUploadId: Scalars['bigint']['input'];
  financeId: Scalars['bigint']['input'];
};

export enum FinanceAttachmentsSelectColumn {
  FileUploadId = 'fileUploadId',
  FinanceId = 'financeId',
}

export type FinanceAttachmentsSetInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  financeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FinanceAttachmentsStddevFields = {
  __typename?: 'FinanceAttachmentsStddevFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  financeId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceAttachmentsStddevOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
};

export type FinanceAttachmentsStddevPopFields = {
  __typename?: 'FinanceAttachmentsStddevPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  financeId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceAttachmentsStddevPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
};

export type FinanceAttachmentsStddevSampFields = {
  __typename?: 'FinanceAttachmentsStddevSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  financeId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceAttachmentsStddevSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
};

export type FinanceAttachmentsStreamCursorInput = {
  initialValue: FinanceAttachmentsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type FinanceAttachmentsStreamCursorValueInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  financeId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FinanceAttachmentsSumFields = {
  __typename?: 'FinanceAttachmentsSumFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  financeId?: Maybe<Scalars['bigint']['output']>;
};

export type FinanceAttachmentsSumOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
};

export enum FinanceAttachmentsUpdateColumn {
  FileUploadId = 'fileUploadId',
  FinanceId = 'financeId',
}

export type FinanceAttachmentsUpdates = {
  _inc?: InputMaybe<FinanceAttachmentsIncInput>;
  _set?: InputMaybe<FinanceAttachmentsSetInput>;
  where: FinanceAttachmentsBoolExp;
};

export type FinanceAttachmentsVarPopFields = {
  __typename?: 'FinanceAttachmentsVarPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  financeId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceAttachmentsVarPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
};

export type FinanceAttachmentsVarSampFields = {
  __typename?: 'FinanceAttachmentsVarSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  financeId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceAttachmentsVarSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
};

export type FinanceAttachmentsVarianceFields = {
  __typename?: 'FinanceAttachmentsVarianceFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  financeId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceAttachmentsVarianceOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
};

export type FinanceAvgFields = {
  __typename?: 'FinanceAvgFields';
  accountId?: Maybe<Scalars['Float']['output']>;
  amount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  initiatedById?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  payedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  receivedById?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceAvgOrderBy = {
  accountId?: InputMaybe<OrderBy>;
  amount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  initiatedById?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FinanceBoolExp = {
  _and?: InputMaybe<Array<FinanceBoolExp>>;
  _not?: InputMaybe<FinanceBoolExp>;
  _or?: InputMaybe<Array<FinanceBoolExp>>;
  account?: InputMaybe<AccountBoolExp>;
  accountId?: InputMaybe<BigintComparisonExp>;
  amount?: InputMaybe<FloatComparisonExp>;
  category?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  event?: InputMaybe<EventBoolExp>;
  eventId?: InputMaybe<BigintComparisonExp>;
  expense?: InputMaybe<ExpenseBoolExp>;
  expenseId?: InputMaybe<BigintComparisonExp>;
  financeAttachments?: InputMaybe<FinanceAttachmentsBoolExp>;
  financeAttachmentsAggregate?: InputMaybe<FinanceAttachmentsAggregateBoolExp>;
  financeTags?: InputMaybe<FinanceTagsBoolExp>;
  financeTagsAggregate?: InputMaybe<FinanceTagsAggregateBoolExp>;
  grantAllocates?: InputMaybe<GrantAllocateBoolExp>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  initiatedBy?: InputMaybe<IndividualBoolExp>;
  initiatedById?: InputMaybe<BigintComparisonExp>;
  isOnline?: InputMaybe<BooleanComparisonExp>;
  location?: InputMaybe<LocationBoolExp>;
  locationId?: InputMaybe<BigintComparisonExp>;
  method?: InputMaybe<StringComparisonExp>;
  payedAt?: InputMaybe<TimestamptzComparisonExp>;
  payedBy?: InputMaybe<ActorBoolExp>;
  payedById?: InputMaybe<BigintComparisonExp>;
  payedByType?: InputMaybe<StringComparisonExp>;
  project?: InputMaybe<ProjectBoolExp>;
  projectId?: InputMaybe<BigintComparisonExp>;
  receivedBy?: InputMaybe<ActorBoolExp>;
  receivedById?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<StringComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum FinanceConstraint {
  FinanceExpenseIdUnique = 'finance_expense_id_unique',
  FinancePkey = 'finance_pkey',
}

export type FinanceIncInput = {
  accountId?: InputMaybe<Scalars['bigint']['input']>;
  amount?: InputMaybe<Scalars['Float']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  initiatedById?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  payedById?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  receivedById?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FinanceInsertInput = {
  account?: InputMaybe<AccountObjRelInsertInput>;
  accountId?: InputMaybe<Scalars['bigint']['input']>;
  amount?: InputMaybe<Scalars['Float']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  event?: InputMaybe<EventObjRelInsertInput>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  expense?: InputMaybe<ExpenseObjRelInsertInput>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  financeAttachments?: InputMaybe<FinanceAttachmentsArrRelInsertInput>;
  financeTags?: InputMaybe<FinanceTagsArrRelInsertInput>;
  grantAllocates?: InputMaybe<GrantAllocateArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  initiatedBy?: InputMaybe<IndividualObjRelInsertInput>;
  initiatedById?: InputMaybe<Scalars['bigint']['input']>;
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<LocationObjRelInsertInput>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  method?: InputMaybe<Scalars['String']['input']>;
  payedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  payedBy?: InputMaybe<ActorObjRelInsertInput>;
  payedById?: InputMaybe<Scalars['bigint']['input']>;
  payedByType?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<ProjectObjRelInsertInput>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  receivedBy?: InputMaybe<ActorObjRelInsertInput>;
  receivedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FinanceMaxFields = {
  __typename?: 'FinanceMaxFields';
  accountId?: Maybe<Scalars['bigint']['output']>;
  amount?: Maybe<Scalars['Float']['output']>;
  category?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  initiatedById?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  method?: Maybe<Scalars['String']['output']>;
  payedAt?: Maybe<Scalars['timestamptz']['output']>;
  payedById?: Maybe<Scalars['bigint']['output']>;
  payedByType?: Maybe<Scalars['String']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  receivedById?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type FinanceMaxOrderBy = {
  accountId?: InputMaybe<OrderBy>;
  amount?: InputMaybe<OrderBy>;
  category?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  initiatedById?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  method?: InputMaybe<OrderBy>;
  payedAt?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  payedByType?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FinanceMinFields = {
  __typename?: 'FinanceMinFields';
  accountId?: Maybe<Scalars['bigint']['output']>;
  amount?: Maybe<Scalars['Float']['output']>;
  category?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  initiatedById?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  method?: Maybe<Scalars['String']['output']>;
  payedAt?: Maybe<Scalars['timestamptz']['output']>;
  payedById?: Maybe<Scalars['bigint']['output']>;
  payedByType?: Maybe<Scalars['String']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  receivedById?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type FinanceMinOrderBy = {
  accountId?: InputMaybe<OrderBy>;
  amount?: InputMaybe<OrderBy>;
  category?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  initiatedById?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  method?: InputMaybe<OrderBy>;
  payedAt?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  payedByType?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FinanceMutationResponse = {
  __typename?: 'FinanceMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Finance>;
};

export type FinanceObjRelInsertInput = {
  data: FinanceInsertInput;
  onConflict?: InputMaybe<FinanceOnConflict>;
};

export type FinanceOnConflict = {
  constraint: FinanceConstraint;
  updateColumns?: Array<FinanceUpdateColumn>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type FinanceOrderBy = {
  account?: InputMaybe<AccountOrderBy>;
  accountId?: InputMaybe<OrderBy>;
  amount?: InputMaybe<OrderBy>;
  category?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  event?: InputMaybe<EventOrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expense?: InputMaybe<ExpenseOrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  financeAttachmentsAggregate?: InputMaybe<FinanceAttachmentsAggregateOrderBy>;
  financeTagsAggregate?: InputMaybe<FinanceTagsAggregateOrderBy>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  initiatedBy?: InputMaybe<IndividualOrderBy>;
  initiatedById?: InputMaybe<OrderBy>;
  isOnline?: InputMaybe<OrderBy>;
  location?: InputMaybe<LocationOrderBy>;
  locationId?: InputMaybe<OrderBy>;
  method?: InputMaybe<OrderBy>;
  payedAt?: InputMaybe<OrderBy>;
  payedBy?: InputMaybe<ActorOrderBy>;
  payedById?: InputMaybe<OrderBy>;
  payedByType?: InputMaybe<OrderBy>;
  project?: InputMaybe<ProjectOrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedBy?: InputMaybe<ActorOrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FinancePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum FinanceSelectColumn {
  AccountId = 'accountId',
  Amount = 'amount',
  Category = 'category',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventId = 'eventId',
  ExpenseId = 'expenseId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  InitiatedById = 'initiatedById',
  IsOnline = 'isOnline',
  LocationId = 'locationId',
  Method = 'method',
  PayedAt = 'payedAt',
  PayedById = 'payedById',
  PayedByType = 'payedByType',
  ProjectId = 'projectId',
  ReceivedById = 'receivedById',
  State = 'state',
  TeamId = 'teamId',
  TenantId = 'tenantId',
}

export enum FinanceSelectColumnFinanceAggregateBoolExpBool_AndArgumentsColumns {
  IsOnline = 'isOnline',
}

export enum FinanceSelectColumnFinanceAggregateBoolExpBool_OrArgumentsColumns {
  IsOnline = 'isOnline',
}

export type FinanceSetInput = {
  accountId?: InputMaybe<Scalars['bigint']['input']>;
  amount?: InputMaybe<Scalars['Float']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  initiatedById?: InputMaybe<Scalars['bigint']['input']>;
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  method?: InputMaybe<Scalars['String']['input']>;
  payedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  payedById?: InputMaybe<Scalars['bigint']['input']>;
  payedByType?: InputMaybe<Scalars['String']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  receivedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FinanceStddevFields = {
  __typename?: 'FinanceStddevFields';
  accountId?: Maybe<Scalars['Float']['output']>;
  amount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  initiatedById?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  payedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  receivedById?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceStddevOrderBy = {
  accountId?: InputMaybe<OrderBy>;
  amount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  initiatedById?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FinanceStddevPopFields = {
  __typename?: 'FinanceStddevPopFields';
  accountId?: Maybe<Scalars['Float']['output']>;
  amount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  initiatedById?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  payedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  receivedById?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceStddevPopOrderBy = {
  accountId?: InputMaybe<OrderBy>;
  amount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  initiatedById?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FinanceStddevSampFields = {
  __typename?: 'FinanceStddevSampFields';
  accountId?: Maybe<Scalars['Float']['output']>;
  amount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  initiatedById?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  payedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  receivedById?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceStddevSampOrderBy = {
  accountId?: InputMaybe<OrderBy>;
  amount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  initiatedById?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FinanceStreamCursorInput = {
  initialValue: FinanceStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type FinanceStreamCursorValueInput = {
  accountId?: InputMaybe<Scalars['bigint']['input']>;
  amount?: InputMaybe<Scalars['Float']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventId?: InputMaybe<Scalars['bigint']['input']>;
  expenseId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  initiatedById?: InputMaybe<Scalars['bigint']['input']>;
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  method?: InputMaybe<Scalars['String']['input']>;
  payedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  payedById?: InputMaybe<Scalars['bigint']['input']>;
  payedByType?: InputMaybe<Scalars['String']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  receivedById?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FinanceSumFields = {
  __typename?: 'FinanceSumFields';
  accountId?: Maybe<Scalars['bigint']['output']>;
  amount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventId?: Maybe<Scalars['bigint']['output']>;
  expenseId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  initiatedById?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  payedById?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  receivedById?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type FinanceSumOrderBy = {
  accountId?: InputMaybe<OrderBy>;
  amount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  initiatedById?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FinanceTags = {
  __typename?: 'FinanceTags';
  finance: Finance;
  financeId: Scalars['bigint']['output'];
  tag: Tag;
  tagId: Scalars['bigint']['output'];
};

export type FinanceTagsAggregate = {
  __typename?: 'FinanceTagsAggregate';
  aggregate?: Maybe<FinanceTagsAggregateFields>;
  nodes: Array<FinanceTags>;
};

export type FinanceTagsAggregateBoolExp = {
  count?: InputMaybe<FinanceTagsAggregateBoolExpCount>;
};

export type FinanceTagsAggregateFields = {
  __typename?: 'FinanceTagsAggregateFields';
  avg?: Maybe<FinanceTagsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FinanceTagsMaxFields>;
  min?: Maybe<FinanceTagsMinFields>;
  stddev?: Maybe<FinanceTagsStddevFields>;
  stddevPop?: Maybe<FinanceTagsStddevPopFields>;
  stddevSamp?: Maybe<FinanceTagsStddevSampFields>;
  sum?: Maybe<FinanceTagsSumFields>;
  varPop?: Maybe<FinanceTagsVarPopFields>;
  varSamp?: Maybe<FinanceTagsVarSampFields>;
  variance?: Maybe<FinanceTagsVarianceFields>;
};

export type FinanceTagsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FinanceTagsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FinanceTagsAggregateOrderBy = {
  avg?: InputMaybe<FinanceTagsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<FinanceTagsMaxOrderBy>;
  min?: InputMaybe<FinanceTagsMinOrderBy>;
  stddev?: InputMaybe<FinanceTagsStddevOrderBy>;
  stddevPop?: InputMaybe<FinanceTagsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<FinanceTagsStddevSampOrderBy>;
  sum?: InputMaybe<FinanceTagsSumOrderBy>;
  varPop?: InputMaybe<FinanceTagsVarPopOrderBy>;
  varSamp?: InputMaybe<FinanceTagsVarSampOrderBy>;
  variance?: InputMaybe<FinanceTagsVarianceOrderBy>;
};

export type FinanceTagsArrRelInsertInput = {
  data: Array<FinanceTagsInsertInput>;
  onConflict?: InputMaybe<FinanceTagsOnConflict>;
};

export type FinanceTagsAvgFields = {
  __typename?: 'FinanceTagsAvgFields';
  financeId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceTagsAvgOrderBy = {
  financeId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type FinanceTagsBoolExp = {
  _and?: InputMaybe<Array<FinanceTagsBoolExp>>;
  _not?: InputMaybe<FinanceTagsBoolExp>;
  _or?: InputMaybe<Array<FinanceTagsBoolExp>>;
  finance?: InputMaybe<FinanceBoolExp>;
  financeId?: InputMaybe<BigintComparisonExp>;
  tag?: InputMaybe<TagBoolExp>;
  tagId?: InputMaybe<BigintComparisonExp>;
};

export enum FinanceTagsConstraint {
  FinanceTagsPkey = 'finance_tags_pkey',
}

export type FinanceTagsIncInput = {
  financeId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FinanceTagsInsertInput = {
  finance?: InputMaybe<FinanceObjRelInsertInput>;
  financeId?: InputMaybe<Scalars['bigint']['input']>;
  tag?: InputMaybe<TagObjRelInsertInput>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FinanceTagsMaxFields = {
  __typename?: 'FinanceTagsMaxFields';
  financeId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type FinanceTagsMaxOrderBy = {
  financeId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type FinanceTagsMinFields = {
  __typename?: 'FinanceTagsMinFields';
  financeId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type FinanceTagsMinOrderBy = {
  financeId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type FinanceTagsMutationResponse = {
  __typename?: 'FinanceTagsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<FinanceTags>;
};

export type FinanceTagsOnConflict = {
  constraint: FinanceTagsConstraint;
  updateColumns?: Array<FinanceTagsUpdateColumn>;
  where?: InputMaybe<FinanceTagsBoolExp>;
};

export type FinanceTagsOrderBy = {
  finance?: InputMaybe<FinanceOrderBy>;
  financeId?: InputMaybe<OrderBy>;
  tag?: InputMaybe<TagOrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type FinanceTagsPkColumnsInput = {
  financeId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export enum FinanceTagsSelectColumn {
  FinanceId = 'financeId',
  TagId = 'tagId',
}

export type FinanceTagsSetInput = {
  financeId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FinanceTagsStddevFields = {
  __typename?: 'FinanceTagsStddevFields';
  financeId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceTagsStddevOrderBy = {
  financeId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type FinanceTagsStddevPopFields = {
  __typename?: 'FinanceTagsStddevPopFields';
  financeId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceTagsStddevPopOrderBy = {
  financeId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type FinanceTagsStddevSampFields = {
  __typename?: 'FinanceTagsStddevSampFields';
  financeId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceTagsStddevSampOrderBy = {
  financeId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type FinanceTagsStreamCursorInput = {
  initialValue: FinanceTagsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type FinanceTagsStreamCursorValueInput = {
  financeId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FinanceTagsSumFields = {
  __typename?: 'FinanceTagsSumFields';
  financeId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type FinanceTagsSumOrderBy = {
  financeId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export enum FinanceTagsUpdateColumn {
  FinanceId = 'financeId',
  TagId = 'tagId',
}

export type FinanceTagsUpdates = {
  _inc?: InputMaybe<FinanceTagsIncInput>;
  _set?: InputMaybe<FinanceTagsSetInput>;
  where: FinanceTagsBoolExp;
};

export type FinanceTagsVarPopFields = {
  __typename?: 'FinanceTagsVarPopFields';
  financeId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceTagsVarPopOrderBy = {
  financeId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type FinanceTagsVarSampFields = {
  __typename?: 'FinanceTagsVarSampFields';
  financeId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceTagsVarSampOrderBy = {
  financeId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type FinanceTagsVarianceFields = {
  __typename?: 'FinanceTagsVarianceFields';
  financeId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceTagsVarianceOrderBy = {
  financeId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export enum FinanceUpdateColumn {
  AccountId = 'accountId',
  Amount = 'amount',
  Category = 'category',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventId = 'eventId',
  ExpenseId = 'expenseId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  InitiatedById = 'initiatedById',
  IsOnline = 'isOnline',
  LocationId = 'locationId',
  Method = 'method',
  PayedAt = 'payedAt',
  PayedById = 'payedById',
  PayedByType = 'payedByType',
  ProjectId = 'projectId',
  ReceivedById = 'receivedById',
  State = 'state',
  TeamId = 'teamId',
  TenantId = 'tenantId',
}

export type FinanceUpdates = {
  _inc?: InputMaybe<FinanceIncInput>;
  _set?: InputMaybe<FinanceSetInput>;
  where: FinanceBoolExp;
};

export type FinanceVarPopFields = {
  __typename?: 'FinanceVarPopFields';
  accountId?: Maybe<Scalars['Float']['output']>;
  amount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  initiatedById?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  payedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  receivedById?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceVarPopOrderBy = {
  accountId?: InputMaybe<OrderBy>;
  amount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  initiatedById?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FinanceVarSampFields = {
  __typename?: 'FinanceVarSampFields';
  accountId?: Maybe<Scalars['Float']['output']>;
  amount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  initiatedById?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  payedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  receivedById?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceVarSampOrderBy = {
  accountId?: InputMaybe<OrderBy>;
  amount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  initiatedById?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FinanceVarianceFields = {
  __typename?: 'FinanceVarianceFields';
  accountId?: Maybe<Scalars['Float']['output']>;
  amount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  expenseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  initiatedById?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  payedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  receivedById?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FinanceVarianceOrderBy = {
  accountId?: InputMaybe<OrderBy>;
  amount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventId?: InputMaybe<OrderBy>;
  expenseId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  initiatedById?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  payedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  receivedById?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FloatComparisonExp = {
  _eq?: InputMaybe<Scalars['Float']['input']>;
  _gt?: InputMaybe<Scalars['Float']['input']>;
  _gte?: InputMaybe<Scalars['Float']['input']>;
  _in?: InputMaybe<Array<Scalars['Float']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Float']['input']>;
  _lte?: InputMaybe<Scalars['Float']['input']>;
  _neq?: InputMaybe<Scalars['Float']['input']>;
  _nin?: InputMaybe<Array<Scalars['Float']['input']>>;
};

export type Follow = {
  __typename?: 'Follow';
  actor: Actor;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  followedActorId: Scalars['bigint']['output'];
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type FollowAggregate = {
  __typename?: 'FollowAggregate';
  aggregate?: Maybe<FollowAggregateFields>;
  nodes: Array<Follow>;
};

export type FollowAggregateBoolExp = {
  count?: InputMaybe<FollowAggregateBoolExpCount>;
};

export type FollowAggregateFields = {
  __typename?: 'FollowAggregateFields';
  avg?: Maybe<FollowAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FollowMaxFields>;
  min?: Maybe<FollowMinFields>;
  stddev?: Maybe<FollowStddevFields>;
  stddevPop?: Maybe<FollowStddevPopFields>;
  stddevSamp?: Maybe<FollowStddevSampFields>;
  sum?: Maybe<FollowSumFields>;
  varPop?: Maybe<FollowVarPopFields>;
  varSamp?: Maybe<FollowVarSampFields>;
  variance?: Maybe<FollowVarianceFields>;
};

export type FollowAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FollowSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FollowAggregateOrderBy = {
  avg?: InputMaybe<FollowAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<FollowMaxOrderBy>;
  min?: InputMaybe<FollowMinOrderBy>;
  stddev?: InputMaybe<FollowStddevOrderBy>;
  stddevPop?: InputMaybe<FollowStddevPopOrderBy>;
  stddevSamp?: InputMaybe<FollowStddevSampOrderBy>;
  sum?: InputMaybe<FollowSumOrderBy>;
  varPop?: InputMaybe<FollowVarPopOrderBy>;
  varSamp?: InputMaybe<FollowVarSampOrderBy>;
  variance?: InputMaybe<FollowVarianceOrderBy>;
};

export type FollowArrRelInsertInput = {
  data: Array<FollowInsertInput>;
  onConflict?: InputMaybe<FollowOnConflict>;
};

export type FollowAvgFields = {
  __typename?: 'FollowAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  followedActorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FollowAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FollowBoolExp = {
  _and?: InputMaybe<Array<FollowBoolExp>>;
  _not?: InputMaybe<FollowBoolExp>;
  _or?: InputMaybe<Array<FollowBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  followedActorId?: InputMaybe<BigintComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum FollowConstraint {
  FollowPkey = 'follow_pkey',
}

export type FollowIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  followedActorId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FollowInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  followedActorId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FollowMaxFields = {
  __typename?: 'FollowMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  followedActorId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type FollowMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FollowMinFields = {
  __typename?: 'FollowMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  followedActorId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type FollowMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FollowMutationResponse = {
  __typename?: 'FollowMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Follow>;
};

export type FollowOnConflict = {
  constraint: FollowConstraint;
  updateColumns?: Array<FollowUpdateColumn>;
  where?: InputMaybe<FollowBoolExp>;
};

export type FollowOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FollowPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum FollowSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FollowedActorId = 'followedActorId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
}

export type FollowSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  followedActorId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FollowStddevFields = {
  __typename?: 'FollowStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  followedActorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FollowStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FollowStddevPopFields = {
  __typename?: 'FollowStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  followedActorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FollowStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FollowStddevSampFields = {
  __typename?: 'FollowStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  followedActorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FollowStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FollowStreamCursorInput = {
  initialValue: FollowStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type FollowStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  followedActorId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FollowSumFields = {
  __typename?: 'FollowSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  followedActorId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type FollowSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum FollowUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FollowedActorId = 'followedActorId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
}

export type FollowUpdates = {
  _inc?: InputMaybe<FollowIncInput>;
  _set?: InputMaybe<FollowSetInput>;
  where: FollowBoolExp;
};

export type FollowVarPopFields = {
  __typename?: 'FollowVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  followedActorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FollowVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FollowVarSampFields = {
  __typename?: 'FollowVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  followedActorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FollowVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FollowVarianceFields = {
  __typename?: 'FollowVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  followedActorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FollowVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  followedActorId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Form = {
  __typename?: 'Form';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  events: Array<Event>;
  eventsAggregate: EventAggregate;
  formSubmissions: Array<FormSubmission>;
  formSubmissionsAggregate: FormSubmissionAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isAllowingEditingAnswers: Scalars['Boolean']['output'];
  isAllowingMultipleAnswers: Scalars['Boolean']['output'];
  isEnabled: Scalars['Boolean']['output'];
  isLocked: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  schema: Scalars['jsonb']['output'];
  team?: Maybe<Team>;
  tenant: Tenant;
  tenantById?: Maybe<Tenant>;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
};

export type FormEventsArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type FormEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type FormFormSubmissionsArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type FormFormSubmissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type FormSchemaArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

export type FormAggregate = {
  __typename?: 'FormAggregate';
  aggregate?: Maybe<FormAggregateFields>;
  nodes: Array<Form>;
};

export type FormAggregateBoolExp = {
  bool_and?: InputMaybe<FormAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<FormAggregateBoolExpBool_Or>;
  count?: InputMaybe<FormAggregateBoolExpCount>;
};

export type FormAggregateFields = {
  __typename?: 'FormAggregateFields';
  avg?: Maybe<FormAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FormMaxFields>;
  min?: Maybe<FormMinFields>;
  stddev?: Maybe<FormStddevFields>;
  stddevPop?: Maybe<FormStddevPopFields>;
  stddevSamp?: Maybe<FormStddevSampFields>;
  sum?: Maybe<FormSumFields>;
  varPop?: Maybe<FormVarPopFields>;
  varSamp?: Maybe<FormVarSampFields>;
  variance?: Maybe<FormVarianceFields>;
};

export type FormAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FormSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FormAggregateOrderBy = {
  avg?: InputMaybe<FormAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<FormMaxOrderBy>;
  min?: InputMaybe<FormMinOrderBy>;
  stddev?: InputMaybe<FormStddevOrderBy>;
  stddevPop?: InputMaybe<FormStddevPopOrderBy>;
  stddevSamp?: InputMaybe<FormStddevSampOrderBy>;
  sum?: InputMaybe<FormSumOrderBy>;
  varPop?: InputMaybe<FormVarPopOrderBy>;
  varSamp?: InputMaybe<FormVarSampOrderBy>;
  variance?: InputMaybe<FormVarianceOrderBy>;
};

export type FormAppendInput = {
  schema?: InputMaybe<Scalars['jsonb']['input']>;
};

export type FormArrRelInsertInput = {
  data: Array<FormInsertInput>;
  onConflict?: InputMaybe<FormOnConflict>;
};

export type FormAvgFields = {
  __typename?: 'FormAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FormAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormBoolExp = {
  _and?: InputMaybe<Array<FormBoolExp>>;
  _not?: InputMaybe<FormBoolExp>;
  _or?: InputMaybe<Array<FormBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  events?: InputMaybe<EventBoolExp>;
  eventsAggregate?: InputMaybe<EventAggregateBoolExp>;
  formSubmissions?: InputMaybe<FormSubmissionBoolExp>;
  formSubmissionsAggregate?: InputMaybe<FormSubmissionAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isAllowingEditingAnswers?: InputMaybe<BooleanComparisonExp>;
  isAllowingMultipleAnswers?: InputMaybe<BooleanComparisonExp>;
  isEnabled?: InputMaybe<BooleanComparisonExp>;
  isLocked?: InputMaybe<BooleanComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  schema?: InputMaybe<JsonbComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantById?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
};

export enum FormConstraint {
  FormPkey = 'form_pkey',
}

export type FormDeleteAtPathInput = {
  schema?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type FormDeleteElemInput = {
  schema?: InputMaybe<Scalars['Int']['input']>;
};

export type FormDeleteKeyInput = {
  schema?: InputMaybe<Scalars['String']['input']>;
};

export type FormIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  events?: InputMaybe<EventArrRelInsertInput>;
  formSubmissions?: InputMaybe<FormSubmissionArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAllowingEditingAnswers?: InputMaybe<Scalars['Boolean']['input']>;
  isAllowingMultipleAnswers?: InputMaybe<Scalars['Boolean']['input']>;
  isEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  isLocked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  schema?: InputMaybe<Scalars['jsonb']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantById?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type FormMaxFields = {
  __typename?: 'FormMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type FormMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type FormMinFields = {
  __typename?: 'FormMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type FormMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type FormMutationResponse = {
  __typename?: 'FormMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Form>;
};

export type FormObjRelInsertInput = {
  data: FormInsertInput;
  onConflict?: InputMaybe<FormOnConflict>;
};

export type FormOnConflict = {
  constraint: FormConstraint;
  updateColumns?: Array<FormUpdateColumn>;
  where?: InputMaybe<FormBoolExp>;
};

export type FormOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventsAggregate?: InputMaybe<EventAggregateOrderBy>;
  formSubmissionsAggregate?: InputMaybe<FormSubmissionAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isAllowingEditingAnswers?: InputMaybe<OrderBy>;
  isAllowingMultipleAnswers?: InputMaybe<OrderBy>;
  isEnabled?: InputMaybe<OrderBy>;
  isLocked?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  schema?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantById?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type FormPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export type FormPrependInput = {
  schema?: InputMaybe<Scalars['jsonb']['input']>;
};

export enum FormSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsAllowingEditingAnswers = 'isAllowingEditingAnswers',
  IsAllowingMultipleAnswers = 'isAllowingMultipleAnswers',
  IsEnabled = 'isEnabled',
  IsLocked = 'isLocked',
  Name = 'name',
  Schema = 'schema',
  TenantId = 'tenantId',
  Type = 'type',
}

export enum FormSelectColumnFormAggregateBoolExpBool_AndArgumentsColumns {
  IsAllowingEditingAnswers = 'isAllowingEditingAnswers',
  IsAllowingMultipleAnswers = 'isAllowingMultipleAnswers',
  IsEnabled = 'isEnabled',
  IsLocked = 'isLocked',
}

export enum FormSelectColumnFormAggregateBoolExpBool_OrArgumentsColumns {
  IsAllowingEditingAnswers = 'isAllowingEditingAnswers',
  IsAllowingMultipleAnswers = 'isAllowingMultipleAnswers',
  IsEnabled = 'isEnabled',
  IsLocked = 'isLocked',
}

export type FormSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAllowingEditingAnswers?: InputMaybe<Scalars['Boolean']['input']>;
  isAllowingMultipleAnswers?: InputMaybe<Scalars['Boolean']['input']>;
  isEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  isLocked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  schema?: InputMaybe<Scalars['jsonb']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type FormStddevFields = {
  __typename?: 'FormStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FormStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormStddevPopFields = {
  __typename?: 'FormStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FormStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormStddevSampFields = {
  __typename?: 'FormStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FormStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormStreamCursorInput = {
  initialValue: FormStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type FormStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAllowingEditingAnswers?: InputMaybe<Scalars['Boolean']['input']>;
  isAllowingMultipleAnswers?: InputMaybe<Scalars['Boolean']['input']>;
  isEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  isLocked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  schema?: InputMaybe<Scalars['jsonb']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type FormSubmission = {
  __typename?: 'FormSubmission';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  event?: Maybe<Event>;
  eventJoins: Array<EventJoin>;
  eventJoinsAggregate: EventJoinAggregate;
  form: Form;
  formId: Scalars['bigint']['output'];
  formSubmissionAttachments: Array<FormSubmissionAttachments>;
  formSubmissionAttachmentsAggregate: FormSubmissionAttachmentsAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  submission: Scalars['jsonb']['output'];
  teamJoins: Array<TeamJoin>;
  teamJoinsAggregate: TeamJoinAggregate;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type FormSubmissionEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type FormSubmissionEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type FormSubmissionFormSubmissionAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionAttachmentsOrderBy>>;
  where?: InputMaybe<FormSubmissionAttachmentsBoolExp>;
};

export type FormSubmissionFormSubmissionAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionAttachmentsOrderBy>>;
  where?: InputMaybe<FormSubmissionAttachmentsBoolExp>;
};

export type FormSubmissionSubmissionArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

export type FormSubmissionTeamJoinsArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type FormSubmissionTeamJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type FormSubmissionAggregate = {
  __typename?: 'FormSubmissionAggregate';
  aggregate?: Maybe<FormSubmissionAggregateFields>;
  nodes: Array<FormSubmission>;
};

export type FormSubmissionAggregateBoolExp = {
  count?: InputMaybe<FormSubmissionAggregateBoolExpCount>;
};

export type FormSubmissionAggregateFields = {
  __typename?: 'FormSubmissionAggregateFields';
  avg?: Maybe<FormSubmissionAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FormSubmissionMaxFields>;
  min?: Maybe<FormSubmissionMinFields>;
  stddev?: Maybe<FormSubmissionStddevFields>;
  stddevPop?: Maybe<FormSubmissionStddevPopFields>;
  stddevSamp?: Maybe<FormSubmissionStddevSampFields>;
  sum?: Maybe<FormSubmissionSumFields>;
  varPop?: Maybe<FormSubmissionVarPopFields>;
  varSamp?: Maybe<FormSubmissionVarSampFields>;
  variance?: Maybe<FormSubmissionVarianceFields>;
};

export type FormSubmissionAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FormSubmissionAggregateOrderBy = {
  avg?: InputMaybe<FormSubmissionAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<FormSubmissionMaxOrderBy>;
  min?: InputMaybe<FormSubmissionMinOrderBy>;
  stddev?: InputMaybe<FormSubmissionStddevOrderBy>;
  stddevPop?: InputMaybe<FormSubmissionStddevPopOrderBy>;
  stddevSamp?: InputMaybe<FormSubmissionStddevSampOrderBy>;
  sum?: InputMaybe<FormSubmissionSumOrderBy>;
  varPop?: InputMaybe<FormSubmissionVarPopOrderBy>;
  varSamp?: InputMaybe<FormSubmissionVarSampOrderBy>;
  variance?: InputMaybe<FormSubmissionVarianceOrderBy>;
};

export type FormSubmissionAppendInput = {
  submission?: InputMaybe<Scalars['jsonb']['input']>;
};

export type FormSubmissionArrRelInsertInput = {
  data: Array<FormSubmissionInsertInput>;
  onConflict?: InputMaybe<FormSubmissionOnConflict>;
};

export type FormSubmissionAttachments = {
  __typename?: 'FormSubmissionAttachments';
  attachment: FileUpload;
  fileUploadId: Scalars['bigint']['output'];
  formSubmission: FormSubmission;
  formSubmissionId: Scalars['bigint']['output'];
};

export type FormSubmissionAttachmentsAggregate = {
  __typename?: 'FormSubmissionAttachmentsAggregate';
  aggregate?: Maybe<FormSubmissionAttachmentsAggregateFields>;
  nodes: Array<FormSubmissionAttachments>;
};

export type FormSubmissionAttachmentsAggregateBoolExp = {
  count?: InputMaybe<FormSubmissionAttachmentsAggregateBoolExpCount>;
};

export type FormSubmissionAttachmentsAggregateFields = {
  __typename?: 'FormSubmissionAttachmentsAggregateFields';
  avg?: Maybe<FormSubmissionAttachmentsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FormSubmissionAttachmentsMaxFields>;
  min?: Maybe<FormSubmissionAttachmentsMinFields>;
  stddev?: Maybe<FormSubmissionAttachmentsStddevFields>;
  stddevPop?: Maybe<FormSubmissionAttachmentsStddevPopFields>;
  stddevSamp?: Maybe<FormSubmissionAttachmentsStddevSampFields>;
  sum?: Maybe<FormSubmissionAttachmentsSumFields>;
  varPop?: Maybe<FormSubmissionAttachmentsVarPopFields>;
  varSamp?: Maybe<FormSubmissionAttachmentsVarSampFields>;
  variance?: Maybe<FormSubmissionAttachmentsVarianceFields>;
};

export type FormSubmissionAttachmentsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FormSubmissionAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FormSubmissionAttachmentsAggregateOrderBy = {
  avg?: InputMaybe<FormSubmissionAttachmentsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<FormSubmissionAttachmentsMaxOrderBy>;
  min?: InputMaybe<FormSubmissionAttachmentsMinOrderBy>;
  stddev?: InputMaybe<FormSubmissionAttachmentsStddevOrderBy>;
  stddevPop?: InputMaybe<FormSubmissionAttachmentsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<FormSubmissionAttachmentsStddevSampOrderBy>;
  sum?: InputMaybe<FormSubmissionAttachmentsSumOrderBy>;
  varPop?: InputMaybe<FormSubmissionAttachmentsVarPopOrderBy>;
  varSamp?: InputMaybe<FormSubmissionAttachmentsVarSampOrderBy>;
  variance?: InputMaybe<FormSubmissionAttachmentsVarianceOrderBy>;
};

export type FormSubmissionAttachmentsArrRelInsertInput = {
  data: Array<FormSubmissionAttachmentsInsertInput>;
  onConflict?: InputMaybe<FormSubmissionAttachmentsOnConflict>;
};

export type FormSubmissionAttachmentsAvgFields = {
  __typename?: 'FormSubmissionAttachmentsAvgFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionAttachmentsAvgOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
};

export type FormSubmissionAttachmentsBoolExp = {
  _and?: InputMaybe<Array<FormSubmissionAttachmentsBoolExp>>;
  _not?: InputMaybe<FormSubmissionAttachmentsBoolExp>;
  _or?: InputMaybe<Array<FormSubmissionAttachmentsBoolExp>>;
  attachment?: InputMaybe<FileUploadBoolExp>;
  fileUploadId?: InputMaybe<BigintComparisonExp>;
  formSubmission?: InputMaybe<FormSubmissionBoolExp>;
  formSubmissionId?: InputMaybe<BigintComparisonExp>;
};

export enum FormSubmissionAttachmentsConstraint {
  FormSubmissionAttachmentsPkey = 'form_submission_attachments_pkey',
}

export type FormSubmissionAttachmentsIncInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  formSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormSubmissionAttachmentsInsertInput = {
  attachment?: InputMaybe<FileUploadObjRelInsertInput>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  formSubmission?: InputMaybe<FormSubmissionObjRelInsertInput>;
  formSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormSubmissionAttachmentsMaxFields = {
  __typename?: 'FormSubmissionAttachmentsMaxFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  formSubmissionId?: Maybe<Scalars['bigint']['output']>;
};

export type FormSubmissionAttachmentsMaxOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
};

export type FormSubmissionAttachmentsMinFields = {
  __typename?: 'FormSubmissionAttachmentsMinFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  formSubmissionId?: Maybe<Scalars['bigint']['output']>;
};

export type FormSubmissionAttachmentsMinOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
};

export type FormSubmissionAttachmentsMutationResponse = {
  __typename?: 'FormSubmissionAttachmentsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<FormSubmissionAttachments>;
};

export type FormSubmissionAttachmentsOnConflict = {
  constraint: FormSubmissionAttachmentsConstraint;
  updateColumns?: Array<FormSubmissionAttachmentsUpdateColumn>;
  where?: InputMaybe<FormSubmissionAttachmentsBoolExp>;
};

export type FormSubmissionAttachmentsOrderBy = {
  attachment?: InputMaybe<FileUploadOrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  formSubmission?: InputMaybe<FormSubmissionOrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
};

export type FormSubmissionAttachmentsPkColumnsInput = {
  fileUploadId: Scalars['bigint']['input'];
  formSubmissionId: Scalars['bigint']['input'];
};

export enum FormSubmissionAttachmentsSelectColumn {
  FileUploadId = 'fileUploadId',
  FormSubmissionId = 'formSubmissionId',
}

export type FormSubmissionAttachmentsSetInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  formSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormSubmissionAttachmentsStddevFields = {
  __typename?: 'FormSubmissionAttachmentsStddevFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionAttachmentsStddevOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
};

export type FormSubmissionAttachmentsStddevPopFields = {
  __typename?: 'FormSubmissionAttachmentsStddevPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionAttachmentsStddevPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
};

export type FormSubmissionAttachmentsStddevSampFields = {
  __typename?: 'FormSubmissionAttachmentsStddevSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionAttachmentsStddevSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
};

export type FormSubmissionAttachmentsStreamCursorInput = {
  initialValue: FormSubmissionAttachmentsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type FormSubmissionAttachmentsStreamCursorValueInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  formSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormSubmissionAttachmentsSumFields = {
  __typename?: 'FormSubmissionAttachmentsSumFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  formSubmissionId?: Maybe<Scalars['bigint']['output']>;
};

export type FormSubmissionAttachmentsSumOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
};

export enum FormSubmissionAttachmentsUpdateColumn {
  FileUploadId = 'fileUploadId',
  FormSubmissionId = 'formSubmissionId',
}

export type FormSubmissionAttachmentsUpdates = {
  _inc?: InputMaybe<FormSubmissionAttachmentsIncInput>;
  _set?: InputMaybe<FormSubmissionAttachmentsSetInput>;
  where: FormSubmissionAttachmentsBoolExp;
};

export type FormSubmissionAttachmentsVarPopFields = {
  __typename?: 'FormSubmissionAttachmentsVarPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionAttachmentsVarPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
};

export type FormSubmissionAttachmentsVarSampFields = {
  __typename?: 'FormSubmissionAttachmentsVarSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionAttachmentsVarSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
};

export type FormSubmissionAttachmentsVarianceFields = {
  __typename?: 'FormSubmissionAttachmentsVarianceFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionAttachmentsVarianceOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
};

export type FormSubmissionAvgFields = {
  __typename?: 'FormSubmissionAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  formId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormSubmissionBoolExp = {
  _and?: InputMaybe<Array<FormSubmissionBoolExp>>;
  _not?: InputMaybe<FormSubmissionBoolExp>;
  _or?: InputMaybe<Array<FormSubmissionBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  event?: InputMaybe<EventBoolExp>;
  eventJoins?: InputMaybe<EventJoinBoolExp>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  form?: InputMaybe<FormBoolExp>;
  formId?: InputMaybe<BigintComparisonExp>;
  formSubmissionAttachments?: InputMaybe<FormSubmissionAttachmentsBoolExp>;
  formSubmissionAttachmentsAggregate?: InputMaybe<FormSubmissionAttachmentsAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  submission?: InputMaybe<JsonbComparisonExp>;
  teamJoins?: InputMaybe<TeamJoinBoolExp>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum FormSubmissionConstraint {
  FormSubmissionPkey = 'form_submission_pkey',
}

export type FormSubmissionDeleteAtPathInput = {
  submission?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type FormSubmissionDeleteElemInput = {
  submission?: InputMaybe<Scalars['Int']['input']>;
};

export type FormSubmissionDeleteKeyInput = {
  submission?: InputMaybe<Scalars['String']['input']>;
};

export type FormSubmissionIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  formId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormSubmissionInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  event?: InputMaybe<EventObjRelInsertInput>;
  eventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  form?: InputMaybe<FormObjRelInsertInput>;
  formId?: InputMaybe<Scalars['bigint']['input']>;
  formSubmissionAttachments?: InputMaybe<FormSubmissionAttachmentsArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  submission?: InputMaybe<Scalars['jsonb']['input']>;
  teamJoins?: InputMaybe<TeamJoinArrRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormSubmissionMaxFields = {
  __typename?: 'FormSubmissionMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  formId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type FormSubmissionMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormSubmissionMinFields = {
  __typename?: 'FormSubmissionMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  formId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type FormSubmissionMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormSubmissionMutationResponse = {
  __typename?: 'FormSubmissionMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<FormSubmission>;
};

export type FormSubmissionObjRelInsertInput = {
  data: FormSubmissionInsertInput;
  onConflict?: InputMaybe<FormSubmissionOnConflict>;
};

export type FormSubmissionOnConflict = {
  constraint: FormSubmissionConstraint;
  updateColumns?: Array<FormSubmissionUpdateColumn>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type FormSubmissionOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  event?: InputMaybe<EventOrderBy>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  form?: InputMaybe<FormOrderBy>;
  formId?: InputMaybe<OrderBy>;
  formSubmissionAttachmentsAggregate?: InputMaybe<FormSubmissionAttachmentsAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  submission?: InputMaybe<OrderBy>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormSubmissionPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export type FormSubmissionPrependInput = {
  submission?: InputMaybe<Scalars['jsonb']['input']>;
};

export enum FormSubmissionSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FormId = 'formId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Submission = 'submission',
  TenantId = 'tenantId',
}

export type FormSubmissionSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  formId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  submission?: InputMaybe<Scalars['jsonb']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormSubmissionStddevFields = {
  __typename?: 'FormSubmissionStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  formId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormSubmissionStddevPopFields = {
  __typename?: 'FormSubmissionStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  formId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormSubmissionStddevSampFields = {
  __typename?: 'FormSubmissionStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  formId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormSubmissionStreamCursorInput = {
  initialValue: FormSubmissionStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type FormSubmissionStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  formId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  submission?: InputMaybe<Scalars['jsonb']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type FormSubmissionSumFields = {
  __typename?: 'FormSubmissionSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  formId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type FormSubmissionSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum FormSubmissionUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FormId = 'formId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Submission = 'submission',
  TenantId = 'tenantId',
}

export type FormSubmissionUpdates = {
  _append?: InputMaybe<FormSubmissionAppendInput>;
  _deleteAtPath?: InputMaybe<FormSubmissionDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FormSubmissionDeleteElemInput>;
  _deleteKey?: InputMaybe<FormSubmissionDeleteKeyInput>;
  _inc?: InputMaybe<FormSubmissionIncInput>;
  _prepend?: InputMaybe<FormSubmissionPrependInput>;
  _set?: InputMaybe<FormSubmissionSetInput>;
  where: FormSubmissionBoolExp;
};

export type FormSubmissionVarPopFields = {
  __typename?: 'FormSubmissionVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  formId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormSubmissionVarSampFields = {
  __typename?: 'FormSubmissionVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  formId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormSubmissionVarianceFields = {
  __typename?: 'FormSubmissionVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  formId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FormSubmissionVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  formId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormSumFields = {
  __typename?: 'FormSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type FormSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum FormUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsAllowingEditingAnswers = 'isAllowingEditingAnswers',
  IsAllowingMultipleAnswers = 'isAllowingMultipleAnswers',
  IsEnabled = 'isEnabled',
  IsLocked = 'isLocked',
  Name = 'name',
  Schema = 'schema',
  TenantId = 'tenantId',
  Type = 'type',
}

export type FormUpdates = {
  _append?: InputMaybe<FormAppendInput>;
  _deleteAtPath?: InputMaybe<FormDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FormDeleteElemInput>;
  _deleteKey?: InputMaybe<FormDeleteKeyInput>;
  _inc?: InputMaybe<FormIncInput>;
  _prepend?: InputMaybe<FormPrependInput>;
  _set?: InputMaybe<FormSetInput>;
  where: FormBoolExp;
};

export type FormVarPopFields = {
  __typename?: 'FormVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FormVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormVarSampFields = {
  __typename?: 'FormVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FormVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type FormVarianceFields = {
  __typename?: 'FormVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type FormVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GeocodeAddress = {
  __typename?: 'GeocodeAddress';
  category: Scalars['String']['output'];
  city: Scalars['String']['output'];
  country: Scalars['String']['output'];
  geoapifyId: Scalars['String']['output'];
  latitude: Scalars['Float']['output'];
  longitude: Scalars['Float']['output'];
  name: Scalars['String']['output'];
  state: Scalars['String']['output'];
  street: Scalars['String']['output'];
  streetNumber: Scalars['String']['output'];
  zip: Scalars['String']['output'];
};

export type Grant = {
  __typename?: 'Grant';
  askedAmount: Scalars['Float']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  generatedDocument?: Maybe<FileUpload>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  grantAllocates: Array<GrantAllocate>;
  grantAllocatesAggregate: GrantAllocateAggregate;
  grantAttachments: Array<GrantAttachments>;
  grantAttachmentsAggregate: GrantAttachmentsAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  projects: Array<Project>;
  projectsAggregate: ProjectAggregate;
  receivedAmount: Scalars['Float']['output'];
  receivedAmountProcessed?: Maybe<Individual>;
  receivedAmountProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signature?: Maybe<FileUpload>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  state: Scalars['String']['output'];
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type GrantGrantAllocatesArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type GrantGrantAllocatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type GrantGrantAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type GrantGrantAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type GrantProjectsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type GrantProjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type GrantAggregate = {
  __typename?: 'GrantAggregate';
  aggregate?: Maybe<GrantAggregateFields>;
  nodes: Array<Grant>;
};

export type GrantAggregateBoolExp = {
  count?: InputMaybe<GrantAggregateBoolExpCount>;
};

export type GrantAggregateFields = {
  __typename?: 'GrantAggregateFields';
  avg?: Maybe<GrantAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<GrantMaxFields>;
  min?: Maybe<GrantMinFields>;
  stddev?: Maybe<GrantStddevFields>;
  stddevPop?: Maybe<GrantStddevPopFields>;
  stddevSamp?: Maybe<GrantStddevSampFields>;
  sum?: Maybe<GrantSumFields>;
  varPop?: Maybe<GrantVarPopFields>;
  varSamp?: Maybe<GrantVarSampFields>;
  variance?: Maybe<GrantVarianceFields>;
};

export type GrantAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<GrantSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type GrantAggregateOrderBy = {
  avg?: InputMaybe<GrantAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<GrantMaxOrderBy>;
  min?: InputMaybe<GrantMinOrderBy>;
  stddev?: InputMaybe<GrantStddevOrderBy>;
  stddevPop?: InputMaybe<GrantStddevPopOrderBy>;
  stddevSamp?: InputMaybe<GrantStddevSampOrderBy>;
  sum?: InputMaybe<GrantSumOrderBy>;
  varPop?: InputMaybe<GrantVarPopOrderBy>;
  varSamp?: InputMaybe<GrantVarSampOrderBy>;
  variance?: InputMaybe<GrantVarianceOrderBy>;
};

export type GrantAllocate = {
  __typename?: 'GrantAllocate';
  askedAmount: Scalars['Float']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  fileUpload?: Maybe<FileUpload>;
  finance?: Maybe<Finance>;
  financeId?: Maybe<Scalars['bigint']['output']>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  grant: Grant;
  grantAllocateAttachments: Array<GrantAllocateAttachments>;
  grantAllocateAttachmentsAggregate: GrantAllocateAttachmentsAggregate;
  grantId: Scalars['bigint']['output'];
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  receivedAmountProcessedBy?: Maybe<Individual>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signature?: Maybe<FileUpload>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  state: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type GrantAllocateGrantAllocateAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type GrantAllocateGrantAllocateAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type GrantAllocateAggregate = {
  __typename?: 'GrantAllocateAggregate';
  aggregate?: Maybe<GrantAllocateAggregateFields>;
  nodes: Array<GrantAllocate>;
};

export type GrantAllocateAggregateBoolExp = {
  count?: InputMaybe<GrantAllocateAggregateBoolExpCount>;
};

export type GrantAllocateAggregateFields = {
  __typename?: 'GrantAllocateAggregateFields';
  avg?: Maybe<GrantAllocateAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<GrantAllocateMaxFields>;
  min?: Maybe<GrantAllocateMinFields>;
  stddev?: Maybe<GrantAllocateStddevFields>;
  stddevPop?: Maybe<GrantAllocateStddevPopFields>;
  stddevSamp?: Maybe<GrantAllocateStddevSampFields>;
  sum?: Maybe<GrantAllocateSumFields>;
  varPop?: Maybe<GrantAllocateVarPopFields>;
  varSamp?: Maybe<GrantAllocateVarSampFields>;
  variance?: Maybe<GrantAllocateVarianceFields>;
};

export type GrantAllocateAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type GrantAllocateAggregateOrderBy = {
  avg?: InputMaybe<GrantAllocateAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<GrantAllocateMaxOrderBy>;
  min?: InputMaybe<GrantAllocateMinOrderBy>;
  stddev?: InputMaybe<GrantAllocateStddevOrderBy>;
  stddevPop?: InputMaybe<GrantAllocateStddevPopOrderBy>;
  stddevSamp?: InputMaybe<GrantAllocateStddevSampOrderBy>;
  sum?: InputMaybe<GrantAllocateSumOrderBy>;
  varPop?: InputMaybe<GrantAllocateVarPopOrderBy>;
  varSamp?: InputMaybe<GrantAllocateVarSampOrderBy>;
  variance?: InputMaybe<GrantAllocateVarianceOrderBy>;
};

export type GrantAllocateArrRelInsertInput = {
  data: Array<GrantAllocateInsertInput>;
  onConflict?: InputMaybe<GrantAllocateOnConflict>;
};

export type GrantAllocateAttachments = {
  __typename?: 'GrantAllocateAttachments';
  attachment: FileUpload;
  fileUploadId: Scalars['bigint']['output'];
  grantAllocate: GrantAllocate;
  grantAllocateId: Scalars['bigint']['output'];
};

export type GrantAllocateAttachmentsAggregate = {
  __typename?: 'GrantAllocateAttachmentsAggregate';
  aggregate?: Maybe<GrantAllocateAttachmentsAggregateFields>;
  nodes: Array<GrantAllocateAttachments>;
};

export type GrantAllocateAttachmentsAggregateBoolExp = {
  count?: InputMaybe<GrantAllocateAttachmentsAggregateBoolExpCount>;
};

export type GrantAllocateAttachmentsAggregateFields = {
  __typename?: 'GrantAllocateAttachmentsAggregateFields';
  avg?: Maybe<GrantAllocateAttachmentsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<GrantAllocateAttachmentsMaxFields>;
  min?: Maybe<GrantAllocateAttachmentsMinFields>;
  stddev?: Maybe<GrantAllocateAttachmentsStddevFields>;
  stddevPop?: Maybe<GrantAllocateAttachmentsStddevPopFields>;
  stddevSamp?: Maybe<GrantAllocateAttachmentsStddevSampFields>;
  sum?: Maybe<GrantAllocateAttachmentsSumFields>;
  varPop?: Maybe<GrantAllocateAttachmentsVarPopFields>;
  varSamp?: Maybe<GrantAllocateAttachmentsVarSampFields>;
  variance?: Maybe<GrantAllocateAttachmentsVarianceFields>;
};

export type GrantAllocateAttachmentsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type GrantAllocateAttachmentsAggregateOrderBy = {
  avg?: InputMaybe<GrantAllocateAttachmentsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<GrantAllocateAttachmentsMaxOrderBy>;
  min?: InputMaybe<GrantAllocateAttachmentsMinOrderBy>;
  stddev?: InputMaybe<GrantAllocateAttachmentsStddevOrderBy>;
  stddevPop?: InputMaybe<GrantAllocateAttachmentsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<GrantAllocateAttachmentsStddevSampOrderBy>;
  sum?: InputMaybe<GrantAllocateAttachmentsSumOrderBy>;
  varPop?: InputMaybe<GrantAllocateAttachmentsVarPopOrderBy>;
  varSamp?: InputMaybe<GrantAllocateAttachmentsVarSampOrderBy>;
  variance?: InputMaybe<GrantAllocateAttachmentsVarianceOrderBy>;
};

export type GrantAllocateAttachmentsArrRelInsertInput = {
  data: Array<GrantAllocateAttachmentsInsertInput>;
  onConflict?: InputMaybe<GrantAllocateAttachmentsOnConflict>;
};

export type GrantAllocateAttachmentsAvgFields = {
  __typename?: 'GrantAllocateAttachmentsAvgFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantAllocateId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAttachmentsAvgOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsBoolExp = {
  _and?: InputMaybe<Array<GrantAllocateAttachmentsBoolExp>>;
  _not?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
  _or?: InputMaybe<Array<GrantAllocateAttachmentsBoolExp>>;
  attachment?: InputMaybe<FileUploadBoolExp>;
  fileUploadId?: InputMaybe<BigintComparisonExp>;
  grantAllocate?: InputMaybe<GrantAllocateBoolExp>;
  grantAllocateId?: InputMaybe<BigintComparisonExp>;
};

export enum GrantAllocateAttachmentsConstraint {
  GrantAllocateAttachmentsPkey = 'grant_allocate_attachments_pkey',
}

export type GrantAllocateAttachmentsIncInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateAttachmentsInsertInput = {
  attachment?: InputMaybe<FileUploadObjRelInsertInput>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grantAllocate?: InputMaybe<GrantAllocateObjRelInsertInput>;
  grantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateAttachmentsMaxFields = {
  __typename?: 'GrantAllocateAttachmentsMaxFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  grantAllocateId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAllocateAttachmentsMaxOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsMinFields = {
  __typename?: 'GrantAllocateAttachmentsMinFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  grantAllocateId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAllocateAttachmentsMinOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsMutationResponse = {
  __typename?: 'GrantAllocateAttachmentsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<GrantAllocateAttachments>;
};

export type GrantAllocateAttachmentsOnConflict = {
  constraint: GrantAllocateAttachmentsConstraint;
  updateColumns?: Array<GrantAllocateAttachmentsUpdateColumn>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type GrantAllocateAttachmentsOrderBy = {
  attachment?: InputMaybe<FileUploadOrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocate?: InputMaybe<GrantAllocateOrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsPkColumnsInput = {
  fileUploadId: Scalars['bigint']['input'];
  grantAllocateId: Scalars['bigint']['input'];
};

export enum GrantAllocateAttachmentsSelectColumn {
  FileUploadId = 'fileUploadId',
  GrantAllocateId = 'grantAllocateId',
}

export type GrantAllocateAttachmentsSetInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateAttachmentsStddevFields = {
  __typename?: 'GrantAllocateAttachmentsStddevFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantAllocateId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAttachmentsStddevOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsStddevPopFields = {
  __typename?: 'GrantAllocateAttachmentsStddevPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantAllocateId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAttachmentsStddevPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsStddevSampFields = {
  __typename?: 'GrantAllocateAttachmentsStddevSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantAllocateId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAttachmentsStddevSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsStreamCursorInput = {
  initialValue: GrantAllocateAttachmentsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type GrantAllocateAttachmentsStreamCursorValueInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grantAllocateId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateAttachmentsSumFields = {
  __typename?: 'GrantAllocateAttachmentsSumFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  grantAllocateId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAllocateAttachmentsSumOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export enum GrantAllocateAttachmentsUpdateColumn {
  FileUploadId = 'fileUploadId',
  GrantAllocateId = 'grantAllocateId',
}

export type GrantAllocateAttachmentsUpdates = {
  _inc?: InputMaybe<GrantAllocateAttachmentsIncInput>;
  _set?: InputMaybe<GrantAllocateAttachmentsSetInput>;
  where: GrantAllocateAttachmentsBoolExp;
};

export type GrantAllocateAttachmentsVarPopFields = {
  __typename?: 'GrantAllocateAttachmentsVarPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantAllocateId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAttachmentsVarPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsVarSampFields = {
  __typename?: 'GrantAllocateAttachmentsVarSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantAllocateId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAttachmentsVarSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAttachmentsVarianceFields = {
  __typename?: 'GrantAllocateAttachmentsVarianceFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantAllocateId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAttachmentsVarianceOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantAllocateId?: InputMaybe<OrderBy>;
};

export type GrantAllocateAvgFields = {
  __typename?: 'GrantAllocateAvgFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  financeId?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateAvgOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantAllocateBoolExp = {
  _and?: InputMaybe<Array<GrantAllocateBoolExp>>;
  _not?: InputMaybe<GrantAllocateBoolExp>;
  _or?: InputMaybe<Array<GrantAllocateBoolExp>>;
  askedAmount?: InputMaybe<FloatComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  fileUpload?: InputMaybe<FileUploadBoolExp>;
  finance?: InputMaybe<FinanceBoolExp>;
  financeId?: InputMaybe<BigintComparisonExp>;
  generatedDocumentId?: InputMaybe<BigintComparisonExp>;
  grant?: InputMaybe<GrantBoolExp>;
  grantAllocateAttachments?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
  grantAllocateAttachmentsAggregate?: InputMaybe<GrantAllocateAttachmentsAggregateBoolExp>;
  grantId?: InputMaybe<BigintComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  receivedAmount?: InputMaybe<FloatComparisonExp>;
  receivedAmountProcessedAt?: InputMaybe<TimestamptzComparisonExp>;
  receivedAmountProcessedBy?: InputMaybe<IndividualBoolExp>;
  receivedAmountProcessedById?: InputMaybe<BigintComparisonExp>;
  signature?: InputMaybe<FileUploadBoolExp>;
  signatureId?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum GrantAllocateConstraint {
  GrantAllocatePkey = 'grant_allocate_pkey',
}

export type GrantAllocateIncInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  financeId?: InputMaybe<Scalars['bigint']['input']>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateInsertInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  fileUpload?: InputMaybe<FileUploadObjRelInsertInput>;
  finance?: InputMaybe<FinanceObjRelInsertInput>;
  financeId?: InputMaybe<Scalars['bigint']['input']>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  grant?: InputMaybe<GrantObjRelInsertInput>;
  grantAllocateAttachments?: InputMaybe<GrantAllocateAttachmentsArrRelInsertInput>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  receivedAmountProcessedBy?: InputMaybe<IndividualObjRelInsertInput>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signature?: InputMaybe<FileUploadObjRelInsertInput>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateMaxFields = {
  __typename?: 'GrantAllocateMaxFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  financeId?: Maybe<Scalars['bigint']['output']>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAllocateMaxOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedAt?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantAllocateMinFields = {
  __typename?: 'GrantAllocateMinFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  financeId?: Maybe<Scalars['bigint']['output']>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAllocateMinOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedAt?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantAllocateMutationResponse = {
  __typename?: 'GrantAllocateMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<GrantAllocate>;
};

export type GrantAllocateObjRelInsertInput = {
  data: GrantAllocateInsertInput;
  onConflict?: InputMaybe<GrantAllocateOnConflict>;
};

export type GrantAllocateOnConflict = {
  constraint: GrantAllocateConstraint;
  updateColumns?: Array<GrantAllocateUpdateColumn>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type GrantAllocateOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  fileUpload?: InputMaybe<FileUploadOrderBy>;
  finance?: InputMaybe<FinanceOrderBy>;
  financeId?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grant?: InputMaybe<GrantOrderBy>;
  grantAllocateAttachmentsAggregate?: InputMaybe<GrantAllocateAttachmentsAggregateOrderBy>;
  grantId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedAt?: InputMaybe<OrderBy>;
  receivedAmountProcessedBy?: InputMaybe<IndividualOrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signature?: InputMaybe<FileUploadOrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantAllocatePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum GrantAllocateSelectColumn {
  AskedAmount = 'askedAmount',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FinanceId = 'financeId',
  GeneratedDocumentId = 'generatedDocumentId',
  GrantId = 'grantId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  ReceivedAmount = 'receivedAmount',
  ReceivedAmountProcessedAt = 'receivedAmountProcessedAt',
  ReceivedAmountProcessedById = 'receivedAmountProcessedById',
  SignatureId = 'signatureId',
  State = 'state',
  TenantId = 'tenantId',
}

export type GrantAllocateSetInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  financeId?: InputMaybe<Scalars['bigint']['input']>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateStddevFields = {
  __typename?: 'GrantAllocateStddevFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  financeId?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateStddevOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantAllocateStddevPopFields = {
  __typename?: 'GrantAllocateStddevPopFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  financeId?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateStddevPopOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantAllocateStddevSampFields = {
  __typename?: 'GrantAllocateStddevSampFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  financeId?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateStddevSampOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantAllocateStreamCursorInput = {
  initialValue: GrantAllocateStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type GrantAllocateStreamCursorValueInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  financeId?: InputMaybe<Scalars['bigint']['input']>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAllocateSumFields = {
  __typename?: 'GrantAllocateSumFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  financeId?: Maybe<Scalars['bigint']['output']>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAllocateSumOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum GrantAllocateUpdateColumn {
  AskedAmount = 'askedAmount',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FinanceId = 'financeId',
  GeneratedDocumentId = 'generatedDocumentId',
  GrantId = 'grantId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  ReceivedAmount = 'receivedAmount',
  ReceivedAmountProcessedAt = 'receivedAmountProcessedAt',
  ReceivedAmountProcessedById = 'receivedAmountProcessedById',
  SignatureId = 'signatureId',
  State = 'state',
  TenantId = 'tenantId',
}

export type GrantAllocateUpdates = {
  _inc?: InputMaybe<GrantAllocateIncInput>;
  _set?: InputMaybe<GrantAllocateSetInput>;
  where: GrantAllocateBoolExp;
};

export type GrantAllocateVarPopFields = {
  __typename?: 'GrantAllocateVarPopFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  financeId?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateVarPopOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantAllocateVarSampFields = {
  __typename?: 'GrantAllocateVarSampFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  financeId?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateVarSampOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantAllocateVarianceFields = {
  __typename?: 'GrantAllocateVarianceFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  financeId?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAllocateVarianceOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  financeId?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantArrRelInsertInput = {
  data: Array<GrantInsertInput>;
  onConflict?: InputMaybe<GrantOnConflict>;
};

export type GrantAttachments = {
  __typename?: 'GrantAttachments';
  attachment: FileUpload;
  fileUploadId: Scalars['bigint']['output'];
  grant: Grant;
  grantId: Scalars['bigint']['output'];
};

export type GrantAttachmentsAggregate = {
  __typename?: 'GrantAttachmentsAggregate';
  aggregate?: Maybe<GrantAttachmentsAggregateFields>;
  nodes: Array<GrantAttachments>;
};

export type GrantAttachmentsAggregateBoolExp = {
  count?: InputMaybe<GrantAttachmentsAggregateBoolExpCount>;
};

export type GrantAttachmentsAggregateFields = {
  __typename?: 'GrantAttachmentsAggregateFields';
  avg?: Maybe<GrantAttachmentsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<GrantAttachmentsMaxFields>;
  min?: Maybe<GrantAttachmentsMinFields>;
  stddev?: Maybe<GrantAttachmentsStddevFields>;
  stddevPop?: Maybe<GrantAttachmentsStddevPopFields>;
  stddevSamp?: Maybe<GrantAttachmentsStddevSampFields>;
  sum?: Maybe<GrantAttachmentsSumFields>;
  varPop?: Maybe<GrantAttachmentsVarPopFields>;
  varSamp?: Maybe<GrantAttachmentsVarSampFields>;
  variance?: Maybe<GrantAttachmentsVarianceFields>;
};

export type GrantAttachmentsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type GrantAttachmentsAggregateOrderBy = {
  avg?: InputMaybe<GrantAttachmentsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<GrantAttachmentsMaxOrderBy>;
  min?: InputMaybe<GrantAttachmentsMinOrderBy>;
  stddev?: InputMaybe<GrantAttachmentsStddevOrderBy>;
  stddevPop?: InputMaybe<GrantAttachmentsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<GrantAttachmentsStddevSampOrderBy>;
  sum?: InputMaybe<GrantAttachmentsSumOrderBy>;
  varPop?: InputMaybe<GrantAttachmentsVarPopOrderBy>;
  varSamp?: InputMaybe<GrantAttachmentsVarSampOrderBy>;
  variance?: InputMaybe<GrantAttachmentsVarianceOrderBy>;
};

export type GrantAttachmentsArrRelInsertInput = {
  data: Array<GrantAttachmentsInsertInput>;
  onConflict?: InputMaybe<GrantAttachmentsOnConflict>;
};

export type GrantAttachmentsAvgFields = {
  __typename?: 'GrantAttachmentsAvgFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAttachmentsAvgOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsBoolExp = {
  _and?: InputMaybe<Array<GrantAttachmentsBoolExp>>;
  _not?: InputMaybe<GrantAttachmentsBoolExp>;
  _or?: InputMaybe<Array<GrantAttachmentsBoolExp>>;
  attachment?: InputMaybe<FileUploadBoolExp>;
  fileUploadId?: InputMaybe<BigintComparisonExp>;
  grant?: InputMaybe<GrantBoolExp>;
  grantId?: InputMaybe<BigintComparisonExp>;
};

export enum GrantAttachmentsConstraint {
  GrantAttachmentsPkey = 'grant_attachments_pkey',
}

export type GrantAttachmentsIncInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAttachmentsInsertInput = {
  attachment?: InputMaybe<FileUploadObjRelInsertInput>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grant?: InputMaybe<GrantObjRelInsertInput>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAttachmentsMaxFields = {
  __typename?: 'GrantAttachmentsMaxFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAttachmentsMaxOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsMinFields = {
  __typename?: 'GrantAttachmentsMinFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAttachmentsMinOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsMutationResponse = {
  __typename?: 'GrantAttachmentsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<GrantAttachments>;
};

export type GrantAttachmentsOnConflict = {
  constraint: GrantAttachmentsConstraint;
  updateColumns?: Array<GrantAttachmentsUpdateColumn>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type GrantAttachmentsOrderBy = {
  attachment?: InputMaybe<FileUploadOrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  grant?: InputMaybe<GrantOrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsPkColumnsInput = {
  fileUploadId: Scalars['bigint']['input'];
  grantId: Scalars['bigint']['input'];
};

export enum GrantAttachmentsSelectColumn {
  FileUploadId = 'fileUploadId',
  GrantId = 'grantId',
}

export type GrantAttachmentsSetInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAttachmentsStddevFields = {
  __typename?: 'GrantAttachmentsStddevFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAttachmentsStddevOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsStddevPopFields = {
  __typename?: 'GrantAttachmentsStddevPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAttachmentsStddevPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsStddevSampFields = {
  __typename?: 'GrantAttachmentsStddevSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAttachmentsStddevSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsStreamCursorInput = {
  initialValue: GrantAttachmentsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type GrantAttachmentsStreamCursorValueInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantAttachmentsSumFields = {
  __typename?: 'GrantAttachmentsSumFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantAttachmentsSumOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export enum GrantAttachmentsUpdateColumn {
  FileUploadId = 'fileUploadId',
  GrantId = 'grantId',
}

export type GrantAttachmentsUpdates = {
  _inc?: InputMaybe<GrantAttachmentsIncInput>;
  _set?: InputMaybe<GrantAttachmentsSetInput>;
  where: GrantAttachmentsBoolExp;
};

export type GrantAttachmentsVarPopFields = {
  __typename?: 'GrantAttachmentsVarPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAttachmentsVarPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsVarSampFields = {
  __typename?: 'GrantAttachmentsVarSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAttachmentsVarSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAttachmentsVarianceFields = {
  __typename?: 'GrantAttachmentsVarianceFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAttachmentsVarianceOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
};

export type GrantAvgFields = {
  __typename?: 'GrantAvgFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantAvgOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantBoolExp = {
  _and?: InputMaybe<Array<GrantBoolExp>>;
  _not?: InputMaybe<GrantBoolExp>;
  _or?: InputMaybe<Array<GrantBoolExp>>;
  askedAmount?: InputMaybe<FloatComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  generatedDocument?: InputMaybe<FileUploadBoolExp>;
  generatedDocumentId?: InputMaybe<BigintComparisonExp>;
  grantAllocates?: InputMaybe<GrantAllocateBoolExp>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateBoolExp>;
  grantAttachments?: InputMaybe<GrantAttachmentsBoolExp>;
  grantAttachmentsAggregate?: InputMaybe<GrantAttachmentsAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  projects?: InputMaybe<ProjectBoolExp>;
  projectsAggregate?: InputMaybe<ProjectAggregateBoolExp>;
  receivedAmount?: InputMaybe<FloatComparisonExp>;
  receivedAmountProcessed?: InputMaybe<IndividualBoolExp>;
  receivedAmountProcessedAt?: InputMaybe<TimestamptzComparisonExp>;
  receivedAmountProcessedById?: InputMaybe<BigintComparisonExp>;
  signature?: InputMaybe<FileUploadBoolExp>;
  signatureId?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<StringComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum GrantConstraint {
  GrantPkey = 'grant_pkey',
}

export type GrantIncInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantInsertInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  generatedDocument?: InputMaybe<FileUploadObjRelInsertInput>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  grantAllocates?: InputMaybe<GrantAllocateArrRelInsertInput>;
  grantAttachments?: InputMaybe<GrantAttachmentsArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projects?: InputMaybe<ProjectArrRelInsertInput>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessed?: InputMaybe<IndividualObjRelInsertInput>;
  receivedAmountProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signature?: InputMaybe<FileUploadObjRelInsertInput>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantMaxFields = {
  __typename?: 'GrantMaxFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantMaxOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedAt?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantMinFields = {
  __typename?: 'GrantMinFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantMinOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedAt?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantMutationResponse = {
  __typename?: 'GrantMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Grant>;
};

export type GrantObjRelInsertInput = {
  data: GrantInsertInput;
  onConflict?: InputMaybe<GrantOnConflict>;
};

export type GrantOnConflict = {
  constraint: GrantConstraint;
  updateColumns?: Array<GrantUpdateColumn>;
  where?: InputMaybe<GrantBoolExp>;
};

export type GrantOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  generatedDocument?: InputMaybe<FileUploadOrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateOrderBy>;
  grantAttachmentsAggregate?: InputMaybe<GrantAttachmentsAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  projectsAggregate?: InputMaybe<ProjectAggregateOrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessed?: InputMaybe<IndividualOrderBy>;
  receivedAmountProcessedAt?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signature?: InputMaybe<FileUploadOrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum GrantSelectColumn {
  AskedAmount = 'askedAmount',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  GeneratedDocumentId = 'generatedDocumentId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  ReceivedAmount = 'receivedAmount',
  ReceivedAmountProcessedAt = 'receivedAmountProcessedAt',
  ReceivedAmountProcessedById = 'receivedAmountProcessedById',
  SignatureId = 'signatureId',
  State = 'state',
  TeamId = 'teamId',
  TenantId = 'tenantId',
}

export type GrantSetInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantStddevFields = {
  __typename?: 'GrantStddevFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantStddevOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantStddevPopFields = {
  __typename?: 'GrantStddevPopFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantStddevPopOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantStddevSampFields = {
  __typename?: 'GrantStddevSampFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantStddevSampOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantStreamCursorInput = {
  initialValue: GrantStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type GrantStreamCursorValueInput = {
  askedAmount?: InputMaybe<Scalars['Float']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  generatedDocumentId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  receivedAmount?: InputMaybe<Scalars['Float']['input']>;
  receivedAmountProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  receivedAmountProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  signatureId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type GrantSumFields = {
  __typename?: 'GrantSumFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  generatedDocumentId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['bigint']['output']>;
  signatureId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type GrantSumOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum GrantUpdateColumn {
  AskedAmount = 'askedAmount',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  GeneratedDocumentId = 'generatedDocumentId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  ReceivedAmount = 'receivedAmount',
  ReceivedAmountProcessedAt = 'receivedAmountProcessedAt',
  ReceivedAmountProcessedById = 'receivedAmountProcessedById',
  SignatureId = 'signatureId',
  State = 'state',
  TeamId = 'teamId',
  TenantId = 'tenantId',
}

export type GrantUpdates = {
  _inc?: InputMaybe<GrantIncInput>;
  _set?: InputMaybe<GrantSetInput>;
  where: GrantBoolExp;
};

export type GrantVarPopFields = {
  __typename?: 'GrantVarPopFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantVarPopOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantVarSampFields = {
  __typename?: 'GrantVarSampFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantVarSampOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type GrantVarianceFields = {
  __typename?: 'GrantVarianceFields';
  askedAmount?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  generatedDocumentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  receivedAmount?: Maybe<Scalars['Float']['output']>;
  receivedAmountProcessedById?: Maybe<Scalars['Float']['output']>;
  signatureId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type GrantVarianceOrderBy = {
  askedAmount?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  generatedDocumentId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  receivedAmount?: InputMaybe<OrderBy>;
  receivedAmountProcessedById?: InputMaybe<OrderBy>;
  signatureId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Individual = {
  __typename?: 'Individual';
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  bot?: Maybe<Bot>;
  contentSignature: Scalars['String']['output'];
  contributorIssues: Array<IssueContributors>;
  contributorIssuesAggregate: IssueContributorsAggregate;
  createdAccounts: Array<Account>;
  createdAccountsAggregate: AccountAggregate;
  createdActions: Array<Action>;
  createdActionsAggregate: ActionAggregate;
  createdActorImages: Array<ActorImage>;
  createdActorImagesAggregate: ActorImageAggregate;
  createdActors: Array<Actor>;
  createdActorsAggregate: ActorAggregate;
  createdAddresses: Array<Address>;
  createdAddressesAggregate: AddressAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBanks: Array<Bank>;
  createdBanksAggregate: BankAggregate;
  createdBots: Array<Bot>;
  createdBotsAggregate: BotAggregate;
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  createdCampusClusters: Array<CampusCluster>;
  createdCampusClustersAggregate: CampusClusterAggregate;
  createdCampuses: Array<Campus>;
  createdCampusesAggregate: CampusAggregate;
  createdCanteenFoods: Array<CanteenFood>;
  createdCanteenFoodsAggregate: CanteenFoodAggregate;
  createdCanteenMenus: Array<CanteenMenu>;
  createdCanteenMenusAggregate: CanteenMenuAggregate;
  createdCanteens: Array<Canteen>;
  createdCanteensAggregate: CanteenAggregate;
  createdClassGroupTeachers: Array<ClassGroupTeacher>;
  createdClassGroupTeachersAggregate: ClassGroupTeacherAggregate;
  createdClassGroups: Array<ClassGroup>;
  createdClassGroupsAggregate: ClassGroupAggregate;
  createdCohorts: Array<Cohort>;
  createdCohortsAggregate: CohortAggregate;
  createdContents: Array<Content>;
  createdContentsAggregate: ContentAggregate;
  createdDocuments: Array<Document>;
  createdDocumentsAggregate: DocumentAggregate;
  createdEventApprovalSteps: Array<EventApprovalStep>;
  createdEventApprovalStepsAggregate: EventApprovalStepAggregate;
  createdEventApprovals: Array<EventApproval>;
  createdEventApprovalsAggregate: EventApprovalAggregate;
  createdEventFavorites: Array<EventFavorite>;
  createdEventFavoritesAggregate: EventFavoriteAggregate;
  createdEventJoins: Array<EventJoin>;
  createdEventJoinsAggregate: EventJoinAggregate;
  createdEventOrganizes: Array<EventOrganize>;
  createdEventOrganizesAggregate: EventOrganizeAggregate;
  createdEventSupervisors: Array<EventSupervisor>;
  createdEventSupervisorsAggregate: EventSupervisorAggregate;
  createdEvents: Array<Event>;
  createdEventsAggregate: EventAggregate;
  createdExpenseItems: Array<ExpenseItem>;
  createdExpenseItemsAggregate: ExpenseItemAggregate;
  createdExpenses: Array<Expense>;
  createdExpensesAggregate: ExpenseAggregate;
  createdFavorites: Array<Favorite>;
  createdFavoritesAggregate: FavoriteAggregate;
  createdFileUploads: Array<FileUpload>;
  createdFileUploadsAggregate: FileUploadAggregate;
  createdFinances: Array<Finance>;
  createdFinancesAggregate: FinanceAggregate;
  createdFormSubmissions: Array<FormSubmission>;
  createdFormSubmissionsAggregate: FormSubmissionAggregate;
  createdForms: Array<Form>;
  createdFormsAggregate: FormAggregate;
  createdGrantAllocates: Array<GrantAllocate>;
  createdGrantAllocatesAggregate: GrantAllocateAggregate;
  createdGrants: Array<Grant>;
  createdGrantsAggregate: GrantAggregate;
  createdIndividuals: Array<Individual>;
  createdIndividualsAggregate: IndividualAggregate;
  createdIssues: Array<Issue>;
  createdIssuesAggregate: IssueAggregate;
  createdLegalUnitLocations: Array<LegalUnitLocation>;
  createdLegalUnitLocationsAggregate: LegalUnitLocationAggregate;
  createdLegalUnits: Array<LegalUnit>;
  createdLegalUnitsAggregate: LegalUnitAggregate;
  createdLocations: Array<Location>;
  createdLocationsAggregate: LocationAggregate;
  createdMissionJoins: Array<MissionJoin>;
  createdMissionJoinsAggregate: MissionJoinAggregate;
  createdMissions: Array<Mission>;
  createdMissionsAggregate: MissionAggregate;
  createdPoles: Array<Pole>;
  createdPolesAggregate: PoleAggregate;
  createdProjects: Array<Project>;
  createdProjectsAggregate: ProjectAggregate;
  createdReactions: Array<Reaction>;
  createdReactionsAggregate: ReactionAggregate;
  createdReports: Array<Report>;
  createdReportsAggregate: ReportAggregate;
  createdRoles: Array<Role>;
  createdRolesAggregate: RoleAggregate;
  createdSessions: Array<Session>;
  createdSessionsAggregate: SessionAggregate;
  createdShortcuts: Array<Shortcut>;
  createdShortcutsAggregate: ShortcutAggregate;
  createdSocials: Array<Social>;
  createdSocialsAggregate: SocialAggregate;
  createdSubjects: Array<Subject>;
  createdSubjectsAggregate: SubjectAggregate;
  createdTags: Array<Tag>;
  createdTagsAggregate: TagAggregate;
  createdTeamHistories: Array<TeamHistory>;
  createdTeamHistoriesAggregate: TeamHistoryAggregate;
  createdTeamJoins: Array<TeamJoin>;
  createdTeamJoinsAggregate: TeamJoinAggregate;
  createdTeamMembers: Array<TeamMember>;
  createdTeamMembersAggregate: TeamMemberAggregate;
  createdTeamMetrics: Array<TeamMetric>;
  createdTeamMetricsAggregate: TeamMetricAggregate;
  createdTeams: Array<Team>;
  createdTeamsAggregate: TeamAggregate;
  createdTenantOrganizes: Array<TenantOrganize>;
  createdTenantOrganizesAggregate: TenantOrganizeAggregate;
  createdTenants: Array<Tenant>;
  createdTenantsAggregate: TenantAggregate;
  createdThreads: Array<Thread>;
  createdThreadsAggregate: ThreadAggregate;
  createdUsers: Array<User>;
  createdUsersAggregate: UserAggregate;
  createdValidations: Array<Validation>;
  createdValidationsAggregate: ValidationAggregate;
  createdVotes: Array<Vote>;
  createdVotesAggregate: VoteAggregate;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  following: Array<Follow>;
  followingAggregate: FollowAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  initiatedFinances: Array<Finance>;
  initiatedFinancesAggregate: FinanceAggregate;
  notifieeEventApprovalSteps: Array<EventApprovalStepNotifiees>;
  notifieeEventApprovalStepsAggregate: EventApprovalStepNotifieesAggregate;
  participationProcessedEventJoins: Array<EventJoin>;
  participationProcessedEventJoinsAggregate: EventJoinAggregate;
  passwordHash?: Maybe<Scalars['String']['output']>;
  pointsProcessedActions: Array<Action>;
  pointsProcessedActionsAggregate: ActionAggregate;
  pointsProcessedMissionJoins: Array<MissionJoin>;
  pointsProcessedMissionJoinsAggregate: MissionJoinAggregate;
  processedEventJoins: Array<EventJoin>;
  processedEventJoinsAggregate: EventJoinAggregate;
  processedExpenses: Array<Expense>;
  processedExpensesAggregate: ExpenseAggregate;
  processedMissionJoins: Array<MissionJoin>;
  processedMissionJoinsAggregate: MissionJoinAggregate;
  processedTeamJoins: Array<TeamJoin>;
  processedTeamJoinsAggregate: TeamJoinAggregate;
  receivedAmountProcessedGrantAllocates: Array<GrantAllocate>;
  receivedAmountProcessedGrantAllocatesAggregate: GrantAllocateAggregate;
  receivedAmountProcessedGrants: Array<Grant>;
  receivedAmountProcessedGrantsAggregate: GrantAggregate;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  threadContributors: Array<ThreadContributors>;
  threadContributorsAggregate: ThreadContributorsAggregate;
  user?: Maybe<User>;
  validatorEventApprovalStep: Array<EventApprovalStepValidators>;
  validatorEventApprovalStepAggregate: EventApprovalStepValidatorsAggregate;
  viewed: Array<View>;
  viewedAggregate: ViewAggregate;
};

export type IndividualContributorIssuesArgs = {
  distinctOn?: InputMaybe<Array<IssueContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueContributorsOrderBy>>;
  where?: InputMaybe<IssueContributorsBoolExp>;
};

export type IndividualContributorIssuesAggregateArgs = {
  distinctOn?: InputMaybe<Array<IssueContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueContributorsOrderBy>>;
  where?: InputMaybe<IssueContributorsBoolExp>;
};

export type IndividualCreatedAccountsArgs = {
  distinctOn?: InputMaybe<Array<AccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountOrderBy>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type IndividualCreatedAccountsAggregateArgs = {
  distinctOn?: InputMaybe<Array<AccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountOrderBy>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type IndividualCreatedActionsArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type IndividualCreatedActionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type IndividualCreatedActorImagesArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type IndividualCreatedActorImagesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type IndividualCreatedActorsArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type IndividualCreatedActorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type IndividualCreatedAddressesArgs = {
  distinctOn?: InputMaybe<Array<AddressSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AddressOrderBy>>;
  where?: InputMaybe<AddressBoolExp>;
};

export type IndividualCreatedAddressesAggregateArgs = {
  distinctOn?: InputMaybe<Array<AddressSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AddressOrderBy>>;
  where?: InputMaybe<AddressBoolExp>;
};

export type IndividualCreatedBanksArgs = {
  distinctOn?: InputMaybe<Array<BankSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankOrderBy>>;
  where?: InputMaybe<BankBoolExp>;
};

export type IndividualCreatedBanksAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankOrderBy>>;
  where?: InputMaybe<BankBoolExp>;
};

export type IndividualCreatedBotsArgs = {
  distinctOn?: InputMaybe<Array<BotSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BotOrderBy>>;
  where?: InputMaybe<BotBoolExp>;
};

export type IndividualCreatedBotsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BotSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BotOrderBy>>;
  where?: InputMaybe<BotBoolExp>;
};

export type IndividualCreatedCampusClustersArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type IndividualCreatedCampusClustersAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type IndividualCreatedCampusesArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type IndividualCreatedCampusesAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type IndividualCreatedCanteenFoodsArgs = {
  distinctOn?: InputMaybe<Array<CanteenFoodSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenFoodOrderBy>>;
  where?: InputMaybe<CanteenFoodBoolExp>;
};

export type IndividualCreatedCanteenFoodsAggregateArgs = {
  distinctOn?: InputMaybe<Array<CanteenFoodSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenFoodOrderBy>>;
  where?: InputMaybe<CanteenFoodBoolExp>;
};

export type IndividualCreatedCanteenMenusArgs = {
  distinctOn?: InputMaybe<Array<CanteenMenuSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenMenuOrderBy>>;
  where?: InputMaybe<CanteenMenuBoolExp>;
};

export type IndividualCreatedCanteenMenusAggregateArgs = {
  distinctOn?: InputMaybe<Array<CanteenMenuSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenMenuOrderBy>>;
  where?: InputMaybe<CanteenMenuBoolExp>;
};

export type IndividualCreatedCanteensArgs = {
  distinctOn?: InputMaybe<Array<CanteenSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenOrderBy>>;
  where?: InputMaybe<CanteenBoolExp>;
};

export type IndividualCreatedCanteensAggregateArgs = {
  distinctOn?: InputMaybe<Array<CanteenSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenOrderBy>>;
  where?: InputMaybe<CanteenBoolExp>;
};

export type IndividualCreatedClassGroupTeachersArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherBoolExp>;
};

export type IndividualCreatedClassGroupTeachersAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherBoolExp>;
};

export type IndividualCreatedClassGroupsArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupOrderBy>>;
  where?: InputMaybe<ClassGroupBoolExp>;
};

export type IndividualCreatedClassGroupsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupOrderBy>>;
  where?: InputMaybe<ClassGroupBoolExp>;
};

export type IndividualCreatedCohortsArgs = {
  distinctOn?: InputMaybe<Array<CohortSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CohortOrderBy>>;
  where?: InputMaybe<CohortBoolExp>;
};

export type IndividualCreatedCohortsAggregateArgs = {
  distinctOn?: InputMaybe<Array<CohortSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CohortOrderBy>>;
  where?: InputMaybe<CohortBoolExp>;
};

export type IndividualCreatedContentsArgs = {
  distinctOn?: InputMaybe<Array<ContentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentOrderBy>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type IndividualCreatedContentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ContentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentOrderBy>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type IndividualCreatedDocumentsArgs = {
  distinctOn?: InputMaybe<Array<DocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DocumentOrderBy>>;
  where?: InputMaybe<DocumentBoolExp>;
};

export type IndividualCreatedDocumentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<DocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DocumentOrderBy>>;
  where?: InputMaybe<DocumentBoolExp>;
};

export type IndividualCreatedEventApprovalStepsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type IndividualCreatedEventApprovalStepsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type IndividualCreatedEventApprovalsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type IndividualCreatedEventApprovalsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type IndividualCreatedEventFavoritesArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type IndividualCreatedEventFavoritesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type IndividualCreatedEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type IndividualCreatedEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type IndividualCreatedEventOrganizesArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type IndividualCreatedEventOrganizesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type IndividualCreatedEventSupervisorsArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type IndividualCreatedEventSupervisorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type IndividualCreatedEventsArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type IndividualCreatedEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type IndividualCreatedExpenseItemsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type IndividualCreatedExpenseItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type IndividualCreatedExpensesArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type IndividualCreatedExpensesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type IndividualCreatedFavoritesArgs = {
  distinctOn?: InputMaybe<Array<FavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FavoriteOrderBy>>;
  where?: InputMaybe<FavoriteBoolExp>;
};

export type IndividualCreatedFavoritesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FavoriteOrderBy>>;
  where?: InputMaybe<FavoriteBoolExp>;
};

export type IndividualCreatedFileUploadsArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type IndividualCreatedFileUploadsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type IndividualCreatedFinancesArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type IndividualCreatedFinancesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type IndividualCreatedFormSubmissionsArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type IndividualCreatedFormSubmissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type IndividualCreatedFormsArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type IndividualCreatedFormsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type IndividualCreatedGrantAllocatesArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type IndividualCreatedGrantAllocatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type IndividualCreatedGrantsArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type IndividualCreatedGrantsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type IndividualCreatedIndividualsArgs = {
  distinctOn?: InputMaybe<Array<IndividualSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IndividualOrderBy>>;
  where?: InputMaybe<IndividualBoolExp>;
};

export type IndividualCreatedIndividualsAggregateArgs = {
  distinctOn?: InputMaybe<Array<IndividualSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IndividualOrderBy>>;
  where?: InputMaybe<IndividualBoolExp>;
};

export type IndividualCreatedIssuesArgs = {
  distinctOn?: InputMaybe<Array<IssueSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueOrderBy>>;
  where?: InputMaybe<IssueBoolExp>;
};

export type IndividualCreatedIssuesAggregateArgs = {
  distinctOn?: InputMaybe<Array<IssueSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueOrderBy>>;
  where?: InputMaybe<IssueBoolExp>;
};

export type IndividualCreatedLegalUnitLocationsArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitLocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitLocationOrderBy>>;
  where?: InputMaybe<LegalUnitLocationBoolExp>;
};

export type IndividualCreatedLegalUnitLocationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitLocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitLocationOrderBy>>;
  where?: InputMaybe<LegalUnitLocationBoolExp>;
};

export type IndividualCreatedLegalUnitsArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type IndividualCreatedLegalUnitsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type IndividualCreatedLocationsArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type IndividualCreatedLocationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type IndividualCreatedMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type IndividualCreatedMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type IndividualCreatedMissionsArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type IndividualCreatedMissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type IndividualCreatedPolesArgs = {
  distinctOn?: InputMaybe<Array<PoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoleOrderBy>>;
  where?: InputMaybe<PoleBoolExp>;
};

export type IndividualCreatedPolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoleOrderBy>>;
  where?: InputMaybe<PoleBoolExp>;
};

export type IndividualCreatedProjectsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type IndividualCreatedProjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type IndividualCreatedReactionsArgs = {
  distinctOn?: InputMaybe<Array<ReactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReactionOrderBy>>;
  where?: InputMaybe<ReactionBoolExp>;
};

export type IndividualCreatedReactionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ReactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReactionOrderBy>>;
  where?: InputMaybe<ReactionBoolExp>;
};

export type IndividualCreatedReportsArgs = {
  distinctOn?: InputMaybe<Array<ReportSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReportOrderBy>>;
  where?: InputMaybe<ReportBoolExp>;
};

export type IndividualCreatedReportsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ReportSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReportOrderBy>>;
  where?: InputMaybe<ReportBoolExp>;
};

export type IndividualCreatedRolesArgs = {
  distinctOn?: InputMaybe<Array<RoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RoleOrderBy>>;
  where?: InputMaybe<RoleBoolExp>;
};

export type IndividualCreatedRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<RoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RoleOrderBy>>;
  where?: InputMaybe<RoleBoolExp>;
};

export type IndividualCreatedSessionsArgs = {
  distinctOn?: InputMaybe<Array<SessionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SessionOrderBy>>;
  where?: InputMaybe<SessionBoolExp>;
};

export type IndividualCreatedSessionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SessionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SessionOrderBy>>;
  where?: InputMaybe<SessionBoolExp>;
};

export type IndividualCreatedShortcutsArgs = {
  distinctOn?: InputMaybe<Array<ShortcutSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ShortcutOrderBy>>;
  where?: InputMaybe<ShortcutBoolExp>;
};

export type IndividualCreatedShortcutsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ShortcutSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ShortcutOrderBy>>;
  where?: InputMaybe<ShortcutBoolExp>;
};

export type IndividualCreatedSocialsArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type IndividualCreatedSocialsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type IndividualCreatedSubjectsArgs = {
  distinctOn?: InputMaybe<Array<SubjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectOrderBy>>;
  where?: InputMaybe<SubjectBoolExp>;
};

export type IndividualCreatedSubjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SubjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectOrderBy>>;
  where?: InputMaybe<SubjectBoolExp>;
};

export type IndividualCreatedTagsArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type IndividualCreatedTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type IndividualCreatedTeamHistoriesArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type IndividualCreatedTeamHistoriesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type IndividualCreatedTeamJoinsArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type IndividualCreatedTeamJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type IndividualCreatedTeamMembersArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type IndividualCreatedTeamMembersAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type IndividualCreatedTeamMetricsArgs = {
  distinctOn?: InputMaybe<Array<TeamMetricSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMetricOrderBy>>;
  where?: InputMaybe<TeamMetricBoolExp>;
};

export type IndividualCreatedTeamMetricsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMetricSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMetricOrderBy>>;
  where?: InputMaybe<TeamMetricBoolExp>;
};

export type IndividualCreatedTeamsArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type IndividualCreatedTeamsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type IndividualCreatedTenantOrganizesArgs = {
  distinctOn?: InputMaybe<Array<TenantOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrganizeOrderBy>>;
  where?: InputMaybe<TenantOrganizeBoolExp>;
};

export type IndividualCreatedTenantOrganizesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrganizeOrderBy>>;
  where?: InputMaybe<TenantOrganizeBoolExp>;
};

export type IndividualCreatedTenantsArgs = {
  distinctOn?: InputMaybe<Array<TenantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrderBy>>;
  where?: InputMaybe<TenantBoolExp>;
};

export type IndividualCreatedTenantsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrderBy>>;
  where?: InputMaybe<TenantBoolExp>;
};

export type IndividualCreatedThreadsArgs = {
  distinctOn?: InputMaybe<Array<ThreadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadOrderBy>>;
  where?: InputMaybe<ThreadBoolExp>;
};

export type IndividualCreatedThreadsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ThreadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadOrderBy>>;
  where?: InputMaybe<ThreadBoolExp>;
};

export type IndividualCreatedUsersArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type IndividualCreatedUsersAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type IndividualCreatedValidationsArgs = {
  distinctOn?: InputMaybe<Array<ValidationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ValidationOrderBy>>;
  where?: InputMaybe<ValidationBoolExp>;
};

export type IndividualCreatedValidationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ValidationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ValidationOrderBy>>;
  where?: InputMaybe<ValidationBoolExp>;
};

export type IndividualCreatedVotesArgs = {
  distinctOn?: InputMaybe<Array<VoteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<VoteOrderBy>>;
  where?: InputMaybe<VoteBoolExp>;
};

export type IndividualCreatedVotesAggregateArgs = {
  distinctOn?: InputMaybe<Array<VoteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<VoteOrderBy>>;
  where?: InputMaybe<VoteBoolExp>;
};

export type IndividualFollowingArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type IndividualFollowingAggregateArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type IndividualInitiatedFinancesArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type IndividualInitiatedFinancesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type IndividualNotifieeEventApprovalStepsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepNotifieesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepNotifieesOrderBy>>;
  where?: InputMaybe<EventApprovalStepNotifieesBoolExp>;
};

export type IndividualNotifieeEventApprovalStepsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepNotifieesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepNotifieesOrderBy>>;
  where?: InputMaybe<EventApprovalStepNotifieesBoolExp>;
};

export type IndividualParticipationProcessedEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type IndividualParticipationProcessedEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type IndividualPointsProcessedActionsArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type IndividualPointsProcessedActionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type IndividualPointsProcessedMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type IndividualPointsProcessedMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type IndividualProcessedEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type IndividualProcessedEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type IndividualProcessedExpensesArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type IndividualProcessedExpensesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type IndividualProcessedMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type IndividualProcessedMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type IndividualProcessedTeamJoinsArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type IndividualProcessedTeamJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type IndividualReceivedAmountProcessedGrantAllocatesArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type IndividualReceivedAmountProcessedGrantAllocatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type IndividualReceivedAmountProcessedGrantsArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type IndividualReceivedAmountProcessedGrantsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type IndividualThreadContributorsArgs = {
  distinctOn?: InputMaybe<Array<ThreadContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadContributorsOrderBy>>;
  where?: InputMaybe<ThreadContributorsBoolExp>;
};

export type IndividualThreadContributorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ThreadContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadContributorsOrderBy>>;
  where?: InputMaybe<ThreadContributorsBoolExp>;
};

export type IndividualValidatorEventApprovalStepArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepValidatorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepValidatorsOrderBy>>;
  where?: InputMaybe<EventApprovalStepValidatorsBoolExp>;
};

export type IndividualValidatorEventApprovalStepAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepValidatorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepValidatorsOrderBy>>;
  where?: InputMaybe<EventApprovalStepValidatorsBoolExp>;
};

export type IndividualViewedArgs = {
  distinctOn?: InputMaybe<Array<ViewSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ViewOrderBy>>;
  where?: InputMaybe<ViewBoolExp>;
};

export type IndividualViewedAggregateArgs = {
  distinctOn?: InputMaybe<Array<ViewSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ViewOrderBy>>;
  where?: InputMaybe<ViewBoolExp>;
};

export type IndividualAggregate = {
  __typename?: 'IndividualAggregate';
  aggregate?: Maybe<IndividualAggregateFields>;
  nodes: Array<Individual>;
};

export type IndividualAggregateBoolExp = {
  count?: InputMaybe<IndividualAggregateBoolExpCount>;
};

export type IndividualAggregateFields = {
  __typename?: 'IndividualAggregateFields';
  avg?: Maybe<IndividualAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<IndividualMaxFields>;
  min?: Maybe<IndividualMinFields>;
  stddev?: Maybe<IndividualStddevFields>;
  stddevPop?: Maybe<IndividualStddevPopFields>;
  stddevSamp?: Maybe<IndividualStddevSampFields>;
  sum?: Maybe<IndividualSumFields>;
  varPop?: Maybe<IndividualVarPopFields>;
  varSamp?: Maybe<IndividualVarSampFields>;
  variance?: Maybe<IndividualVarianceFields>;
};

export type IndividualAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<IndividualSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type IndividualAggregateOrderBy = {
  avg?: InputMaybe<IndividualAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<IndividualMaxOrderBy>;
  min?: InputMaybe<IndividualMinOrderBy>;
  stddev?: InputMaybe<IndividualStddevOrderBy>;
  stddevPop?: InputMaybe<IndividualStddevPopOrderBy>;
  stddevSamp?: InputMaybe<IndividualStddevSampOrderBy>;
  sum?: InputMaybe<IndividualSumOrderBy>;
  varPop?: InputMaybe<IndividualVarPopOrderBy>;
  varSamp?: InputMaybe<IndividualVarSampOrderBy>;
  variance?: InputMaybe<IndividualVarianceOrderBy>;
};

export type IndividualArrRelInsertInput = {
  data: Array<IndividualInsertInput>;
  onConflict?: InputMaybe<IndividualOnConflict>;
};

export type IndividualAvgFields = {
  __typename?: 'IndividualAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type IndividualAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IndividualBoolExp = {
  _and?: InputMaybe<Array<IndividualBoolExp>>;
  _not?: InputMaybe<IndividualBoolExp>;
  _or?: InputMaybe<Array<IndividualBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  bot?: InputMaybe<BotBoolExp>;
  contentSignature?: InputMaybe<StringComparisonExp>;
  contributorIssues?: InputMaybe<IssueContributorsBoolExp>;
  contributorIssuesAggregate?: InputMaybe<IssueContributorsAggregateBoolExp>;
  createdAccounts?: InputMaybe<AccountBoolExp>;
  createdAccountsAggregate?: InputMaybe<AccountAggregateBoolExp>;
  createdActions?: InputMaybe<ActionBoolExp>;
  createdActionsAggregate?: InputMaybe<ActionAggregateBoolExp>;
  createdActorImages?: InputMaybe<ActorImageBoolExp>;
  createdActorImagesAggregate?: InputMaybe<ActorImageAggregateBoolExp>;
  createdActors?: InputMaybe<ActorBoolExp>;
  createdActorsAggregate?: InputMaybe<ActorAggregateBoolExp>;
  createdAddresses?: InputMaybe<AddressBoolExp>;
  createdAddressesAggregate?: InputMaybe<AddressAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBanks?: InputMaybe<BankBoolExp>;
  createdBanksAggregate?: InputMaybe<BankAggregateBoolExp>;
  createdBots?: InputMaybe<BotBoolExp>;
  createdBotsAggregate?: InputMaybe<BotAggregateBoolExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  createdCampusClusters?: InputMaybe<CampusClusterBoolExp>;
  createdCampusClustersAggregate?: InputMaybe<CampusClusterAggregateBoolExp>;
  createdCampuses?: InputMaybe<CampusBoolExp>;
  createdCampusesAggregate?: InputMaybe<CampusAggregateBoolExp>;
  createdCanteenFoods?: InputMaybe<CanteenFoodBoolExp>;
  createdCanteenFoodsAggregate?: InputMaybe<CanteenFoodAggregateBoolExp>;
  createdCanteenMenus?: InputMaybe<CanteenMenuBoolExp>;
  createdCanteenMenusAggregate?: InputMaybe<CanteenMenuAggregateBoolExp>;
  createdCanteens?: InputMaybe<CanteenBoolExp>;
  createdCanteensAggregate?: InputMaybe<CanteenAggregateBoolExp>;
  createdClassGroupTeachers?: InputMaybe<ClassGroupTeacherBoolExp>;
  createdClassGroupTeachersAggregate?: InputMaybe<ClassGroupTeacherAggregateBoolExp>;
  createdClassGroups?: InputMaybe<ClassGroupBoolExp>;
  createdClassGroupsAggregate?: InputMaybe<ClassGroupAggregateBoolExp>;
  createdCohorts?: InputMaybe<CohortBoolExp>;
  createdCohortsAggregate?: InputMaybe<CohortAggregateBoolExp>;
  createdContents?: InputMaybe<ContentBoolExp>;
  createdContentsAggregate?: InputMaybe<ContentAggregateBoolExp>;
  createdDocuments?: InputMaybe<DocumentBoolExp>;
  createdDocumentsAggregate?: InputMaybe<DocumentAggregateBoolExp>;
  createdEventApprovalSteps?: InputMaybe<EventApprovalStepBoolExp>;
  createdEventApprovalStepsAggregate?: InputMaybe<EventApprovalStepAggregateBoolExp>;
  createdEventApprovals?: InputMaybe<EventApprovalBoolExp>;
  createdEventApprovalsAggregate?: InputMaybe<EventApprovalAggregateBoolExp>;
  createdEventFavorites?: InputMaybe<EventFavoriteBoolExp>;
  createdEventFavoritesAggregate?: InputMaybe<EventFavoriteAggregateBoolExp>;
  createdEventJoins?: InputMaybe<EventJoinBoolExp>;
  createdEventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  createdEventOrganizes?: InputMaybe<EventOrganizeBoolExp>;
  createdEventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateBoolExp>;
  createdEventSupervisors?: InputMaybe<EventSupervisorBoolExp>;
  createdEventSupervisorsAggregate?: InputMaybe<EventSupervisorAggregateBoolExp>;
  createdEvents?: InputMaybe<EventBoolExp>;
  createdEventsAggregate?: InputMaybe<EventAggregateBoolExp>;
  createdExpenseItems?: InputMaybe<ExpenseItemBoolExp>;
  createdExpenseItemsAggregate?: InputMaybe<ExpenseItemAggregateBoolExp>;
  createdExpenses?: InputMaybe<ExpenseBoolExp>;
  createdExpensesAggregate?: InputMaybe<ExpenseAggregateBoolExp>;
  createdFavorites?: InputMaybe<FavoriteBoolExp>;
  createdFavoritesAggregate?: InputMaybe<FavoriteAggregateBoolExp>;
  createdFileUploads?: InputMaybe<FileUploadBoolExp>;
  createdFileUploadsAggregate?: InputMaybe<FileUploadAggregateBoolExp>;
  createdFinances?: InputMaybe<FinanceBoolExp>;
  createdFinancesAggregate?: InputMaybe<FinanceAggregateBoolExp>;
  createdFormSubmissions?: InputMaybe<FormSubmissionBoolExp>;
  createdFormSubmissionsAggregate?: InputMaybe<FormSubmissionAggregateBoolExp>;
  createdForms?: InputMaybe<FormBoolExp>;
  createdFormsAggregate?: InputMaybe<FormAggregateBoolExp>;
  createdGrantAllocates?: InputMaybe<GrantAllocateBoolExp>;
  createdGrantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateBoolExp>;
  createdGrants?: InputMaybe<GrantBoolExp>;
  createdGrantsAggregate?: InputMaybe<GrantAggregateBoolExp>;
  createdIndividuals?: InputMaybe<IndividualBoolExp>;
  createdIndividualsAggregate?: InputMaybe<IndividualAggregateBoolExp>;
  createdIssues?: InputMaybe<IssueBoolExp>;
  createdIssuesAggregate?: InputMaybe<IssueAggregateBoolExp>;
  createdLegalUnitLocations?: InputMaybe<LegalUnitLocationBoolExp>;
  createdLegalUnitLocationsAggregate?: InputMaybe<LegalUnitLocationAggregateBoolExp>;
  createdLegalUnits?: InputMaybe<LegalUnitBoolExp>;
  createdLegalUnitsAggregate?: InputMaybe<LegalUnitAggregateBoolExp>;
  createdLocations?: InputMaybe<LocationBoolExp>;
  createdLocationsAggregate?: InputMaybe<LocationAggregateBoolExp>;
  createdMissionJoins?: InputMaybe<MissionJoinBoolExp>;
  createdMissionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  createdMissions?: InputMaybe<MissionBoolExp>;
  createdMissionsAggregate?: InputMaybe<MissionAggregateBoolExp>;
  createdPoles?: InputMaybe<PoleBoolExp>;
  createdPolesAggregate?: InputMaybe<PoleAggregateBoolExp>;
  createdProjects?: InputMaybe<ProjectBoolExp>;
  createdProjectsAggregate?: InputMaybe<ProjectAggregateBoolExp>;
  createdReactions?: InputMaybe<ReactionBoolExp>;
  createdReactionsAggregate?: InputMaybe<ReactionAggregateBoolExp>;
  createdReports?: InputMaybe<ReportBoolExp>;
  createdReportsAggregate?: InputMaybe<ReportAggregateBoolExp>;
  createdRoles?: InputMaybe<RoleBoolExp>;
  createdRolesAggregate?: InputMaybe<RoleAggregateBoolExp>;
  createdSessions?: InputMaybe<SessionBoolExp>;
  createdSessionsAggregate?: InputMaybe<SessionAggregateBoolExp>;
  createdShortcuts?: InputMaybe<ShortcutBoolExp>;
  createdShortcutsAggregate?: InputMaybe<ShortcutAggregateBoolExp>;
  createdSocials?: InputMaybe<SocialBoolExp>;
  createdSocialsAggregate?: InputMaybe<SocialAggregateBoolExp>;
  createdSubjects?: InputMaybe<SubjectBoolExp>;
  createdSubjectsAggregate?: InputMaybe<SubjectAggregateBoolExp>;
  createdTags?: InputMaybe<TagBoolExp>;
  createdTagsAggregate?: InputMaybe<TagAggregateBoolExp>;
  createdTeamHistories?: InputMaybe<TeamHistoryBoolExp>;
  createdTeamHistoriesAggregate?: InputMaybe<TeamHistoryAggregateBoolExp>;
  createdTeamJoins?: InputMaybe<TeamJoinBoolExp>;
  createdTeamJoinsAggregate?: InputMaybe<TeamJoinAggregateBoolExp>;
  createdTeamMembers?: InputMaybe<TeamMemberBoolExp>;
  createdTeamMembersAggregate?: InputMaybe<TeamMemberAggregateBoolExp>;
  createdTeamMetrics?: InputMaybe<TeamMetricBoolExp>;
  createdTeamMetricsAggregate?: InputMaybe<TeamMetricAggregateBoolExp>;
  createdTeams?: InputMaybe<TeamBoolExp>;
  createdTeamsAggregate?: InputMaybe<TeamAggregateBoolExp>;
  createdTenantOrganizes?: InputMaybe<TenantOrganizeBoolExp>;
  createdTenantOrganizesAggregate?: InputMaybe<TenantOrganizeAggregateBoolExp>;
  createdTenants?: InputMaybe<TenantBoolExp>;
  createdTenantsAggregate?: InputMaybe<TenantAggregateBoolExp>;
  createdThreads?: InputMaybe<ThreadBoolExp>;
  createdThreadsAggregate?: InputMaybe<ThreadAggregateBoolExp>;
  createdUsers?: InputMaybe<UserBoolExp>;
  createdUsersAggregate?: InputMaybe<UserAggregateBoolExp>;
  createdValidations?: InputMaybe<ValidationBoolExp>;
  createdValidationsAggregate?: InputMaybe<ValidationAggregateBoolExp>;
  createdVotes?: InputMaybe<VoteBoolExp>;
  createdVotesAggregate?: InputMaybe<VoteAggregateBoolExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  following?: InputMaybe<FollowBoolExp>;
  followingAggregate?: InputMaybe<FollowAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  initiatedFinances?: InputMaybe<FinanceBoolExp>;
  initiatedFinancesAggregate?: InputMaybe<FinanceAggregateBoolExp>;
  notifieeEventApprovalSteps?: InputMaybe<EventApprovalStepNotifieesBoolExp>;
  notifieeEventApprovalStepsAggregate?: InputMaybe<EventApprovalStepNotifieesAggregateBoolExp>;
  participationProcessedEventJoins?: InputMaybe<EventJoinBoolExp>;
  participationProcessedEventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  passwordHash?: InputMaybe<StringComparisonExp>;
  pointsProcessedActions?: InputMaybe<ActionBoolExp>;
  pointsProcessedActionsAggregate?: InputMaybe<ActionAggregateBoolExp>;
  pointsProcessedMissionJoins?: InputMaybe<MissionJoinBoolExp>;
  pointsProcessedMissionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  processedEventJoins?: InputMaybe<EventJoinBoolExp>;
  processedEventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  processedExpenses?: InputMaybe<ExpenseBoolExp>;
  processedExpensesAggregate?: InputMaybe<ExpenseAggregateBoolExp>;
  processedMissionJoins?: InputMaybe<MissionJoinBoolExp>;
  processedMissionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  processedTeamJoins?: InputMaybe<TeamJoinBoolExp>;
  processedTeamJoinsAggregate?: InputMaybe<TeamJoinAggregateBoolExp>;
  receivedAmountProcessedGrantAllocates?: InputMaybe<GrantAllocateBoolExp>;
  receivedAmountProcessedGrantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateBoolExp>;
  receivedAmountProcessedGrants?: InputMaybe<GrantBoolExp>;
  receivedAmountProcessedGrantsAggregate?: InputMaybe<GrantAggregateBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  threadContributors?: InputMaybe<ThreadContributorsBoolExp>;
  threadContributorsAggregate?: InputMaybe<ThreadContributorsAggregateBoolExp>;
  user?: InputMaybe<UserBoolExp>;
  validatorEventApprovalStep?: InputMaybe<EventApprovalStepValidatorsBoolExp>;
  validatorEventApprovalStepAggregate?: InputMaybe<EventApprovalStepValidatorsAggregateBoolExp>;
  viewed?: InputMaybe<ViewBoolExp>;
  viewedAggregate?: InputMaybe<ViewAggregateBoolExp>;
};

export enum IndividualConstraint {
  IndividualActorIdUnique = 'individual_actor_id_unique',
  IndividualPkey = 'individual_pkey',
}

export type IndividualIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IndividualInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bot?: InputMaybe<BotObjRelInsertInput>;
  contentSignature?: InputMaybe<Scalars['String']['input']>;
  contributorIssues?: InputMaybe<IssueContributorsArrRelInsertInput>;
  createdAccounts?: InputMaybe<AccountArrRelInsertInput>;
  createdActions?: InputMaybe<ActionArrRelInsertInput>;
  createdActorImages?: InputMaybe<ActorImageArrRelInsertInput>;
  createdActors?: InputMaybe<ActorArrRelInsertInput>;
  createdAddresses?: InputMaybe<AddressArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBanks?: InputMaybe<BankArrRelInsertInput>;
  createdBots?: InputMaybe<BotArrRelInsertInput>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  createdCampusClusters?: InputMaybe<CampusClusterArrRelInsertInput>;
  createdCampuses?: InputMaybe<CampusArrRelInsertInput>;
  createdCanteenFoods?: InputMaybe<CanteenFoodArrRelInsertInput>;
  createdCanteenMenus?: InputMaybe<CanteenMenuArrRelInsertInput>;
  createdCanteens?: InputMaybe<CanteenArrRelInsertInput>;
  createdClassGroupTeachers?: InputMaybe<ClassGroupTeacherArrRelInsertInput>;
  createdClassGroups?: InputMaybe<ClassGroupArrRelInsertInput>;
  createdCohorts?: InputMaybe<CohortArrRelInsertInput>;
  createdContents?: InputMaybe<ContentArrRelInsertInput>;
  createdDocuments?: InputMaybe<DocumentArrRelInsertInput>;
  createdEventApprovalSteps?: InputMaybe<EventApprovalStepArrRelInsertInput>;
  createdEventApprovals?: InputMaybe<EventApprovalArrRelInsertInput>;
  createdEventFavorites?: InputMaybe<EventFavoriteArrRelInsertInput>;
  createdEventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  createdEventOrganizes?: InputMaybe<EventOrganizeArrRelInsertInput>;
  createdEventSupervisors?: InputMaybe<EventSupervisorArrRelInsertInput>;
  createdEvents?: InputMaybe<EventArrRelInsertInput>;
  createdExpenseItems?: InputMaybe<ExpenseItemArrRelInsertInput>;
  createdExpenses?: InputMaybe<ExpenseArrRelInsertInput>;
  createdFavorites?: InputMaybe<FavoriteArrRelInsertInput>;
  createdFileUploads?: InputMaybe<FileUploadArrRelInsertInput>;
  createdFinances?: InputMaybe<FinanceArrRelInsertInput>;
  createdFormSubmissions?: InputMaybe<FormSubmissionArrRelInsertInput>;
  createdForms?: InputMaybe<FormArrRelInsertInput>;
  createdGrantAllocates?: InputMaybe<GrantAllocateArrRelInsertInput>;
  createdGrants?: InputMaybe<GrantArrRelInsertInput>;
  createdIndividuals?: InputMaybe<IndividualArrRelInsertInput>;
  createdIssues?: InputMaybe<IssueArrRelInsertInput>;
  createdLegalUnitLocations?: InputMaybe<LegalUnitLocationArrRelInsertInput>;
  createdLegalUnits?: InputMaybe<LegalUnitArrRelInsertInput>;
  createdLocations?: InputMaybe<LocationArrRelInsertInput>;
  createdMissionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  createdMissions?: InputMaybe<MissionArrRelInsertInput>;
  createdPoles?: InputMaybe<PoleArrRelInsertInput>;
  createdProjects?: InputMaybe<ProjectArrRelInsertInput>;
  createdReactions?: InputMaybe<ReactionArrRelInsertInput>;
  createdReports?: InputMaybe<ReportArrRelInsertInput>;
  createdRoles?: InputMaybe<RoleArrRelInsertInput>;
  createdSessions?: InputMaybe<SessionArrRelInsertInput>;
  createdShortcuts?: InputMaybe<ShortcutArrRelInsertInput>;
  createdSocials?: InputMaybe<SocialArrRelInsertInput>;
  createdSubjects?: InputMaybe<SubjectArrRelInsertInput>;
  createdTags?: InputMaybe<TagArrRelInsertInput>;
  createdTeamHistories?: InputMaybe<TeamHistoryArrRelInsertInput>;
  createdTeamJoins?: InputMaybe<TeamJoinArrRelInsertInput>;
  createdTeamMembers?: InputMaybe<TeamMemberArrRelInsertInput>;
  createdTeamMetrics?: InputMaybe<TeamMetricArrRelInsertInput>;
  createdTeams?: InputMaybe<TeamArrRelInsertInput>;
  createdTenantOrganizes?: InputMaybe<TenantOrganizeArrRelInsertInput>;
  createdTenants?: InputMaybe<TenantArrRelInsertInput>;
  createdThreads?: InputMaybe<ThreadArrRelInsertInput>;
  createdUsers?: InputMaybe<UserArrRelInsertInput>;
  createdValidations?: InputMaybe<ValidationArrRelInsertInput>;
  createdVotes?: InputMaybe<VoteArrRelInsertInput>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  following?: InputMaybe<FollowArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  initiatedFinances?: InputMaybe<FinanceArrRelInsertInput>;
  notifieeEventApprovalSteps?: InputMaybe<EventApprovalStepNotifieesArrRelInsertInput>;
  participationProcessedEventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  passwordHash?: InputMaybe<Scalars['String']['input']>;
  pointsProcessedActions?: InputMaybe<ActionArrRelInsertInput>;
  pointsProcessedMissionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  processedEventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  processedExpenses?: InputMaybe<ExpenseArrRelInsertInput>;
  processedMissionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  processedTeamJoins?: InputMaybe<TeamJoinArrRelInsertInput>;
  receivedAmountProcessedGrantAllocates?: InputMaybe<GrantAllocateArrRelInsertInput>;
  receivedAmountProcessedGrants?: InputMaybe<GrantArrRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  threadContributors?: InputMaybe<ThreadContributorsArrRelInsertInput>;
  user?: InputMaybe<UserObjRelInsertInput>;
  validatorEventApprovalStep?: InputMaybe<EventApprovalStepValidatorsArrRelInsertInput>;
  viewed?: InputMaybe<ViewArrRelInsertInput>;
};

export type IndividualMaxFields = {
  __typename?: 'IndividualMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  contentSignature?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  passwordHash?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type IndividualMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  contentSignature?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  passwordHash?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IndividualMinFields = {
  __typename?: 'IndividualMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  contentSignature?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  passwordHash?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type IndividualMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  contentSignature?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  passwordHash?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IndividualMutationResponse = {
  __typename?: 'IndividualMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Individual>;
};

export type IndividualObjRelInsertInput = {
  data: IndividualInsertInput;
  onConflict?: InputMaybe<IndividualOnConflict>;
};

export type IndividualOnConflict = {
  constraint: IndividualConstraint;
  updateColumns?: Array<IndividualUpdateColumn>;
  where?: InputMaybe<IndividualBoolExp>;
};

export type IndividualOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  bot?: InputMaybe<BotOrderBy>;
  contentSignature?: InputMaybe<OrderBy>;
  contributorIssuesAggregate?: InputMaybe<IssueContributorsAggregateOrderBy>;
  createdAccountsAggregate?: InputMaybe<AccountAggregateOrderBy>;
  createdActionsAggregate?: InputMaybe<ActionAggregateOrderBy>;
  createdActorImagesAggregate?: InputMaybe<ActorImageAggregateOrderBy>;
  createdActorsAggregate?: InputMaybe<ActorAggregateOrderBy>;
  createdAddressesAggregate?: InputMaybe<AddressAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBanksAggregate?: InputMaybe<BankAggregateOrderBy>;
  createdBotsAggregate?: InputMaybe<BotAggregateOrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  createdCampusClustersAggregate?: InputMaybe<CampusClusterAggregateOrderBy>;
  createdCampusesAggregate?: InputMaybe<CampusAggregateOrderBy>;
  createdCanteenFoodsAggregate?: InputMaybe<CanteenFoodAggregateOrderBy>;
  createdCanteenMenusAggregate?: InputMaybe<CanteenMenuAggregateOrderBy>;
  createdCanteensAggregate?: InputMaybe<CanteenAggregateOrderBy>;
  createdClassGroupTeachersAggregate?: InputMaybe<ClassGroupTeacherAggregateOrderBy>;
  createdClassGroupsAggregate?: InputMaybe<ClassGroupAggregateOrderBy>;
  createdCohortsAggregate?: InputMaybe<CohortAggregateOrderBy>;
  createdContentsAggregate?: InputMaybe<ContentAggregateOrderBy>;
  createdDocumentsAggregate?: InputMaybe<DocumentAggregateOrderBy>;
  createdEventApprovalStepsAggregate?: InputMaybe<EventApprovalStepAggregateOrderBy>;
  createdEventApprovalsAggregate?: InputMaybe<EventApprovalAggregateOrderBy>;
  createdEventFavoritesAggregate?: InputMaybe<EventFavoriteAggregateOrderBy>;
  createdEventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  createdEventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateOrderBy>;
  createdEventSupervisorsAggregate?: InputMaybe<EventSupervisorAggregateOrderBy>;
  createdEventsAggregate?: InputMaybe<EventAggregateOrderBy>;
  createdExpenseItemsAggregate?: InputMaybe<ExpenseItemAggregateOrderBy>;
  createdExpensesAggregate?: InputMaybe<ExpenseAggregateOrderBy>;
  createdFavoritesAggregate?: InputMaybe<FavoriteAggregateOrderBy>;
  createdFileUploadsAggregate?: InputMaybe<FileUploadAggregateOrderBy>;
  createdFinancesAggregate?: InputMaybe<FinanceAggregateOrderBy>;
  createdFormSubmissionsAggregate?: InputMaybe<FormSubmissionAggregateOrderBy>;
  createdFormsAggregate?: InputMaybe<FormAggregateOrderBy>;
  createdGrantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateOrderBy>;
  createdGrantsAggregate?: InputMaybe<GrantAggregateOrderBy>;
  createdIndividualsAggregate?: InputMaybe<IndividualAggregateOrderBy>;
  createdIssuesAggregate?: InputMaybe<IssueAggregateOrderBy>;
  createdLegalUnitLocationsAggregate?: InputMaybe<LegalUnitLocationAggregateOrderBy>;
  createdLegalUnitsAggregate?: InputMaybe<LegalUnitAggregateOrderBy>;
  createdLocationsAggregate?: InputMaybe<LocationAggregateOrderBy>;
  createdMissionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  createdMissionsAggregate?: InputMaybe<MissionAggregateOrderBy>;
  createdPolesAggregate?: InputMaybe<PoleAggregateOrderBy>;
  createdProjectsAggregate?: InputMaybe<ProjectAggregateOrderBy>;
  createdReactionsAggregate?: InputMaybe<ReactionAggregateOrderBy>;
  createdReportsAggregate?: InputMaybe<ReportAggregateOrderBy>;
  createdRolesAggregate?: InputMaybe<RoleAggregateOrderBy>;
  createdSessionsAggregate?: InputMaybe<SessionAggregateOrderBy>;
  createdShortcutsAggregate?: InputMaybe<ShortcutAggregateOrderBy>;
  createdSocialsAggregate?: InputMaybe<SocialAggregateOrderBy>;
  createdSubjectsAggregate?: InputMaybe<SubjectAggregateOrderBy>;
  createdTagsAggregate?: InputMaybe<TagAggregateOrderBy>;
  createdTeamHistoriesAggregate?: InputMaybe<TeamHistoryAggregateOrderBy>;
  createdTeamJoinsAggregate?: InputMaybe<TeamJoinAggregateOrderBy>;
  createdTeamMembersAggregate?: InputMaybe<TeamMemberAggregateOrderBy>;
  createdTeamMetricsAggregate?: InputMaybe<TeamMetricAggregateOrderBy>;
  createdTeamsAggregate?: InputMaybe<TeamAggregateOrderBy>;
  createdTenantOrganizesAggregate?: InputMaybe<TenantOrganizeAggregateOrderBy>;
  createdTenantsAggregate?: InputMaybe<TenantAggregateOrderBy>;
  createdThreadsAggregate?: InputMaybe<ThreadAggregateOrderBy>;
  createdUsersAggregate?: InputMaybe<UserAggregateOrderBy>;
  createdValidationsAggregate?: InputMaybe<ValidationAggregateOrderBy>;
  createdVotesAggregate?: InputMaybe<VoteAggregateOrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  followingAggregate?: InputMaybe<FollowAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  initiatedFinancesAggregate?: InputMaybe<FinanceAggregateOrderBy>;
  notifieeEventApprovalStepsAggregate?: InputMaybe<EventApprovalStepNotifieesAggregateOrderBy>;
  participationProcessedEventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  passwordHash?: InputMaybe<OrderBy>;
  pointsProcessedActionsAggregate?: InputMaybe<ActionAggregateOrderBy>;
  pointsProcessedMissionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  processedEventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  processedExpensesAggregate?: InputMaybe<ExpenseAggregateOrderBy>;
  processedMissionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  processedTeamJoinsAggregate?: InputMaybe<TeamJoinAggregateOrderBy>;
  receivedAmountProcessedGrantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateOrderBy>;
  receivedAmountProcessedGrantsAggregate?: InputMaybe<GrantAggregateOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  threadContributorsAggregate?: InputMaybe<ThreadContributorsAggregateOrderBy>;
  user?: InputMaybe<UserOrderBy>;
  validatorEventApprovalStepAggregate?: InputMaybe<EventApprovalStepValidatorsAggregateOrderBy>;
  viewedAggregate?: InputMaybe<ViewAggregateOrderBy>;
};

export type IndividualPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum IndividualSelectColumn {
  ActorId = 'actorId',
  ContentSignature = 'contentSignature',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  PasswordHash = 'passwordHash',
  TenantId = 'tenantId',
}

export type IndividualSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  contentSignature?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  passwordHash?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IndividualStddevFields = {
  __typename?: 'IndividualStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type IndividualStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IndividualStddevPopFields = {
  __typename?: 'IndividualStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type IndividualStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IndividualStddevSampFields = {
  __typename?: 'IndividualStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type IndividualStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IndividualStreamCursorInput = {
  initialValue: IndividualStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type IndividualStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  contentSignature?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  passwordHash?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IndividualSumFields = {
  __typename?: 'IndividualSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type IndividualSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum IndividualUpdateColumn {
  ActorId = 'actorId',
  ContentSignature = 'contentSignature',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  PasswordHash = 'passwordHash',
  TenantId = 'tenantId',
}

export type IndividualUpdates = {
  _inc?: InputMaybe<IndividualIncInput>;
  _set?: InputMaybe<IndividualSetInput>;
  where: IndividualBoolExp;
};

export type IndividualVarPopFields = {
  __typename?: 'IndividualVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type IndividualVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IndividualVarSampFields = {
  __typename?: 'IndividualVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type IndividualVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IndividualVarianceFields = {
  __typename?: 'IndividualVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type IndividualVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IntComparisonExp = {
  _eq?: InputMaybe<Scalars['Int']['input']>;
  _gt?: InputMaybe<Scalars['Int']['input']>;
  _gte?: InputMaybe<Scalars['Int']['input']>;
  _in?: InputMaybe<Array<Scalars['Int']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Int']['input']>;
  _lte?: InputMaybe<Scalars['Int']['input']>;
  _neq?: InputMaybe<Scalars['Int']['input']>;
  _nin?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type Issue = {
  __typename?: 'Issue';
  content: Content;
  contentId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  issueContributors: Array<IssueContributors>;
  issueContributorsAggregate: IssueContributorsAggregate;
  issueTags: Array<IssueTags>;
  issueTagsAggregate: IssueTagsAggregate;
  name: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type IssueIssueContributorsArgs = {
  distinctOn?: InputMaybe<Array<IssueContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueContributorsOrderBy>>;
  where?: InputMaybe<IssueContributorsBoolExp>;
};

export type IssueIssueContributorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<IssueContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueContributorsOrderBy>>;
  where?: InputMaybe<IssueContributorsBoolExp>;
};

export type IssueIssueTagsArgs = {
  distinctOn?: InputMaybe<Array<IssueTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueTagsOrderBy>>;
  where?: InputMaybe<IssueTagsBoolExp>;
};

export type IssueIssueTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<IssueTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueTagsOrderBy>>;
  where?: InputMaybe<IssueTagsBoolExp>;
};

export type IssueAggregate = {
  __typename?: 'IssueAggregate';
  aggregate?: Maybe<IssueAggregateFields>;
  nodes: Array<Issue>;
};

export type IssueAggregateBoolExp = {
  count?: InputMaybe<IssueAggregateBoolExpCount>;
};

export type IssueAggregateFields = {
  __typename?: 'IssueAggregateFields';
  avg?: Maybe<IssueAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<IssueMaxFields>;
  min?: Maybe<IssueMinFields>;
  stddev?: Maybe<IssueStddevFields>;
  stddevPop?: Maybe<IssueStddevPopFields>;
  stddevSamp?: Maybe<IssueStddevSampFields>;
  sum?: Maybe<IssueSumFields>;
  varPop?: Maybe<IssueVarPopFields>;
  varSamp?: Maybe<IssueVarSampFields>;
  variance?: Maybe<IssueVarianceFields>;
};

export type IssueAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<IssueSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type IssueAggregateOrderBy = {
  avg?: InputMaybe<IssueAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<IssueMaxOrderBy>;
  min?: InputMaybe<IssueMinOrderBy>;
  stddev?: InputMaybe<IssueStddevOrderBy>;
  stddevPop?: InputMaybe<IssueStddevPopOrderBy>;
  stddevSamp?: InputMaybe<IssueStddevSampOrderBy>;
  sum?: InputMaybe<IssueSumOrderBy>;
  varPop?: InputMaybe<IssueVarPopOrderBy>;
  varSamp?: InputMaybe<IssueVarSampOrderBy>;
  variance?: InputMaybe<IssueVarianceOrderBy>;
};

export type IssueArrRelInsertInput = {
  data: Array<IssueInsertInput>;
  onConflict?: InputMaybe<IssueOnConflict>;
};

export type IssueAvgFields = {
  __typename?: 'IssueAvgFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type IssueAvgOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IssueBoolExp = {
  _and?: InputMaybe<Array<IssueBoolExp>>;
  _not?: InputMaybe<IssueBoolExp>;
  _or?: InputMaybe<Array<IssueBoolExp>>;
  content?: InputMaybe<ContentBoolExp>;
  contentId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  issueContributors?: InputMaybe<IssueContributorsBoolExp>;
  issueContributorsAggregate?: InputMaybe<IssueContributorsAggregateBoolExp>;
  issueTags?: InputMaybe<IssueTagsBoolExp>;
  issueTagsAggregate?: InputMaybe<IssueTagsAggregateBoolExp>;
  name?: InputMaybe<StringComparisonExp>;
  slug?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum IssueConstraint {
  IssueContentIdUnique = 'issue_content_id_unique',
  IssuePkey = 'issue_pkey',
}

export type IssueContributors = {
  __typename?: 'IssueContributors';
  individual: Individual;
  individualId: Scalars['bigint']['output'];
  issue: Issue;
  issueId: Scalars['bigint']['output'];
};

export type IssueContributorsAggregate = {
  __typename?: 'IssueContributorsAggregate';
  aggregate?: Maybe<IssueContributorsAggregateFields>;
  nodes: Array<IssueContributors>;
};

export type IssueContributorsAggregateBoolExp = {
  count?: InputMaybe<IssueContributorsAggregateBoolExpCount>;
};

export type IssueContributorsAggregateFields = {
  __typename?: 'IssueContributorsAggregateFields';
  avg?: Maybe<IssueContributorsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<IssueContributorsMaxFields>;
  min?: Maybe<IssueContributorsMinFields>;
  stddev?: Maybe<IssueContributorsStddevFields>;
  stddevPop?: Maybe<IssueContributorsStddevPopFields>;
  stddevSamp?: Maybe<IssueContributorsStddevSampFields>;
  sum?: Maybe<IssueContributorsSumFields>;
  varPop?: Maybe<IssueContributorsVarPopFields>;
  varSamp?: Maybe<IssueContributorsVarSampFields>;
  variance?: Maybe<IssueContributorsVarianceFields>;
};

export type IssueContributorsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<IssueContributorsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type IssueContributorsAggregateOrderBy = {
  avg?: InputMaybe<IssueContributorsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<IssueContributorsMaxOrderBy>;
  min?: InputMaybe<IssueContributorsMinOrderBy>;
  stddev?: InputMaybe<IssueContributorsStddevOrderBy>;
  stddevPop?: InputMaybe<IssueContributorsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<IssueContributorsStddevSampOrderBy>;
  sum?: InputMaybe<IssueContributorsSumOrderBy>;
  varPop?: InputMaybe<IssueContributorsVarPopOrderBy>;
  varSamp?: InputMaybe<IssueContributorsVarSampOrderBy>;
  variance?: InputMaybe<IssueContributorsVarianceOrderBy>;
};

export type IssueContributorsArrRelInsertInput = {
  data: Array<IssueContributorsInsertInput>;
  onConflict?: InputMaybe<IssueContributorsOnConflict>;
};

export type IssueContributorsAvgFields = {
  __typename?: 'IssueContributorsAvgFields';
  individualId?: Maybe<Scalars['Float']['output']>;
  issueId?: Maybe<Scalars['Float']['output']>;
};

export type IssueContributorsAvgOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  issueId?: InputMaybe<OrderBy>;
};

export type IssueContributorsBoolExp = {
  _and?: InputMaybe<Array<IssueContributorsBoolExp>>;
  _not?: InputMaybe<IssueContributorsBoolExp>;
  _or?: InputMaybe<Array<IssueContributorsBoolExp>>;
  individual?: InputMaybe<IndividualBoolExp>;
  individualId?: InputMaybe<BigintComparisonExp>;
  issue?: InputMaybe<IssueBoolExp>;
  issueId?: InputMaybe<BigintComparisonExp>;
};

export enum IssueContributorsConstraint {
  IssueContributorsPkey = 'issue_contributors_pkey',
}

export type IssueContributorsIncInput = {
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  issueId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IssueContributorsInsertInput = {
  individual?: InputMaybe<IndividualObjRelInsertInput>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  issue?: InputMaybe<IssueObjRelInsertInput>;
  issueId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IssueContributorsMaxFields = {
  __typename?: 'IssueContributorsMaxFields';
  individualId?: Maybe<Scalars['bigint']['output']>;
  issueId?: Maybe<Scalars['bigint']['output']>;
};

export type IssueContributorsMaxOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  issueId?: InputMaybe<OrderBy>;
};

export type IssueContributorsMinFields = {
  __typename?: 'IssueContributorsMinFields';
  individualId?: Maybe<Scalars['bigint']['output']>;
  issueId?: Maybe<Scalars['bigint']['output']>;
};

export type IssueContributorsMinOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  issueId?: InputMaybe<OrderBy>;
};

export type IssueContributorsMutationResponse = {
  __typename?: 'IssueContributorsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<IssueContributors>;
};

export type IssueContributorsOnConflict = {
  constraint: IssueContributorsConstraint;
  updateColumns?: Array<IssueContributorsUpdateColumn>;
  where?: InputMaybe<IssueContributorsBoolExp>;
};

export type IssueContributorsOrderBy = {
  individual?: InputMaybe<IndividualOrderBy>;
  individualId?: InputMaybe<OrderBy>;
  issue?: InputMaybe<IssueOrderBy>;
  issueId?: InputMaybe<OrderBy>;
};

export type IssueContributorsPkColumnsInput = {
  individualId: Scalars['bigint']['input'];
  issueId: Scalars['bigint']['input'];
};

export enum IssueContributorsSelectColumn {
  IndividualId = 'individualId',
  IssueId = 'issueId',
}

export type IssueContributorsSetInput = {
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  issueId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IssueContributorsStddevFields = {
  __typename?: 'IssueContributorsStddevFields';
  individualId?: Maybe<Scalars['Float']['output']>;
  issueId?: Maybe<Scalars['Float']['output']>;
};

export type IssueContributorsStddevOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  issueId?: InputMaybe<OrderBy>;
};

export type IssueContributorsStddevPopFields = {
  __typename?: 'IssueContributorsStddevPopFields';
  individualId?: Maybe<Scalars['Float']['output']>;
  issueId?: Maybe<Scalars['Float']['output']>;
};

export type IssueContributorsStddevPopOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  issueId?: InputMaybe<OrderBy>;
};

export type IssueContributorsStddevSampFields = {
  __typename?: 'IssueContributorsStddevSampFields';
  individualId?: Maybe<Scalars['Float']['output']>;
  issueId?: Maybe<Scalars['Float']['output']>;
};

export type IssueContributorsStddevSampOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  issueId?: InputMaybe<OrderBy>;
};

export type IssueContributorsStreamCursorInput = {
  initialValue: IssueContributorsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type IssueContributorsStreamCursorValueInput = {
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  issueId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IssueContributorsSumFields = {
  __typename?: 'IssueContributorsSumFields';
  individualId?: Maybe<Scalars['bigint']['output']>;
  issueId?: Maybe<Scalars['bigint']['output']>;
};

export type IssueContributorsSumOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  issueId?: InputMaybe<OrderBy>;
};

export enum IssueContributorsUpdateColumn {
  IndividualId = 'individualId',
  IssueId = 'issueId',
}

export type IssueContributorsUpdates = {
  _inc?: InputMaybe<IssueContributorsIncInput>;
  _set?: InputMaybe<IssueContributorsSetInput>;
  where: IssueContributorsBoolExp;
};

export type IssueContributorsVarPopFields = {
  __typename?: 'IssueContributorsVarPopFields';
  individualId?: Maybe<Scalars['Float']['output']>;
  issueId?: Maybe<Scalars['Float']['output']>;
};

export type IssueContributorsVarPopOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  issueId?: InputMaybe<OrderBy>;
};

export type IssueContributorsVarSampFields = {
  __typename?: 'IssueContributorsVarSampFields';
  individualId?: Maybe<Scalars['Float']['output']>;
  issueId?: Maybe<Scalars['Float']['output']>;
};

export type IssueContributorsVarSampOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  issueId?: InputMaybe<OrderBy>;
};

export type IssueContributorsVarianceFields = {
  __typename?: 'IssueContributorsVarianceFields';
  individualId?: Maybe<Scalars['Float']['output']>;
  issueId?: Maybe<Scalars['Float']['output']>;
};

export type IssueContributorsVarianceOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  issueId?: InputMaybe<OrderBy>;
};

export type IssueIncInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IssueInsertInput = {
  content?: InputMaybe<ContentObjRelInsertInput>;
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  issueContributors?: InputMaybe<IssueContributorsArrRelInsertInput>;
  issueTags?: InputMaybe<IssueTagsArrRelInsertInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IssueMaxFields = {
  __typename?: 'IssueMaxFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type IssueMaxOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IssueMinFields = {
  __typename?: 'IssueMinFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type IssueMinOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IssueMutationResponse = {
  __typename?: 'IssueMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Issue>;
};

export type IssueObjRelInsertInput = {
  data: IssueInsertInput;
  onConflict?: InputMaybe<IssueOnConflict>;
};

export type IssueOnConflict = {
  constraint: IssueConstraint;
  updateColumns?: Array<IssueUpdateColumn>;
  where?: InputMaybe<IssueBoolExp>;
};

export type IssueOrderBy = {
  content?: InputMaybe<ContentOrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  issueContributorsAggregate?: InputMaybe<IssueContributorsAggregateOrderBy>;
  issueTagsAggregate?: InputMaybe<IssueTagsAggregateOrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IssuePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum IssueSelectColumn {
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  Slug = 'slug',
  TenantId = 'tenantId',
}

export type IssueSetInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IssueStddevFields = {
  __typename?: 'IssueStddevFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type IssueStddevOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IssueStddevPopFields = {
  __typename?: 'IssueStddevPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type IssueStddevPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IssueStddevSampFields = {
  __typename?: 'IssueStddevSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type IssueStddevSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IssueStreamCursorInput = {
  initialValue: IssueStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type IssueStreamCursorValueInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IssueSumFields = {
  __typename?: 'IssueSumFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type IssueSumOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IssueTags = {
  __typename?: 'IssueTags';
  issue: Issue;
  issueId: Scalars['bigint']['output'];
  tag: Tag;
  tagId: Scalars['bigint']['output'];
};

export type IssueTagsAggregate = {
  __typename?: 'IssueTagsAggregate';
  aggregate?: Maybe<IssueTagsAggregateFields>;
  nodes: Array<IssueTags>;
};

export type IssueTagsAggregateBoolExp = {
  count?: InputMaybe<IssueTagsAggregateBoolExpCount>;
};

export type IssueTagsAggregateFields = {
  __typename?: 'IssueTagsAggregateFields';
  avg?: Maybe<IssueTagsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<IssueTagsMaxFields>;
  min?: Maybe<IssueTagsMinFields>;
  stddev?: Maybe<IssueTagsStddevFields>;
  stddevPop?: Maybe<IssueTagsStddevPopFields>;
  stddevSamp?: Maybe<IssueTagsStddevSampFields>;
  sum?: Maybe<IssueTagsSumFields>;
  varPop?: Maybe<IssueTagsVarPopFields>;
  varSamp?: Maybe<IssueTagsVarSampFields>;
  variance?: Maybe<IssueTagsVarianceFields>;
};

export type IssueTagsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<IssueTagsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type IssueTagsAggregateOrderBy = {
  avg?: InputMaybe<IssueTagsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<IssueTagsMaxOrderBy>;
  min?: InputMaybe<IssueTagsMinOrderBy>;
  stddev?: InputMaybe<IssueTagsStddevOrderBy>;
  stddevPop?: InputMaybe<IssueTagsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<IssueTagsStddevSampOrderBy>;
  sum?: InputMaybe<IssueTagsSumOrderBy>;
  varPop?: InputMaybe<IssueTagsVarPopOrderBy>;
  varSamp?: InputMaybe<IssueTagsVarSampOrderBy>;
  variance?: InputMaybe<IssueTagsVarianceOrderBy>;
};

export type IssueTagsArrRelInsertInput = {
  data: Array<IssueTagsInsertInput>;
  onConflict?: InputMaybe<IssueTagsOnConflict>;
};

export type IssueTagsAvgFields = {
  __typename?: 'IssueTagsAvgFields';
  issueId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type IssueTagsAvgOrderBy = {
  issueId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type IssueTagsBoolExp = {
  _and?: InputMaybe<Array<IssueTagsBoolExp>>;
  _not?: InputMaybe<IssueTagsBoolExp>;
  _or?: InputMaybe<Array<IssueTagsBoolExp>>;
  issue?: InputMaybe<IssueBoolExp>;
  issueId?: InputMaybe<BigintComparisonExp>;
  tag?: InputMaybe<TagBoolExp>;
  tagId?: InputMaybe<BigintComparisonExp>;
};

export enum IssueTagsConstraint {
  IssueTagsPkey = 'issue_tags_pkey',
}

export type IssueTagsIncInput = {
  issueId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IssueTagsInsertInput = {
  issue?: InputMaybe<IssueObjRelInsertInput>;
  issueId?: InputMaybe<Scalars['bigint']['input']>;
  tag?: InputMaybe<TagObjRelInsertInput>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IssueTagsMaxFields = {
  __typename?: 'IssueTagsMaxFields';
  issueId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type IssueTagsMaxOrderBy = {
  issueId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type IssueTagsMinFields = {
  __typename?: 'IssueTagsMinFields';
  issueId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type IssueTagsMinOrderBy = {
  issueId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type IssueTagsMutationResponse = {
  __typename?: 'IssueTagsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<IssueTags>;
};

export type IssueTagsOnConflict = {
  constraint: IssueTagsConstraint;
  updateColumns?: Array<IssueTagsUpdateColumn>;
  where?: InputMaybe<IssueTagsBoolExp>;
};

export type IssueTagsOrderBy = {
  issue?: InputMaybe<IssueOrderBy>;
  issueId?: InputMaybe<OrderBy>;
  tag?: InputMaybe<TagOrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type IssueTagsPkColumnsInput = {
  issueId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export enum IssueTagsSelectColumn {
  IssueId = 'issueId',
  TagId = 'tagId',
}

export type IssueTagsSetInput = {
  issueId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IssueTagsStddevFields = {
  __typename?: 'IssueTagsStddevFields';
  issueId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type IssueTagsStddevOrderBy = {
  issueId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type IssueTagsStddevPopFields = {
  __typename?: 'IssueTagsStddevPopFields';
  issueId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type IssueTagsStddevPopOrderBy = {
  issueId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type IssueTagsStddevSampFields = {
  __typename?: 'IssueTagsStddevSampFields';
  issueId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type IssueTagsStddevSampOrderBy = {
  issueId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type IssueTagsStreamCursorInput = {
  initialValue: IssueTagsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type IssueTagsStreamCursorValueInput = {
  issueId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type IssueTagsSumFields = {
  __typename?: 'IssueTagsSumFields';
  issueId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type IssueTagsSumOrderBy = {
  issueId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export enum IssueTagsUpdateColumn {
  IssueId = 'issueId',
  TagId = 'tagId',
}

export type IssueTagsUpdates = {
  _inc?: InputMaybe<IssueTagsIncInput>;
  _set?: InputMaybe<IssueTagsSetInput>;
  where: IssueTagsBoolExp;
};

export type IssueTagsVarPopFields = {
  __typename?: 'IssueTagsVarPopFields';
  issueId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type IssueTagsVarPopOrderBy = {
  issueId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type IssueTagsVarSampFields = {
  __typename?: 'IssueTagsVarSampFields';
  issueId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type IssueTagsVarSampOrderBy = {
  issueId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type IssueTagsVarianceFields = {
  __typename?: 'IssueTagsVarianceFields';
  issueId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type IssueTagsVarianceOrderBy = {
  issueId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export enum IssueUpdateColumn {
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  Slug = 'slug',
  TenantId = 'tenantId',
}

export type IssueUpdates = {
  _inc?: InputMaybe<IssueIncInput>;
  _set?: InputMaybe<IssueSetInput>;
  where: IssueBoolExp;
};

export type IssueVarPopFields = {
  __typename?: 'IssueVarPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type IssueVarPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IssueVarSampFields = {
  __typename?: 'IssueVarSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type IssueVarSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type IssueVarianceFields = {
  __typename?: 'IssueVarianceFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type IssueVarianceOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type JsonbCastExp = {
  String?: InputMaybe<StringComparisonExp>;
};

export type JsonbComparisonExp = {
  _cast?: InputMaybe<JsonbCastExp>;
  _containedIn?: InputMaybe<Scalars['jsonb']['input']>;
  _contains?: InputMaybe<Scalars['jsonb']['input']>;
  _eq?: InputMaybe<Scalars['jsonb']['input']>;
  _gt?: InputMaybe<Scalars['jsonb']['input']>;
  _gte?: InputMaybe<Scalars['jsonb']['input']>;
  _hasKey?: InputMaybe<Scalars['String']['input']>;
  _hasKeysAll?: InputMaybe<Array<Scalars['String']['input']>>;
  _hasKeysAny?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['jsonb']['input']>;
  _lte?: InputMaybe<Scalars['jsonb']['input']>;
  _neq?: InputMaybe<Scalars['jsonb']['input']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']['input']>>;
};

export type LegalUnit = {
  __typename?: 'LegalUnit';
  activityCategory?: Maybe<Scalars['String']['output']>;
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  bankCode?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  expenseItems: Array<ExpenseItem>;
  expenseItemsAggregate: ExpenseItemAggregate;
  grandFundTeams: Array<Team>;
  grandFundTeamsAggregate: TeamAggregate;
  headquartersLocation?: Maybe<Scalars['String']['output']>;
  headquartersNic?: Maybe<Scalars['String']['output']>;
  id: Scalars['bigint']['output'];
  legalCategory?: Maybe<Scalars['String']['output']>;
  legalName: Scalars['String']['output'];
  legalUnitLocations: Array<LegalUnitLocation>;
  legalUnitLocationsAggregate: LegalUnitLocationAggregate;
  legalUnits: Array<LegalUnit>;
  legalUnitsAggregate: LegalUnitAggregate;
  parent?: Maybe<LegalUnit>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  siren?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
};

export type LegalUnitExpenseItemsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type LegalUnitExpenseItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type LegalUnitGrandFundTeamsArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type LegalUnitGrandFundTeamsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type LegalUnitLegalUnitLocationsArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitLocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitLocationOrderBy>>;
  where?: InputMaybe<LegalUnitLocationBoolExp>;
};

export type LegalUnitLegalUnitLocationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitLocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitLocationOrderBy>>;
  where?: InputMaybe<LegalUnitLocationBoolExp>;
};

export type LegalUnitLegalUnitsArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type LegalUnitLegalUnitsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type LegalUnitAggregate = {
  __typename?: 'LegalUnitAggregate';
  aggregate?: Maybe<LegalUnitAggregateFields>;
  nodes: Array<LegalUnit>;
};

export type LegalUnitAggregateBoolExp = {
  count?: InputMaybe<LegalUnitAggregateBoolExpCount>;
};

export type LegalUnitAggregateFields = {
  __typename?: 'LegalUnitAggregateFields';
  avg?: Maybe<LegalUnitAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<LegalUnitMaxFields>;
  min?: Maybe<LegalUnitMinFields>;
  stddev?: Maybe<LegalUnitStddevFields>;
  stddevPop?: Maybe<LegalUnitStddevPopFields>;
  stddevSamp?: Maybe<LegalUnitStddevSampFields>;
  sum?: Maybe<LegalUnitSumFields>;
  varPop?: Maybe<LegalUnitVarPopFields>;
  varSamp?: Maybe<LegalUnitVarSampFields>;
  variance?: Maybe<LegalUnitVarianceFields>;
};

export type LegalUnitAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<LegalUnitSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LegalUnitAggregateOrderBy = {
  avg?: InputMaybe<LegalUnitAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<LegalUnitMaxOrderBy>;
  min?: InputMaybe<LegalUnitMinOrderBy>;
  stddev?: InputMaybe<LegalUnitStddevOrderBy>;
  stddevPop?: InputMaybe<LegalUnitStddevPopOrderBy>;
  stddevSamp?: InputMaybe<LegalUnitStddevSampOrderBy>;
  sum?: InputMaybe<LegalUnitSumOrderBy>;
  varPop?: InputMaybe<LegalUnitVarPopOrderBy>;
  varSamp?: InputMaybe<LegalUnitVarSampOrderBy>;
  variance?: InputMaybe<LegalUnitVarianceOrderBy>;
};

export type LegalUnitArrRelInsertInput = {
  data: Array<LegalUnitInsertInput>;
  onConflict?: InputMaybe<LegalUnitOnConflict>;
};

export type LegalUnitAvgFields = {
  __typename?: 'LegalUnitAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankCode?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type LegalUnitBoolExp = {
  _and?: InputMaybe<Array<LegalUnitBoolExp>>;
  _not?: InputMaybe<LegalUnitBoolExp>;
  _or?: InputMaybe<Array<LegalUnitBoolExp>>;
  activityCategory?: InputMaybe<StringComparisonExp>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  bankCode?: InputMaybe<IntComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  expenseItems?: InputMaybe<ExpenseItemBoolExp>;
  expenseItemsAggregate?: InputMaybe<ExpenseItemAggregateBoolExp>;
  grandFundTeams?: InputMaybe<TeamBoolExp>;
  grandFundTeamsAggregate?: InputMaybe<TeamAggregateBoolExp>;
  headquartersLocation?: InputMaybe<StringComparisonExp>;
  headquartersNic?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  legalCategory?: InputMaybe<StringComparisonExp>;
  legalName?: InputMaybe<StringComparisonExp>;
  legalUnitLocations?: InputMaybe<LegalUnitLocationBoolExp>;
  legalUnitLocationsAggregate?: InputMaybe<LegalUnitLocationAggregateBoolExp>;
  legalUnits?: InputMaybe<LegalUnitBoolExp>;
  legalUnitsAggregate?: InputMaybe<LegalUnitAggregateBoolExp>;
  parent?: InputMaybe<LegalUnitBoolExp>;
  parentId?: InputMaybe<BigintComparisonExp>;
  siren?: InputMaybe<StringComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
};

export enum LegalUnitConstraint {
  LegalUnitActorIdUnique = 'legal_unit_actor_id_unique',
  LegalUnitPkey = 'legal_unit_pkey',
}

export type LegalUnitIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankCode?: InputMaybe<Scalars['Int']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
};

export type LegalUnitInsertInput = {
  activityCategory?: InputMaybe<Scalars['String']['input']>;
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankCode?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  expenseItems?: InputMaybe<ExpenseItemArrRelInsertInput>;
  grandFundTeams?: InputMaybe<TeamArrRelInsertInput>;
  headquartersLocation?: InputMaybe<Scalars['String']['input']>;
  headquartersNic?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  legalCategory?: InputMaybe<Scalars['String']['input']>;
  legalName?: InputMaybe<Scalars['String']['input']>;
  legalUnitLocations?: InputMaybe<LegalUnitLocationArrRelInsertInput>;
  legalUnits?: InputMaybe<LegalUnitArrRelInsertInput>;
  parent?: InputMaybe<LegalUnitObjRelInsertInput>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  siren?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type LegalUnitLocation = {
  __typename?: 'LegalUnitLocation';
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  bankLocationCode?: Maybe<Scalars['Int']['output']>;
  banks: Array<Bank>;
  banksAggregate: BankAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  individual?: Maybe<Individual>;
  legalName: Scalars['String']['output'];
  legalUnit?: Maybe<LegalUnit>;
  legalUnitId?: Maybe<Scalars['bigint']['output']>;
  location?: Maybe<Location>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  locationType: Scalars['String']['output'];
  nic?: Maybe<Scalars['String']['output']>;
};

export type LegalUnitLocationBanksArgs = {
  distinctOn?: InputMaybe<Array<BankSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankOrderBy>>;
  where?: InputMaybe<BankBoolExp>;
};

export type LegalUnitLocationBanksAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankOrderBy>>;
  where?: InputMaybe<BankBoolExp>;
};

export type LegalUnitLocationAggregate = {
  __typename?: 'LegalUnitLocationAggregate';
  aggregate?: Maybe<LegalUnitLocationAggregateFields>;
  nodes: Array<LegalUnitLocation>;
};

export type LegalUnitLocationAggregateBoolExp = {
  count?: InputMaybe<LegalUnitLocationAggregateBoolExpCount>;
};

export type LegalUnitLocationAggregateFields = {
  __typename?: 'LegalUnitLocationAggregateFields';
  avg?: Maybe<LegalUnitLocationAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<LegalUnitLocationMaxFields>;
  min?: Maybe<LegalUnitLocationMinFields>;
  stddev?: Maybe<LegalUnitLocationStddevFields>;
  stddevPop?: Maybe<LegalUnitLocationStddevPopFields>;
  stddevSamp?: Maybe<LegalUnitLocationStddevSampFields>;
  sum?: Maybe<LegalUnitLocationSumFields>;
  varPop?: Maybe<LegalUnitLocationVarPopFields>;
  varSamp?: Maybe<LegalUnitLocationVarSampFields>;
  variance?: Maybe<LegalUnitLocationVarianceFields>;
};

export type LegalUnitLocationAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<LegalUnitLocationSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LegalUnitLocationAggregateOrderBy = {
  avg?: InputMaybe<LegalUnitLocationAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<LegalUnitLocationMaxOrderBy>;
  min?: InputMaybe<LegalUnitLocationMinOrderBy>;
  stddev?: InputMaybe<LegalUnitLocationStddevOrderBy>;
  stddevPop?: InputMaybe<LegalUnitLocationStddevPopOrderBy>;
  stddevSamp?: InputMaybe<LegalUnitLocationStddevSampOrderBy>;
  sum?: InputMaybe<LegalUnitLocationSumOrderBy>;
  varPop?: InputMaybe<LegalUnitLocationVarPopOrderBy>;
  varSamp?: InputMaybe<LegalUnitLocationVarSampOrderBy>;
  variance?: InputMaybe<LegalUnitLocationVarianceOrderBy>;
};

export type LegalUnitLocationArrRelInsertInput = {
  data: Array<LegalUnitLocationInsertInput>;
  onConflict?: InputMaybe<LegalUnitLocationOnConflict>;
};

export type LegalUnitLocationAvgFields = {
  __typename?: 'LegalUnitLocationAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankLocationCode?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  legalUnitId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitLocationAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LegalUnitLocationBoolExp = {
  _and?: InputMaybe<Array<LegalUnitLocationBoolExp>>;
  _not?: InputMaybe<LegalUnitLocationBoolExp>;
  _or?: InputMaybe<Array<LegalUnitLocationBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  bankLocationCode?: InputMaybe<IntComparisonExp>;
  banks?: InputMaybe<BankBoolExp>;
  banksAggregate?: InputMaybe<BankAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  individual?: InputMaybe<IndividualBoolExp>;
  legalName?: InputMaybe<StringComparisonExp>;
  legalUnit?: InputMaybe<LegalUnitBoolExp>;
  legalUnitId?: InputMaybe<BigintComparisonExp>;
  location?: InputMaybe<LocationBoolExp>;
  locationId?: InputMaybe<BigintComparisonExp>;
  locationType?: InputMaybe<StringComparisonExp>;
  nic?: InputMaybe<StringComparisonExp>;
};

export enum LegalUnitLocationConstraint {
  LegalUnitLocationActorIdUnique = 'legal_unit_location_actor_id_unique',
  LegalUnitLocationPkey = 'legal_unit_location_pkey',
}

export type LegalUnitLocationIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankLocationCode?: InputMaybe<Scalars['Int']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  legalUnitId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
};

export type LegalUnitLocationInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankLocationCode?: InputMaybe<Scalars['Int']['input']>;
  banks?: InputMaybe<BankArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individual?: InputMaybe<IndividualObjRelInsertInput>;
  legalName?: InputMaybe<Scalars['String']['input']>;
  legalUnit?: InputMaybe<LegalUnitObjRelInsertInput>;
  legalUnitId?: InputMaybe<Scalars['bigint']['input']>;
  location?: InputMaybe<LocationObjRelInsertInput>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  locationType?: InputMaybe<Scalars['String']['input']>;
  nic?: InputMaybe<Scalars['String']['input']>;
};

export type LegalUnitLocationMaxFields = {
  __typename?: 'LegalUnitLocationMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  bankLocationCode?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  legalName?: Maybe<Scalars['String']['output']>;
  legalUnitId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  locationType?: Maybe<Scalars['String']['output']>;
  nic?: Maybe<Scalars['String']['output']>;
};

export type LegalUnitLocationMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalName?: InputMaybe<OrderBy>;
  legalUnitId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  locationType?: InputMaybe<OrderBy>;
  nic?: InputMaybe<OrderBy>;
};

export type LegalUnitLocationMinFields = {
  __typename?: 'LegalUnitLocationMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  bankLocationCode?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  legalName?: Maybe<Scalars['String']['output']>;
  legalUnitId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
  locationType?: Maybe<Scalars['String']['output']>;
  nic?: Maybe<Scalars['String']['output']>;
};

export type LegalUnitLocationMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalName?: InputMaybe<OrderBy>;
  legalUnitId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
  locationType?: InputMaybe<OrderBy>;
  nic?: InputMaybe<OrderBy>;
};

export type LegalUnitLocationMutationResponse = {
  __typename?: 'LegalUnitLocationMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<LegalUnitLocation>;
};

export type LegalUnitLocationObjRelInsertInput = {
  data: LegalUnitLocationInsertInput;
  onConflict?: InputMaybe<LegalUnitLocationOnConflict>;
};

export type LegalUnitLocationOnConflict = {
  constraint: LegalUnitLocationConstraint;
  updateColumns?: Array<LegalUnitLocationUpdateColumn>;
  where?: InputMaybe<LegalUnitLocationBoolExp>;
};

export type LegalUnitLocationOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  banksAggregate?: InputMaybe<BankAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individual?: InputMaybe<IndividualOrderBy>;
  legalName?: InputMaybe<OrderBy>;
  legalUnit?: InputMaybe<LegalUnitOrderBy>;
  legalUnitId?: InputMaybe<OrderBy>;
  location?: InputMaybe<LocationOrderBy>;
  locationId?: InputMaybe<OrderBy>;
  locationType?: InputMaybe<OrderBy>;
  nic?: InputMaybe<OrderBy>;
};

export type LegalUnitLocationPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum LegalUnitLocationSelectColumn {
  ActorId = 'actorId',
  BankLocationCode = 'bankLocationCode',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  LegalName = 'legalName',
  LegalUnitId = 'legalUnitId',
  LocationId = 'locationId',
  LocationType = 'locationType',
  Nic = 'nic',
}

export type LegalUnitLocationSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankLocationCode?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  legalName?: InputMaybe<Scalars['String']['input']>;
  legalUnitId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  locationType?: InputMaybe<Scalars['String']['input']>;
  nic?: InputMaybe<Scalars['String']['input']>;
};

export type LegalUnitLocationStddevFields = {
  __typename?: 'LegalUnitLocationStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankLocationCode?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  legalUnitId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitLocationStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LegalUnitLocationStddevPopFields = {
  __typename?: 'LegalUnitLocationStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankLocationCode?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  legalUnitId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitLocationStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LegalUnitLocationStddevSampFields = {
  __typename?: 'LegalUnitLocationStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankLocationCode?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  legalUnitId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitLocationStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LegalUnitLocationStreamCursorInput = {
  initialValue: LegalUnitLocationStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type LegalUnitLocationStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankLocationCode?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  legalName?: InputMaybe<Scalars['String']['input']>;
  legalUnitId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
  locationType?: InputMaybe<Scalars['String']['input']>;
  nic?: InputMaybe<Scalars['String']['input']>;
};

export type LegalUnitLocationSumFields = {
  __typename?: 'LegalUnitLocationSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  bankLocationCode?: Maybe<Scalars['Int']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  legalUnitId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
};

export type LegalUnitLocationSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export enum LegalUnitLocationUpdateColumn {
  ActorId = 'actorId',
  BankLocationCode = 'bankLocationCode',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Id = 'id',
  LegalName = 'legalName',
  LegalUnitId = 'legalUnitId',
  LocationId = 'locationId',
  LocationType = 'locationType',
  Nic = 'nic',
}

export type LegalUnitLocationUpdates = {
  _inc?: InputMaybe<LegalUnitLocationIncInput>;
  _set?: InputMaybe<LegalUnitLocationSetInput>;
  where: LegalUnitLocationBoolExp;
};

export type LegalUnitLocationVarPopFields = {
  __typename?: 'LegalUnitLocationVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankLocationCode?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  legalUnitId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitLocationVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LegalUnitLocationVarSampFields = {
  __typename?: 'LegalUnitLocationVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankLocationCode?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  legalUnitId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitLocationVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LegalUnitLocationVarianceFields = {
  __typename?: 'LegalUnitLocationVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankLocationCode?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  legalUnitId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitLocationVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankLocationCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalUnitId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LegalUnitMaxFields = {
  __typename?: 'LegalUnitMaxFields';
  activityCategory?: Maybe<Scalars['String']['output']>;
  actorId?: Maybe<Scalars['bigint']['output']>;
  bankCode?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  headquartersLocation?: Maybe<Scalars['String']['output']>;
  headquartersNic?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  legalCategory?: Maybe<Scalars['String']['output']>;
  legalName?: Maybe<Scalars['String']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  siren?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type LegalUnitMaxOrderBy = {
  activityCategory?: InputMaybe<OrderBy>;
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  headquartersLocation?: InputMaybe<OrderBy>;
  headquartersNic?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalCategory?: InputMaybe<OrderBy>;
  legalName?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  siren?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type LegalUnitMinFields = {
  __typename?: 'LegalUnitMinFields';
  activityCategory?: Maybe<Scalars['String']['output']>;
  actorId?: Maybe<Scalars['bigint']['output']>;
  bankCode?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  headquartersLocation?: Maybe<Scalars['String']['output']>;
  headquartersNic?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  legalCategory?: Maybe<Scalars['String']['output']>;
  legalName?: Maybe<Scalars['String']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  siren?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type LegalUnitMinOrderBy = {
  activityCategory?: InputMaybe<OrderBy>;
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  headquartersLocation?: InputMaybe<OrderBy>;
  headquartersNic?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalCategory?: InputMaybe<OrderBy>;
  legalName?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  siren?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type LegalUnitMutationResponse = {
  __typename?: 'LegalUnitMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<LegalUnit>;
};

export type LegalUnitObjRelInsertInput = {
  data: LegalUnitInsertInput;
  onConflict?: InputMaybe<LegalUnitOnConflict>;
};

export type LegalUnitOnConflict = {
  constraint: LegalUnitConstraint;
  updateColumns?: Array<LegalUnitUpdateColumn>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type LegalUnitOrderBy = {
  activityCategory?: InputMaybe<OrderBy>;
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  expenseItemsAggregate?: InputMaybe<ExpenseItemAggregateOrderBy>;
  grandFundTeamsAggregate?: InputMaybe<TeamAggregateOrderBy>;
  headquartersLocation?: InputMaybe<OrderBy>;
  headquartersNic?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legalCategory?: InputMaybe<OrderBy>;
  legalName?: InputMaybe<OrderBy>;
  legalUnitLocationsAggregate?: InputMaybe<LegalUnitLocationAggregateOrderBy>;
  legalUnitsAggregate?: InputMaybe<LegalUnitAggregateOrderBy>;
  parent?: InputMaybe<LegalUnitOrderBy>;
  parentId?: InputMaybe<OrderBy>;
  siren?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type LegalUnitPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum LegalUnitSelectColumn {
  ActivityCategory = 'activityCategory',
  ActorId = 'actorId',
  BankCode = 'bankCode',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HeadquartersLocation = 'headquartersLocation',
  HeadquartersNic = 'headquartersNic',
  Id = 'id',
  LegalCategory = 'legalCategory',
  LegalName = 'legalName',
  ParentId = 'parentId',
  Siren = 'siren',
  Type = 'type',
}

export type LegalUnitSetInput = {
  activityCategory?: InputMaybe<Scalars['String']['input']>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankCode?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  headquartersLocation?: InputMaybe<Scalars['String']['input']>;
  headquartersNic?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  legalCategory?: InputMaybe<Scalars['String']['input']>;
  legalName?: InputMaybe<Scalars['String']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  siren?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type LegalUnitStddevFields = {
  __typename?: 'LegalUnitStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankCode?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type LegalUnitStddevPopFields = {
  __typename?: 'LegalUnitStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankCode?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type LegalUnitStddevSampFields = {
  __typename?: 'LegalUnitStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankCode?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type LegalUnitStreamCursorInput = {
  initialValue: LegalUnitStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type LegalUnitStreamCursorValueInput = {
  activityCategory?: InputMaybe<Scalars['String']['input']>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  bankCode?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  headquartersLocation?: InputMaybe<Scalars['String']['input']>;
  headquartersNic?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  legalCategory?: InputMaybe<Scalars['String']['input']>;
  legalName?: InputMaybe<Scalars['String']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  siren?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type LegalUnitSumFields = {
  __typename?: 'LegalUnitSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  bankCode?: Maybe<Scalars['Int']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
};

export type LegalUnitSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export enum LegalUnitUpdateColumn {
  ActivityCategory = 'activityCategory',
  ActorId = 'actorId',
  BankCode = 'bankCode',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HeadquartersLocation = 'headquartersLocation',
  HeadquartersNic = 'headquartersNic',
  Id = 'id',
  LegalCategory = 'legalCategory',
  LegalName = 'legalName',
  ParentId = 'parentId',
  Siren = 'siren',
  Type = 'type',
}

export type LegalUnitUpdates = {
  _inc?: InputMaybe<LegalUnitIncInput>;
  _set?: InputMaybe<LegalUnitSetInput>;
  where: LegalUnitBoolExp;
};

export type LegalUnitVarPopFields = {
  __typename?: 'LegalUnitVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankCode?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type LegalUnitVarSampFields = {
  __typename?: 'LegalUnitVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankCode?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type LegalUnitVarianceFields = {
  __typename?: 'LegalUnitVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  bankCode?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
};

export type LegalUnitVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  bankCode?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
};

export type LineItem = {
  __typename?: 'LineItem';
  name: Scalars['String']['output'];
  price: Scalars['Float']['output'];
  quantity: Scalars['Int']['output'];
};

export type Location = {
  __typename?: 'Location';
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  address?: Maybe<Address>;
  addressId?: Maybe<Scalars['bigint']['output']>;
  campuses: Array<Campus>;
  campusesAggregate: CampusAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  events: Array<Event>;
  eventsAggregate: EventAggregate;
  finances: Array<Finance>;
  financesAggregate: FinanceAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  individual?: Maybe<Individual>;
  legalUnitLocations: Array<LegalUnitLocation>;
  legalUnitLocationsAggregate: LegalUnitLocationAggregate;
  locationDetails: Scalars['String']['output'];
  locationImages: Array<LocationImages>;
  locationImagesAggregate: LocationImagesAggregate;
  onlineLink: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
};

export type LocationCampusesArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type LocationCampusesAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type LocationEventsArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type LocationEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type LocationFinancesArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type LocationFinancesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type LocationLegalUnitLocationsArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitLocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitLocationOrderBy>>;
  where?: InputMaybe<LegalUnitLocationBoolExp>;
};

export type LocationLegalUnitLocationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitLocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitLocationOrderBy>>;
  where?: InputMaybe<LegalUnitLocationBoolExp>;
};

export type LocationLocationImagesArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type LocationLocationImagesAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type LocationAggregate = {
  __typename?: 'LocationAggregate';
  aggregate?: Maybe<LocationAggregateFields>;
  nodes: Array<Location>;
};

export type LocationAggregateBoolExp = {
  count?: InputMaybe<LocationAggregateBoolExpCount>;
};

export type LocationAggregateFields = {
  __typename?: 'LocationAggregateFields';
  avg?: Maybe<LocationAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<LocationMaxFields>;
  min?: Maybe<LocationMinFields>;
  stddev?: Maybe<LocationStddevFields>;
  stddevPop?: Maybe<LocationStddevPopFields>;
  stddevSamp?: Maybe<LocationStddevSampFields>;
  sum?: Maybe<LocationSumFields>;
  varPop?: Maybe<LocationVarPopFields>;
  varSamp?: Maybe<LocationVarSampFields>;
  variance?: Maybe<LocationVarianceFields>;
};

export type LocationAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<LocationSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LocationAggregateOrderBy = {
  avg?: InputMaybe<LocationAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<LocationMaxOrderBy>;
  min?: InputMaybe<LocationMinOrderBy>;
  stddev?: InputMaybe<LocationStddevOrderBy>;
  stddevPop?: InputMaybe<LocationStddevPopOrderBy>;
  stddevSamp?: InputMaybe<LocationStddevSampOrderBy>;
  sum?: InputMaybe<LocationSumOrderBy>;
  varPop?: InputMaybe<LocationVarPopOrderBy>;
  varSamp?: InputMaybe<LocationVarSampOrderBy>;
  variance?: InputMaybe<LocationVarianceOrderBy>;
};

export type LocationArrRelInsertInput = {
  data: Array<LocationInsertInput>;
  onConflict?: InputMaybe<LocationOnConflict>;
};

export type LocationAvgFields = {
  __typename?: 'LocationAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  addressId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type LocationAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  addressId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type LocationBoolExp = {
  _and?: InputMaybe<Array<LocationBoolExp>>;
  _not?: InputMaybe<LocationBoolExp>;
  _or?: InputMaybe<Array<LocationBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  address?: InputMaybe<AddressBoolExp>;
  addressId?: InputMaybe<BigintComparisonExp>;
  campuses?: InputMaybe<CampusBoolExp>;
  campusesAggregate?: InputMaybe<CampusAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  events?: InputMaybe<EventBoolExp>;
  eventsAggregate?: InputMaybe<EventAggregateBoolExp>;
  finances?: InputMaybe<FinanceBoolExp>;
  financesAggregate?: InputMaybe<FinanceAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  individual?: InputMaybe<IndividualBoolExp>;
  legalUnitLocations?: InputMaybe<LegalUnitLocationBoolExp>;
  legalUnitLocationsAggregate?: InputMaybe<LegalUnitLocationAggregateBoolExp>;
  locationDetails?: InputMaybe<StringComparisonExp>;
  locationImages?: InputMaybe<LocationImagesBoolExp>;
  locationImagesAggregate?: InputMaybe<LocationImagesAggregateBoolExp>;
  onlineLink?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
};

export enum LocationConstraint {
  LocationPkey = 'location_pkey',
}

export type LocationImages = {
  __typename?: 'LocationImages';
  fileUpload: FileUpload;
  fileUploadId: Scalars['bigint']['output'];
  location: Location;
  locationId: Scalars['bigint']['output'];
};

export type LocationImagesAggregate = {
  __typename?: 'LocationImagesAggregate';
  aggregate?: Maybe<LocationImagesAggregateFields>;
  nodes: Array<LocationImages>;
};

export type LocationImagesAggregateBoolExp = {
  count?: InputMaybe<LocationImagesAggregateBoolExpCount>;
};

export type LocationImagesAggregateFields = {
  __typename?: 'LocationImagesAggregateFields';
  avg?: Maybe<LocationImagesAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<LocationImagesMaxFields>;
  min?: Maybe<LocationImagesMinFields>;
  stddev?: Maybe<LocationImagesStddevFields>;
  stddevPop?: Maybe<LocationImagesStddevPopFields>;
  stddevSamp?: Maybe<LocationImagesStddevSampFields>;
  sum?: Maybe<LocationImagesSumFields>;
  varPop?: Maybe<LocationImagesVarPopFields>;
  varSamp?: Maybe<LocationImagesVarSampFields>;
  variance?: Maybe<LocationImagesVarianceFields>;
};

export type LocationImagesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<LocationImagesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LocationImagesAggregateOrderBy = {
  avg?: InputMaybe<LocationImagesAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<LocationImagesMaxOrderBy>;
  min?: InputMaybe<LocationImagesMinOrderBy>;
  stddev?: InputMaybe<LocationImagesStddevOrderBy>;
  stddevPop?: InputMaybe<LocationImagesStddevPopOrderBy>;
  stddevSamp?: InputMaybe<LocationImagesStddevSampOrderBy>;
  sum?: InputMaybe<LocationImagesSumOrderBy>;
  varPop?: InputMaybe<LocationImagesVarPopOrderBy>;
  varSamp?: InputMaybe<LocationImagesVarSampOrderBy>;
  variance?: InputMaybe<LocationImagesVarianceOrderBy>;
};

export type LocationImagesArrRelInsertInput = {
  data: Array<LocationImagesInsertInput>;
  onConflict?: InputMaybe<LocationImagesOnConflict>;
};

export type LocationImagesAvgFields = {
  __typename?: 'LocationImagesAvgFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LocationImagesAvgOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesBoolExp = {
  _and?: InputMaybe<Array<LocationImagesBoolExp>>;
  _not?: InputMaybe<LocationImagesBoolExp>;
  _or?: InputMaybe<Array<LocationImagesBoolExp>>;
  fileUpload?: InputMaybe<FileUploadBoolExp>;
  fileUploadId?: InputMaybe<BigintComparisonExp>;
  location?: InputMaybe<LocationBoolExp>;
  locationId?: InputMaybe<BigintComparisonExp>;
};

export enum LocationImagesConstraint {
  LocationImagesPkey = 'location_images_pkey',
}

export type LocationImagesIncInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
};

export type LocationImagesInsertInput = {
  fileUpload?: InputMaybe<FileUploadObjRelInsertInput>;
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  location?: InputMaybe<LocationObjRelInsertInput>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
};

export type LocationImagesMaxFields = {
  __typename?: 'LocationImagesMaxFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
};

export type LocationImagesMaxOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesMinFields = {
  __typename?: 'LocationImagesMinFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
};

export type LocationImagesMinOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesMutationResponse = {
  __typename?: 'LocationImagesMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<LocationImages>;
};

export type LocationImagesOnConflict = {
  constraint: LocationImagesConstraint;
  updateColumns?: Array<LocationImagesUpdateColumn>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type LocationImagesOrderBy = {
  fileUpload?: InputMaybe<FileUploadOrderBy>;
  fileUploadId?: InputMaybe<OrderBy>;
  location?: InputMaybe<LocationOrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesPkColumnsInput = {
  fileUploadId: Scalars['bigint']['input'];
  locationId: Scalars['bigint']['input'];
};

export enum LocationImagesSelectColumn {
  FileUploadId = 'fileUploadId',
  LocationId = 'locationId',
}

export type LocationImagesSetInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
};

export type LocationImagesStddevFields = {
  __typename?: 'LocationImagesStddevFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LocationImagesStddevOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesStddevPopFields = {
  __typename?: 'LocationImagesStddevPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LocationImagesStddevPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesStddevSampFields = {
  __typename?: 'LocationImagesStddevSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LocationImagesStddevSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesStreamCursorInput = {
  initialValue: LocationImagesStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type LocationImagesStreamCursorValueInput = {
  fileUploadId?: InputMaybe<Scalars['bigint']['input']>;
  locationId?: InputMaybe<Scalars['bigint']['input']>;
};

export type LocationImagesSumFields = {
  __typename?: 'LocationImagesSumFields';
  fileUploadId?: Maybe<Scalars['bigint']['output']>;
  locationId?: Maybe<Scalars['bigint']['output']>;
};

export type LocationImagesSumOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export enum LocationImagesUpdateColumn {
  FileUploadId = 'fileUploadId',
  LocationId = 'locationId',
}

export type LocationImagesUpdates = {
  _inc?: InputMaybe<LocationImagesIncInput>;
  _set?: InputMaybe<LocationImagesSetInput>;
  where: LocationImagesBoolExp;
};

export type LocationImagesVarPopFields = {
  __typename?: 'LocationImagesVarPopFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LocationImagesVarPopOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesVarSampFields = {
  __typename?: 'LocationImagesVarSampFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LocationImagesVarSampOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationImagesVarianceFields = {
  __typename?: 'LocationImagesVarianceFields';
  fileUploadId?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

export type LocationImagesVarianceOrderBy = {
  fileUploadId?: InputMaybe<OrderBy>;
  locationId?: InputMaybe<OrderBy>;
};

export type LocationIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  addressId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type LocationInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  address?: InputMaybe<AddressObjRelInsertInput>;
  addressId?: InputMaybe<Scalars['bigint']['input']>;
  campuses?: InputMaybe<CampusArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  events?: InputMaybe<EventArrRelInsertInput>;
  finances?: InputMaybe<FinanceArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individual?: InputMaybe<IndividualObjRelInsertInput>;
  legalUnitLocations?: InputMaybe<LegalUnitLocationArrRelInsertInput>;
  locationDetails?: InputMaybe<Scalars['String']['input']>;
  locationImages?: InputMaybe<LocationImagesArrRelInsertInput>;
  onlineLink?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type LocationMaxFields = {
  __typename?: 'LocationMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  addressId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  locationDetails?: Maybe<Scalars['String']['output']>;
  onlineLink?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type LocationMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  addressId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationDetails?: InputMaybe<OrderBy>;
  onlineLink?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type LocationMinFields = {
  __typename?: 'LocationMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  addressId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  locationDetails?: Maybe<Scalars['String']['output']>;
  onlineLink?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type LocationMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  addressId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  locationDetails?: InputMaybe<OrderBy>;
  onlineLink?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type LocationMutationResponse = {
  __typename?: 'LocationMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Location>;
};

export type LocationObjRelInsertInput = {
  data: LocationInsertInput;
  onConflict?: InputMaybe<LocationOnConflict>;
};

export type LocationOnConflict = {
  constraint: LocationConstraint;
  updateColumns?: Array<LocationUpdateColumn>;
  where?: InputMaybe<LocationBoolExp>;
};

export type LocationOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  address?: InputMaybe<AddressOrderBy>;
  addressId?: InputMaybe<OrderBy>;
  campusesAggregate?: InputMaybe<CampusAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventsAggregate?: InputMaybe<EventAggregateOrderBy>;
  financesAggregate?: InputMaybe<FinanceAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individual?: InputMaybe<IndividualOrderBy>;
  legalUnitLocationsAggregate?: InputMaybe<LegalUnitLocationAggregateOrderBy>;
  locationDetails?: InputMaybe<OrderBy>;
  locationImagesAggregate?: InputMaybe<LocationImagesAggregateOrderBy>;
  onlineLink?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type LocationPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum LocationSelectColumn {
  ActorId = 'actorId',
  AddressId = 'addressId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  LocationDetails = 'locationDetails',
  OnlineLink = 'onlineLink',
  TenantId = 'tenantId',
  Type = 'type',
}

export type LocationSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  addressId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  locationDetails?: InputMaybe<Scalars['String']['input']>;
  onlineLink?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type LocationStddevFields = {
  __typename?: 'LocationStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  addressId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type LocationStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  addressId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type LocationStddevPopFields = {
  __typename?: 'LocationStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  addressId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type LocationStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  addressId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type LocationStddevSampFields = {
  __typename?: 'LocationStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  addressId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type LocationStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  addressId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type LocationStreamCursorInput = {
  initialValue: LocationStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type LocationStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  addressId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  locationDetails?: InputMaybe<Scalars['String']['input']>;
  onlineLink?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type LocationSumFields = {
  __typename?: 'LocationSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  addressId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type LocationSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  addressId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum LocationUpdateColumn {
  ActorId = 'actorId',
  AddressId = 'addressId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  LocationDetails = 'locationDetails',
  OnlineLink = 'onlineLink',
  TenantId = 'tenantId',
  Type = 'type',
}

export type LocationUpdates = {
  _inc?: InputMaybe<LocationIncInput>;
  _set?: InputMaybe<LocationSetInput>;
  where: LocationBoolExp;
};

export type LocationVarPopFields = {
  __typename?: 'LocationVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  addressId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type LocationVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  addressId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type LocationVarSampFields = {
  __typename?: 'LocationVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  addressId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type LocationVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  addressId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type LocationVarianceFields = {
  __typename?: 'LocationVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  addressId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type LocationVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  addressId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Log = {
  __typename?: 'Log';
  context: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  diff: Scalars['jsonb']['output'];
  entityId: Scalars['bigint']['output'];
  entityName: Scalars['String']['output'];
  event?: Maybe<Event>;
  eventType: Scalars['String']['output'];
  id: Scalars['String']['output'];
  individual?: Maybe<Individual>;
  note: Scalars['String']['output'];
  team?: Maybe<Team>;
  tenant?: Maybe<Tenant>;
};

export type LoginInput = {
  password: Scalars['String']['input'];
  username: Scalars['String']['input'];
};

export type Mission = {
  __typename?: 'Mission';
  color: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  eventManageId?: Maybe<Scalars['bigint']['output']>;
  eventOrganize?: Maybe<EventOrganize>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isAutoAcceptingMembers: Scalars['Boolean']['output'];
  isTemplate: Scalars['Boolean']['output'];
  missionJoins: Array<MissionJoin>;
  missionJoinsAggregate: MissionJoinAggregate;
  name: Scalars['String']['output'];
  pointsMaximum: Scalars['smallint']['output'];
  pointsMinimum: Scalars['smallint']['output'];
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  quantity: Scalars['smallint']['output'];
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type MissionMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type MissionMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type MissionAggregate = {
  __typename?: 'MissionAggregate';
  aggregate?: Maybe<MissionAggregateFields>;
  nodes: Array<Mission>;
};

export type MissionAggregateBoolExp = {
  bool_and?: InputMaybe<MissionAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<MissionAggregateBoolExpBool_Or>;
  count?: InputMaybe<MissionAggregateBoolExpCount>;
};

export type MissionAggregateFields = {
  __typename?: 'MissionAggregateFields';
  avg?: Maybe<MissionAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<MissionMaxFields>;
  min?: Maybe<MissionMinFields>;
  stddev?: Maybe<MissionStddevFields>;
  stddevPop?: Maybe<MissionStddevPopFields>;
  stddevSamp?: Maybe<MissionStddevSampFields>;
  sum?: Maybe<MissionSumFields>;
  varPop?: Maybe<MissionVarPopFields>;
  varSamp?: Maybe<MissionVarSampFields>;
  variance?: Maybe<MissionVarianceFields>;
};

export type MissionAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<MissionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MissionAggregateOrderBy = {
  avg?: InputMaybe<MissionAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<MissionMaxOrderBy>;
  min?: InputMaybe<MissionMinOrderBy>;
  stddev?: InputMaybe<MissionStddevOrderBy>;
  stddevPop?: InputMaybe<MissionStddevPopOrderBy>;
  stddevSamp?: InputMaybe<MissionStddevSampOrderBy>;
  sum?: InputMaybe<MissionSumOrderBy>;
  varPop?: InputMaybe<MissionVarPopOrderBy>;
  varSamp?: InputMaybe<MissionVarSampOrderBy>;
  variance?: InputMaybe<MissionVarianceOrderBy>;
};

export type MissionArrRelInsertInput = {
  data: Array<MissionInsertInput>;
  onConflict?: InputMaybe<MissionOnConflict>;
};

export type MissionAvgFields = {
  __typename?: 'MissionAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventManageId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pointsMaximum?: Maybe<Scalars['Float']['output']>;
  pointsMinimum?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type MissionAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventManageId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionBoolExp = {
  _and?: InputMaybe<Array<MissionBoolExp>>;
  _not?: InputMaybe<MissionBoolExp>;
  _or?: InputMaybe<Array<MissionBoolExp>>;
  color?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  eventManageId?: InputMaybe<BigintComparisonExp>;
  eventOrganize?: InputMaybe<EventOrganizeBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isAutoAcceptingMembers?: InputMaybe<BooleanComparisonExp>;
  isTemplate?: InputMaybe<BooleanComparisonExp>;
  missionJoins?: InputMaybe<MissionJoinBoolExp>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  name?: InputMaybe<StringComparisonExp>;
  pointsMaximum?: InputMaybe<SmallintComparisonExp>;
  pointsMinimum?: InputMaybe<SmallintComparisonExp>;
  project?: InputMaybe<ProjectBoolExp>;
  projectId?: InputMaybe<BigintComparisonExp>;
  quantity?: InputMaybe<SmallintComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum MissionConstraint {
  MissionPkey = 'mission_pkey',
}

export type MissionIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventManageId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  pointsMaximum?: InputMaybe<Scalars['smallint']['input']>;
  pointsMinimum?: InputMaybe<Scalars['smallint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionInsertInput = {
  color?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventManageId?: InputMaybe<Scalars['bigint']['input']>;
  eventOrganize?: InputMaybe<EventOrganizeObjRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAutoAcceptingMembers?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  missionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  pointsMaximum?: InputMaybe<Scalars['smallint']['input']>;
  pointsMinimum?: InputMaybe<Scalars['smallint']['input']>;
  project?: InputMaybe<ProjectObjRelInsertInput>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionJoin = {
  __typename?: 'MissionJoin';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventJoin?: Maybe<EventJoin>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  eventJoins: Array<EventJoin>;
  eventJoinsAggregate: EventJoinAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  individual?: Maybe<Individual>;
  joinedBy: User;
  joinedById: Scalars['bigint']['output'];
  mission: Mission;
  missionId: Scalars['bigint']['output'];
  points?: Maybe<Scalars['smallint']['output']>;
  pointsProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  pointsProcessedById?: Maybe<Scalars['bigint']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedBy?: Maybe<Individual>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  state: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type MissionJoinEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type MissionJoinEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type MissionJoinAggregate = {
  __typename?: 'MissionJoinAggregate';
  aggregate?: Maybe<MissionJoinAggregateFields>;
  nodes: Array<MissionJoin>;
};

export type MissionJoinAggregateBoolExp = {
  count?: InputMaybe<MissionJoinAggregateBoolExpCount>;
};

export type MissionJoinAggregateFields = {
  __typename?: 'MissionJoinAggregateFields';
  avg?: Maybe<MissionJoinAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<MissionJoinMaxFields>;
  min?: Maybe<MissionJoinMinFields>;
  stddev?: Maybe<MissionJoinStddevFields>;
  stddevPop?: Maybe<MissionJoinStddevPopFields>;
  stddevSamp?: Maybe<MissionJoinStddevSampFields>;
  sum?: Maybe<MissionJoinSumFields>;
  varPop?: Maybe<MissionJoinVarPopFields>;
  varSamp?: Maybe<MissionJoinVarSampFields>;
  variance?: Maybe<MissionJoinVarianceFields>;
};

export type MissionJoinAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<MissionJoinSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MissionJoinAggregateOrderBy = {
  avg?: InputMaybe<MissionJoinAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<MissionJoinMaxOrderBy>;
  min?: InputMaybe<MissionJoinMinOrderBy>;
  stddev?: InputMaybe<MissionJoinStddevOrderBy>;
  stddevPop?: InputMaybe<MissionJoinStddevPopOrderBy>;
  stddevSamp?: InputMaybe<MissionJoinStddevSampOrderBy>;
  sum?: InputMaybe<MissionJoinSumOrderBy>;
  varPop?: InputMaybe<MissionJoinVarPopOrderBy>;
  varSamp?: InputMaybe<MissionJoinVarSampOrderBy>;
  variance?: InputMaybe<MissionJoinVarianceOrderBy>;
};

export type MissionJoinArrRelInsertInput = {
  data: Array<MissionJoinInsertInput>;
  onConflict?: InputMaybe<MissionJoinOnConflict>;
};

export type MissionJoinAvgFields = {
  __typename?: 'MissionJoinAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type MissionJoinAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionJoinBoolExp = {
  _and?: InputMaybe<Array<MissionJoinBoolExp>>;
  _not?: InputMaybe<MissionJoinBoolExp>;
  _or?: InputMaybe<Array<MissionJoinBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  eventJoin?: InputMaybe<EventJoinBoolExp>;
  eventJoinId?: InputMaybe<BigintComparisonExp>;
  eventJoins?: InputMaybe<EventJoinBoolExp>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  individual?: InputMaybe<IndividualBoolExp>;
  joinedBy?: InputMaybe<UserBoolExp>;
  joinedById?: InputMaybe<BigintComparisonExp>;
  mission?: InputMaybe<MissionBoolExp>;
  missionId?: InputMaybe<BigintComparisonExp>;
  points?: InputMaybe<SmallintComparisonExp>;
  pointsProcessedAt?: InputMaybe<TimestamptzComparisonExp>;
  pointsProcessedById?: InputMaybe<BigintComparisonExp>;
  processedAt?: InputMaybe<TimestamptzComparisonExp>;
  processedBy?: InputMaybe<IndividualBoolExp>;
  processedById?: InputMaybe<BigintComparisonExp>;
  project?: InputMaybe<ProjectBoolExp>;
  projectId?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum MissionJoinConstraint {
  MissionJoinEventJoinIdUnique = 'mission_join_event_join_id_unique',
  MissionJoinPkey = 'mission_join_pkey',
}

export type MissionJoinIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  missionId?: InputMaybe<Scalars['bigint']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  pointsProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionJoinInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventJoin?: InputMaybe<EventJoinObjRelInsertInput>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  eventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individual?: InputMaybe<IndividualObjRelInsertInput>;
  joinedBy?: InputMaybe<UserObjRelInsertInput>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  mission?: InputMaybe<MissionObjRelInsertInput>;
  missionId?: InputMaybe<Scalars['bigint']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  pointsProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  pointsProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedBy?: InputMaybe<IndividualObjRelInsertInput>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<ProjectObjRelInsertInput>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionJoinMaxFields = {
  __typename?: 'MissionJoinMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  missionId?: Maybe<Scalars['bigint']['output']>;
  points?: Maybe<Scalars['smallint']['output']>;
  pointsProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  pointsProcessedById?: Maybe<Scalars['bigint']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type MissionJoinMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedAt?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionJoinMinFields = {
  __typename?: 'MissionJoinMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  missionId?: Maybe<Scalars['bigint']['output']>;
  points?: Maybe<Scalars['smallint']['output']>;
  pointsProcessedAt?: Maybe<Scalars['timestamptz']['output']>;
  pointsProcessedById?: Maybe<Scalars['bigint']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type MissionJoinMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedAt?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionJoinMutationResponse = {
  __typename?: 'MissionJoinMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<MissionJoin>;
};

export type MissionJoinObjRelInsertInput = {
  data: MissionJoinInsertInput;
  onConflict?: InputMaybe<MissionJoinOnConflict>;
};

export type MissionJoinOnConflict = {
  constraint: MissionJoinConstraint;
  updateColumns?: Array<MissionJoinUpdateColumn>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type MissionJoinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventJoin?: InputMaybe<EventJoinOrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individual?: InputMaybe<IndividualOrderBy>;
  joinedBy?: InputMaybe<UserOrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  mission?: InputMaybe<MissionOrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedAt?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedBy?: InputMaybe<IndividualOrderBy>;
  processedById?: InputMaybe<OrderBy>;
  project?: InputMaybe<ProjectOrderBy>;
  projectId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionJoinPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum MissionJoinSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventJoinId = 'eventJoinId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  JoinedById = 'joinedById',
  MissionId = 'missionId',
  Points = 'points',
  PointsProcessedAt = 'pointsProcessedAt',
  PointsProcessedById = 'pointsProcessedById',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  ProjectId = 'projectId',
  State = 'state',
  TenantId = 'tenantId',
}

export type MissionJoinSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  missionId?: InputMaybe<Scalars['bigint']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  pointsProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  pointsProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionJoinStddevFields = {
  __typename?: 'MissionJoinStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type MissionJoinStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionJoinStddevPopFields = {
  __typename?: 'MissionJoinStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type MissionJoinStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionJoinStddevSampFields = {
  __typename?: 'MissionJoinStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type MissionJoinStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionJoinStreamCursorInput = {
  initialValue: MissionJoinStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type MissionJoinStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventJoinId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  missionId?: InputMaybe<Scalars['bigint']['input']>;
  points?: InputMaybe<Scalars['smallint']['input']>;
  pointsProcessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  pointsProcessedById?: InputMaybe<Scalars['bigint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionJoinSumFields = {
  __typename?: 'MissionJoinSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventJoinId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  missionId?: Maybe<Scalars['bigint']['output']>;
  points?: Maybe<Scalars['smallint']['output']>;
  pointsProcessedById?: Maybe<Scalars['bigint']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type MissionJoinSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum MissionJoinUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventJoinId = 'eventJoinId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  JoinedById = 'joinedById',
  MissionId = 'missionId',
  Points = 'points',
  PointsProcessedAt = 'pointsProcessedAt',
  PointsProcessedById = 'pointsProcessedById',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  ProjectId = 'projectId',
  State = 'state',
  TenantId = 'tenantId',
}

export type MissionJoinUpdates = {
  _inc?: InputMaybe<MissionJoinIncInput>;
  _set?: InputMaybe<MissionJoinSetInput>;
  where: MissionJoinBoolExp;
};

export type MissionJoinVarPopFields = {
  __typename?: 'MissionJoinVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type MissionJoinVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionJoinVarSampFields = {
  __typename?: 'MissionJoinVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type MissionJoinVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionJoinVarianceFields = {
  __typename?: 'MissionJoinVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventJoinId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  missionId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  pointsProcessedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type MissionJoinVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventJoinId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  missionId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  pointsProcessedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionMaxFields = {
  __typename?: 'MissionMaxFields';
  color?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventManageId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pointsMaximum?: Maybe<Scalars['smallint']['output']>;
  pointsMinimum?: Maybe<Scalars['smallint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  quantity?: Maybe<Scalars['smallint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type MissionMaxOrderBy = {
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventManageId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionMinFields = {
  __typename?: 'MissionMinFields';
  color?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  eventManageId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pointsMaximum?: Maybe<Scalars['smallint']['output']>;
  pointsMinimum?: Maybe<Scalars['smallint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  quantity?: Maybe<Scalars['smallint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type MissionMinOrderBy = {
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventManageId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionMutationResponse = {
  __typename?: 'MissionMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Mission>;
};

export type MissionObjRelInsertInput = {
  data: MissionInsertInput;
  onConflict?: InputMaybe<MissionOnConflict>;
};

export type MissionOnConflict = {
  constraint: MissionConstraint;
  updateColumns?: Array<MissionUpdateColumn>;
  where?: InputMaybe<MissionBoolExp>;
};

export type MissionOrderBy = {
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventManageId?: InputMaybe<OrderBy>;
  eventOrganize?: InputMaybe<EventOrganizeOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isAutoAcceptingMembers?: InputMaybe<OrderBy>;
  isTemplate?: InputMaybe<OrderBy>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  name?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  project?: InputMaybe<ProjectOrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum MissionSelectColumn {
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventManageId = 'eventManageId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsAutoAcceptingMembers = 'isAutoAcceptingMembers',
  IsTemplate = 'isTemplate',
  Name = 'name',
  PointsMaximum = 'pointsMaximum',
  PointsMinimum = 'pointsMinimum',
  ProjectId = 'projectId',
  Quantity = 'quantity',
  TeamId = 'teamId',
  TenantId = 'tenantId',
}

export enum MissionSelectColumnMissionAggregateBoolExpBool_AndArgumentsColumns {
  IsAutoAcceptingMembers = 'isAutoAcceptingMembers',
  IsTemplate = 'isTemplate',
}

export enum MissionSelectColumnMissionAggregateBoolExpBool_OrArgumentsColumns {
  IsAutoAcceptingMembers = 'isAutoAcceptingMembers',
  IsTemplate = 'isTemplate',
}

export type MissionSetInput = {
  color?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventManageId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAutoAcceptingMembers?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pointsMaximum?: InputMaybe<Scalars['smallint']['input']>;
  pointsMinimum?: InputMaybe<Scalars['smallint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionStddevFields = {
  __typename?: 'MissionStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventManageId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pointsMaximum?: Maybe<Scalars['Float']['output']>;
  pointsMinimum?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type MissionStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventManageId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionStddevPopFields = {
  __typename?: 'MissionStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventManageId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pointsMaximum?: Maybe<Scalars['Float']['output']>;
  pointsMinimum?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type MissionStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventManageId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionStddevSampFields = {
  __typename?: 'MissionStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventManageId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pointsMaximum?: Maybe<Scalars['Float']['output']>;
  pointsMinimum?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type MissionStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventManageId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionStreamCursorInput = {
  initialValue: MissionStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type MissionStreamCursorValueInput = {
  color?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventManageId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isAutoAcceptingMembers?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pointsMaximum?: InputMaybe<Scalars['smallint']['input']>;
  pointsMinimum?: InputMaybe<Scalars['smallint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  quantity?: InputMaybe<Scalars['smallint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type MissionSumFields = {
  __typename?: 'MissionSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventManageId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  pointsMaximum?: Maybe<Scalars['smallint']['output']>;
  pointsMinimum?: Maybe<Scalars['smallint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  quantity?: Maybe<Scalars['smallint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type MissionSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventManageId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum MissionUpdateColumn {
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventManageId = 'eventManageId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsAutoAcceptingMembers = 'isAutoAcceptingMembers',
  IsTemplate = 'isTemplate',
  Name = 'name',
  PointsMaximum = 'pointsMaximum',
  PointsMinimum = 'pointsMinimum',
  ProjectId = 'projectId',
  Quantity = 'quantity',
  TeamId = 'teamId',
  TenantId = 'tenantId',
}

export type MissionUpdates = {
  _inc?: InputMaybe<MissionIncInput>;
  _set?: InputMaybe<MissionSetInput>;
  where: MissionBoolExp;
};

export type MissionVarPopFields = {
  __typename?: 'MissionVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventManageId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pointsMaximum?: Maybe<Scalars['Float']['output']>;
  pointsMinimum?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type MissionVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventManageId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionVarSampFields = {
  __typename?: 'MissionVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventManageId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pointsMaximum?: Maybe<Scalars['Float']['output']>;
  pointsMinimum?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type MissionVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventManageId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type MissionVarianceFields = {
  __typename?: 'MissionVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  eventManageId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pointsMaximum?: Maybe<Scalars['Float']['output']>;
  pointsMinimum?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type MissionVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  eventManageId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  pointsMaximum?: InputMaybe<OrderBy>;
  pointsMinimum?: InputMaybe<OrderBy>;
  projectId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Mutation = {
  __typename?: 'Mutation';
  deleteAccount?: Maybe<AccountMutationResponse>;
  deleteAccountByPk?: Maybe<Account>;
  deleteAction?: Maybe<ActionMutationResponse>;
  deleteActionByPk?: Maybe<Action>;
  deleteActor?: Maybe<ActorMutationResponse>;
  deleteActorByPk?: Maybe<Actor>;
  deleteActorImage?: Maybe<ActorImageMutationResponse>;
  deleteActorImageByPk?: Maybe<ActorImage>;
  deleteActorTags?: Maybe<ActorTagsMutationResponse>;
  deleteActorTagsByPk?: Maybe<ActorTags>;
  deleteAddress?: Maybe<AddressMutationResponse>;
  deleteAddressByPk?: Maybe<Address>;
  deleteBank?: Maybe<BankMutationResponse>;
  deleteBankByPk?: Maybe<Bank>;
  deleteBot?: Maybe<BotMutationResponse>;
  deleteBotByPk?: Maybe<Bot>;
  deleteCampus?: Maybe<CampusMutationResponse>;
  deleteCampusByPk?: Maybe<Campus>;
  deleteCampusCluster?: Maybe<CampusClusterMutationResponse>;
  deleteCampusClusterByPk?: Maybe<CampusCluster>;
  deleteCanteen?: Maybe<CanteenMutationResponse>;
  deleteCanteenByPk?: Maybe<Canteen>;
  deleteCanteenFood?: Maybe<CanteenFoodMutationResponse>;
  deleteCanteenFoodByPk?: Maybe<CanteenFood>;
  deleteCanteenMenu?: Maybe<CanteenMenuMutationResponse>;
  deleteCanteenMenuByPk?: Maybe<CanteenMenu>;
  deleteClassGroup?: Maybe<ClassGroupMutationResponse>;
  deleteClassGroupByPk?: Maybe<ClassGroup>;
  deleteClassGroupTeacher?: Maybe<ClassGroupTeacherMutationResponse>;
  deleteClassGroupTeacherByPk?: Maybe<ClassGroupTeacher>;
  deleteClassGroupTeacherSubjects?: Maybe<ClassGroupTeacherSubjectsMutationResponse>;
  deleteClassGroupTeacherSubjectsByPk?: Maybe<ClassGroupTeacherSubjects>;
  deleteCohort?: Maybe<CohortMutationResponse>;
  deleteCohortByPk?: Maybe<Cohort>;
  deleteContent?: Maybe<ContentMutationResponse>;
  deleteContentAttachments?: Maybe<ContentAttachmentsMutationResponse>;
  deleteContentAttachmentsByPk?: Maybe<ContentAttachments>;
  deleteContentByPk?: Maybe<Content>;
  deleteDocument?: Maybe<DocumentMutationResponse>;
  deleteDocumentByPk?: Maybe<Document>;
  deleteEvent?: Maybe<EventMutationResponse>;
  deleteEventApproval?: Maybe<EventApprovalMutationResponse>;
  deleteEventApprovalByPk?: Maybe<EventApproval>;
  deleteEventApprovalStep?: Maybe<EventApprovalStepMutationResponse>;
  deleteEventApprovalStepByPk?: Maybe<EventApprovalStep>;
  deleteEventApprovalStepNotifiees?: Maybe<EventApprovalStepNotifieesMutationResponse>;
  deleteEventApprovalStepNotifieesByPk?: Maybe<EventApprovalStepNotifiees>;
  deleteEventApprovalStepValidators?: Maybe<EventApprovalStepValidatorsMutationResponse>;
  deleteEventApprovalStepValidatorsByPk?: Maybe<EventApprovalStepValidators>;
  deleteEventByPk?: Maybe<Event>;
  deleteEventFavorite?: Maybe<EventFavoriteMutationResponse>;
  deleteEventFavoriteByPk?: Maybe<EventFavorite>;
  deleteEventJoin?: Maybe<EventJoinMutationResponse>;
  deleteEventJoinByPk?: Maybe<EventJoin>;
  deleteEventOrganize?: Maybe<EventOrganizeMutationResponse>;
  deleteEventOrganizeByPk?: Maybe<EventOrganize>;
  deleteEventSupervisor?: Maybe<EventSupervisorMutationResponse>;
  deleteEventSupervisorByPk?: Maybe<EventSupervisor>;
  deleteEventTags?: Maybe<EventTagsMutationResponse>;
  deleteEventTagsByPk?: Maybe<EventTags>;
  deleteExpense?: Maybe<ExpenseMutationResponse>;
  deleteExpenseByPk?: Maybe<Expense>;
  deleteExpenseItem?: Maybe<ExpenseItemMutationResponse>;
  deleteExpenseItemAttachments?: Maybe<ExpenseItemAttachmentsMutationResponse>;
  deleteExpenseItemAttachmentsByPk?: Maybe<ExpenseItemAttachments>;
  deleteExpenseItemByPk?: Maybe<ExpenseItem>;
  deleteFavorite?: Maybe<FavoriteMutationResponse>;
  deleteFavoriteByPk?: Maybe<Favorite>;
  deleteFileUpload?: Maybe<FileUploadMutationResponse>;
  deleteFileUploadByPk?: Maybe<FileUpload>;
  deleteFinance?: Maybe<FinanceMutationResponse>;
  deleteFinanceAttachments?: Maybe<FinanceAttachmentsMutationResponse>;
  deleteFinanceAttachmentsByPk?: Maybe<FinanceAttachments>;
  deleteFinanceByPk?: Maybe<Finance>;
  deleteFinanceTags?: Maybe<FinanceTagsMutationResponse>;
  deleteFinanceTagsByPk?: Maybe<FinanceTags>;
  deleteFollow?: Maybe<FollowMutationResponse>;
  deleteFollowByPk?: Maybe<Follow>;
  deleteForm?: Maybe<FormMutationResponse>;
  deleteFormByPk?: Maybe<Form>;
  deleteFormSubmission?: Maybe<FormSubmissionMutationResponse>;
  deleteFormSubmissionAttachments?: Maybe<FormSubmissionAttachmentsMutationResponse>;
  deleteFormSubmissionAttachmentsByPk?: Maybe<FormSubmissionAttachments>;
  deleteFormSubmissionByPk?: Maybe<FormSubmission>;
  deleteGrant?: Maybe<GrantMutationResponse>;
  deleteGrantAllocate?: Maybe<GrantAllocateMutationResponse>;
  deleteGrantAllocateAttachments?: Maybe<GrantAllocateAttachmentsMutationResponse>;
  deleteGrantAllocateAttachmentsByPk?: Maybe<GrantAllocateAttachments>;
  deleteGrantAllocateByPk?: Maybe<GrantAllocate>;
  deleteGrantAttachments?: Maybe<GrantAttachmentsMutationResponse>;
  deleteGrantAttachmentsByPk?: Maybe<GrantAttachments>;
  deleteGrantByPk?: Maybe<Grant>;
  deleteIndividual?: Maybe<IndividualMutationResponse>;
  deleteIndividualByPk?: Maybe<Individual>;
  deleteIssue?: Maybe<IssueMutationResponse>;
  deleteIssueByPk?: Maybe<Issue>;
  deleteIssueContributors?: Maybe<IssueContributorsMutationResponse>;
  deleteIssueContributorsByPk?: Maybe<IssueContributors>;
  deleteIssueTags?: Maybe<IssueTagsMutationResponse>;
  deleteIssueTagsByPk?: Maybe<IssueTags>;
  deleteLegalUnit?: Maybe<LegalUnitMutationResponse>;
  deleteLegalUnitByPk?: Maybe<LegalUnit>;
  deleteLegalUnitLocation?: Maybe<LegalUnitLocationMutationResponse>;
  deleteLegalUnitLocationByPk?: Maybe<LegalUnitLocation>;
  deleteLocation?: Maybe<LocationMutationResponse>;
  deleteLocationByPk?: Maybe<Location>;
  deleteLocationImages?: Maybe<LocationImagesMutationResponse>;
  deleteLocationImagesByPk?: Maybe<LocationImages>;
  deleteMission?: Maybe<MissionMutationResponse>;
  deleteMissionByPk?: Maybe<Mission>;
  deleteMissionJoin?: Maybe<MissionJoinMutationResponse>;
  deleteMissionJoinByPk?: Maybe<MissionJoin>;
  deletePole?: Maybe<PoleMutationResponse>;
  deletePoleByPk?: Maybe<Pole>;
  deleteProject?: Maybe<ProjectMutationResponse>;
  deleteProjectByPk?: Maybe<Project>;
  deleteProjectSupervisors?: Maybe<ProjectSupervisorsMutationResponse>;
  deleteProjectSupervisorsByPk?: Maybe<ProjectSupervisors>;
  deleteProjectTags?: Maybe<ProjectTagsMutationResponse>;
  deleteProjectTagsByPk?: Maybe<ProjectTags>;
  deleteReaction?: Maybe<ReactionMutationResponse>;
  deleteReactionByPk?: Maybe<Reaction>;
  deleteReport?: Maybe<ReportMutationResponse>;
  deleteReportByPk?: Maybe<Report>;
  deleteRole?: Maybe<RoleMutationResponse>;
  deleteRoleByPk?: Maybe<Role>;
  deleteSession?: Maybe<SessionMutationResponse>;
  deleteSessionByPk?: Maybe<Session>;
  deleteShortcut?: Maybe<ShortcutMutationResponse>;
  deleteShortcutByPk?: Maybe<Shortcut>;
  deleteSocial?: Maybe<SocialMutationResponse>;
  deleteSocialByPk?: Maybe<Social>;
  deleteSubject?: Maybe<SubjectMutationResponse>;
  deleteSubjectByPk?: Maybe<Subject>;
  deleteSubjectClassGroups?: Maybe<SubjectClassGroupsMutationResponse>;
  deleteSubjectClassGroupsByPk?: Maybe<SubjectClassGroups>;
  deleteTag?: Maybe<TagMutationResponse>;
  deleteTagByPk?: Maybe<Tag>;
  deleteTeam?: Maybe<TeamMutationResponse>;
  deleteTeamByPk?: Maybe<Team>;
  deleteTeamHistory?: Maybe<TeamHistoryMutationResponse>;
  deleteTeamHistoryByPk?: Maybe<TeamHistory>;
  deleteTeamJoin?: Maybe<TeamJoinMutationResponse>;
  deleteTeamJoinByPk?: Maybe<TeamJoin>;
  deleteTeamMember?: Maybe<TeamMemberMutationResponse>;
  deleteTeamMemberByPk?: Maybe<TeamMember>;
  deleteTeamMemberRoles?: Maybe<TeamMemberRolesMutationResponse>;
  deleteTeamMemberRolesByPk?: Maybe<TeamMemberRoles>;
  deleteTeamMetric?: Maybe<TeamMetricMutationResponse>;
  deleteTeamMetricByPk?: Maybe<TeamMetric>;
  deleteTenant?: Maybe<TenantMutationResponse>;
  deleteTenantByPk?: Maybe<Tenant>;
  deleteTenantOrganize?: Maybe<TenantOrganizeMutationResponse>;
  deleteTenantOrganizeByPk?: Maybe<TenantOrganize>;
  deleteThread?: Maybe<ThreadMutationResponse>;
  deleteThreadByPk?: Maybe<Thread>;
  deleteThreadContributors?: Maybe<ThreadContributorsMutationResponse>;
  deleteThreadContributorsByPk?: Maybe<ThreadContributors>;
  deleteThreadTags?: Maybe<ThreadTagsMutationResponse>;
  deleteThreadTagsByPk?: Maybe<ThreadTags>;
  deleteUser?: Maybe<UserMutationResponse>;
  deleteUserByPk?: Maybe<User>;
  deleteValidation?: Maybe<ValidationMutationResponse>;
  deleteValidationByPk?: Maybe<Validation>;
  deleteView?: Maybe<ViewMutationResponse>;
  deleteViewByPk?: Maybe<View>;
  deleteVote?: Maybe<VoteMutationResponse>;
  deleteVoteByPk?: Maybe<Vote>;
  insertAccount?: Maybe<AccountMutationResponse>;
  insertAccountOne?: Maybe<Account>;
  insertAction?: Maybe<ActionMutationResponse>;
  insertActionOne?: Maybe<Action>;
  insertActor?: Maybe<ActorMutationResponse>;
  insertActorImage?: Maybe<ActorImageMutationResponse>;
  insertActorImageOne?: Maybe<ActorImage>;
  insertActorOne?: Maybe<Actor>;
  insertActorTags?: Maybe<ActorTagsMutationResponse>;
  insertActorTagsOne?: Maybe<ActorTags>;
  insertAddress?: Maybe<AddressMutationResponse>;
  insertAddressOne?: Maybe<Address>;
  insertBank?: Maybe<BankMutationResponse>;
  insertBankOne?: Maybe<Bank>;
  insertBot?: Maybe<BotMutationResponse>;
  insertBotOne?: Maybe<Bot>;
  insertCampus?: Maybe<CampusMutationResponse>;
  insertCampusCluster?: Maybe<CampusClusterMutationResponse>;
  insertCampusClusterOne?: Maybe<CampusCluster>;
  insertCampusOne?: Maybe<Campus>;
  insertCanteen?: Maybe<CanteenMutationResponse>;
  insertCanteenFood?: Maybe<CanteenFoodMutationResponse>;
  insertCanteenFoodOne?: Maybe<CanteenFood>;
  insertCanteenMenu?: Maybe<CanteenMenuMutationResponse>;
  insertCanteenMenuOne?: Maybe<CanteenMenu>;
  insertCanteenOne?: Maybe<Canteen>;
  insertClassGroup?: Maybe<ClassGroupMutationResponse>;
  insertClassGroupOne?: Maybe<ClassGroup>;
  insertClassGroupTeacher?: Maybe<ClassGroupTeacherMutationResponse>;
  insertClassGroupTeacherOne?: Maybe<ClassGroupTeacher>;
  insertClassGroupTeacherSubjects?: Maybe<ClassGroupTeacherSubjectsMutationResponse>;
  insertClassGroupTeacherSubjectsOne?: Maybe<ClassGroupTeacherSubjects>;
  insertCohort?: Maybe<CohortMutationResponse>;
  insertCohortOne?: Maybe<Cohort>;
  insertContent?: Maybe<ContentMutationResponse>;
  insertContentAttachments?: Maybe<ContentAttachmentsMutationResponse>;
  insertContentAttachmentsOne?: Maybe<ContentAttachments>;
  insertContentOne?: Maybe<Content>;
  insertDocument?: Maybe<DocumentMutationResponse>;
  insertDocumentOne?: Maybe<Document>;
  insertEvent?: Maybe<EventMutationResponse>;
  insertEventApproval?: Maybe<EventApprovalMutationResponse>;
  insertEventApprovalOne?: Maybe<EventApproval>;
  insertEventApprovalStep?: Maybe<EventApprovalStepMutationResponse>;
  insertEventApprovalStepNotifiees?: Maybe<EventApprovalStepNotifieesMutationResponse>;
  insertEventApprovalStepNotifieesOne?: Maybe<EventApprovalStepNotifiees>;
  insertEventApprovalStepOne?: Maybe<EventApprovalStep>;
  insertEventApprovalStepValidators?: Maybe<EventApprovalStepValidatorsMutationResponse>;
  insertEventApprovalStepValidatorsOne?: Maybe<EventApprovalStepValidators>;
  insertEventFavorite?: Maybe<EventFavoriteMutationResponse>;
  insertEventFavoriteOne?: Maybe<EventFavorite>;
  insertEventJoin?: Maybe<EventJoinMutationResponse>;
  insertEventJoinOne?: Maybe<EventJoin>;
  insertEventOne?: Maybe<Event>;
  insertEventOrganize?: Maybe<EventOrganizeMutationResponse>;
  insertEventOrganizeOne?: Maybe<EventOrganize>;
  insertEventSupervisor?: Maybe<EventSupervisorMutationResponse>;
  insertEventSupervisorOne?: Maybe<EventSupervisor>;
  insertEventTags?: Maybe<EventTagsMutationResponse>;
  insertEventTagsOne?: Maybe<EventTags>;
  insertExpense?: Maybe<ExpenseMutationResponse>;
  insertExpenseItem?: Maybe<ExpenseItemMutationResponse>;
  insertExpenseItemAttachments?: Maybe<ExpenseItemAttachmentsMutationResponse>;
  insertExpenseItemAttachmentsOne?: Maybe<ExpenseItemAttachments>;
  insertExpenseItemOne?: Maybe<ExpenseItem>;
  insertExpenseOne?: Maybe<Expense>;
  insertFavorite?: Maybe<FavoriteMutationResponse>;
  insertFavoriteOne?: Maybe<Favorite>;
  insertFileUpload?: Maybe<FileUploadMutationResponse>;
  insertFileUploadOne?: Maybe<FileUpload>;
  insertFinance?: Maybe<FinanceMutationResponse>;
  insertFinanceAttachments?: Maybe<FinanceAttachmentsMutationResponse>;
  insertFinanceAttachmentsOne?: Maybe<FinanceAttachments>;
  insertFinanceOne?: Maybe<Finance>;
  insertFinanceTags?: Maybe<FinanceTagsMutationResponse>;
  insertFinanceTagsOne?: Maybe<FinanceTags>;
  insertFollow?: Maybe<FollowMutationResponse>;
  insertFollowOne?: Maybe<Follow>;
  insertForm?: Maybe<FormMutationResponse>;
  insertFormOne?: Maybe<Form>;
  insertFormSubmission?: Maybe<FormSubmissionMutationResponse>;
  insertFormSubmissionAttachments?: Maybe<FormSubmissionAttachmentsMutationResponse>;
  insertFormSubmissionAttachmentsOne?: Maybe<FormSubmissionAttachments>;
  insertFormSubmissionOne?: Maybe<FormSubmission>;
  insertGrant?: Maybe<GrantMutationResponse>;
  insertGrantAllocate?: Maybe<GrantAllocateMutationResponse>;
  insertGrantAllocateAttachments?: Maybe<GrantAllocateAttachmentsMutationResponse>;
  insertGrantAllocateAttachmentsOne?: Maybe<GrantAllocateAttachments>;
  insertGrantAllocateOne?: Maybe<GrantAllocate>;
  insertGrantAttachments?: Maybe<GrantAttachmentsMutationResponse>;
  insertGrantAttachmentsOne?: Maybe<GrantAttachments>;
  insertGrantOne?: Maybe<Grant>;
  insertIndividual?: Maybe<IndividualMutationResponse>;
  insertIndividualOne?: Maybe<Individual>;
  insertIssue?: Maybe<IssueMutationResponse>;
  insertIssueContributors?: Maybe<IssueContributorsMutationResponse>;
  insertIssueContributorsOne?: Maybe<IssueContributors>;
  insertIssueOne?: Maybe<Issue>;
  insertIssueTags?: Maybe<IssueTagsMutationResponse>;
  insertIssueTagsOne?: Maybe<IssueTags>;
  insertLegalUnit?: Maybe<LegalUnitMutationResponse>;
  insertLegalUnitLocation?: Maybe<LegalUnitLocationMutationResponse>;
  insertLegalUnitLocationOne?: Maybe<LegalUnitLocation>;
  insertLegalUnitOne?: Maybe<LegalUnit>;
  insertLocation?: Maybe<LocationMutationResponse>;
  insertLocationImages?: Maybe<LocationImagesMutationResponse>;
  insertLocationImagesOne?: Maybe<LocationImages>;
  insertLocationOne?: Maybe<Location>;
  insertMission?: Maybe<MissionMutationResponse>;
  insertMissionJoin?: Maybe<MissionJoinMutationResponse>;
  insertMissionJoinOne?: Maybe<MissionJoin>;
  insertMissionOne?: Maybe<Mission>;
  insertPole?: Maybe<PoleMutationResponse>;
  insertPoleOne?: Maybe<Pole>;
  insertProject?: Maybe<ProjectMutationResponse>;
  insertProjectOne?: Maybe<Project>;
  insertProjectSupervisors?: Maybe<ProjectSupervisorsMutationResponse>;
  insertProjectSupervisorsOne?: Maybe<ProjectSupervisors>;
  insertProjectTags?: Maybe<ProjectTagsMutationResponse>;
  insertProjectTagsOne?: Maybe<ProjectTags>;
  insertReaction?: Maybe<ReactionMutationResponse>;
  insertReactionOne?: Maybe<Reaction>;
  insertReport?: Maybe<ReportMutationResponse>;
  insertReportOne?: Maybe<Report>;
  insertRole?: Maybe<RoleMutationResponse>;
  insertRoleOne?: Maybe<Role>;
  insertSession?: Maybe<SessionMutationResponse>;
  insertSessionOne?: Maybe<Session>;
  insertShortcut?: Maybe<ShortcutMutationResponse>;
  insertShortcutOne?: Maybe<Shortcut>;
  insertSocial?: Maybe<SocialMutationResponse>;
  insertSocialOne?: Maybe<Social>;
  insertSubject?: Maybe<SubjectMutationResponse>;
  insertSubjectClassGroups?: Maybe<SubjectClassGroupsMutationResponse>;
  insertSubjectClassGroupsOne?: Maybe<SubjectClassGroups>;
  insertSubjectOne?: Maybe<Subject>;
  insertTag?: Maybe<TagMutationResponse>;
  insertTagOne?: Maybe<Tag>;
  insertTeam?: Maybe<TeamMutationResponse>;
  insertTeamHistory?: Maybe<TeamHistoryMutationResponse>;
  insertTeamHistoryOne?: Maybe<TeamHistory>;
  insertTeamJoin?: Maybe<TeamJoinMutationResponse>;
  insertTeamJoinOne?: Maybe<TeamJoin>;
  insertTeamMember?: Maybe<TeamMemberMutationResponse>;
  insertTeamMemberOne?: Maybe<TeamMember>;
  insertTeamMemberRoles?: Maybe<TeamMemberRolesMutationResponse>;
  insertTeamMemberRolesOne?: Maybe<TeamMemberRoles>;
  insertTeamMetric?: Maybe<TeamMetricMutationResponse>;
  insertTeamMetricOne?: Maybe<TeamMetric>;
  insertTeamOne?: Maybe<Team>;
  insertTenant?: Maybe<TenantMutationResponse>;
  insertTenantOne?: Maybe<Tenant>;
  insertTenantOrganize?: Maybe<TenantOrganizeMutationResponse>;
  insertTenantOrganizeOne?: Maybe<TenantOrganize>;
  insertThread?: Maybe<ThreadMutationResponse>;
  insertThreadContributors?: Maybe<ThreadContributorsMutationResponse>;
  insertThreadContributorsOne?: Maybe<ThreadContributors>;
  insertThreadOne?: Maybe<Thread>;
  insertThreadTags?: Maybe<ThreadTagsMutationResponse>;
  insertThreadTagsOne?: Maybe<ThreadTags>;
  insertUser?: Maybe<UserMutationResponse>;
  insertUserOne?: Maybe<User>;
  insertValidation?: Maybe<ValidationMutationResponse>;
  insertValidationOne?: Maybe<Validation>;
  insertView?: Maybe<ViewMutationResponse>;
  insertViewOne?: Maybe<View>;
  insertVote?: Maybe<VoteMutationResponse>;
  insertVoteOne?: Maybe<Vote>;
  login: UserLogin;
  logout: Scalars['Boolean']['output'];
  singleUpload?: Maybe<FileUpload>;
  updateAccount?: Maybe<AccountMutationResponse>;
  updateAccountByPk?: Maybe<Account>;
  updateAccountMany?: Maybe<Array<Maybe<AccountMutationResponse>>>;
  updateAction?: Maybe<ActionMutationResponse>;
  updateActionByPk?: Maybe<Action>;
  updateActionMany?: Maybe<Array<Maybe<ActionMutationResponse>>>;
  updateActor?: Maybe<ActorMutationResponse>;
  updateActorByPk?: Maybe<Actor>;
  updateActorImage?: Maybe<ActorImageMutationResponse>;
  updateActorImageByPk?: Maybe<ActorImage>;
  updateActorImageMany?: Maybe<Array<Maybe<ActorImageMutationResponse>>>;
  updateActorMany?: Maybe<Array<Maybe<ActorMutationResponse>>>;
  updateActorTags?: Maybe<ActorTagsMutationResponse>;
  updateActorTagsByPk?: Maybe<ActorTags>;
  updateActorTagsMany?: Maybe<Array<Maybe<ActorTagsMutationResponse>>>;
  updateAddress?: Maybe<AddressMutationResponse>;
  updateAddressByPk?: Maybe<Address>;
  updateAddressMany?: Maybe<Array<Maybe<AddressMutationResponse>>>;
  updateBank?: Maybe<BankMutationResponse>;
  updateBankByPk?: Maybe<Bank>;
  updateBankMany?: Maybe<Array<Maybe<BankMutationResponse>>>;
  updateBot?: Maybe<BotMutationResponse>;
  updateBotByPk?: Maybe<Bot>;
  updateBotMany?: Maybe<Array<Maybe<BotMutationResponse>>>;
  updateCampus?: Maybe<CampusMutationResponse>;
  updateCampusByPk?: Maybe<Campus>;
  updateCampusCluster?: Maybe<CampusClusterMutationResponse>;
  updateCampusClusterByPk?: Maybe<CampusCluster>;
  updateCampusClusterMany?: Maybe<Array<Maybe<CampusClusterMutationResponse>>>;
  updateCampusMany?: Maybe<Array<Maybe<CampusMutationResponse>>>;
  updateCanteen?: Maybe<CanteenMutationResponse>;
  updateCanteenByPk?: Maybe<Canteen>;
  updateCanteenFood?: Maybe<CanteenFoodMutationResponse>;
  updateCanteenFoodByPk?: Maybe<CanteenFood>;
  updateCanteenFoodMany?: Maybe<Array<Maybe<CanteenFoodMutationResponse>>>;
  updateCanteenMany?: Maybe<Array<Maybe<CanteenMutationResponse>>>;
  updateCanteenMenu?: Maybe<CanteenMenuMutationResponse>;
  updateCanteenMenuByPk?: Maybe<CanteenMenu>;
  updateCanteenMenuMany?: Maybe<Array<Maybe<CanteenMenuMutationResponse>>>;
  updateClassGroup?: Maybe<ClassGroupMutationResponse>;
  updateClassGroupByPk?: Maybe<ClassGroup>;
  updateClassGroupMany?: Maybe<Array<Maybe<ClassGroupMutationResponse>>>;
  updateClassGroupTeacher?: Maybe<ClassGroupTeacherMutationResponse>;
  updateClassGroupTeacherByPk?: Maybe<ClassGroupTeacher>;
  updateClassGroupTeacherMany?: Maybe<Array<Maybe<ClassGroupTeacherMutationResponse>>>;
  updateClassGroupTeacherSubjects?: Maybe<ClassGroupTeacherSubjectsMutationResponse>;
  updateClassGroupTeacherSubjectsByPk?: Maybe<ClassGroupTeacherSubjects>;
  updateClassGroupTeacherSubjectsMany?: Maybe<Array<Maybe<ClassGroupTeacherSubjectsMutationResponse>>>;
  updateCohort?: Maybe<CohortMutationResponse>;
  updateCohortByPk?: Maybe<Cohort>;
  updateCohortMany?: Maybe<Array<Maybe<CohortMutationResponse>>>;
  updateContent?: Maybe<ContentMutationResponse>;
  updateContentAttachments?: Maybe<ContentAttachmentsMutationResponse>;
  updateContentAttachmentsByPk?: Maybe<ContentAttachments>;
  updateContentAttachmentsMany?: Maybe<Array<Maybe<ContentAttachmentsMutationResponse>>>;
  updateContentByPk?: Maybe<Content>;
  updateContentMany?: Maybe<Array<Maybe<ContentMutationResponse>>>;
  updateDocument?: Maybe<DocumentMutationResponse>;
  updateDocumentByPk?: Maybe<Document>;
  updateDocumentMany?: Maybe<Array<Maybe<DocumentMutationResponse>>>;
  updateEvent?: Maybe<EventMutationResponse>;
  updateEventApproval?: Maybe<EventApprovalMutationResponse>;
  updateEventApprovalByPk?: Maybe<EventApproval>;
  updateEventApprovalMany?: Maybe<Array<Maybe<EventApprovalMutationResponse>>>;
  updateEventApprovalStep?: Maybe<EventApprovalStepMutationResponse>;
  updateEventApprovalStepByPk?: Maybe<EventApprovalStep>;
  updateEventApprovalStepMany?: Maybe<Array<Maybe<EventApprovalStepMutationResponse>>>;
  updateEventApprovalStepNotifiees?: Maybe<EventApprovalStepNotifieesMutationResponse>;
  updateEventApprovalStepNotifieesByPk?: Maybe<EventApprovalStepNotifiees>;
  updateEventApprovalStepNotifieesMany?: Maybe<Array<Maybe<EventApprovalStepNotifieesMutationResponse>>>;
  updateEventApprovalStepValidators?: Maybe<EventApprovalStepValidatorsMutationResponse>;
  updateEventApprovalStepValidatorsByPk?: Maybe<EventApprovalStepValidators>;
  updateEventApprovalStepValidatorsMany?: Maybe<Array<Maybe<EventApprovalStepValidatorsMutationResponse>>>;
  updateEventByPk?: Maybe<Event>;
  updateEventFavorite?: Maybe<EventFavoriteMutationResponse>;
  updateEventFavoriteByPk?: Maybe<EventFavorite>;
  updateEventFavoriteMany?: Maybe<Array<Maybe<EventFavoriteMutationResponse>>>;
  updateEventJoin?: Maybe<EventJoinMutationResponse>;
  updateEventJoinByPk?: Maybe<EventJoin>;
  updateEventJoinMany?: Maybe<Array<Maybe<EventJoinMutationResponse>>>;
  updateEventMany?: Maybe<Array<Maybe<EventMutationResponse>>>;
  updateEventOrganize?: Maybe<EventOrganizeMutationResponse>;
  updateEventOrganizeByPk?: Maybe<EventOrganize>;
  updateEventOrganizeMany?: Maybe<Array<Maybe<EventOrganizeMutationResponse>>>;
  updateEventSupervisor?: Maybe<EventSupervisorMutationResponse>;
  updateEventSupervisorByPk?: Maybe<EventSupervisor>;
  updateEventSupervisorMany?: Maybe<Array<Maybe<EventSupervisorMutationResponse>>>;
  updateEventTags?: Maybe<EventTagsMutationResponse>;
  updateEventTagsByPk?: Maybe<EventTags>;
  updateEventTagsMany?: Maybe<Array<Maybe<EventTagsMutationResponse>>>;
  updateExpense?: Maybe<ExpenseMutationResponse>;
  updateExpenseByPk?: Maybe<Expense>;
  updateExpenseItem?: Maybe<ExpenseItemMutationResponse>;
  updateExpenseItemAttachments?: Maybe<ExpenseItemAttachmentsMutationResponse>;
  updateExpenseItemAttachmentsByPk?: Maybe<ExpenseItemAttachments>;
  updateExpenseItemAttachmentsMany?: Maybe<Array<Maybe<ExpenseItemAttachmentsMutationResponse>>>;
  updateExpenseItemByPk?: Maybe<ExpenseItem>;
  updateExpenseItemMany?: Maybe<Array<Maybe<ExpenseItemMutationResponse>>>;
  updateExpenseMany?: Maybe<Array<Maybe<ExpenseMutationResponse>>>;
  updateFavorite?: Maybe<FavoriteMutationResponse>;
  updateFavoriteByPk?: Maybe<Favorite>;
  updateFavoriteMany?: Maybe<Array<Maybe<FavoriteMutationResponse>>>;
  updateFileUpload?: Maybe<FileUploadMutationResponse>;
  updateFileUploadByPk?: Maybe<FileUpload>;
  updateFileUploadMany?: Maybe<Array<Maybe<FileUploadMutationResponse>>>;
  updateFinance?: Maybe<FinanceMutationResponse>;
  updateFinanceAttachments?: Maybe<FinanceAttachmentsMutationResponse>;
  updateFinanceAttachmentsByPk?: Maybe<FinanceAttachments>;
  updateFinanceAttachmentsMany?: Maybe<Array<Maybe<FinanceAttachmentsMutationResponse>>>;
  updateFinanceByPk?: Maybe<Finance>;
  updateFinanceMany?: Maybe<Array<Maybe<FinanceMutationResponse>>>;
  updateFinanceTags?: Maybe<FinanceTagsMutationResponse>;
  updateFinanceTagsByPk?: Maybe<FinanceTags>;
  updateFinanceTagsMany?: Maybe<Array<Maybe<FinanceTagsMutationResponse>>>;
  updateFollow?: Maybe<FollowMutationResponse>;
  updateFollowByPk?: Maybe<Follow>;
  updateFollowMany?: Maybe<Array<Maybe<FollowMutationResponse>>>;
  updateForm?: Maybe<FormMutationResponse>;
  updateFormByPk?: Maybe<Form>;
  updateFormMany?: Maybe<Array<Maybe<FormMutationResponse>>>;
  updateFormSubmission?: Maybe<FormSubmissionMutationResponse>;
  updateFormSubmissionAttachments?: Maybe<FormSubmissionAttachmentsMutationResponse>;
  updateFormSubmissionAttachmentsByPk?: Maybe<FormSubmissionAttachments>;
  updateFormSubmissionAttachmentsMany?: Maybe<Array<Maybe<FormSubmissionAttachmentsMutationResponse>>>;
  updateFormSubmissionByPk?: Maybe<FormSubmission>;
  updateFormSubmissionMany?: Maybe<Array<Maybe<FormSubmissionMutationResponse>>>;
  updateGrant?: Maybe<GrantMutationResponse>;
  updateGrantAllocate?: Maybe<GrantAllocateMutationResponse>;
  updateGrantAllocateAttachments?: Maybe<GrantAllocateAttachmentsMutationResponse>;
  updateGrantAllocateAttachmentsByPk?: Maybe<GrantAllocateAttachments>;
  updateGrantAllocateAttachmentsMany?: Maybe<Array<Maybe<GrantAllocateAttachmentsMutationResponse>>>;
  updateGrantAllocateByPk?: Maybe<GrantAllocate>;
  updateGrantAllocateMany?: Maybe<Array<Maybe<GrantAllocateMutationResponse>>>;
  updateGrantAttachments?: Maybe<GrantAttachmentsMutationResponse>;
  updateGrantAttachmentsByPk?: Maybe<GrantAttachments>;
  updateGrantAttachmentsMany?: Maybe<Array<Maybe<GrantAttachmentsMutationResponse>>>;
  updateGrantByPk?: Maybe<Grant>;
  updateGrantMany?: Maybe<Array<Maybe<GrantMutationResponse>>>;
  updateIndividual?: Maybe<IndividualMutationResponse>;
  updateIndividualByPk?: Maybe<Individual>;
  updateIndividualMany?: Maybe<Array<Maybe<IndividualMutationResponse>>>;
  updateIssue?: Maybe<IssueMutationResponse>;
  updateIssueByPk?: Maybe<Issue>;
  updateIssueContributors?: Maybe<IssueContributorsMutationResponse>;
  updateIssueContributorsByPk?: Maybe<IssueContributors>;
  updateIssueContributorsMany?: Maybe<Array<Maybe<IssueContributorsMutationResponse>>>;
  updateIssueMany?: Maybe<Array<Maybe<IssueMutationResponse>>>;
  updateIssueTags?: Maybe<IssueTagsMutationResponse>;
  updateIssueTagsByPk?: Maybe<IssueTags>;
  updateIssueTagsMany?: Maybe<Array<Maybe<IssueTagsMutationResponse>>>;
  updateLegalUnit?: Maybe<LegalUnitMutationResponse>;
  updateLegalUnitByPk?: Maybe<LegalUnit>;
  updateLegalUnitLocation?: Maybe<LegalUnitLocationMutationResponse>;
  updateLegalUnitLocationByPk?: Maybe<LegalUnitLocation>;
  updateLegalUnitLocationMany?: Maybe<Array<Maybe<LegalUnitLocationMutationResponse>>>;
  updateLegalUnitMany?: Maybe<Array<Maybe<LegalUnitMutationResponse>>>;
  updateLocation?: Maybe<LocationMutationResponse>;
  updateLocationByPk?: Maybe<Location>;
  updateLocationImages?: Maybe<LocationImagesMutationResponse>;
  updateLocationImagesByPk?: Maybe<LocationImages>;
  updateLocationImagesMany?: Maybe<Array<Maybe<LocationImagesMutationResponse>>>;
  updateLocationMany?: Maybe<Array<Maybe<LocationMutationResponse>>>;
  updateMission?: Maybe<MissionMutationResponse>;
  updateMissionByPk?: Maybe<Mission>;
  updateMissionJoin?: Maybe<MissionJoinMutationResponse>;
  updateMissionJoinByPk?: Maybe<MissionJoin>;
  updateMissionJoinMany?: Maybe<Array<Maybe<MissionJoinMutationResponse>>>;
  updateMissionMany?: Maybe<Array<Maybe<MissionMutationResponse>>>;
  updatePole?: Maybe<PoleMutationResponse>;
  updatePoleByPk?: Maybe<Pole>;
  updatePoleMany?: Maybe<Array<Maybe<PoleMutationResponse>>>;
  updateProject?: Maybe<ProjectMutationResponse>;
  updateProjectByPk?: Maybe<Project>;
  updateProjectMany?: Maybe<Array<Maybe<ProjectMutationResponse>>>;
  updateProjectSupervisors?: Maybe<ProjectSupervisorsMutationResponse>;
  updateProjectSupervisorsByPk?: Maybe<ProjectSupervisors>;
  updateProjectSupervisorsMany?: Maybe<Array<Maybe<ProjectSupervisorsMutationResponse>>>;
  updateProjectTags?: Maybe<ProjectTagsMutationResponse>;
  updateProjectTagsByPk?: Maybe<ProjectTags>;
  updateProjectTagsMany?: Maybe<Array<Maybe<ProjectTagsMutationResponse>>>;
  updateReaction?: Maybe<ReactionMutationResponse>;
  updateReactionByPk?: Maybe<Reaction>;
  updateReactionMany?: Maybe<Array<Maybe<ReactionMutationResponse>>>;
  updateReport?: Maybe<ReportMutationResponse>;
  updateReportByPk?: Maybe<Report>;
  updateReportMany?: Maybe<Array<Maybe<ReportMutationResponse>>>;
  updateRole?: Maybe<RoleMutationResponse>;
  updateRoleByPk?: Maybe<Role>;
  updateRoleMany?: Maybe<Array<Maybe<RoleMutationResponse>>>;
  updateSession?: Maybe<SessionMutationResponse>;
  updateSessionByPk?: Maybe<Session>;
  updateSessionMany?: Maybe<Array<Maybe<SessionMutationResponse>>>;
  updateShortcut?: Maybe<ShortcutMutationResponse>;
  updateShortcutByPk?: Maybe<Shortcut>;
  updateShortcutMany?: Maybe<Array<Maybe<ShortcutMutationResponse>>>;
  updateSocial?: Maybe<SocialMutationResponse>;
  updateSocialByPk?: Maybe<Social>;
  updateSocialMany?: Maybe<Array<Maybe<SocialMutationResponse>>>;
  updateSubject?: Maybe<SubjectMutationResponse>;
  updateSubjectByPk?: Maybe<Subject>;
  updateSubjectClassGroups?: Maybe<SubjectClassGroupsMutationResponse>;
  updateSubjectClassGroupsByPk?: Maybe<SubjectClassGroups>;
  updateSubjectClassGroupsMany?: Maybe<Array<Maybe<SubjectClassGroupsMutationResponse>>>;
  updateSubjectMany?: Maybe<Array<Maybe<SubjectMutationResponse>>>;
  updateTag?: Maybe<TagMutationResponse>;
  updateTagByPk?: Maybe<Tag>;
  updateTagMany?: Maybe<Array<Maybe<TagMutationResponse>>>;
  updateTeam?: Maybe<TeamMutationResponse>;
  updateTeamByPk?: Maybe<Team>;
  updateTeamHistory?: Maybe<TeamHistoryMutationResponse>;
  updateTeamHistoryByPk?: Maybe<TeamHistory>;
  updateTeamHistoryMany?: Maybe<Array<Maybe<TeamHistoryMutationResponse>>>;
  updateTeamJoin?: Maybe<TeamJoinMutationResponse>;
  updateTeamJoinByPk?: Maybe<TeamJoin>;
  updateTeamJoinMany?: Maybe<Array<Maybe<TeamJoinMutationResponse>>>;
  updateTeamMany?: Maybe<Array<Maybe<TeamMutationResponse>>>;
  updateTeamMember?: Maybe<TeamMemberMutationResponse>;
  updateTeamMemberByPk?: Maybe<TeamMember>;
  updateTeamMemberMany?: Maybe<Array<Maybe<TeamMemberMutationResponse>>>;
  updateTeamMemberRoles?: Maybe<TeamMemberRolesMutationResponse>;
  updateTeamMemberRolesByPk?: Maybe<TeamMemberRoles>;
  updateTeamMemberRolesMany?: Maybe<Array<Maybe<TeamMemberRolesMutationResponse>>>;
  updateTeamMetric?: Maybe<TeamMetricMutationResponse>;
  updateTeamMetricByPk?: Maybe<TeamMetric>;
  updateTeamMetricMany?: Maybe<Array<Maybe<TeamMetricMutationResponse>>>;
  updateTenant?: Maybe<TenantMutationResponse>;
  updateTenantByPk?: Maybe<Tenant>;
  updateTenantMany?: Maybe<Array<Maybe<TenantMutationResponse>>>;
  updateTenantOrganize?: Maybe<TenantOrganizeMutationResponse>;
  updateTenantOrganizeByPk?: Maybe<TenantOrganize>;
  updateTenantOrganizeMany?: Maybe<Array<Maybe<TenantOrganizeMutationResponse>>>;
  updateThread?: Maybe<ThreadMutationResponse>;
  updateThreadByPk?: Maybe<Thread>;
  updateThreadContributors?: Maybe<ThreadContributorsMutationResponse>;
  updateThreadContributorsByPk?: Maybe<ThreadContributors>;
  updateThreadContributorsMany?: Maybe<Array<Maybe<ThreadContributorsMutationResponse>>>;
  updateThreadMany?: Maybe<Array<Maybe<ThreadMutationResponse>>>;
  updateThreadTags?: Maybe<ThreadTagsMutationResponse>;
  updateThreadTagsByPk?: Maybe<ThreadTags>;
  updateThreadTagsMany?: Maybe<Array<Maybe<ThreadTagsMutationResponse>>>;
  updateUser?: Maybe<UserMutationResponse>;
  updateUserByPk?: Maybe<User>;
  updateUserMany?: Maybe<Array<Maybe<UserMutationResponse>>>;
  updateValidation?: Maybe<ValidationMutationResponse>;
  updateValidationByPk?: Maybe<Validation>;
  updateValidationMany?: Maybe<Array<Maybe<ValidationMutationResponse>>>;
  updateView?: Maybe<ViewMutationResponse>;
  updateViewByPk?: Maybe<View>;
  updateViewMany?: Maybe<Array<Maybe<ViewMutationResponse>>>;
  updateVote?: Maybe<VoteMutationResponse>;
  updateVoteByPk?: Maybe<Vote>;
  updateVoteMany?: Maybe<Array<Maybe<VoteMutationResponse>>>;
};

export type MutationDeleteAccountArgs = {
  where: AccountBoolExp;
};

export type MutationDeleteAccountByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteActionArgs = {
  where: ActionBoolExp;
};

export type MutationDeleteActionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteActorArgs = {
  where: ActorBoolExp;
};

export type MutationDeleteActorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteActorImageArgs = {
  where: ActorImageBoolExp;
};

export type MutationDeleteActorImageByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteActorTagsArgs = {
  where: ActorTagsBoolExp;
};

export type MutationDeleteActorTagsByPkArgs = {
  actorId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type MutationDeleteAddressArgs = {
  where: AddressBoolExp;
};

export type MutationDeleteAddressByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteBankArgs = {
  where: BankBoolExp;
};

export type MutationDeleteBankByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteBotArgs = {
  where: BotBoolExp;
};

export type MutationDeleteBotByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteCampusArgs = {
  where: CampusBoolExp;
};

export type MutationDeleteCampusByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteCampusClusterArgs = {
  where: CampusClusterBoolExp;
};

export type MutationDeleteCampusClusterByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteCanteenArgs = {
  where: CanteenBoolExp;
};

export type MutationDeleteCanteenByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteCanteenFoodArgs = {
  where: CanteenFoodBoolExp;
};

export type MutationDeleteCanteenFoodByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteCanteenMenuArgs = {
  where: CanteenMenuBoolExp;
};

export type MutationDeleteCanteenMenuByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteClassGroupArgs = {
  where: ClassGroupBoolExp;
};

export type MutationDeleteClassGroupByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteClassGroupTeacherArgs = {
  where: ClassGroupTeacherBoolExp;
};

export type MutationDeleteClassGroupTeacherByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteClassGroupTeacherSubjectsArgs = {
  where: ClassGroupTeacherSubjectsBoolExp;
};

export type MutationDeleteClassGroupTeacherSubjectsByPkArgs = {
  classGroupTeacherId: Scalars['bigint']['input'];
  subjectId: Scalars['bigint']['input'];
};

export type MutationDeleteCohortArgs = {
  where: CohortBoolExp;
};

export type MutationDeleteCohortByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteContentArgs = {
  where: ContentBoolExp;
};

export type MutationDeleteContentAttachmentsArgs = {
  where: ContentAttachmentsBoolExp;
};

export type MutationDeleteContentAttachmentsByPkArgs = {
  contentId: Scalars['bigint']['input'];
  fileUploadId: Scalars['bigint']['input'];
};

export type MutationDeleteContentByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteDocumentArgs = {
  where: DocumentBoolExp;
};

export type MutationDeleteDocumentByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventArgs = {
  where: EventBoolExp;
};

export type MutationDeleteEventApprovalArgs = {
  where: EventApprovalBoolExp;
};

export type MutationDeleteEventApprovalByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventApprovalStepArgs = {
  where: EventApprovalStepBoolExp;
};

export type MutationDeleteEventApprovalStepByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventApprovalStepNotifieesArgs = {
  where: EventApprovalStepNotifieesBoolExp;
};

export type MutationDeleteEventApprovalStepNotifieesByPkArgs = {
  eventApprovalStepId: Scalars['bigint']['input'];
  individualId: Scalars['bigint']['input'];
};

export type MutationDeleteEventApprovalStepValidatorsArgs = {
  where: EventApprovalStepValidatorsBoolExp;
};

export type MutationDeleteEventApprovalStepValidatorsByPkArgs = {
  eventApprovalStepId: Scalars['bigint']['input'];
  individualId: Scalars['bigint']['input'];
};

export type MutationDeleteEventByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventFavoriteArgs = {
  where: EventFavoriteBoolExp;
};

export type MutationDeleteEventFavoriteByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventJoinArgs = {
  where: EventJoinBoolExp;
};

export type MutationDeleteEventJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventOrganizeArgs = {
  where: EventOrganizeBoolExp;
};

export type MutationDeleteEventOrganizeByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventSupervisorArgs = {
  where: EventSupervisorBoolExp;
};

export type MutationDeleteEventSupervisorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteEventTagsArgs = {
  where: EventTagsBoolExp;
};

export type MutationDeleteEventTagsByPkArgs = {
  eventId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type MutationDeleteExpenseArgs = {
  where: ExpenseBoolExp;
};

export type MutationDeleteExpenseByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteExpenseItemArgs = {
  where: ExpenseItemBoolExp;
};

export type MutationDeleteExpenseItemAttachmentsArgs = {
  where: ExpenseItemAttachmentsBoolExp;
};

export type MutationDeleteExpenseItemAttachmentsByPkArgs = {
  expenseItemId: Scalars['bigint']['input'];
  fileUploadId: Scalars['bigint']['input'];
};

export type MutationDeleteExpenseItemByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteFavoriteArgs = {
  where: FavoriteBoolExp;
};

export type MutationDeleteFavoriteByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteFileUploadArgs = {
  where: FileUploadBoolExp;
};

export type MutationDeleteFileUploadByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteFinanceArgs = {
  where: FinanceBoolExp;
};

export type MutationDeleteFinanceAttachmentsArgs = {
  where: FinanceAttachmentsBoolExp;
};

export type MutationDeleteFinanceAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  financeId: Scalars['bigint']['input'];
};

export type MutationDeleteFinanceByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteFinanceTagsArgs = {
  where: FinanceTagsBoolExp;
};

export type MutationDeleteFinanceTagsByPkArgs = {
  financeId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type MutationDeleteFollowArgs = {
  where: FollowBoolExp;
};

export type MutationDeleteFollowByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteFormArgs = {
  where: FormBoolExp;
};

export type MutationDeleteFormByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteFormSubmissionArgs = {
  where: FormSubmissionBoolExp;
};

export type MutationDeleteFormSubmissionAttachmentsArgs = {
  where: FormSubmissionAttachmentsBoolExp;
};

export type MutationDeleteFormSubmissionAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  formSubmissionId: Scalars['bigint']['input'];
};

export type MutationDeleteFormSubmissionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteGrantArgs = {
  where: GrantBoolExp;
};

export type MutationDeleteGrantAllocateArgs = {
  where: GrantAllocateBoolExp;
};

export type MutationDeleteGrantAllocateAttachmentsArgs = {
  where: GrantAllocateAttachmentsBoolExp;
};

export type MutationDeleteGrantAllocateAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  grantAllocateId: Scalars['bigint']['input'];
};

export type MutationDeleteGrantAllocateByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteGrantAttachmentsArgs = {
  where: GrantAttachmentsBoolExp;
};

export type MutationDeleteGrantAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  grantId: Scalars['bigint']['input'];
};

export type MutationDeleteGrantByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteIndividualArgs = {
  where: IndividualBoolExp;
};

export type MutationDeleteIndividualByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteIssueArgs = {
  where: IssueBoolExp;
};

export type MutationDeleteIssueByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteIssueContributorsArgs = {
  where: IssueContributorsBoolExp;
};

export type MutationDeleteIssueContributorsByPkArgs = {
  individualId: Scalars['bigint']['input'];
  issueId: Scalars['bigint']['input'];
};

export type MutationDeleteIssueTagsArgs = {
  where: IssueTagsBoolExp;
};

export type MutationDeleteIssueTagsByPkArgs = {
  issueId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type MutationDeleteLegalUnitArgs = {
  where: LegalUnitBoolExp;
};

export type MutationDeleteLegalUnitByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteLegalUnitLocationArgs = {
  where: LegalUnitLocationBoolExp;
};

export type MutationDeleteLegalUnitLocationByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteLocationArgs = {
  where: LocationBoolExp;
};

export type MutationDeleteLocationByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteLocationImagesArgs = {
  where: LocationImagesBoolExp;
};

export type MutationDeleteLocationImagesByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  locationId: Scalars['bigint']['input'];
};

export type MutationDeleteMissionArgs = {
  where: MissionBoolExp;
};

export type MutationDeleteMissionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteMissionJoinArgs = {
  where: MissionJoinBoolExp;
};

export type MutationDeleteMissionJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeletePoleArgs = {
  where: PoleBoolExp;
};

export type MutationDeletePoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteProjectArgs = {
  where: ProjectBoolExp;
};

export type MutationDeleteProjectByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteProjectSupervisorsArgs = {
  where: ProjectSupervisorsBoolExp;
};

export type MutationDeleteProjectSupervisorsByPkArgs = {
  projectId: Scalars['bigint']['input'];
  teamMemberId: Scalars['bigint']['input'];
};

export type MutationDeleteProjectTagsArgs = {
  where: ProjectTagsBoolExp;
};

export type MutationDeleteProjectTagsByPkArgs = {
  projectId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type MutationDeleteReactionArgs = {
  where: ReactionBoolExp;
};

export type MutationDeleteReactionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteReportArgs = {
  where: ReportBoolExp;
};

export type MutationDeleteReportByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteRoleArgs = {
  where: RoleBoolExp;
};

export type MutationDeleteRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteSessionArgs = {
  where: SessionBoolExp;
};

export type MutationDeleteSessionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteShortcutArgs = {
  where: ShortcutBoolExp;
};

export type MutationDeleteShortcutByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteSocialArgs = {
  where: SocialBoolExp;
};

export type MutationDeleteSocialByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteSubjectArgs = {
  where: SubjectBoolExp;
};

export type MutationDeleteSubjectByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteSubjectClassGroupsArgs = {
  where: SubjectClassGroupsBoolExp;
};

export type MutationDeleteSubjectClassGroupsByPkArgs = {
  classGroupId: Scalars['bigint']['input'];
  subjectId: Scalars['bigint']['input'];
};

export type MutationDeleteTagArgs = {
  where: TagBoolExp;
};

export type MutationDeleteTagByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTeamArgs = {
  where: TeamBoolExp;
};

export type MutationDeleteTeamByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTeamHistoryArgs = {
  where: TeamHistoryBoolExp;
};

export type MutationDeleteTeamHistoryByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTeamJoinArgs = {
  where: TeamJoinBoolExp;
};

export type MutationDeleteTeamJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTeamMemberArgs = {
  where: TeamMemberBoolExp;
};

export type MutationDeleteTeamMemberByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTeamMemberRolesArgs = {
  where: TeamMemberRolesBoolExp;
};

export type MutationDeleteTeamMemberRolesByPkArgs = {
  roleId: Scalars['bigint']['input'];
  teamMemberId: Scalars['bigint']['input'];
};

export type MutationDeleteTeamMetricArgs = {
  where: TeamMetricBoolExp;
};

export type MutationDeleteTeamMetricByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTenantArgs = {
  where: TenantBoolExp;
};

export type MutationDeleteTenantByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteTenantOrganizeArgs = {
  where: TenantOrganizeBoolExp;
};

export type MutationDeleteTenantOrganizeByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteThreadArgs = {
  where: ThreadBoolExp;
};

export type MutationDeleteThreadByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteThreadContributorsArgs = {
  where: ThreadContributorsBoolExp;
};

export type MutationDeleteThreadContributorsByPkArgs = {
  individualId: Scalars['bigint']['input'];
  threadId: Scalars['bigint']['input'];
};

export type MutationDeleteThreadTagsArgs = {
  where: ThreadTagsBoolExp;
};

export type MutationDeleteThreadTagsByPkArgs = {
  tagId: Scalars['bigint']['input'];
  threadId: Scalars['bigint']['input'];
};

export type MutationDeleteUserArgs = {
  where: UserBoolExp;
};

export type MutationDeleteUserByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteValidationArgs = {
  where: ValidationBoolExp;
};

export type MutationDeleteValidationByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteViewArgs = {
  where: ViewBoolExp;
};

export type MutationDeleteViewByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationDeleteVoteArgs = {
  where: VoteBoolExp;
};

export type MutationDeleteVoteByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type MutationInsertAccountArgs = {
  objects: Array<AccountInsertInput>;
  onConflict?: InputMaybe<AccountOnConflict>;
};

export type MutationInsertAccountOneArgs = {
  object: AccountInsertInput;
  onConflict?: InputMaybe<AccountOnConflict>;
};

export type MutationInsertActionArgs = {
  objects: Array<ActionInsertInput>;
  onConflict?: InputMaybe<ActionOnConflict>;
};

export type MutationInsertActionOneArgs = {
  object: ActionInsertInput;
  onConflict?: InputMaybe<ActionOnConflict>;
};

export type MutationInsertActorArgs = {
  objects: Array<ActorInsertInput>;
  onConflict?: InputMaybe<ActorOnConflict>;
};

export type MutationInsertActorImageArgs = {
  objects: Array<ActorImageInsertInput>;
  onConflict?: InputMaybe<ActorImageOnConflict>;
};

export type MutationInsertActorImageOneArgs = {
  object: ActorImageInsertInput;
  onConflict?: InputMaybe<ActorImageOnConflict>;
};

export type MutationInsertActorOneArgs = {
  object: ActorInsertInput;
  onConflict?: InputMaybe<ActorOnConflict>;
};

export type MutationInsertActorTagsArgs = {
  objects: Array<ActorTagsInsertInput>;
  onConflict?: InputMaybe<ActorTagsOnConflict>;
};

export type MutationInsertActorTagsOneArgs = {
  object: ActorTagsInsertInput;
  onConflict?: InputMaybe<ActorTagsOnConflict>;
};

export type MutationInsertAddressArgs = {
  objects: Array<AddressInsertInput>;
  onConflict?: InputMaybe<AddressOnConflict>;
};

export type MutationInsertAddressOneArgs = {
  object: AddressInsertInput;
  onConflict?: InputMaybe<AddressOnConflict>;
};

export type MutationInsertBankArgs = {
  objects: Array<BankInsertInput>;
  onConflict?: InputMaybe<BankOnConflict>;
};

export type MutationInsertBankOneArgs = {
  object: BankInsertInput;
  onConflict?: InputMaybe<BankOnConflict>;
};

export type MutationInsertBotArgs = {
  objects: Array<BotInsertInput>;
  onConflict?: InputMaybe<BotOnConflict>;
};

export type MutationInsertBotOneArgs = {
  object: BotInsertInput;
  onConflict?: InputMaybe<BotOnConflict>;
};

export type MutationInsertCampusArgs = {
  objects: Array<CampusInsertInput>;
  onConflict?: InputMaybe<CampusOnConflict>;
};

export type MutationInsertCampusClusterArgs = {
  objects: Array<CampusClusterInsertInput>;
  onConflict?: InputMaybe<CampusClusterOnConflict>;
};

export type MutationInsertCampusClusterOneArgs = {
  object: CampusClusterInsertInput;
  onConflict?: InputMaybe<CampusClusterOnConflict>;
};

export type MutationInsertCampusOneArgs = {
  object: CampusInsertInput;
  onConflict?: InputMaybe<CampusOnConflict>;
};

export type MutationInsertCanteenArgs = {
  objects: Array<CanteenInsertInput>;
  onConflict?: InputMaybe<CanteenOnConflict>;
};

export type MutationInsertCanteenFoodArgs = {
  objects: Array<CanteenFoodInsertInput>;
  onConflict?: InputMaybe<CanteenFoodOnConflict>;
};

export type MutationInsertCanteenFoodOneArgs = {
  object: CanteenFoodInsertInput;
  onConflict?: InputMaybe<CanteenFoodOnConflict>;
};

export type MutationInsertCanteenMenuArgs = {
  objects: Array<CanteenMenuInsertInput>;
  onConflict?: InputMaybe<CanteenMenuOnConflict>;
};

export type MutationInsertCanteenMenuOneArgs = {
  object: CanteenMenuInsertInput;
  onConflict?: InputMaybe<CanteenMenuOnConflict>;
};

export type MutationInsertCanteenOneArgs = {
  object: CanteenInsertInput;
  onConflict?: InputMaybe<CanteenOnConflict>;
};

export type MutationInsertClassGroupArgs = {
  objects: Array<ClassGroupInsertInput>;
  onConflict?: InputMaybe<ClassGroupOnConflict>;
};

export type MutationInsertClassGroupOneArgs = {
  object: ClassGroupInsertInput;
  onConflict?: InputMaybe<ClassGroupOnConflict>;
};

export type MutationInsertClassGroupTeacherArgs = {
  objects: Array<ClassGroupTeacherInsertInput>;
  onConflict?: InputMaybe<ClassGroupTeacherOnConflict>;
};

export type MutationInsertClassGroupTeacherOneArgs = {
  object: ClassGroupTeacherInsertInput;
  onConflict?: InputMaybe<ClassGroupTeacherOnConflict>;
};

export type MutationInsertClassGroupTeacherSubjectsArgs = {
  objects: Array<ClassGroupTeacherSubjectsInsertInput>;
  onConflict?: InputMaybe<ClassGroupTeacherSubjectsOnConflict>;
};

export type MutationInsertClassGroupTeacherSubjectsOneArgs = {
  object: ClassGroupTeacherSubjectsInsertInput;
  onConflict?: InputMaybe<ClassGroupTeacherSubjectsOnConflict>;
};

export type MutationInsertCohortArgs = {
  objects: Array<CohortInsertInput>;
  onConflict?: InputMaybe<CohortOnConflict>;
};

export type MutationInsertCohortOneArgs = {
  object: CohortInsertInput;
  onConflict?: InputMaybe<CohortOnConflict>;
};

export type MutationInsertContentArgs = {
  objects: Array<ContentInsertInput>;
  onConflict?: InputMaybe<ContentOnConflict>;
};

export type MutationInsertContentAttachmentsArgs = {
  objects: Array<ContentAttachmentsInsertInput>;
  onConflict?: InputMaybe<ContentAttachmentsOnConflict>;
};

export type MutationInsertContentAttachmentsOneArgs = {
  object: ContentAttachmentsInsertInput;
  onConflict?: InputMaybe<ContentAttachmentsOnConflict>;
};

export type MutationInsertContentOneArgs = {
  object: ContentInsertInput;
  onConflict?: InputMaybe<ContentOnConflict>;
};

export type MutationInsertDocumentArgs = {
  objects: Array<DocumentInsertInput>;
  onConflict?: InputMaybe<DocumentOnConflict>;
};

export type MutationInsertDocumentOneArgs = {
  object: DocumentInsertInput;
  onConflict?: InputMaybe<DocumentOnConflict>;
};

export type MutationInsertEventArgs = {
  objects: Array<EventInsertInput>;
  onConflict?: InputMaybe<EventOnConflict>;
};

export type MutationInsertEventApprovalArgs = {
  objects: Array<EventApprovalInsertInput>;
  onConflict?: InputMaybe<EventApprovalOnConflict>;
};

export type MutationInsertEventApprovalOneArgs = {
  object: EventApprovalInsertInput;
  onConflict?: InputMaybe<EventApprovalOnConflict>;
};

export type MutationInsertEventApprovalStepArgs = {
  objects: Array<EventApprovalStepInsertInput>;
  onConflict?: InputMaybe<EventApprovalStepOnConflict>;
};

export type MutationInsertEventApprovalStepNotifieesArgs = {
  objects: Array<EventApprovalStepNotifieesInsertInput>;
  onConflict?: InputMaybe<EventApprovalStepNotifieesOnConflict>;
};

export type MutationInsertEventApprovalStepNotifieesOneArgs = {
  object: EventApprovalStepNotifieesInsertInput;
  onConflict?: InputMaybe<EventApprovalStepNotifieesOnConflict>;
};

export type MutationInsertEventApprovalStepOneArgs = {
  object: EventApprovalStepInsertInput;
  onConflict?: InputMaybe<EventApprovalStepOnConflict>;
};

export type MutationInsertEventApprovalStepValidatorsArgs = {
  objects: Array<EventApprovalStepValidatorsInsertInput>;
  onConflict?: InputMaybe<EventApprovalStepValidatorsOnConflict>;
};

export type MutationInsertEventApprovalStepValidatorsOneArgs = {
  object: EventApprovalStepValidatorsInsertInput;
  onConflict?: InputMaybe<EventApprovalStepValidatorsOnConflict>;
};

export type MutationInsertEventFavoriteArgs = {
  objects: Array<EventFavoriteInsertInput>;
  onConflict?: InputMaybe<EventFavoriteOnConflict>;
};

export type MutationInsertEventFavoriteOneArgs = {
  object: EventFavoriteInsertInput;
  onConflict?: InputMaybe<EventFavoriteOnConflict>;
};

export type MutationInsertEventJoinArgs = {
  objects: Array<EventJoinInsertInput>;
  onConflict?: InputMaybe<EventJoinOnConflict>;
};

export type MutationInsertEventJoinOneArgs = {
  object: EventJoinInsertInput;
  onConflict?: InputMaybe<EventJoinOnConflict>;
};

export type MutationInsertEventOneArgs = {
  object: EventInsertInput;
  onConflict?: InputMaybe<EventOnConflict>;
};

export type MutationInsertEventOrganizeArgs = {
  objects: Array<EventOrganizeInsertInput>;
  onConflict?: InputMaybe<EventOrganizeOnConflict>;
};

export type MutationInsertEventOrganizeOneArgs = {
  object: EventOrganizeInsertInput;
  onConflict?: InputMaybe<EventOrganizeOnConflict>;
};

export type MutationInsertEventSupervisorArgs = {
  objects: Array<EventSupervisorInsertInput>;
  onConflict?: InputMaybe<EventSupervisorOnConflict>;
};

export type MutationInsertEventSupervisorOneArgs = {
  object: EventSupervisorInsertInput;
  onConflict?: InputMaybe<EventSupervisorOnConflict>;
};

export type MutationInsertEventTagsArgs = {
  objects: Array<EventTagsInsertInput>;
  onConflict?: InputMaybe<EventTagsOnConflict>;
};

export type MutationInsertEventTagsOneArgs = {
  object: EventTagsInsertInput;
  onConflict?: InputMaybe<EventTagsOnConflict>;
};

export type MutationInsertExpenseArgs = {
  objects: Array<ExpenseInsertInput>;
  onConflict?: InputMaybe<ExpenseOnConflict>;
};

export type MutationInsertExpenseItemArgs = {
  objects: Array<ExpenseItemInsertInput>;
  onConflict?: InputMaybe<ExpenseItemOnConflict>;
};

export type MutationInsertExpenseItemAttachmentsArgs = {
  objects: Array<ExpenseItemAttachmentsInsertInput>;
  onConflict?: InputMaybe<ExpenseItemAttachmentsOnConflict>;
};

export type MutationInsertExpenseItemAttachmentsOneArgs = {
  object: ExpenseItemAttachmentsInsertInput;
  onConflict?: InputMaybe<ExpenseItemAttachmentsOnConflict>;
};

export type MutationInsertExpenseItemOneArgs = {
  object: ExpenseItemInsertInput;
  onConflict?: InputMaybe<ExpenseItemOnConflict>;
};

export type MutationInsertExpenseOneArgs = {
  object: ExpenseInsertInput;
  onConflict?: InputMaybe<ExpenseOnConflict>;
};

export type MutationInsertFavoriteArgs = {
  objects: Array<FavoriteInsertInput>;
  onConflict?: InputMaybe<FavoriteOnConflict>;
};

export type MutationInsertFavoriteOneArgs = {
  object: FavoriteInsertInput;
  onConflict?: InputMaybe<FavoriteOnConflict>;
};

export type MutationInsertFileUploadArgs = {
  objects: Array<FileUploadInsertInput>;
  onConflict?: InputMaybe<FileUploadOnConflict>;
};

export type MutationInsertFileUploadOneArgs = {
  object: FileUploadInsertInput;
  onConflict?: InputMaybe<FileUploadOnConflict>;
};

export type MutationInsertFinanceArgs = {
  objects: Array<FinanceInsertInput>;
  onConflict?: InputMaybe<FinanceOnConflict>;
};

export type MutationInsertFinanceAttachmentsArgs = {
  objects: Array<FinanceAttachmentsInsertInput>;
  onConflict?: InputMaybe<FinanceAttachmentsOnConflict>;
};

export type MutationInsertFinanceAttachmentsOneArgs = {
  object: FinanceAttachmentsInsertInput;
  onConflict?: InputMaybe<FinanceAttachmentsOnConflict>;
};

export type MutationInsertFinanceOneArgs = {
  object: FinanceInsertInput;
  onConflict?: InputMaybe<FinanceOnConflict>;
};

export type MutationInsertFinanceTagsArgs = {
  objects: Array<FinanceTagsInsertInput>;
  onConflict?: InputMaybe<FinanceTagsOnConflict>;
};

export type MutationInsertFinanceTagsOneArgs = {
  object: FinanceTagsInsertInput;
  onConflict?: InputMaybe<FinanceTagsOnConflict>;
};

export type MutationInsertFollowArgs = {
  objects: Array<FollowInsertInput>;
  onConflict?: InputMaybe<FollowOnConflict>;
};

export type MutationInsertFollowOneArgs = {
  object: FollowInsertInput;
  onConflict?: InputMaybe<FollowOnConflict>;
};

export type MutationInsertFormArgs = {
  objects: Array<FormInsertInput>;
  onConflict?: InputMaybe<FormOnConflict>;
};

export type MutationInsertFormOneArgs = {
  object: FormInsertInput;
  onConflict?: InputMaybe<FormOnConflict>;
};

export type MutationInsertFormSubmissionArgs = {
  objects: Array<FormSubmissionInsertInput>;
  onConflict?: InputMaybe<FormSubmissionOnConflict>;
};

export type MutationInsertFormSubmissionAttachmentsArgs = {
  objects: Array<FormSubmissionAttachmentsInsertInput>;
  onConflict?: InputMaybe<FormSubmissionAttachmentsOnConflict>;
};

export type MutationInsertFormSubmissionAttachmentsOneArgs = {
  object: FormSubmissionAttachmentsInsertInput;
  onConflict?: InputMaybe<FormSubmissionAttachmentsOnConflict>;
};

export type MutationInsertFormSubmissionOneArgs = {
  object: FormSubmissionInsertInput;
  onConflict?: InputMaybe<FormSubmissionOnConflict>;
};

export type MutationInsertGrantArgs = {
  objects: Array<GrantInsertInput>;
  onConflict?: InputMaybe<GrantOnConflict>;
};

export type MutationInsertGrantAllocateArgs = {
  objects: Array<GrantAllocateInsertInput>;
  onConflict?: InputMaybe<GrantAllocateOnConflict>;
};

export type MutationInsertGrantAllocateAttachmentsArgs = {
  objects: Array<GrantAllocateAttachmentsInsertInput>;
  onConflict?: InputMaybe<GrantAllocateAttachmentsOnConflict>;
};

export type MutationInsertGrantAllocateAttachmentsOneArgs = {
  object: GrantAllocateAttachmentsInsertInput;
  onConflict?: InputMaybe<GrantAllocateAttachmentsOnConflict>;
};

export type MutationInsertGrantAllocateOneArgs = {
  object: GrantAllocateInsertInput;
  onConflict?: InputMaybe<GrantAllocateOnConflict>;
};

export type MutationInsertGrantAttachmentsArgs = {
  objects: Array<GrantAttachmentsInsertInput>;
  onConflict?: InputMaybe<GrantAttachmentsOnConflict>;
};

export type MutationInsertGrantAttachmentsOneArgs = {
  object: GrantAttachmentsInsertInput;
  onConflict?: InputMaybe<GrantAttachmentsOnConflict>;
};

export type MutationInsertGrantOneArgs = {
  object: GrantInsertInput;
  onConflict?: InputMaybe<GrantOnConflict>;
};

export type MutationInsertIndividualArgs = {
  objects: Array<IndividualInsertInput>;
  onConflict?: InputMaybe<IndividualOnConflict>;
};

export type MutationInsertIndividualOneArgs = {
  object: IndividualInsertInput;
  onConflict?: InputMaybe<IndividualOnConflict>;
};

export type MutationInsertIssueArgs = {
  objects: Array<IssueInsertInput>;
  onConflict?: InputMaybe<IssueOnConflict>;
};

export type MutationInsertIssueContributorsArgs = {
  objects: Array<IssueContributorsInsertInput>;
  onConflict?: InputMaybe<IssueContributorsOnConflict>;
};

export type MutationInsertIssueContributorsOneArgs = {
  object: IssueContributorsInsertInput;
  onConflict?: InputMaybe<IssueContributorsOnConflict>;
};

export type MutationInsertIssueOneArgs = {
  object: IssueInsertInput;
  onConflict?: InputMaybe<IssueOnConflict>;
};

export type MutationInsertIssueTagsArgs = {
  objects: Array<IssueTagsInsertInput>;
  onConflict?: InputMaybe<IssueTagsOnConflict>;
};

export type MutationInsertIssueTagsOneArgs = {
  object: IssueTagsInsertInput;
  onConflict?: InputMaybe<IssueTagsOnConflict>;
};

export type MutationInsertLegalUnitArgs = {
  objects: Array<LegalUnitInsertInput>;
  onConflict?: InputMaybe<LegalUnitOnConflict>;
};

export type MutationInsertLegalUnitLocationArgs = {
  objects: Array<LegalUnitLocationInsertInput>;
  onConflict?: InputMaybe<LegalUnitLocationOnConflict>;
};

export type MutationInsertLegalUnitLocationOneArgs = {
  object: LegalUnitLocationInsertInput;
  onConflict?: InputMaybe<LegalUnitLocationOnConflict>;
};

export type MutationInsertLegalUnitOneArgs = {
  object: LegalUnitInsertInput;
  onConflict?: InputMaybe<LegalUnitOnConflict>;
};

export type MutationInsertLocationArgs = {
  objects: Array<LocationInsertInput>;
  onConflict?: InputMaybe<LocationOnConflict>;
};

export type MutationInsertLocationImagesArgs = {
  objects: Array<LocationImagesInsertInput>;
  onConflict?: InputMaybe<LocationImagesOnConflict>;
};

export type MutationInsertLocationImagesOneArgs = {
  object: LocationImagesInsertInput;
  onConflict?: InputMaybe<LocationImagesOnConflict>;
};

export type MutationInsertLocationOneArgs = {
  object: LocationInsertInput;
  onConflict?: InputMaybe<LocationOnConflict>;
};

export type MutationInsertMissionArgs = {
  objects: Array<MissionInsertInput>;
  onConflict?: InputMaybe<MissionOnConflict>;
};

export type MutationInsertMissionJoinArgs = {
  objects: Array<MissionJoinInsertInput>;
  onConflict?: InputMaybe<MissionJoinOnConflict>;
};

export type MutationInsertMissionJoinOneArgs = {
  object: MissionJoinInsertInput;
  onConflict?: InputMaybe<MissionJoinOnConflict>;
};

export type MutationInsertMissionOneArgs = {
  object: MissionInsertInput;
  onConflict?: InputMaybe<MissionOnConflict>;
};

export type MutationInsertPoleArgs = {
  objects: Array<PoleInsertInput>;
  onConflict?: InputMaybe<PoleOnConflict>;
};

export type MutationInsertPoleOneArgs = {
  object: PoleInsertInput;
  onConflict?: InputMaybe<PoleOnConflict>;
};

export type MutationInsertProjectArgs = {
  objects: Array<ProjectInsertInput>;
  onConflict?: InputMaybe<ProjectOnConflict>;
};

export type MutationInsertProjectOneArgs = {
  object: ProjectInsertInput;
  onConflict?: InputMaybe<ProjectOnConflict>;
};

export type MutationInsertProjectSupervisorsArgs = {
  objects: Array<ProjectSupervisorsInsertInput>;
  onConflict?: InputMaybe<ProjectSupervisorsOnConflict>;
};

export type MutationInsertProjectSupervisorsOneArgs = {
  object: ProjectSupervisorsInsertInput;
  onConflict?: InputMaybe<ProjectSupervisorsOnConflict>;
};

export type MutationInsertProjectTagsArgs = {
  objects: Array<ProjectTagsInsertInput>;
  onConflict?: InputMaybe<ProjectTagsOnConflict>;
};

export type MutationInsertProjectTagsOneArgs = {
  object: ProjectTagsInsertInput;
  onConflict?: InputMaybe<ProjectTagsOnConflict>;
};

export type MutationInsertReactionArgs = {
  objects: Array<ReactionInsertInput>;
  onConflict?: InputMaybe<ReactionOnConflict>;
};

export type MutationInsertReactionOneArgs = {
  object: ReactionInsertInput;
  onConflict?: InputMaybe<ReactionOnConflict>;
};

export type MutationInsertReportArgs = {
  objects: Array<ReportInsertInput>;
  onConflict?: InputMaybe<ReportOnConflict>;
};

export type MutationInsertReportOneArgs = {
  object: ReportInsertInput;
  onConflict?: InputMaybe<ReportOnConflict>;
};

export type MutationInsertRoleArgs = {
  objects: Array<RoleInsertInput>;
  onConflict?: InputMaybe<RoleOnConflict>;
};

export type MutationInsertRoleOneArgs = {
  object: RoleInsertInput;
  onConflict?: InputMaybe<RoleOnConflict>;
};

export type MutationInsertSessionArgs = {
  objects: Array<SessionInsertInput>;
  onConflict?: InputMaybe<SessionOnConflict>;
};

export type MutationInsertSessionOneArgs = {
  object: SessionInsertInput;
  onConflict?: InputMaybe<SessionOnConflict>;
};

export type MutationInsertShortcutArgs = {
  objects: Array<ShortcutInsertInput>;
  onConflict?: InputMaybe<ShortcutOnConflict>;
};

export type MutationInsertShortcutOneArgs = {
  object: ShortcutInsertInput;
  onConflict?: InputMaybe<ShortcutOnConflict>;
};

export type MutationInsertSocialArgs = {
  objects: Array<SocialInsertInput>;
  onConflict?: InputMaybe<SocialOnConflict>;
};

export type MutationInsertSocialOneArgs = {
  object: SocialInsertInput;
  onConflict?: InputMaybe<SocialOnConflict>;
};

export type MutationInsertSubjectArgs = {
  objects: Array<SubjectInsertInput>;
  onConflict?: InputMaybe<SubjectOnConflict>;
};

export type MutationInsertSubjectClassGroupsArgs = {
  objects: Array<SubjectClassGroupsInsertInput>;
  onConflict?: InputMaybe<SubjectClassGroupsOnConflict>;
};

export type MutationInsertSubjectClassGroupsOneArgs = {
  object: SubjectClassGroupsInsertInput;
  onConflict?: InputMaybe<SubjectClassGroupsOnConflict>;
};

export type MutationInsertSubjectOneArgs = {
  object: SubjectInsertInput;
  onConflict?: InputMaybe<SubjectOnConflict>;
};

export type MutationInsertTagArgs = {
  objects: Array<TagInsertInput>;
  onConflict?: InputMaybe<TagOnConflict>;
};

export type MutationInsertTagOneArgs = {
  object: TagInsertInput;
  onConflict?: InputMaybe<TagOnConflict>;
};

export type MutationInsertTeamArgs = {
  objects: Array<TeamInsertInput>;
  onConflict?: InputMaybe<TeamOnConflict>;
};

export type MutationInsertTeamHistoryArgs = {
  objects: Array<TeamHistoryInsertInput>;
  onConflict?: InputMaybe<TeamHistoryOnConflict>;
};

export type MutationInsertTeamHistoryOneArgs = {
  object: TeamHistoryInsertInput;
  onConflict?: InputMaybe<TeamHistoryOnConflict>;
};

export type MutationInsertTeamJoinArgs = {
  objects: Array<TeamJoinInsertInput>;
  onConflict?: InputMaybe<TeamJoinOnConflict>;
};

export type MutationInsertTeamJoinOneArgs = {
  object: TeamJoinInsertInput;
  onConflict?: InputMaybe<TeamJoinOnConflict>;
};

export type MutationInsertTeamMemberArgs = {
  objects: Array<TeamMemberInsertInput>;
  onConflict?: InputMaybe<TeamMemberOnConflict>;
};

export type MutationInsertTeamMemberOneArgs = {
  object: TeamMemberInsertInput;
  onConflict?: InputMaybe<TeamMemberOnConflict>;
};

export type MutationInsertTeamMemberRolesArgs = {
  objects: Array<TeamMemberRolesInsertInput>;
  onConflict?: InputMaybe<TeamMemberRolesOnConflict>;
};

export type MutationInsertTeamMemberRolesOneArgs = {
  object: TeamMemberRolesInsertInput;
  onConflict?: InputMaybe<TeamMemberRolesOnConflict>;
};

export type MutationInsertTeamMetricArgs = {
  objects: Array<TeamMetricInsertInput>;
  onConflict?: InputMaybe<TeamMetricOnConflict>;
};

export type MutationInsertTeamMetricOneArgs = {
  object: TeamMetricInsertInput;
  onConflict?: InputMaybe<TeamMetricOnConflict>;
};

export type MutationInsertTeamOneArgs = {
  object: TeamInsertInput;
  onConflict?: InputMaybe<TeamOnConflict>;
};

export type MutationInsertTenantArgs = {
  objects: Array<TenantInsertInput>;
  onConflict?: InputMaybe<TenantOnConflict>;
};

export type MutationInsertTenantOneArgs = {
  object: TenantInsertInput;
  onConflict?: InputMaybe<TenantOnConflict>;
};

export type MutationInsertTenantOrganizeArgs = {
  objects: Array<TenantOrganizeInsertInput>;
  onConflict?: InputMaybe<TenantOrganizeOnConflict>;
};

export type MutationInsertTenantOrganizeOneArgs = {
  object: TenantOrganizeInsertInput;
  onConflict?: InputMaybe<TenantOrganizeOnConflict>;
};

export type MutationInsertThreadArgs = {
  objects: Array<ThreadInsertInput>;
  onConflict?: InputMaybe<ThreadOnConflict>;
};

export type MutationInsertThreadContributorsArgs = {
  objects: Array<ThreadContributorsInsertInput>;
  onConflict?: InputMaybe<ThreadContributorsOnConflict>;
};

export type MutationInsertThreadContributorsOneArgs = {
  object: ThreadContributorsInsertInput;
  onConflict?: InputMaybe<ThreadContributorsOnConflict>;
};

export type MutationInsertThreadOneArgs = {
  object: ThreadInsertInput;
  onConflict?: InputMaybe<ThreadOnConflict>;
};

export type MutationInsertThreadTagsArgs = {
  objects: Array<ThreadTagsInsertInput>;
  onConflict?: InputMaybe<ThreadTagsOnConflict>;
};

export type MutationInsertThreadTagsOneArgs = {
  object: ThreadTagsInsertInput;
  onConflict?: InputMaybe<ThreadTagsOnConflict>;
};

export type MutationInsertUserArgs = {
  objects: Array<UserInsertInput>;
  onConflict?: InputMaybe<UserOnConflict>;
};

export type MutationInsertUserOneArgs = {
  object: UserInsertInput;
  onConflict?: InputMaybe<UserOnConflict>;
};

export type MutationInsertValidationArgs = {
  objects: Array<ValidationInsertInput>;
  onConflict?: InputMaybe<ValidationOnConflict>;
};

export type MutationInsertValidationOneArgs = {
  object: ValidationInsertInput;
  onConflict?: InputMaybe<ValidationOnConflict>;
};

export type MutationInsertViewArgs = {
  objects: Array<ViewInsertInput>;
  onConflict?: InputMaybe<ViewOnConflict>;
};

export type MutationInsertViewOneArgs = {
  object: ViewInsertInput;
  onConflict?: InputMaybe<ViewOnConflict>;
};

export type MutationInsertVoteArgs = {
  objects: Array<VoteInsertInput>;
  onConflict?: InputMaybe<VoteOnConflict>;
};

export type MutationInsertVoteOneArgs = {
  object: VoteInsertInput;
  onConflict?: InputMaybe<VoteOnConflict>;
};

export type MutationLoginArgs = {
  dto: LoginInput;
};

export type MutationSingleUploadArgs = {
  bucket?: InputMaybe<Scalars['String']['input']>;
  entityId?: InputMaybe<Scalars['String']['input']>;
  entityName?: InputMaybe<Scalars['String']['input']>;
  file: Scalars['Upload']['input'];
};

export type MutationUpdateAccountArgs = {
  _inc?: InputMaybe<AccountIncInput>;
  _set?: InputMaybe<AccountSetInput>;
  where: AccountBoolExp;
};

export type MutationUpdateAccountByPkArgs = {
  _inc?: InputMaybe<AccountIncInput>;
  _set?: InputMaybe<AccountSetInput>;
  pkColumns: AccountPkColumnsInput;
};

export type MutationUpdateAccountManyArgs = {
  updates: Array<AccountUpdates>;
};

export type MutationUpdateActionArgs = {
  _inc?: InputMaybe<ActionIncInput>;
  _set?: InputMaybe<ActionSetInput>;
  where: ActionBoolExp;
};

export type MutationUpdateActionByPkArgs = {
  _inc?: InputMaybe<ActionIncInput>;
  _set?: InputMaybe<ActionSetInput>;
  pkColumns: ActionPkColumnsInput;
};

export type MutationUpdateActionManyArgs = {
  updates: Array<ActionUpdates>;
};

export type MutationUpdateActorArgs = {
  _inc?: InputMaybe<ActorIncInput>;
  _set?: InputMaybe<ActorSetInput>;
  where: ActorBoolExp;
};

export type MutationUpdateActorByPkArgs = {
  _inc?: InputMaybe<ActorIncInput>;
  _set?: InputMaybe<ActorSetInput>;
  pkColumns: ActorPkColumnsInput;
};

export type MutationUpdateActorImageArgs = {
  _inc?: InputMaybe<ActorImageIncInput>;
  _set?: InputMaybe<ActorImageSetInput>;
  where: ActorImageBoolExp;
};

export type MutationUpdateActorImageByPkArgs = {
  _inc?: InputMaybe<ActorImageIncInput>;
  _set?: InputMaybe<ActorImageSetInput>;
  pkColumns: ActorImagePkColumnsInput;
};

export type MutationUpdateActorImageManyArgs = {
  updates: Array<ActorImageUpdates>;
};

export type MutationUpdateActorManyArgs = {
  updates: Array<ActorUpdates>;
};

export type MutationUpdateActorTagsArgs = {
  _inc?: InputMaybe<ActorTagsIncInput>;
  _set?: InputMaybe<ActorTagsSetInput>;
  where: ActorTagsBoolExp;
};

export type MutationUpdateActorTagsByPkArgs = {
  _inc?: InputMaybe<ActorTagsIncInput>;
  _set?: InputMaybe<ActorTagsSetInput>;
  pkColumns: ActorTagsPkColumnsInput;
};

export type MutationUpdateActorTagsManyArgs = {
  updates: Array<ActorTagsUpdates>;
};

export type MutationUpdateAddressArgs = {
  _inc?: InputMaybe<AddressIncInput>;
  _set?: InputMaybe<AddressSetInput>;
  where: AddressBoolExp;
};

export type MutationUpdateAddressByPkArgs = {
  _inc?: InputMaybe<AddressIncInput>;
  _set?: InputMaybe<AddressSetInput>;
  pkColumns: AddressPkColumnsInput;
};

export type MutationUpdateAddressManyArgs = {
  updates: Array<AddressUpdates>;
};

export type MutationUpdateBankArgs = {
  _inc?: InputMaybe<BankIncInput>;
  _set?: InputMaybe<BankSetInput>;
  where: BankBoolExp;
};

export type MutationUpdateBankByPkArgs = {
  _inc?: InputMaybe<BankIncInput>;
  _set?: InputMaybe<BankSetInput>;
  pkColumns: BankPkColumnsInput;
};

export type MutationUpdateBankManyArgs = {
  updates: Array<BankUpdates>;
};

export type MutationUpdateBotArgs = {
  _inc?: InputMaybe<BotIncInput>;
  _set?: InputMaybe<BotSetInput>;
  where: BotBoolExp;
};

export type MutationUpdateBotByPkArgs = {
  _inc?: InputMaybe<BotIncInput>;
  _set?: InputMaybe<BotSetInput>;
  pkColumns: BotPkColumnsInput;
};

export type MutationUpdateBotManyArgs = {
  updates: Array<BotUpdates>;
};

export type MutationUpdateCampusArgs = {
  _inc?: InputMaybe<CampusIncInput>;
  _set?: InputMaybe<CampusSetInput>;
  where: CampusBoolExp;
};

export type MutationUpdateCampusByPkArgs = {
  _inc?: InputMaybe<CampusIncInput>;
  _set?: InputMaybe<CampusSetInput>;
  pkColumns: CampusPkColumnsInput;
};

export type MutationUpdateCampusClusterArgs = {
  _inc?: InputMaybe<CampusClusterIncInput>;
  _set?: InputMaybe<CampusClusterSetInput>;
  where: CampusClusterBoolExp;
};

export type MutationUpdateCampusClusterByPkArgs = {
  _inc?: InputMaybe<CampusClusterIncInput>;
  _set?: InputMaybe<CampusClusterSetInput>;
  pkColumns: CampusClusterPkColumnsInput;
};

export type MutationUpdateCampusClusterManyArgs = {
  updates: Array<CampusClusterUpdates>;
};

export type MutationUpdateCampusManyArgs = {
  updates: Array<CampusUpdates>;
};

export type MutationUpdateCanteenArgs = {
  _inc?: InputMaybe<CanteenIncInput>;
  _set?: InputMaybe<CanteenSetInput>;
  where: CanteenBoolExp;
};

export type MutationUpdateCanteenByPkArgs = {
  _inc?: InputMaybe<CanteenIncInput>;
  _set?: InputMaybe<CanteenSetInput>;
  pkColumns: CanteenPkColumnsInput;
};

export type MutationUpdateCanteenFoodArgs = {
  _inc?: InputMaybe<CanteenFoodIncInput>;
  _set?: InputMaybe<CanteenFoodSetInput>;
  where: CanteenFoodBoolExp;
};

export type MutationUpdateCanteenFoodByPkArgs = {
  _inc?: InputMaybe<CanteenFoodIncInput>;
  _set?: InputMaybe<CanteenFoodSetInput>;
  pkColumns: CanteenFoodPkColumnsInput;
};

export type MutationUpdateCanteenFoodManyArgs = {
  updates: Array<CanteenFoodUpdates>;
};

export type MutationUpdateCanteenManyArgs = {
  updates: Array<CanteenUpdates>;
};

export type MutationUpdateCanteenMenuArgs = {
  _inc?: InputMaybe<CanteenMenuIncInput>;
  _set?: InputMaybe<CanteenMenuSetInput>;
  where: CanteenMenuBoolExp;
};

export type MutationUpdateCanteenMenuByPkArgs = {
  _inc?: InputMaybe<CanteenMenuIncInput>;
  _set?: InputMaybe<CanteenMenuSetInput>;
  pkColumns: CanteenMenuPkColumnsInput;
};

export type MutationUpdateCanteenMenuManyArgs = {
  updates: Array<CanteenMenuUpdates>;
};

export type MutationUpdateClassGroupArgs = {
  _inc?: InputMaybe<ClassGroupIncInput>;
  _set?: InputMaybe<ClassGroupSetInput>;
  where: ClassGroupBoolExp;
};

export type MutationUpdateClassGroupByPkArgs = {
  _inc?: InputMaybe<ClassGroupIncInput>;
  _set?: InputMaybe<ClassGroupSetInput>;
  pkColumns: ClassGroupPkColumnsInput;
};

export type MutationUpdateClassGroupManyArgs = {
  updates: Array<ClassGroupUpdates>;
};

export type MutationUpdateClassGroupTeacherArgs = {
  _inc?: InputMaybe<ClassGroupTeacherIncInput>;
  _set?: InputMaybe<ClassGroupTeacherSetInput>;
  where: ClassGroupTeacherBoolExp;
};

export type MutationUpdateClassGroupTeacherByPkArgs = {
  _inc?: InputMaybe<ClassGroupTeacherIncInput>;
  _set?: InputMaybe<ClassGroupTeacherSetInput>;
  pkColumns: ClassGroupTeacherPkColumnsInput;
};

export type MutationUpdateClassGroupTeacherManyArgs = {
  updates: Array<ClassGroupTeacherUpdates>;
};

export type MutationUpdateClassGroupTeacherSubjectsArgs = {
  _inc?: InputMaybe<ClassGroupTeacherSubjectsIncInput>;
  _set?: InputMaybe<ClassGroupTeacherSubjectsSetInput>;
  where: ClassGroupTeacherSubjectsBoolExp;
};

export type MutationUpdateClassGroupTeacherSubjectsByPkArgs = {
  _inc?: InputMaybe<ClassGroupTeacherSubjectsIncInput>;
  _set?: InputMaybe<ClassGroupTeacherSubjectsSetInput>;
  pkColumns: ClassGroupTeacherSubjectsPkColumnsInput;
};

export type MutationUpdateClassGroupTeacherSubjectsManyArgs = {
  updates: Array<ClassGroupTeacherSubjectsUpdates>;
};

export type MutationUpdateCohortArgs = {
  _inc?: InputMaybe<CohortIncInput>;
  _set?: InputMaybe<CohortSetInput>;
  where: CohortBoolExp;
};

export type MutationUpdateCohortByPkArgs = {
  _inc?: InputMaybe<CohortIncInput>;
  _set?: InputMaybe<CohortSetInput>;
  pkColumns: CohortPkColumnsInput;
};

export type MutationUpdateCohortManyArgs = {
  updates: Array<CohortUpdates>;
};

export type MutationUpdateContentArgs = {
  _inc?: InputMaybe<ContentIncInput>;
  _set?: InputMaybe<ContentSetInput>;
  where: ContentBoolExp;
};

export type MutationUpdateContentAttachmentsArgs = {
  _inc?: InputMaybe<ContentAttachmentsIncInput>;
  _set?: InputMaybe<ContentAttachmentsSetInput>;
  where: ContentAttachmentsBoolExp;
};

export type MutationUpdateContentAttachmentsByPkArgs = {
  _inc?: InputMaybe<ContentAttachmentsIncInput>;
  _set?: InputMaybe<ContentAttachmentsSetInput>;
  pkColumns: ContentAttachmentsPkColumnsInput;
};

export type MutationUpdateContentAttachmentsManyArgs = {
  updates: Array<ContentAttachmentsUpdates>;
};

export type MutationUpdateContentByPkArgs = {
  _inc?: InputMaybe<ContentIncInput>;
  _set?: InputMaybe<ContentSetInput>;
  pkColumns: ContentPkColumnsInput;
};

export type MutationUpdateContentManyArgs = {
  updates: Array<ContentUpdates>;
};

export type MutationUpdateDocumentArgs = {
  _inc?: InputMaybe<DocumentIncInput>;
  _set?: InputMaybe<DocumentSetInput>;
  where: DocumentBoolExp;
};

export type MutationUpdateDocumentByPkArgs = {
  _inc?: InputMaybe<DocumentIncInput>;
  _set?: InputMaybe<DocumentSetInput>;
  pkColumns: DocumentPkColumnsInput;
};

export type MutationUpdateDocumentManyArgs = {
  updates: Array<DocumentUpdates>;
};

export type MutationUpdateEventArgs = {
  _append?: InputMaybe<EventAppendInput>;
  _deleteAtPath?: InputMaybe<EventDeleteAtPathInput>;
  _deleteElem?: InputMaybe<EventDeleteElemInput>;
  _deleteKey?: InputMaybe<EventDeleteKeyInput>;
  _inc?: InputMaybe<EventIncInput>;
  _prepend?: InputMaybe<EventPrependInput>;
  _set?: InputMaybe<EventSetInput>;
  where: EventBoolExp;
};

export type MutationUpdateEventApprovalArgs = {
  _inc?: InputMaybe<EventApprovalIncInput>;
  _set?: InputMaybe<EventApprovalSetInput>;
  where: EventApprovalBoolExp;
};

export type MutationUpdateEventApprovalByPkArgs = {
  _inc?: InputMaybe<EventApprovalIncInput>;
  _set?: InputMaybe<EventApprovalSetInput>;
  pkColumns: EventApprovalPkColumnsInput;
};

export type MutationUpdateEventApprovalManyArgs = {
  updates: Array<EventApprovalUpdates>;
};

export type MutationUpdateEventApprovalStepArgs = {
  _inc?: InputMaybe<EventApprovalStepIncInput>;
  _set?: InputMaybe<EventApprovalStepSetInput>;
  where: EventApprovalStepBoolExp;
};

export type MutationUpdateEventApprovalStepByPkArgs = {
  _inc?: InputMaybe<EventApprovalStepIncInput>;
  _set?: InputMaybe<EventApprovalStepSetInput>;
  pkColumns: EventApprovalStepPkColumnsInput;
};

export type MutationUpdateEventApprovalStepManyArgs = {
  updates: Array<EventApprovalStepUpdates>;
};

export type MutationUpdateEventApprovalStepNotifieesArgs = {
  _inc?: InputMaybe<EventApprovalStepNotifieesIncInput>;
  _set?: InputMaybe<EventApprovalStepNotifieesSetInput>;
  where: EventApprovalStepNotifieesBoolExp;
};

export type MutationUpdateEventApprovalStepNotifieesByPkArgs = {
  _inc?: InputMaybe<EventApprovalStepNotifieesIncInput>;
  _set?: InputMaybe<EventApprovalStepNotifieesSetInput>;
  pkColumns: EventApprovalStepNotifieesPkColumnsInput;
};

export type MutationUpdateEventApprovalStepNotifieesManyArgs = {
  updates: Array<EventApprovalStepNotifieesUpdates>;
};

export type MutationUpdateEventApprovalStepValidatorsArgs = {
  _inc?: InputMaybe<EventApprovalStepValidatorsIncInput>;
  _set?: InputMaybe<EventApprovalStepValidatorsSetInput>;
  where: EventApprovalStepValidatorsBoolExp;
};

export type MutationUpdateEventApprovalStepValidatorsByPkArgs = {
  _inc?: InputMaybe<EventApprovalStepValidatorsIncInput>;
  _set?: InputMaybe<EventApprovalStepValidatorsSetInput>;
  pkColumns: EventApprovalStepValidatorsPkColumnsInput;
};

export type MutationUpdateEventApprovalStepValidatorsManyArgs = {
  updates: Array<EventApprovalStepValidatorsUpdates>;
};

export type MutationUpdateEventByPkArgs = {
  _append?: InputMaybe<EventAppendInput>;
  _deleteAtPath?: InputMaybe<EventDeleteAtPathInput>;
  _deleteElem?: InputMaybe<EventDeleteElemInput>;
  _deleteKey?: InputMaybe<EventDeleteKeyInput>;
  _inc?: InputMaybe<EventIncInput>;
  _prepend?: InputMaybe<EventPrependInput>;
  _set?: InputMaybe<EventSetInput>;
  pkColumns: EventPkColumnsInput;
};

export type MutationUpdateEventFavoriteArgs = {
  _inc?: InputMaybe<EventFavoriteIncInput>;
  _set?: InputMaybe<EventFavoriteSetInput>;
  where: EventFavoriteBoolExp;
};

export type MutationUpdateEventFavoriteByPkArgs = {
  _inc?: InputMaybe<EventFavoriteIncInput>;
  _set?: InputMaybe<EventFavoriteSetInput>;
  pkColumns: EventFavoritePkColumnsInput;
};

export type MutationUpdateEventFavoriteManyArgs = {
  updates: Array<EventFavoriteUpdates>;
};

export type MutationUpdateEventJoinArgs = {
  _inc?: InputMaybe<EventJoinIncInput>;
  _set?: InputMaybe<EventJoinSetInput>;
  where: EventJoinBoolExp;
};

export type MutationUpdateEventJoinByPkArgs = {
  _inc?: InputMaybe<EventJoinIncInput>;
  _set?: InputMaybe<EventJoinSetInput>;
  pkColumns: EventJoinPkColumnsInput;
};

export type MutationUpdateEventJoinManyArgs = {
  updates: Array<EventJoinUpdates>;
};

export type MutationUpdateEventManyArgs = {
  updates: Array<EventUpdates>;
};

export type MutationUpdateEventOrganizeArgs = {
  _inc?: InputMaybe<EventOrganizeIncInput>;
  _set?: InputMaybe<EventOrganizeSetInput>;
  where: EventOrganizeBoolExp;
};

export type MutationUpdateEventOrganizeByPkArgs = {
  _inc?: InputMaybe<EventOrganizeIncInput>;
  _set?: InputMaybe<EventOrganizeSetInput>;
  pkColumns: EventOrganizePkColumnsInput;
};

export type MutationUpdateEventOrganizeManyArgs = {
  updates: Array<EventOrganizeUpdates>;
};

export type MutationUpdateEventSupervisorArgs = {
  _inc?: InputMaybe<EventSupervisorIncInput>;
  _set?: InputMaybe<EventSupervisorSetInput>;
  where: EventSupervisorBoolExp;
};

export type MutationUpdateEventSupervisorByPkArgs = {
  _inc?: InputMaybe<EventSupervisorIncInput>;
  _set?: InputMaybe<EventSupervisorSetInput>;
  pkColumns: EventSupervisorPkColumnsInput;
};

export type MutationUpdateEventSupervisorManyArgs = {
  updates: Array<EventSupervisorUpdates>;
};

export type MutationUpdateEventTagsArgs = {
  _inc?: InputMaybe<EventTagsIncInput>;
  _set?: InputMaybe<EventTagsSetInput>;
  where: EventTagsBoolExp;
};

export type MutationUpdateEventTagsByPkArgs = {
  _inc?: InputMaybe<EventTagsIncInput>;
  _set?: InputMaybe<EventTagsSetInput>;
  pkColumns: EventTagsPkColumnsInput;
};

export type MutationUpdateEventTagsManyArgs = {
  updates: Array<EventTagsUpdates>;
};

export type MutationUpdateExpenseArgs = {
  _inc?: InputMaybe<ExpenseIncInput>;
  _set?: InputMaybe<ExpenseSetInput>;
  where: ExpenseBoolExp;
};

export type MutationUpdateExpenseByPkArgs = {
  _inc?: InputMaybe<ExpenseIncInput>;
  _set?: InputMaybe<ExpenseSetInput>;
  pkColumns: ExpensePkColumnsInput;
};

export type MutationUpdateExpenseItemArgs = {
  _inc?: InputMaybe<ExpenseItemIncInput>;
  _set?: InputMaybe<ExpenseItemSetInput>;
  where: ExpenseItemBoolExp;
};

export type MutationUpdateExpenseItemAttachmentsArgs = {
  _inc?: InputMaybe<ExpenseItemAttachmentsIncInput>;
  _set?: InputMaybe<ExpenseItemAttachmentsSetInput>;
  where: ExpenseItemAttachmentsBoolExp;
};

export type MutationUpdateExpenseItemAttachmentsByPkArgs = {
  _inc?: InputMaybe<ExpenseItemAttachmentsIncInput>;
  _set?: InputMaybe<ExpenseItemAttachmentsSetInput>;
  pkColumns: ExpenseItemAttachmentsPkColumnsInput;
};

export type MutationUpdateExpenseItemAttachmentsManyArgs = {
  updates: Array<ExpenseItemAttachmentsUpdates>;
};

export type MutationUpdateExpenseItemByPkArgs = {
  _inc?: InputMaybe<ExpenseItemIncInput>;
  _set?: InputMaybe<ExpenseItemSetInput>;
  pkColumns: ExpenseItemPkColumnsInput;
};

export type MutationUpdateExpenseItemManyArgs = {
  updates: Array<ExpenseItemUpdates>;
};

export type MutationUpdateExpenseManyArgs = {
  updates: Array<ExpenseUpdates>;
};

export type MutationUpdateFavoriteArgs = {
  _inc?: InputMaybe<FavoriteIncInput>;
  _set?: InputMaybe<FavoriteSetInput>;
  where: FavoriteBoolExp;
};

export type MutationUpdateFavoriteByPkArgs = {
  _inc?: InputMaybe<FavoriteIncInput>;
  _set?: InputMaybe<FavoriteSetInput>;
  pkColumns: FavoritePkColumnsInput;
};

export type MutationUpdateFavoriteManyArgs = {
  updates: Array<FavoriteUpdates>;
};

export type MutationUpdateFileUploadArgs = {
  _inc?: InputMaybe<FileUploadIncInput>;
  _set?: InputMaybe<FileUploadSetInput>;
  where: FileUploadBoolExp;
};

export type MutationUpdateFileUploadByPkArgs = {
  _inc?: InputMaybe<FileUploadIncInput>;
  _set?: InputMaybe<FileUploadSetInput>;
  pkColumns: FileUploadPkColumnsInput;
};

export type MutationUpdateFileUploadManyArgs = {
  updates: Array<FileUploadUpdates>;
};

export type MutationUpdateFinanceArgs = {
  _inc?: InputMaybe<FinanceIncInput>;
  _set?: InputMaybe<FinanceSetInput>;
  where: FinanceBoolExp;
};

export type MutationUpdateFinanceAttachmentsArgs = {
  _inc?: InputMaybe<FinanceAttachmentsIncInput>;
  _set?: InputMaybe<FinanceAttachmentsSetInput>;
  where: FinanceAttachmentsBoolExp;
};

export type MutationUpdateFinanceAttachmentsByPkArgs = {
  _inc?: InputMaybe<FinanceAttachmentsIncInput>;
  _set?: InputMaybe<FinanceAttachmentsSetInput>;
  pkColumns: FinanceAttachmentsPkColumnsInput;
};

export type MutationUpdateFinanceAttachmentsManyArgs = {
  updates: Array<FinanceAttachmentsUpdates>;
};

export type MutationUpdateFinanceByPkArgs = {
  _inc?: InputMaybe<FinanceIncInput>;
  _set?: InputMaybe<FinanceSetInput>;
  pkColumns: FinancePkColumnsInput;
};

export type MutationUpdateFinanceManyArgs = {
  updates: Array<FinanceUpdates>;
};

export type MutationUpdateFinanceTagsArgs = {
  _inc?: InputMaybe<FinanceTagsIncInput>;
  _set?: InputMaybe<FinanceTagsSetInput>;
  where: FinanceTagsBoolExp;
};

export type MutationUpdateFinanceTagsByPkArgs = {
  _inc?: InputMaybe<FinanceTagsIncInput>;
  _set?: InputMaybe<FinanceTagsSetInput>;
  pkColumns: FinanceTagsPkColumnsInput;
};

export type MutationUpdateFinanceTagsManyArgs = {
  updates: Array<FinanceTagsUpdates>;
};

export type MutationUpdateFollowArgs = {
  _inc?: InputMaybe<FollowIncInput>;
  _set?: InputMaybe<FollowSetInput>;
  where: FollowBoolExp;
};

export type MutationUpdateFollowByPkArgs = {
  _inc?: InputMaybe<FollowIncInput>;
  _set?: InputMaybe<FollowSetInput>;
  pkColumns: FollowPkColumnsInput;
};

export type MutationUpdateFollowManyArgs = {
  updates: Array<FollowUpdates>;
};

export type MutationUpdateFormArgs = {
  _append?: InputMaybe<FormAppendInput>;
  _deleteAtPath?: InputMaybe<FormDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FormDeleteElemInput>;
  _deleteKey?: InputMaybe<FormDeleteKeyInput>;
  _inc?: InputMaybe<FormIncInput>;
  _prepend?: InputMaybe<FormPrependInput>;
  _set?: InputMaybe<FormSetInput>;
  where: FormBoolExp;
};

export type MutationUpdateFormByPkArgs = {
  _append?: InputMaybe<FormAppendInput>;
  _deleteAtPath?: InputMaybe<FormDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FormDeleteElemInput>;
  _deleteKey?: InputMaybe<FormDeleteKeyInput>;
  _inc?: InputMaybe<FormIncInput>;
  _prepend?: InputMaybe<FormPrependInput>;
  _set?: InputMaybe<FormSetInput>;
  pkColumns: FormPkColumnsInput;
};

export type MutationUpdateFormManyArgs = {
  updates: Array<FormUpdates>;
};

export type MutationUpdateFormSubmissionArgs = {
  _append?: InputMaybe<FormSubmissionAppendInput>;
  _deleteAtPath?: InputMaybe<FormSubmissionDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FormSubmissionDeleteElemInput>;
  _deleteKey?: InputMaybe<FormSubmissionDeleteKeyInput>;
  _inc?: InputMaybe<FormSubmissionIncInput>;
  _prepend?: InputMaybe<FormSubmissionPrependInput>;
  _set?: InputMaybe<FormSubmissionSetInput>;
  where: FormSubmissionBoolExp;
};

export type MutationUpdateFormSubmissionAttachmentsArgs = {
  _inc?: InputMaybe<FormSubmissionAttachmentsIncInput>;
  _set?: InputMaybe<FormSubmissionAttachmentsSetInput>;
  where: FormSubmissionAttachmentsBoolExp;
};

export type MutationUpdateFormSubmissionAttachmentsByPkArgs = {
  _inc?: InputMaybe<FormSubmissionAttachmentsIncInput>;
  _set?: InputMaybe<FormSubmissionAttachmentsSetInput>;
  pkColumns: FormSubmissionAttachmentsPkColumnsInput;
};

export type MutationUpdateFormSubmissionAttachmentsManyArgs = {
  updates: Array<FormSubmissionAttachmentsUpdates>;
};

export type MutationUpdateFormSubmissionByPkArgs = {
  _append?: InputMaybe<FormSubmissionAppendInput>;
  _deleteAtPath?: InputMaybe<FormSubmissionDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FormSubmissionDeleteElemInput>;
  _deleteKey?: InputMaybe<FormSubmissionDeleteKeyInput>;
  _inc?: InputMaybe<FormSubmissionIncInput>;
  _prepend?: InputMaybe<FormSubmissionPrependInput>;
  _set?: InputMaybe<FormSubmissionSetInput>;
  pkColumns: FormSubmissionPkColumnsInput;
};

export type MutationUpdateFormSubmissionManyArgs = {
  updates: Array<FormSubmissionUpdates>;
};

export type MutationUpdateGrantArgs = {
  _inc?: InputMaybe<GrantIncInput>;
  _set?: InputMaybe<GrantSetInput>;
  where: GrantBoolExp;
};

export type MutationUpdateGrantAllocateArgs = {
  _inc?: InputMaybe<GrantAllocateIncInput>;
  _set?: InputMaybe<GrantAllocateSetInput>;
  where: GrantAllocateBoolExp;
};

export type MutationUpdateGrantAllocateAttachmentsArgs = {
  _inc?: InputMaybe<GrantAllocateAttachmentsIncInput>;
  _set?: InputMaybe<GrantAllocateAttachmentsSetInput>;
  where: GrantAllocateAttachmentsBoolExp;
};

export type MutationUpdateGrantAllocateAttachmentsByPkArgs = {
  _inc?: InputMaybe<GrantAllocateAttachmentsIncInput>;
  _set?: InputMaybe<GrantAllocateAttachmentsSetInput>;
  pkColumns: GrantAllocateAttachmentsPkColumnsInput;
};

export type MutationUpdateGrantAllocateAttachmentsManyArgs = {
  updates: Array<GrantAllocateAttachmentsUpdates>;
};

export type MutationUpdateGrantAllocateByPkArgs = {
  _inc?: InputMaybe<GrantAllocateIncInput>;
  _set?: InputMaybe<GrantAllocateSetInput>;
  pkColumns: GrantAllocatePkColumnsInput;
};

export type MutationUpdateGrantAllocateManyArgs = {
  updates: Array<GrantAllocateUpdates>;
};

export type MutationUpdateGrantAttachmentsArgs = {
  _inc?: InputMaybe<GrantAttachmentsIncInput>;
  _set?: InputMaybe<GrantAttachmentsSetInput>;
  where: GrantAttachmentsBoolExp;
};

export type MutationUpdateGrantAttachmentsByPkArgs = {
  _inc?: InputMaybe<GrantAttachmentsIncInput>;
  _set?: InputMaybe<GrantAttachmentsSetInput>;
  pkColumns: GrantAttachmentsPkColumnsInput;
};

export type MutationUpdateGrantAttachmentsManyArgs = {
  updates: Array<GrantAttachmentsUpdates>;
};

export type MutationUpdateGrantByPkArgs = {
  _inc?: InputMaybe<GrantIncInput>;
  _set?: InputMaybe<GrantSetInput>;
  pkColumns: GrantPkColumnsInput;
};

export type MutationUpdateGrantManyArgs = {
  updates: Array<GrantUpdates>;
};

export type MutationUpdateIndividualArgs = {
  _inc?: InputMaybe<IndividualIncInput>;
  _set?: InputMaybe<IndividualSetInput>;
  where: IndividualBoolExp;
};

export type MutationUpdateIndividualByPkArgs = {
  _inc?: InputMaybe<IndividualIncInput>;
  _set?: InputMaybe<IndividualSetInput>;
  pkColumns: IndividualPkColumnsInput;
};

export type MutationUpdateIndividualManyArgs = {
  updates: Array<IndividualUpdates>;
};

export type MutationUpdateIssueArgs = {
  _inc?: InputMaybe<IssueIncInput>;
  _set?: InputMaybe<IssueSetInput>;
  where: IssueBoolExp;
};

export type MutationUpdateIssueByPkArgs = {
  _inc?: InputMaybe<IssueIncInput>;
  _set?: InputMaybe<IssueSetInput>;
  pkColumns: IssuePkColumnsInput;
};

export type MutationUpdateIssueContributorsArgs = {
  _inc?: InputMaybe<IssueContributorsIncInput>;
  _set?: InputMaybe<IssueContributorsSetInput>;
  where: IssueContributorsBoolExp;
};

export type MutationUpdateIssueContributorsByPkArgs = {
  _inc?: InputMaybe<IssueContributorsIncInput>;
  _set?: InputMaybe<IssueContributorsSetInput>;
  pkColumns: IssueContributorsPkColumnsInput;
};

export type MutationUpdateIssueContributorsManyArgs = {
  updates: Array<IssueContributorsUpdates>;
};

export type MutationUpdateIssueManyArgs = {
  updates: Array<IssueUpdates>;
};

export type MutationUpdateIssueTagsArgs = {
  _inc?: InputMaybe<IssueTagsIncInput>;
  _set?: InputMaybe<IssueTagsSetInput>;
  where: IssueTagsBoolExp;
};

export type MutationUpdateIssueTagsByPkArgs = {
  _inc?: InputMaybe<IssueTagsIncInput>;
  _set?: InputMaybe<IssueTagsSetInput>;
  pkColumns: IssueTagsPkColumnsInput;
};

export type MutationUpdateIssueTagsManyArgs = {
  updates: Array<IssueTagsUpdates>;
};

export type MutationUpdateLegalUnitArgs = {
  _inc?: InputMaybe<LegalUnitIncInput>;
  _set?: InputMaybe<LegalUnitSetInput>;
  where: LegalUnitBoolExp;
};

export type MutationUpdateLegalUnitByPkArgs = {
  _inc?: InputMaybe<LegalUnitIncInput>;
  _set?: InputMaybe<LegalUnitSetInput>;
  pkColumns: LegalUnitPkColumnsInput;
};

export type MutationUpdateLegalUnitLocationArgs = {
  _inc?: InputMaybe<LegalUnitLocationIncInput>;
  _set?: InputMaybe<LegalUnitLocationSetInput>;
  where: LegalUnitLocationBoolExp;
};

export type MutationUpdateLegalUnitLocationByPkArgs = {
  _inc?: InputMaybe<LegalUnitLocationIncInput>;
  _set?: InputMaybe<LegalUnitLocationSetInput>;
  pkColumns: LegalUnitLocationPkColumnsInput;
};

export type MutationUpdateLegalUnitLocationManyArgs = {
  updates: Array<LegalUnitLocationUpdates>;
};

export type MutationUpdateLegalUnitManyArgs = {
  updates: Array<LegalUnitUpdates>;
};

export type MutationUpdateLocationArgs = {
  _inc?: InputMaybe<LocationIncInput>;
  _set?: InputMaybe<LocationSetInput>;
  where: LocationBoolExp;
};

export type MutationUpdateLocationByPkArgs = {
  _inc?: InputMaybe<LocationIncInput>;
  _set?: InputMaybe<LocationSetInput>;
  pkColumns: LocationPkColumnsInput;
};

export type MutationUpdateLocationImagesArgs = {
  _inc?: InputMaybe<LocationImagesIncInput>;
  _set?: InputMaybe<LocationImagesSetInput>;
  where: LocationImagesBoolExp;
};

export type MutationUpdateLocationImagesByPkArgs = {
  _inc?: InputMaybe<LocationImagesIncInput>;
  _set?: InputMaybe<LocationImagesSetInput>;
  pkColumns: LocationImagesPkColumnsInput;
};

export type MutationUpdateLocationImagesManyArgs = {
  updates: Array<LocationImagesUpdates>;
};

export type MutationUpdateLocationManyArgs = {
  updates: Array<LocationUpdates>;
};

export type MutationUpdateMissionArgs = {
  _inc?: InputMaybe<MissionIncInput>;
  _set?: InputMaybe<MissionSetInput>;
  where: MissionBoolExp;
};

export type MutationUpdateMissionByPkArgs = {
  _inc?: InputMaybe<MissionIncInput>;
  _set?: InputMaybe<MissionSetInput>;
  pkColumns: MissionPkColumnsInput;
};

export type MutationUpdateMissionJoinArgs = {
  _inc?: InputMaybe<MissionJoinIncInput>;
  _set?: InputMaybe<MissionJoinSetInput>;
  where: MissionJoinBoolExp;
};

export type MutationUpdateMissionJoinByPkArgs = {
  _inc?: InputMaybe<MissionJoinIncInput>;
  _set?: InputMaybe<MissionJoinSetInput>;
  pkColumns: MissionJoinPkColumnsInput;
};

export type MutationUpdateMissionJoinManyArgs = {
  updates: Array<MissionJoinUpdates>;
};

export type MutationUpdateMissionManyArgs = {
  updates: Array<MissionUpdates>;
};

export type MutationUpdatePoleArgs = {
  _inc?: InputMaybe<PoleIncInput>;
  _set?: InputMaybe<PoleSetInput>;
  where: PoleBoolExp;
};

export type MutationUpdatePoleByPkArgs = {
  _inc?: InputMaybe<PoleIncInput>;
  _set?: InputMaybe<PoleSetInput>;
  pkColumns: PolePkColumnsInput;
};

export type MutationUpdatePoleManyArgs = {
  updates: Array<PoleUpdates>;
};

export type MutationUpdateProjectArgs = {
  _inc?: InputMaybe<ProjectIncInput>;
  _set?: InputMaybe<ProjectSetInput>;
  where: ProjectBoolExp;
};

export type MutationUpdateProjectByPkArgs = {
  _inc?: InputMaybe<ProjectIncInput>;
  _set?: InputMaybe<ProjectSetInput>;
  pkColumns: ProjectPkColumnsInput;
};

export type MutationUpdateProjectManyArgs = {
  updates: Array<ProjectUpdates>;
};

export type MutationUpdateProjectSupervisorsArgs = {
  _inc?: InputMaybe<ProjectSupervisorsIncInput>;
  _set?: InputMaybe<ProjectSupervisorsSetInput>;
  where: ProjectSupervisorsBoolExp;
};

export type MutationUpdateProjectSupervisorsByPkArgs = {
  _inc?: InputMaybe<ProjectSupervisorsIncInput>;
  _set?: InputMaybe<ProjectSupervisorsSetInput>;
  pkColumns: ProjectSupervisorsPkColumnsInput;
};

export type MutationUpdateProjectSupervisorsManyArgs = {
  updates: Array<ProjectSupervisorsUpdates>;
};

export type MutationUpdateProjectTagsArgs = {
  _inc?: InputMaybe<ProjectTagsIncInput>;
  _set?: InputMaybe<ProjectTagsSetInput>;
  where: ProjectTagsBoolExp;
};

export type MutationUpdateProjectTagsByPkArgs = {
  _inc?: InputMaybe<ProjectTagsIncInput>;
  _set?: InputMaybe<ProjectTagsSetInput>;
  pkColumns: ProjectTagsPkColumnsInput;
};

export type MutationUpdateProjectTagsManyArgs = {
  updates: Array<ProjectTagsUpdates>;
};

export type MutationUpdateReactionArgs = {
  _inc?: InputMaybe<ReactionIncInput>;
  _set?: InputMaybe<ReactionSetInput>;
  where: ReactionBoolExp;
};

export type MutationUpdateReactionByPkArgs = {
  _inc?: InputMaybe<ReactionIncInput>;
  _set?: InputMaybe<ReactionSetInput>;
  pkColumns: ReactionPkColumnsInput;
};

export type MutationUpdateReactionManyArgs = {
  updates: Array<ReactionUpdates>;
};

export type MutationUpdateReportArgs = {
  _inc?: InputMaybe<ReportIncInput>;
  _set?: InputMaybe<ReportSetInput>;
  where: ReportBoolExp;
};

export type MutationUpdateReportByPkArgs = {
  _inc?: InputMaybe<ReportIncInput>;
  _set?: InputMaybe<ReportSetInput>;
  pkColumns: ReportPkColumnsInput;
};

export type MutationUpdateReportManyArgs = {
  updates: Array<ReportUpdates>;
};

export type MutationUpdateRoleArgs = {
  _inc?: InputMaybe<RoleIncInput>;
  _set?: InputMaybe<RoleSetInput>;
  where: RoleBoolExp;
};

export type MutationUpdateRoleByPkArgs = {
  _inc?: InputMaybe<RoleIncInput>;
  _set?: InputMaybe<RoleSetInput>;
  pkColumns: RolePkColumnsInput;
};

export type MutationUpdateRoleManyArgs = {
  updates: Array<RoleUpdates>;
};

export type MutationUpdateSessionArgs = {
  _append?: InputMaybe<SessionAppendInput>;
  _deleteAtPath?: InputMaybe<SessionDeleteAtPathInput>;
  _deleteElem?: InputMaybe<SessionDeleteElemInput>;
  _deleteKey?: InputMaybe<SessionDeleteKeyInput>;
  _inc?: InputMaybe<SessionIncInput>;
  _prepend?: InputMaybe<SessionPrependInput>;
  _set?: InputMaybe<SessionSetInput>;
  where: SessionBoolExp;
};

export type MutationUpdateSessionByPkArgs = {
  _append?: InputMaybe<SessionAppendInput>;
  _deleteAtPath?: InputMaybe<SessionDeleteAtPathInput>;
  _deleteElem?: InputMaybe<SessionDeleteElemInput>;
  _deleteKey?: InputMaybe<SessionDeleteKeyInput>;
  _inc?: InputMaybe<SessionIncInput>;
  _prepend?: InputMaybe<SessionPrependInput>;
  _set?: InputMaybe<SessionSetInput>;
  pkColumns: SessionPkColumnsInput;
};

export type MutationUpdateSessionManyArgs = {
  updates: Array<SessionUpdates>;
};

export type MutationUpdateShortcutArgs = {
  _inc?: InputMaybe<ShortcutIncInput>;
  _set?: InputMaybe<ShortcutSetInput>;
  where: ShortcutBoolExp;
};

export type MutationUpdateShortcutByPkArgs = {
  _inc?: InputMaybe<ShortcutIncInput>;
  _set?: InputMaybe<ShortcutSetInput>;
  pkColumns: ShortcutPkColumnsInput;
};

export type MutationUpdateShortcutManyArgs = {
  updates: Array<ShortcutUpdates>;
};

export type MutationUpdateSocialArgs = {
  _inc?: InputMaybe<SocialIncInput>;
  _set?: InputMaybe<SocialSetInput>;
  where: SocialBoolExp;
};

export type MutationUpdateSocialByPkArgs = {
  _inc?: InputMaybe<SocialIncInput>;
  _set?: InputMaybe<SocialSetInput>;
  pkColumns: SocialPkColumnsInput;
};

export type MutationUpdateSocialManyArgs = {
  updates: Array<SocialUpdates>;
};

export type MutationUpdateSubjectArgs = {
  _inc?: InputMaybe<SubjectIncInput>;
  _set?: InputMaybe<SubjectSetInput>;
  where: SubjectBoolExp;
};

export type MutationUpdateSubjectByPkArgs = {
  _inc?: InputMaybe<SubjectIncInput>;
  _set?: InputMaybe<SubjectSetInput>;
  pkColumns: SubjectPkColumnsInput;
};

export type MutationUpdateSubjectClassGroupsArgs = {
  _inc?: InputMaybe<SubjectClassGroupsIncInput>;
  _set?: InputMaybe<SubjectClassGroupsSetInput>;
  where: SubjectClassGroupsBoolExp;
};

export type MutationUpdateSubjectClassGroupsByPkArgs = {
  _inc?: InputMaybe<SubjectClassGroupsIncInput>;
  _set?: InputMaybe<SubjectClassGroupsSetInput>;
  pkColumns: SubjectClassGroupsPkColumnsInput;
};

export type MutationUpdateSubjectClassGroupsManyArgs = {
  updates: Array<SubjectClassGroupsUpdates>;
};

export type MutationUpdateSubjectManyArgs = {
  updates: Array<SubjectUpdates>;
};

export type MutationUpdateTagArgs = {
  _inc?: InputMaybe<TagIncInput>;
  _set?: InputMaybe<TagSetInput>;
  where: TagBoolExp;
};

export type MutationUpdateTagByPkArgs = {
  _inc?: InputMaybe<TagIncInput>;
  _set?: InputMaybe<TagSetInput>;
  pkColumns: TagPkColumnsInput;
};

export type MutationUpdateTagManyArgs = {
  updates: Array<TagUpdates>;
};

export type MutationUpdateTeamArgs = {
  _inc?: InputMaybe<TeamIncInput>;
  _set?: InputMaybe<TeamSetInput>;
  where: TeamBoolExp;
};

export type MutationUpdateTeamByPkArgs = {
  _inc?: InputMaybe<TeamIncInput>;
  _set?: InputMaybe<TeamSetInput>;
  pkColumns: TeamPkColumnsInput;
};

export type MutationUpdateTeamHistoryArgs = {
  _inc?: InputMaybe<TeamHistoryIncInput>;
  _set?: InputMaybe<TeamHistorySetInput>;
  where: TeamHistoryBoolExp;
};

export type MutationUpdateTeamHistoryByPkArgs = {
  _inc?: InputMaybe<TeamHistoryIncInput>;
  _set?: InputMaybe<TeamHistorySetInput>;
  pkColumns: TeamHistoryPkColumnsInput;
};

export type MutationUpdateTeamHistoryManyArgs = {
  updates: Array<TeamHistoryUpdates>;
};

export type MutationUpdateTeamJoinArgs = {
  _inc?: InputMaybe<TeamJoinIncInput>;
  _set?: InputMaybe<TeamJoinSetInput>;
  where: TeamJoinBoolExp;
};

export type MutationUpdateTeamJoinByPkArgs = {
  _inc?: InputMaybe<TeamJoinIncInput>;
  _set?: InputMaybe<TeamJoinSetInput>;
  pkColumns: TeamJoinPkColumnsInput;
};

export type MutationUpdateTeamJoinManyArgs = {
  updates: Array<TeamJoinUpdates>;
};

export type MutationUpdateTeamManyArgs = {
  updates: Array<TeamUpdates>;
};

export type MutationUpdateTeamMemberArgs = {
  _inc?: InputMaybe<TeamMemberIncInput>;
  _set?: InputMaybe<TeamMemberSetInput>;
  where: TeamMemberBoolExp;
};

export type MutationUpdateTeamMemberByPkArgs = {
  _inc?: InputMaybe<TeamMemberIncInput>;
  _set?: InputMaybe<TeamMemberSetInput>;
  pkColumns: TeamMemberPkColumnsInput;
};

export type MutationUpdateTeamMemberManyArgs = {
  updates: Array<TeamMemberUpdates>;
};

export type MutationUpdateTeamMemberRolesArgs = {
  _inc?: InputMaybe<TeamMemberRolesIncInput>;
  _set?: InputMaybe<TeamMemberRolesSetInput>;
  where: TeamMemberRolesBoolExp;
};

export type MutationUpdateTeamMemberRolesByPkArgs = {
  _inc?: InputMaybe<TeamMemberRolesIncInput>;
  _set?: InputMaybe<TeamMemberRolesSetInput>;
  pkColumns: TeamMemberRolesPkColumnsInput;
};

export type MutationUpdateTeamMemberRolesManyArgs = {
  updates: Array<TeamMemberRolesUpdates>;
};

export type MutationUpdateTeamMetricArgs = {
  _inc?: InputMaybe<TeamMetricIncInput>;
  _set?: InputMaybe<TeamMetricSetInput>;
  where: TeamMetricBoolExp;
};

export type MutationUpdateTeamMetricByPkArgs = {
  _inc?: InputMaybe<TeamMetricIncInput>;
  _set?: InputMaybe<TeamMetricSetInput>;
  pkColumns: TeamMetricPkColumnsInput;
};

export type MutationUpdateTeamMetricManyArgs = {
  updates: Array<TeamMetricUpdates>;
};

export type MutationUpdateTenantArgs = {
  _inc?: InputMaybe<TenantIncInput>;
  _set?: InputMaybe<TenantSetInput>;
  where: TenantBoolExp;
};

export type MutationUpdateTenantByPkArgs = {
  _inc?: InputMaybe<TenantIncInput>;
  _set?: InputMaybe<TenantSetInput>;
  pkColumns: TenantPkColumnsInput;
};

export type MutationUpdateTenantManyArgs = {
  updates: Array<TenantUpdates>;
};

export type MutationUpdateTenantOrganizeArgs = {
  _inc?: InputMaybe<TenantOrganizeIncInput>;
  _set?: InputMaybe<TenantOrganizeSetInput>;
  where: TenantOrganizeBoolExp;
};

export type MutationUpdateTenantOrganizeByPkArgs = {
  _inc?: InputMaybe<TenantOrganizeIncInput>;
  _set?: InputMaybe<TenantOrganizeSetInput>;
  pkColumns: TenantOrganizePkColumnsInput;
};

export type MutationUpdateTenantOrganizeManyArgs = {
  updates: Array<TenantOrganizeUpdates>;
};

export type MutationUpdateThreadArgs = {
  _inc?: InputMaybe<ThreadIncInput>;
  _set?: InputMaybe<ThreadSetInput>;
  where: ThreadBoolExp;
};

export type MutationUpdateThreadByPkArgs = {
  _inc?: InputMaybe<ThreadIncInput>;
  _set?: InputMaybe<ThreadSetInput>;
  pkColumns: ThreadPkColumnsInput;
};

export type MutationUpdateThreadContributorsArgs = {
  _inc?: InputMaybe<ThreadContributorsIncInput>;
  _set?: InputMaybe<ThreadContributorsSetInput>;
  where: ThreadContributorsBoolExp;
};

export type MutationUpdateThreadContributorsByPkArgs = {
  _inc?: InputMaybe<ThreadContributorsIncInput>;
  _set?: InputMaybe<ThreadContributorsSetInput>;
  pkColumns: ThreadContributorsPkColumnsInput;
};

export type MutationUpdateThreadContributorsManyArgs = {
  updates: Array<ThreadContributorsUpdates>;
};

export type MutationUpdateThreadManyArgs = {
  updates: Array<ThreadUpdates>;
};

export type MutationUpdateThreadTagsArgs = {
  _inc?: InputMaybe<ThreadTagsIncInput>;
  _set?: InputMaybe<ThreadTagsSetInput>;
  where: ThreadTagsBoolExp;
};

export type MutationUpdateThreadTagsByPkArgs = {
  _inc?: InputMaybe<ThreadTagsIncInput>;
  _set?: InputMaybe<ThreadTagsSetInput>;
  pkColumns: ThreadTagsPkColumnsInput;
};

export type MutationUpdateThreadTagsManyArgs = {
  updates: Array<ThreadTagsUpdates>;
};

export type MutationUpdateUserArgs = {
  _inc?: InputMaybe<UserIncInput>;
  _set?: InputMaybe<UserSetInput>;
  where: UserBoolExp;
};

export type MutationUpdateUserByPkArgs = {
  _inc?: InputMaybe<UserIncInput>;
  _set?: InputMaybe<UserSetInput>;
  pkColumns: UserPkColumnsInput;
};

export type MutationUpdateUserManyArgs = {
  updates: Array<UserUpdates>;
};

export type MutationUpdateValidationArgs = {
  _inc?: InputMaybe<ValidationIncInput>;
  _set?: InputMaybe<ValidationSetInput>;
  where: ValidationBoolExp;
};

export type MutationUpdateValidationByPkArgs = {
  _inc?: InputMaybe<ValidationIncInput>;
  _set?: InputMaybe<ValidationSetInput>;
  pkColumns: ValidationPkColumnsInput;
};

export type MutationUpdateValidationManyArgs = {
  updates: Array<ValidationUpdates>;
};

export type MutationUpdateViewArgs = {
  _inc?: InputMaybe<ViewIncInput>;
  _set?: InputMaybe<ViewSetInput>;
  where: ViewBoolExp;
};

export type MutationUpdateViewByPkArgs = {
  _inc?: InputMaybe<ViewIncInput>;
  _set?: InputMaybe<ViewSetInput>;
  pkColumns: ViewPkColumnsInput;
};

export type MutationUpdateViewManyArgs = {
  updates: Array<ViewUpdates>;
};

export type MutationUpdateVoteArgs = {
  _inc?: InputMaybe<VoteIncInput>;
  _set?: InputMaybe<VoteSetInput>;
  where: VoteBoolExp;
};

export type MutationUpdateVoteByPkArgs = {
  _inc?: InputMaybe<VoteIncInput>;
  _set?: InputMaybe<VoteSetInput>;
  pkColumns: VotePkColumnsInput;
};

export type MutationUpdateVoteManyArgs = {
  updates: Array<VoteUpdates>;
};

export enum OrderBy {
  Asc = 'ASC',
  AscNullsFirst = 'ASC_NULLS_FIRST',
  AscNullsLast = 'ASC_NULLS_LAST',
  Desc = 'DESC',
  DescNullsFirst = 'DESC_NULLS_FIRST',
  DescNullsLast = 'DESC_NULLS_LAST',
}

export type Pole = {
  __typename?: 'Pole';
  category: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isLocked: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  team: Team;
  teamId: Scalars['bigint']['output'];
  teamJoins: Array<TeamJoin>;
  teamJoinsAggregate: TeamJoinAggregate;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type PoleTeamJoinsArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type PoleTeamJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type PoleAggregate = {
  __typename?: 'PoleAggregate';
  aggregate?: Maybe<PoleAggregateFields>;
  nodes: Array<Pole>;
};

export type PoleAggregateBoolExp = {
  bool_and?: InputMaybe<PoleAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<PoleAggregateBoolExpBool_Or>;
  count?: InputMaybe<PoleAggregateBoolExpCount>;
};

export type PoleAggregateFields = {
  __typename?: 'PoleAggregateFields';
  avg?: Maybe<PoleAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<PoleMaxFields>;
  min?: Maybe<PoleMinFields>;
  stddev?: Maybe<PoleStddevFields>;
  stddevPop?: Maybe<PoleStddevPopFields>;
  stddevSamp?: Maybe<PoleStddevSampFields>;
  sum?: Maybe<PoleSumFields>;
  varPop?: Maybe<PoleVarPopFields>;
  varSamp?: Maybe<PoleVarSampFields>;
  variance?: Maybe<PoleVarianceFields>;
};

export type PoleAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PoleAggregateOrderBy = {
  avg?: InputMaybe<PoleAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<PoleMaxOrderBy>;
  min?: InputMaybe<PoleMinOrderBy>;
  stddev?: InputMaybe<PoleStddevOrderBy>;
  stddevPop?: InputMaybe<PoleStddevPopOrderBy>;
  stddevSamp?: InputMaybe<PoleStddevSampOrderBy>;
  sum?: InputMaybe<PoleSumOrderBy>;
  varPop?: InputMaybe<PoleVarPopOrderBy>;
  varSamp?: InputMaybe<PoleVarSampOrderBy>;
  variance?: InputMaybe<PoleVarianceOrderBy>;
};

export type PoleArrRelInsertInput = {
  data: Array<PoleInsertInput>;
  onConflict?: InputMaybe<PoleOnConflict>;
};

export type PoleAvgFields = {
  __typename?: 'PoleAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type PoleAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type PoleBoolExp = {
  _and?: InputMaybe<Array<PoleBoolExp>>;
  _not?: InputMaybe<PoleBoolExp>;
  _or?: InputMaybe<Array<PoleBoolExp>>;
  category?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isLocked?: InputMaybe<BooleanComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  teamJoins?: InputMaybe<TeamJoinBoolExp>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum PoleConstraint {
  PolePkey = 'pole_pkey',
}

export type PoleIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type PoleInsertInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isLocked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  teamJoins?: InputMaybe<TeamJoinArrRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type PoleMaxFields = {
  __typename?: 'PoleMaxFields';
  category?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type PoleMaxOrderBy = {
  category?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type PoleMinFields = {
  __typename?: 'PoleMinFields';
  category?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type PoleMinOrderBy = {
  category?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type PoleMutationResponse = {
  __typename?: 'PoleMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Pole>;
};

export type PoleObjRelInsertInput = {
  data: PoleInsertInput;
  onConflict?: InputMaybe<PoleOnConflict>;
};

export type PoleOnConflict = {
  constraint: PoleConstraint;
  updateColumns?: Array<PoleUpdateColumn>;
  where?: InputMaybe<PoleBoolExp>;
};

export type PoleOrderBy = {
  category?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isLocked?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type PolePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum PoleSelectColumn {
  Category = 'category',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsLocked = 'isLocked',
  Name = 'name',
  TeamId = 'teamId',
  TenantId = 'tenantId',
}

export enum PoleSelectColumnPoleAggregateBoolExpBool_AndArgumentsColumns {
  IsLocked = 'isLocked',
}

export enum PoleSelectColumnPoleAggregateBoolExpBool_OrArgumentsColumns {
  IsLocked = 'isLocked',
}

export type PoleSetInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isLocked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type PoleStddevFields = {
  __typename?: 'PoleStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type PoleStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type PoleStddevPopFields = {
  __typename?: 'PoleStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type PoleStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type PoleStddevSampFields = {
  __typename?: 'PoleStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type PoleStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type PoleStreamCursorInput = {
  initialValue: PoleStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type PoleStreamCursorValueInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isLocked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type PoleSumFields = {
  __typename?: 'PoleSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type PoleSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum PoleUpdateColumn {
  Category = 'category',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsLocked = 'isLocked',
  Name = 'name',
  TeamId = 'teamId',
  TenantId = 'tenantId',
}

export type PoleUpdates = {
  _inc?: InputMaybe<PoleIncInput>;
  _set?: InputMaybe<PoleSetInput>;
  where: PoleBoolExp;
};

export type PoleVarPopFields = {
  __typename?: 'PoleVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type PoleVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type PoleVarSampFields = {
  __typename?: 'PoleVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type PoleVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type PoleVarianceFields = {
  __typename?: 'PoleVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type PoleVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ProcessedReceipt = {
  __typename?: 'ProcessedReceipt';
  address: Scalars['String']['output'];
  amount?: Maybe<Scalars['Float']['output']>;
  date?: Maybe<Scalars['String']['output']>;
  lineItems: Array<LineItem>;
  phone?: Maybe<Scalars['String']['output']>;
  tax?: Maybe<Scalars['Float']['output']>;
  vendorName?: Maybe<Scalars['String']['output']>;
};

export type Project = {
  __typename?: 'Project';
  actions: Array<Action>;
  actionsAggregate: ActionAggregate;
  banner?: Maybe<FileUpload>;
  bannerId?: Maybe<Scalars['bigint']['output']>;
  budget: Scalars['Float']['output'];
  color: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  end?: Maybe<Scalars['timestamptz']['output']>;
  eventOrganizes: Array<EventOrganize>;
  eventOrganizesAggregate: EventOrganizeAggregate;
  finances: Array<Finance>;
  financesAggregate: FinanceAggregate;
  grant?: Maybe<Grant>;
  grantId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isPrivate: Scalars['Boolean']['output'];
  isTemplate: Scalars['Boolean']['output'];
  missionJoins: Array<MissionJoin>;
  missionJoinsAggregate: MissionJoinAggregate;
  missions: Array<Mission>;
  missionsAggregate: MissionAggregate;
  name: Scalars['String']['output'];
  projectSupervisors: Array<ProjectSupervisors>;
  projectSupervisorsAggregate: ProjectSupervisorsAggregate;
  projectTags: Array<ProjectTags>;
  projectTagsAggregate: ProjectTagsAggregate;
  regularEventInterval: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  start?: Maybe<Scalars['timestamptz']['output']>;
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
};

export type ProjectActionsArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type ProjectActionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type ProjectEventOrganizesArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type ProjectEventOrganizesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type ProjectFinancesArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type ProjectFinancesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type ProjectMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type ProjectMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type ProjectMissionsArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type ProjectMissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type ProjectProjectSupervisorsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorsOrderBy>>;
  where?: InputMaybe<ProjectSupervisorsBoolExp>;
};

export type ProjectProjectSupervisorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorsOrderBy>>;
  where?: InputMaybe<ProjectSupervisorsBoolExp>;
};

export type ProjectProjectTagsArgs = {
  distinctOn?: InputMaybe<Array<ProjectTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectTagsOrderBy>>;
  where?: InputMaybe<ProjectTagsBoolExp>;
};

export type ProjectProjectTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectTagsOrderBy>>;
  where?: InputMaybe<ProjectTagsBoolExp>;
};

export type ProjectAggregate = {
  __typename?: 'ProjectAggregate';
  aggregate?: Maybe<ProjectAggregateFields>;
  nodes: Array<Project>;
};

export type ProjectAggregateBoolExp = {
  bool_and?: InputMaybe<ProjectAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<ProjectAggregateBoolExpBool_Or>;
  count?: InputMaybe<ProjectAggregateBoolExpCount>;
};

export type ProjectAggregateFields = {
  __typename?: 'ProjectAggregateFields';
  avg?: Maybe<ProjectAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ProjectMaxFields>;
  min?: Maybe<ProjectMinFields>;
  stddev?: Maybe<ProjectStddevFields>;
  stddevPop?: Maybe<ProjectStddevPopFields>;
  stddevSamp?: Maybe<ProjectStddevSampFields>;
  sum?: Maybe<ProjectSumFields>;
  varPop?: Maybe<ProjectVarPopFields>;
  varSamp?: Maybe<ProjectVarSampFields>;
  variance?: Maybe<ProjectVarianceFields>;
};

export type ProjectAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ProjectSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProjectAggregateOrderBy = {
  avg?: InputMaybe<ProjectAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ProjectMaxOrderBy>;
  min?: InputMaybe<ProjectMinOrderBy>;
  stddev?: InputMaybe<ProjectStddevOrderBy>;
  stddevPop?: InputMaybe<ProjectStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ProjectStddevSampOrderBy>;
  sum?: InputMaybe<ProjectSumOrderBy>;
  varPop?: InputMaybe<ProjectVarPopOrderBy>;
  varSamp?: InputMaybe<ProjectVarSampOrderBy>;
  variance?: InputMaybe<ProjectVarianceOrderBy>;
};

export type ProjectArrRelInsertInput = {
  data: Array<ProjectInsertInput>;
  onConflict?: InputMaybe<ProjectOnConflict>;
};

export type ProjectAvgFields = {
  __typename?: 'ProjectAvgFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectAvgOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ProjectBoolExp = {
  _and?: InputMaybe<Array<ProjectBoolExp>>;
  _not?: InputMaybe<ProjectBoolExp>;
  _or?: InputMaybe<Array<ProjectBoolExp>>;
  actions?: InputMaybe<ActionBoolExp>;
  actionsAggregate?: InputMaybe<ActionAggregateBoolExp>;
  banner?: InputMaybe<FileUploadBoolExp>;
  bannerId?: InputMaybe<BigintComparisonExp>;
  budget?: InputMaybe<FloatComparisonExp>;
  color?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  end?: InputMaybe<TimestamptzComparisonExp>;
  eventOrganizes?: InputMaybe<EventOrganizeBoolExp>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateBoolExp>;
  finances?: InputMaybe<FinanceBoolExp>;
  financesAggregate?: InputMaybe<FinanceAggregateBoolExp>;
  grant?: InputMaybe<GrantBoolExp>;
  grantId?: InputMaybe<BigintComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isPrivate?: InputMaybe<BooleanComparisonExp>;
  isTemplate?: InputMaybe<BooleanComparisonExp>;
  missionJoins?: InputMaybe<MissionJoinBoolExp>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  missions?: InputMaybe<MissionBoolExp>;
  missionsAggregate?: InputMaybe<MissionAggregateBoolExp>;
  name?: InputMaybe<StringComparisonExp>;
  projectSupervisors?: InputMaybe<ProjectSupervisorsBoolExp>;
  projectSupervisorsAggregate?: InputMaybe<ProjectSupervisorsAggregateBoolExp>;
  projectTags?: InputMaybe<ProjectTagsBoolExp>;
  projectTagsAggregate?: InputMaybe<ProjectTagsAggregateBoolExp>;
  regularEventInterval?: InputMaybe<StringComparisonExp>;
  slug?: InputMaybe<StringComparisonExp>;
  start?: InputMaybe<TimestamptzComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
};

export enum ProjectConstraint {
  ProjectPkey = 'project_pkey',
}

export type ProjectIncInput = {
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  budget?: InputMaybe<Scalars['Float']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ProjectInsertInput = {
  actions?: InputMaybe<ActionArrRelInsertInput>;
  banner?: InputMaybe<FileUploadObjRelInsertInput>;
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  budget?: InputMaybe<Scalars['Float']['input']>;
  color?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['timestamptz']['input']>;
  eventOrganizes?: InputMaybe<EventOrganizeArrRelInsertInput>;
  finances?: InputMaybe<FinanceArrRelInsertInput>;
  grant?: InputMaybe<GrantObjRelInsertInput>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPrivate?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  missionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  missions?: InputMaybe<MissionArrRelInsertInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  projectSupervisors?: InputMaybe<ProjectSupervisorsArrRelInsertInput>;
  projectTags?: InputMaybe<ProjectTagsArrRelInsertInput>;
  regularEventInterval?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['timestamptz']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectMaxFields = {
  __typename?: 'ProjectMaxFields';
  bannerId?: Maybe<Scalars['bigint']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  color?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  end?: Maybe<Scalars['timestamptz']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  regularEventInterval?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  start?: Maybe<Scalars['timestamptz']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ProjectMaxOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  end?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  regularEventInterval?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  start?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ProjectMinFields = {
  __typename?: 'ProjectMinFields';
  bannerId?: Maybe<Scalars['bigint']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  color?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  end?: Maybe<Scalars['timestamptz']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  regularEventInterval?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  start?: Maybe<Scalars['timestamptz']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ProjectMinOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  end?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  regularEventInterval?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  start?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ProjectMutationResponse = {
  __typename?: 'ProjectMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Project>;
};

export type ProjectObjRelInsertInput = {
  data: ProjectInsertInput;
  onConflict?: InputMaybe<ProjectOnConflict>;
};

export type ProjectOnConflict = {
  constraint: ProjectConstraint;
  updateColumns?: Array<ProjectUpdateColumn>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type ProjectOrderBy = {
  actionsAggregate?: InputMaybe<ActionAggregateOrderBy>;
  banner?: InputMaybe<FileUploadOrderBy>;
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  end?: InputMaybe<OrderBy>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateOrderBy>;
  financesAggregate?: InputMaybe<FinanceAggregateOrderBy>;
  grant?: InputMaybe<GrantOrderBy>;
  grantId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isPrivate?: InputMaybe<OrderBy>;
  isTemplate?: InputMaybe<OrderBy>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  missionsAggregate?: InputMaybe<MissionAggregateOrderBy>;
  name?: InputMaybe<OrderBy>;
  projectSupervisorsAggregate?: InputMaybe<ProjectSupervisorsAggregateOrderBy>;
  projectTagsAggregate?: InputMaybe<ProjectTagsAggregateOrderBy>;
  regularEventInterval?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  start?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ProjectPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ProjectSelectColumn {
  BannerId = 'bannerId',
  Budget = 'budget',
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  End = 'end',
  GrantId = 'grantId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
  Name = 'name',
  RegularEventInterval = 'regularEventInterval',
  Slug = 'slug',
  Start = 'start',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  Type = 'type',
}

export enum ProjectSelectColumnProjectAggregateBoolExpBool_AndArgumentsColumns {
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
}

export enum ProjectSelectColumnProjectAggregateBoolExpBool_OrArgumentsColumns {
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
}

export type ProjectSetInput = {
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  budget?: InputMaybe<Scalars['Float']['input']>;
  color?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['timestamptz']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPrivate?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  regularEventInterval?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['timestamptz']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectStddevFields = {
  __typename?: 'ProjectStddevFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectStddevOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ProjectStddevPopFields = {
  __typename?: 'ProjectStddevPopFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectStddevPopOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ProjectStddevSampFields = {
  __typename?: 'ProjectStddevSampFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectStddevSampOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ProjectStreamCursorInput = {
  initialValue: ProjectStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ProjectStreamCursorValueInput = {
  bannerId?: InputMaybe<Scalars['bigint']['input']>;
  budget?: InputMaybe<Scalars['Float']['input']>;
  color?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['timestamptz']['input']>;
  grantId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isPrivate?: InputMaybe<Scalars['Boolean']['input']>;
  isTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  regularEventInterval?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['timestamptz']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectSumFields = {
  __typename?: 'ProjectSumFields';
  bannerId?: Maybe<Scalars['bigint']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  grantId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ProjectSumOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisors = {
  __typename?: 'ProjectSupervisors';
  project: Project;
  projectId: Scalars['bigint']['output'];
  teamMember: TeamMember;
  teamMemberId: Scalars['bigint']['output'];
};

export type ProjectSupervisorsAggregate = {
  __typename?: 'ProjectSupervisorsAggregate';
  aggregate?: Maybe<ProjectSupervisorsAggregateFields>;
  nodes: Array<ProjectSupervisors>;
};

export type ProjectSupervisorsAggregateBoolExp = {
  count?: InputMaybe<ProjectSupervisorsAggregateBoolExpCount>;
};

export type ProjectSupervisorsAggregateFields = {
  __typename?: 'ProjectSupervisorsAggregateFields';
  avg?: Maybe<ProjectSupervisorsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ProjectSupervisorsMaxFields>;
  min?: Maybe<ProjectSupervisorsMinFields>;
  stddev?: Maybe<ProjectSupervisorsStddevFields>;
  stddevPop?: Maybe<ProjectSupervisorsStddevPopFields>;
  stddevSamp?: Maybe<ProjectSupervisorsStddevSampFields>;
  sum?: Maybe<ProjectSupervisorsSumFields>;
  varPop?: Maybe<ProjectSupervisorsVarPopFields>;
  varSamp?: Maybe<ProjectSupervisorsVarSampFields>;
  variance?: Maybe<ProjectSupervisorsVarianceFields>;
};

export type ProjectSupervisorsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ProjectSupervisorsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProjectSupervisorsAggregateOrderBy = {
  avg?: InputMaybe<ProjectSupervisorsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ProjectSupervisorsMaxOrderBy>;
  min?: InputMaybe<ProjectSupervisorsMinOrderBy>;
  stddev?: InputMaybe<ProjectSupervisorsStddevOrderBy>;
  stddevPop?: InputMaybe<ProjectSupervisorsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ProjectSupervisorsStddevSampOrderBy>;
  sum?: InputMaybe<ProjectSupervisorsSumOrderBy>;
  varPop?: InputMaybe<ProjectSupervisorsVarPopOrderBy>;
  varSamp?: InputMaybe<ProjectSupervisorsVarSampOrderBy>;
  variance?: InputMaybe<ProjectSupervisorsVarianceOrderBy>;
};

export type ProjectSupervisorsArrRelInsertInput = {
  data: Array<ProjectSupervisorsInsertInput>;
  onConflict?: InputMaybe<ProjectSupervisorsOnConflict>;
};

export type ProjectSupervisorsAvgFields = {
  __typename?: 'ProjectSupervisorsAvgFields';
  projectId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectSupervisorsAvgOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorsBoolExp = {
  _and?: InputMaybe<Array<ProjectSupervisorsBoolExp>>;
  _not?: InputMaybe<ProjectSupervisorsBoolExp>;
  _or?: InputMaybe<Array<ProjectSupervisorsBoolExp>>;
  project?: InputMaybe<ProjectBoolExp>;
  projectId?: InputMaybe<BigintComparisonExp>;
  teamMember?: InputMaybe<TeamMemberBoolExp>;
  teamMemberId?: InputMaybe<BigintComparisonExp>;
};

export enum ProjectSupervisorsConstraint {
  ProjectSupervisorsPkey = 'project_supervisors_pkey',
}

export type ProjectSupervisorsIncInput = {
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ProjectSupervisorsInsertInput = {
  project?: InputMaybe<ProjectObjRelInsertInput>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  teamMember?: InputMaybe<TeamMemberObjRelInsertInput>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ProjectSupervisorsMaxFields = {
  __typename?: 'ProjectSupervisorsMaxFields';
  projectId?: Maybe<Scalars['bigint']['output']>;
  teamMemberId?: Maybe<Scalars['bigint']['output']>;
};

export type ProjectSupervisorsMaxOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorsMinFields = {
  __typename?: 'ProjectSupervisorsMinFields';
  projectId?: Maybe<Scalars['bigint']['output']>;
  teamMemberId?: Maybe<Scalars['bigint']['output']>;
};

export type ProjectSupervisorsMinOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorsMutationResponse = {
  __typename?: 'ProjectSupervisorsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ProjectSupervisors>;
};

export type ProjectSupervisorsOnConflict = {
  constraint: ProjectSupervisorsConstraint;
  updateColumns?: Array<ProjectSupervisorsUpdateColumn>;
  where?: InputMaybe<ProjectSupervisorsBoolExp>;
};

export type ProjectSupervisorsOrderBy = {
  project?: InputMaybe<ProjectOrderBy>;
  projectId?: InputMaybe<OrderBy>;
  teamMember?: InputMaybe<TeamMemberOrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorsPkColumnsInput = {
  projectId: Scalars['bigint']['input'];
  teamMemberId: Scalars['bigint']['input'];
};

export enum ProjectSupervisorsSelectColumn {
  ProjectId = 'projectId',
  TeamMemberId = 'teamMemberId',
}

export type ProjectSupervisorsSetInput = {
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ProjectSupervisorsStddevFields = {
  __typename?: 'ProjectSupervisorsStddevFields';
  projectId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectSupervisorsStddevOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorsStddevPopFields = {
  __typename?: 'ProjectSupervisorsStddevPopFields';
  projectId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectSupervisorsStddevPopOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorsStddevSampFields = {
  __typename?: 'ProjectSupervisorsStddevSampFields';
  projectId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectSupervisorsStddevSampOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorsStreamCursorInput = {
  initialValue: ProjectSupervisorsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ProjectSupervisorsStreamCursorValueInput = {
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ProjectSupervisorsSumFields = {
  __typename?: 'ProjectSupervisorsSumFields';
  projectId?: Maybe<Scalars['bigint']['output']>;
  teamMemberId?: Maybe<Scalars['bigint']['output']>;
};

export type ProjectSupervisorsSumOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export enum ProjectSupervisorsUpdateColumn {
  ProjectId = 'projectId',
  TeamMemberId = 'teamMemberId',
}

export type ProjectSupervisorsUpdates = {
  _inc?: InputMaybe<ProjectSupervisorsIncInput>;
  _set?: InputMaybe<ProjectSupervisorsSetInput>;
  where: ProjectSupervisorsBoolExp;
};

export type ProjectSupervisorsVarPopFields = {
  __typename?: 'ProjectSupervisorsVarPopFields';
  projectId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectSupervisorsVarPopOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorsVarSampFields = {
  __typename?: 'ProjectSupervisorsVarSampFields';
  projectId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectSupervisorsVarSampOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type ProjectSupervisorsVarianceFields = {
  __typename?: 'ProjectSupervisorsVarianceFields';
  projectId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectSupervisorsVarianceOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type ProjectTags = {
  __typename?: 'ProjectTags';
  project: Project;
  projectId: Scalars['bigint']['output'];
  tag: Tag;
  tagId: Scalars['bigint']['output'];
};

export type ProjectTagsAggregate = {
  __typename?: 'ProjectTagsAggregate';
  aggregate?: Maybe<ProjectTagsAggregateFields>;
  nodes: Array<ProjectTags>;
};

export type ProjectTagsAggregateBoolExp = {
  count?: InputMaybe<ProjectTagsAggregateBoolExpCount>;
};

export type ProjectTagsAggregateFields = {
  __typename?: 'ProjectTagsAggregateFields';
  avg?: Maybe<ProjectTagsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ProjectTagsMaxFields>;
  min?: Maybe<ProjectTagsMinFields>;
  stddev?: Maybe<ProjectTagsStddevFields>;
  stddevPop?: Maybe<ProjectTagsStddevPopFields>;
  stddevSamp?: Maybe<ProjectTagsStddevSampFields>;
  sum?: Maybe<ProjectTagsSumFields>;
  varPop?: Maybe<ProjectTagsVarPopFields>;
  varSamp?: Maybe<ProjectTagsVarSampFields>;
  variance?: Maybe<ProjectTagsVarianceFields>;
};

export type ProjectTagsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ProjectTagsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProjectTagsAggregateOrderBy = {
  avg?: InputMaybe<ProjectTagsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ProjectTagsMaxOrderBy>;
  min?: InputMaybe<ProjectTagsMinOrderBy>;
  stddev?: InputMaybe<ProjectTagsStddevOrderBy>;
  stddevPop?: InputMaybe<ProjectTagsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ProjectTagsStddevSampOrderBy>;
  sum?: InputMaybe<ProjectTagsSumOrderBy>;
  varPop?: InputMaybe<ProjectTagsVarPopOrderBy>;
  varSamp?: InputMaybe<ProjectTagsVarSampOrderBy>;
  variance?: InputMaybe<ProjectTagsVarianceOrderBy>;
};

export type ProjectTagsArrRelInsertInput = {
  data: Array<ProjectTagsInsertInput>;
  onConflict?: InputMaybe<ProjectTagsOnConflict>;
};

export type ProjectTagsAvgFields = {
  __typename?: 'ProjectTagsAvgFields';
  projectId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectTagsAvgOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ProjectTagsBoolExp = {
  _and?: InputMaybe<Array<ProjectTagsBoolExp>>;
  _not?: InputMaybe<ProjectTagsBoolExp>;
  _or?: InputMaybe<Array<ProjectTagsBoolExp>>;
  project?: InputMaybe<ProjectBoolExp>;
  projectId?: InputMaybe<BigintComparisonExp>;
  tag?: InputMaybe<TagBoolExp>;
  tagId?: InputMaybe<BigintComparisonExp>;
};

export enum ProjectTagsConstraint {
  ProjectTagsPkey = 'project_tags_pkey',
}

export type ProjectTagsIncInput = {
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ProjectTagsInsertInput = {
  project?: InputMaybe<ProjectObjRelInsertInput>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  tag?: InputMaybe<TagObjRelInsertInput>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ProjectTagsMaxFields = {
  __typename?: 'ProjectTagsMaxFields';
  projectId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type ProjectTagsMaxOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ProjectTagsMinFields = {
  __typename?: 'ProjectTagsMinFields';
  projectId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type ProjectTagsMinOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ProjectTagsMutationResponse = {
  __typename?: 'ProjectTagsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ProjectTags>;
};

export type ProjectTagsOnConflict = {
  constraint: ProjectTagsConstraint;
  updateColumns?: Array<ProjectTagsUpdateColumn>;
  where?: InputMaybe<ProjectTagsBoolExp>;
};

export type ProjectTagsOrderBy = {
  project?: InputMaybe<ProjectOrderBy>;
  projectId?: InputMaybe<OrderBy>;
  tag?: InputMaybe<TagOrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ProjectTagsPkColumnsInput = {
  projectId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export enum ProjectTagsSelectColumn {
  ProjectId = 'projectId',
  TagId = 'tagId',
}

export type ProjectTagsSetInput = {
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ProjectTagsStddevFields = {
  __typename?: 'ProjectTagsStddevFields';
  projectId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectTagsStddevOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ProjectTagsStddevPopFields = {
  __typename?: 'ProjectTagsStddevPopFields';
  projectId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectTagsStddevPopOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ProjectTagsStddevSampFields = {
  __typename?: 'ProjectTagsStddevSampFields';
  projectId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectTagsStddevSampOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ProjectTagsStreamCursorInput = {
  initialValue: ProjectTagsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ProjectTagsStreamCursorValueInput = {
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ProjectTagsSumFields = {
  __typename?: 'ProjectTagsSumFields';
  projectId?: Maybe<Scalars['bigint']['output']>;
  tagId?: Maybe<Scalars['bigint']['output']>;
};

export type ProjectTagsSumOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export enum ProjectTagsUpdateColumn {
  ProjectId = 'projectId',
  TagId = 'tagId',
}

export type ProjectTagsUpdates = {
  _inc?: InputMaybe<ProjectTagsIncInput>;
  _set?: InputMaybe<ProjectTagsSetInput>;
  where: ProjectTagsBoolExp;
};

export type ProjectTagsVarPopFields = {
  __typename?: 'ProjectTagsVarPopFields';
  projectId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectTagsVarPopOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ProjectTagsVarSampFields = {
  __typename?: 'ProjectTagsVarSampFields';
  projectId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectTagsVarSampOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export type ProjectTagsVarianceFields = {
  __typename?: 'ProjectTagsVarianceFields';
  projectId?: Maybe<Scalars['Float']['output']>;
  tagId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectTagsVarianceOrderBy = {
  projectId?: InputMaybe<OrderBy>;
  tagId?: InputMaybe<OrderBy>;
};

export enum ProjectUpdateColumn {
  BannerId = 'bannerId',
  Budget = 'budget',
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  End = 'end',
  GrantId = 'grantId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsPrivate = 'isPrivate',
  IsTemplate = 'isTemplate',
  Name = 'name',
  RegularEventInterval = 'regularEventInterval',
  Slug = 'slug',
  Start = 'start',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  Type = 'type',
}

export type ProjectUpdates = {
  _inc?: InputMaybe<ProjectIncInput>;
  _set?: InputMaybe<ProjectSetInput>;
  where: ProjectBoolExp;
};

export type ProjectVarPopFields = {
  __typename?: 'ProjectVarPopFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectVarPopOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ProjectVarSampFields = {
  __typename?: 'ProjectVarSampFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectVarSampOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ProjectVarianceFields = {
  __typename?: 'ProjectVarianceFields';
  bannerId?: Maybe<Scalars['Float']['output']>;
  budget?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  grantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ProjectVarianceOrderBy = {
  bannerId?: InputMaybe<OrderBy>;
  budget?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  grantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Query = {
  __typename?: 'Query';
  account: Array<Account>;
  accountAggregate: AccountAggregate;
  accountByPk?: Maybe<Account>;
  action: Array<Action>;
  actionAggregate: ActionAggregate;
  actionByPk?: Maybe<Action>;
  actor: Array<Actor>;
  actorAggregate: ActorAggregate;
  actorByPk?: Maybe<Actor>;
  actorImage: Array<ActorImage>;
  actorImageAggregate: ActorImageAggregate;
  actorImageByPk?: Maybe<ActorImage>;
  actorTags: Array<ActorTags>;
  actorTagsAggregate: ActorTagsAggregate;
  actorTagsByPk?: Maybe<ActorTags>;
  address: Array<Address>;
  addressAggregate: AddressAggregate;
  addressByPk?: Maybe<Address>;
  bank: Array<Bank>;
  bankAggregate: BankAggregate;
  bankByPk?: Maybe<Bank>;
  bot: Array<Bot>;
  botAggregate: BotAggregate;
  botByPk?: Maybe<Bot>;
  campus: Array<Campus>;
  campusAggregate: CampusAggregate;
  campusByPk?: Maybe<Campus>;
  campusCluster: Array<CampusCluster>;
  campusClusterAggregate: CampusClusterAggregate;
  campusClusterByPk?: Maybe<CampusCluster>;
  canteen: Array<Canteen>;
  canteenAggregate: CanteenAggregate;
  canteenByPk?: Maybe<Canteen>;
  canteenFood: Array<CanteenFood>;
  canteenFoodAggregate: CanteenFoodAggregate;
  canteenFoodByPk?: Maybe<CanteenFood>;
  canteenMenu: Array<CanteenMenu>;
  canteenMenuAggregate: CanteenMenuAggregate;
  canteenMenuByPk?: Maybe<CanteenMenu>;
  classGroup: Array<ClassGroup>;
  classGroupAggregate: ClassGroupAggregate;
  classGroupByPk?: Maybe<ClassGroup>;
  classGroupTeacher: Array<ClassGroupTeacher>;
  classGroupTeacherAggregate: ClassGroupTeacherAggregate;
  classGroupTeacherByPk?: Maybe<ClassGroupTeacher>;
  classGroupTeacherSubjects: Array<ClassGroupTeacherSubjects>;
  classGroupTeacherSubjectsAggregate: ClassGroupTeacherSubjectsAggregate;
  classGroupTeacherSubjectsByPk?: Maybe<ClassGroupTeacherSubjects>;
  cohort: Array<Cohort>;
  cohortAggregate: CohortAggregate;
  cohortByPk?: Maybe<Cohort>;
  content: Array<Content>;
  contentAggregate: ContentAggregate;
  contentAttachments: Array<ContentAttachments>;
  contentAttachmentsAggregate: ContentAttachmentsAggregate;
  contentAttachmentsByPk?: Maybe<ContentAttachments>;
  contentByPk?: Maybe<Content>;
  document: Array<Document>;
  documentAggregate: DocumentAggregate;
  documentByPk?: Maybe<Document>;
  event: Array<Event>;
  eventAggregate: EventAggregate;
  eventApproval: Array<EventApproval>;
  eventApprovalAggregate: EventApprovalAggregate;
  eventApprovalByPk?: Maybe<EventApproval>;
  eventApprovalStep: Array<EventApprovalStep>;
  eventApprovalStepAggregate: EventApprovalStepAggregate;
  eventApprovalStepByPk?: Maybe<EventApprovalStep>;
  eventApprovalStepNotifiees: Array<EventApprovalStepNotifiees>;
  eventApprovalStepNotifieesAggregate: EventApprovalStepNotifieesAggregate;
  eventApprovalStepNotifieesByPk?: Maybe<EventApprovalStepNotifiees>;
  eventApprovalStepValidators: Array<EventApprovalStepValidators>;
  eventApprovalStepValidatorsAggregate: EventApprovalStepValidatorsAggregate;
  eventApprovalStepValidatorsByPk?: Maybe<EventApprovalStepValidators>;
  eventByPk?: Maybe<Event>;
  eventFavorite: Array<EventFavorite>;
  eventFavoriteAggregate: EventFavoriteAggregate;
  eventFavoriteByPk?: Maybe<EventFavorite>;
  eventJoin: Array<EventJoin>;
  eventJoinAggregate: EventJoinAggregate;
  eventJoinByPk?: Maybe<EventJoin>;
  eventLogs: Array<Log>;
  eventOrganize: Array<EventOrganize>;
  eventOrganizeAggregate: EventOrganizeAggregate;
  eventOrganizeByPk?: Maybe<EventOrganize>;
  eventSupervisor: Array<EventSupervisor>;
  eventSupervisorAggregate: EventSupervisorAggregate;
  eventSupervisorByPk?: Maybe<EventSupervisor>;
  eventTags: Array<EventTags>;
  eventTagsAggregate: EventTagsAggregate;
  eventTagsByPk?: Maybe<EventTags>;
  expense: Array<Expense>;
  expenseAggregate: ExpenseAggregate;
  expenseByPk?: Maybe<Expense>;
  expenseItem: Array<ExpenseItem>;
  expenseItemAggregate: ExpenseItemAggregate;
  expenseItemAttachments: Array<ExpenseItemAttachments>;
  expenseItemAttachmentsAggregate: ExpenseItemAttachmentsAggregate;
  expenseItemAttachmentsByPk?: Maybe<ExpenseItemAttachments>;
  expenseItemByPk?: Maybe<ExpenseItem>;
  favorite: Array<Favorite>;
  favoriteAggregate: FavoriteAggregate;
  favoriteByPk?: Maybe<Favorite>;
  fileUpload: Array<FileUpload>;
  fileUploadAggregate: FileUploadAggregate;
  fileUploadByPk?: Maybe<FileUpload>;
  finance: Array<Finance>;
  financeAggregate: FinanceAggregate;
  financeAttachments: Array<FinanceAttachments>;
  financeAttachmentsAggregate: FinanceAttachmentsAggregate;
  financeAttachmentsByPk?: Maybe<FinanceAttachments>;
  financeByPk?: Maybe<Finance>;
  financeLogs: Array<Log>;
  financeTags: Array<FinanceTags>;
  financeTagsAggregate: FinanceTagsAggregate;
  financeTagsByPk?: Maybe<FinanceTags>;
  follow: Array<Follow>;
  followAggregate: FollowAggregate;
  followByPk?: Maybe<Follow>;
  form: Array<Form>;
  formAggregate: FormAggregate;
  formByPk?: Maybe<Form>;
  formSubmission: Array<FormSubmission>;
  formSubmissionAggregate: FormSubmissionAggregate;
  formSubmissionAttachments: Array<FormSubmissionAttachments>;
  formSubmissionAttachmentsAggregate: FormSubmissionAttachmentsAggregate;
  formSubmissionAttachmentsByPk?: Maybe<FormSubmissionAttachments>;
  formSubmissionByPk?: Maybe<FormSubmission>;
  getFirstResultLink: Scalars['String']['output'];
  grant: Array<Grant>;
  grantAggregate: GrantAggregate;
  grantAllocate: Array<GrantAllocate>;
  grantAllocateAggregate: GrantAllocateAggregate;
  grantAllocateAttachments: Array<GrantAllocateAttachments>;
  grantAllocateAttachmentsAggregate: GrantAllocateAttachmentsAggregate;
  grantAllocateAttachmentsByPk?: Maybe<GrantAllocateAttachments>;
  grantAllocateByPk?: Maybe<GrantAllocate>;
  grantAttachments: Array<GrantAttachments>;
  grantAttachmentsAggregate: GrantAttachmentsAggregate;
  grantAttachmentsByPk?: Maybe<GrantAttachments>;
  grantByPk?: Maybe<Grant>;
  individual: Array<Individual>;
  individualAggregate: IndividualAggregate;
  individualByPk?: Maybe<Individual>;
  issue: Array<Issue>;
  issueAggregate: IssueAggregate;
  issueByPk?: Maybe<Issue>;
  issueContributors: Array<IssueContributors>;
  issueContributorsAggregate: IssueContributorsAggregate;
  issueContributorsByPk?: Maybe<IssueContributors>;
  issueTags: Array<IssueTags>;
  issueTagsAggregate: IssueTagsAggregate;
  issueTagsByPk?: Maybe<IssueTags>;
  legalUnit: Array<LegalUnit>;
  legalUnitAggregate: LegalUnitAggregate;
  legalUnitByPk?: Maybe<LegalUnit>;
  legalUnitLocation: Array<LegalUnitLocation>;
  legalUnitLocationAggregate: LegalUnitLocationAggregate;
  legalUnitLocationByPk?: Maybe<LegalUnitLocation>;
  location: Array<Location>;
  locationAggregate: LocationAggregate;
  locationByPk?: Maybe<Location>;
  locationImages: Array<LocationImages>;
  locationImagesAggregate: LocationImagesAggregate;
  locationImagesByPk?: Maybe<LocationImages>;
  me: UserLogin;
  mission: Array<Mission>;
  missionAggregate: MissionAggregate;
  missionByPk?: Maybe<Mission>;
  missionJoin: Array<MissionJoin>;
  missionJoinAggregate: MissionJoinAggregate;
  missionJoinByPk?: Maybe<MissionJoin>;
  pole: Array<Pole>;
  poleAggregate: PoleAggregate;
  poleByPk?: Maybe<Pole>;
  processReceipt?: Maybe<ProcessedReceipt>;
  project: Array<Project>;
  projectAggregate: ProjectAggregate;
  projectByPk?: Maybe<Project>;
  projectSupervisors: Array<ProjectSupervisors>;
  projectSupervisorsAggregate: ProjectSupervisorsAggregate;
  projectSupervisorsByPk?: Maybe<ProjectSupervisors>;
  projectTags: Array<ProjectTags>;
  projectTagsAggregate: ProjectTagsAggregate;
  projectTagsByPk?: Maybe<ProjectTags>;
  reaction: Array<Reaction>;
  reactionAggregate: ReactionAggregate;
  reactionByPk?: Maybe<Reaction>;
  report: Array<Report>;
  reportAggregate: ReportAggregate;
  reportByPk?: Maybe<Report>;
  role: Array<Role>;
  roleAggregate: RoleAggregate;
  roleByPk?: Maybe<Role>;
  searchFrenchCompany: Array<CompanyInfo>;
  searchLocation: Array<GeocodeAddress>;
  session: Array<Session>;
  sessionAggregate: SessionAggregate;
  sessionByPk?: Maybe<Session>;
  shortcut: Array<Shortcut>;
  shortcutAggregate: ShortcutAggregate;
  shortcutByPk?: Maybe<Shortcut>;
  social: Array<Social>;
  socialAggregate: SocialAggregate;
  socialByPk?: Maybe<Social>;
  subject: Array<Subject>;
  subjectAggregate: SubjectAggregate;
  subjectByPk?: Maybe<Subject>;
  subjectClassGroups: Array<SubjectClassGroups>;
  subjectClassGroupsAggregate: SubjectClassGroupsAggregate;
  subjectClassGroupsByPk?: Maybe<SubjectClassGroups>;
  tag: Array<Tag>;
  tagAggregate: TagAggregate;
  tagByPk?: Maybe<Tag>;
  team: Array<Team>;
  teamAggregate: TeamAggregate;
  teamByPk?: Maybe<Team>;
  teamHistory: Array<TeamHistory>;
  teamHistoryAggregate: TeamHistoryAggregate;
  teamHistoryByPk?: Maybe<TeamHistory>;
  teamJoin: Array<TeamJoin>;
  teamJoinAggregate: TeamJoinAggregate;
  teamJoinByPk?: Maybe<TeamJoin>;
  teamLogs: Array<Log>;
  teamMember: Array<TeamMember>;
  teamMemberAggregate: TeamMemberAggregate;
  teamMemberByPk?: Maybe<TeamMember>;
  teamMemberRoles: Array<TeamMemberRoles>;
  teamMemberRolesAggregate: TeamMemberRolesAggregate;
  teamMemberRolesByPk?: Maybe<TeamMemberRoles>;
  teamMetric: Array<TeamMetric>;
  teamMetricAggregate: TeamMetricAggregate;
  teamMetricByPk?: Maybe<TeamMetric>;
  tenant: Array<Tenant>;
  tenantAggregate: TenantAggregate;
  tenantByPk?: Maybe<Tenant>;
  tenantLogs: Array<Log>;
  tenantOrganize: Array<TenantOrganize>;
  tenantOrganizeAggregate: TenantOrganizeAggregate;
  tenantOrganizeByPk?: Maybe<TenantOrganize>;
  thread: Array<Thread>;
  threadAggregate: ThreadAggregate;
  threadByPk?: Maybe<Thread>;
  threadContributors: Array<ThreadContributors>;
  threadContributorsAggregate: ThreadContributorsAggregate;
  threadContributorsByPk?: Maybe<ThreadContributors>;
  threadTags: Array<ThreadTags>;
  threadTagsAggregate: ThreadTagsAggregate;
  threadTagsByPk?: Maybe<ThreadTags>;
  user: Array<User>;
  userAggregate: UserAggregate;
  userByPk?: Maybe<User>;
  validation: Array<Validation>;
  validationAggregate: ValidationAggregate;
  validationByPk?: Maybe<Validation>;
  view: Array<View>;
  viewAggregate: ViewAggregate;
  viewByPk?: Maybe<View>;
  vote: Array<Vote>;
  voteAggregate: VoteAggregate;
  voteByPk?: Maybe<Vote>;
};

export type QueryAccountArgs = {
  distinctOn?: InputMaybe<Array<AccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountOrderBy>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type QueryAccountAggregateArgs = {
  distinctOn?: InputMaybe<Array<AccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountOrderBy>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type QueryAccountByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryActionArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type QueryActionAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type QueryActionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryActorArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type QueryActorAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type QueryActorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryActorImageArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type QueryActorImageAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type QueryActorImageByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryActorTagsArgs = {
  distinctOn?: InputMaybe<Array<ActorTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagsOrderBy>>;
  where?: InputMaybe<ActorTagsBoolExp>;
};

export type QueryActorTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagsOrderBy>>;
  where?: InputMaybe<ActorTagsBoolExp>;
};

export type QueryActorTagsByPkArgs = {
  actorId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type QueryAddressArgs = {
  distinctOn?: InputMaybe<Array<AddressSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AddressOrderBy>>;
  where?: InputMaybe<AddressBoolExp>;
};

export type QueryAddressAggregateArgs = {
  distinctOn?: InputMaybe<Array<AddressSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AddressOrderBy>>;
  where?: InputMaybe<AddressBoolExp>;
};

export type QueryAddressByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryBankArgs = {
  distinctOn?: InputMaybe<Array<BankSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankOrderBy>>;
  where?: InputMaybe<BankBoolExp>;
};

export type QueryBankAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankOrderBy>>;
  where?: InputMaybe<BankBoolExp>;
};

export type QueryBankByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryBotArgs = {
  distinctOn?: InputMaybe<Array<BotSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BotOrderBy>>;
  where?: InputMaybe<BotBoolExp>;
};

export type QueryBotAggregateArgs = {
  distinctOn?: InputMaybe<Array<BotSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BotOrderBy>>;
  where?: InputMaybe<BotBoolExp>;
};

export type QueryBotByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryCampusArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type QueryCampusAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type QueryCampusByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryCampusClusterArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type QueryCampusClusterAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type QueryCampusClusterByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryCanteenArgs = {
  distinctOn?: InputMaybe<Array<CanteenSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenOrderBy>>;
  where?: InputMaybe<CanteenBoolExp>;
};

export type QueryCanteenAggregateArgs = {
  distinctOn?: InputMaybe<Array<CanteenSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenOrderBy>>;
  where?: InputMaybe<CanteenBoolExp>;
};

export type QueryCanteenByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryCanteenFoodArgs = {
  distinctOn?: InputMaybe<Array<CanteenFoodSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenFoodOrderBy>>;
  where?: InputMaybe<CanteenFoodBoolExp>;
};

export type QueryCanteenFoodAggregateArgs = {
  distinctOn?: InputMaybe<Array<CanteenFoodSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenFoodOrderBy>>;
  where?: InputMaybe<CanteenFoodBoolExp>;
};

export type QueryCanteenFoodByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryCanteenMenuArgs = {
  distinctOn?: InputMaybe<Array<CanteenMenuSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenMenuOrderBy>>;
  where?: InputMaybe<CanteenMenuBoolExp>;
};

export type QueryCanteenMenuAggregateArgs = {
  distinctOn?: InputMaybe<Array<CanteenMenuSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenMenuOrderBy>>;
  where?: InputMaybe<CanteenMenuBoolExp>;
};

export type QueryCanteenMenuByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryClassGroupArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupOrderBy>>;
  where?: InputMaybe<ClassGroupBoolExp>;
};

export type QueryClassGroupAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupOrderBy>>;
  where?: InputMaybe<ClassGroupBoolExp>;
};

export type QueryClassGroupByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryClassGroupTeacherArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherBoolExp>;
};

export type QueryClassGroupTeacherAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherBoolExp>;
};

export type QueryClassGroupTeacherByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryClassGroupTeacherSubjectsArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSubjectsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherSubjectsOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherSubjectsBoolExp>;
};

export type QueryClassGroupTeacherSubjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSubjectsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherSubjectsOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherSubjectsBoolExp>;
};

export type QueryClassGroupTeacherSubjectsByPkArgs = {
  classGroupTeacherId: Scalars['bigint']['input'];
  subjectId: Scalars['bigint']['input'];
};

export type QueryCohortArgs = {
  distinctOn?: InputMaybe<Array<CohortSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CohortOrderBy>>;
  where?: InputMaybe<CohortBoolExp>;
};

export type QueryCohortAggregateArgs = {
  distinctOn?: InputMaybe<Array<CohortSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CohortOrderBy>>;
  where?: InputMaybe<CohortBoolExp>;
};

export type QueryCohortByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryContentArgs = {
  distinctOn?: InputMaybe<Array<ContentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentOrderBy>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type QueryContentAggregateArgs = {
  distinctOn?: InputMaybe<Array<ContentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentOrderBy>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type QueryContentAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<ContentAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentAttachmentsOrderBy>>;
  where?: InputMaybe<ContentAttachmentsBoolExp>;
};

export type QueryContentAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ContentAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentAttachmentsOrderBy>>;
  where?: InputMaybe<ContentAttachmentsBoolExp>;
};

export type QueryContentAttachmentsByPkArgs = {
  contentId: Scalars['bigint']['input'];
  fileUploadId: Scalars['bigint']['input'];
};

export type QueryContentByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryDocumentArgs = {
  distinctOn?: InputMaybe<Array<DocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DocumentOrderBy>>;
  where?: InputMaybe<DocumentBoolExp>;
};

export type QueryDocumentAggregateArgs = {
  distinctOn?: InputMaybe<Array<DocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DocumentOrderBy>>;
  where?: InputMaybe<DocumentBoolExp>;
};

export type QueryDocumentByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type QueryEventAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type QueryEventApprovalArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type QueryEventApprovalAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type QueryEventApprovalByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventApprovalStepArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type QueryEventApprovalStepAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type QueryEventApprovalStepByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventApprovalStepNotifieesArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepNotifieesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepNotifieesOrderBy>>;
  where?: InputMaybe<EventApprovalStepNotifieesBoolExp>;
};

export type QueryEventApprovalStepNotifieesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepNotifieesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepNotifieesOrderBy>>;
  where?: InputMaybe<EventApprovalStepNotifieesBoolExp>;
};

export type QueryEventApprovalStepNotifieesByPkArgs = {
  eventApprovalStepId: Scalars['bigint']['input'];
  individualId: Scalars['bigint']['input'];
};

export type QueryEventApprovalStepValidatorsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepValidatorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepValidatorsOrderBy>>;
  where?: InputMaybe<EventApprovalStepValidatorsBoolExp>;
};

export type QueryEventApprovalStepValidatorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepValidatorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepValidatorsOrderBy>>;
  where?: InputMaybe<EventApprovalStepValidatorsBoolExp>;
};

export type QueryEventApprovalStepValidatorsByPkArgs = {
  eventApprovalStepId: Scalars['bigint']['input'];
  individualId: Scalars['bigint']['input'];
};

export type QueryEventByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventFavoriteArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type QueryEventFavoriteAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type QueryEventFavoriteByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventJoinArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type QueryEventJoinAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type QueryEventJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventLogsArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventOrganizeArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type QueryEventOrganizeAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type QueryEventOrganizeByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventSupervisorArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type QueryEventSupervisorAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type QueryEventSupervisorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryEventTagsArgs = {
  distinctOn?: InputMaybe<Array<EventTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventTagsOrderBy>>;
  where?: InputMaybe<EventTagsBoolExp>;
};

export type QueryEventTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventTagsOrderBy>>;
  where?: InputMaybe<EventTagsBoolExp>;
};

export type QueryEventTagsByPkArgs = {
  eventId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type QueryExpenseArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type QueryExpenseAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type QueryExpenseByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryExpenseItemArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type QueryExpenseItemAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type QueryExpenseItemAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type QueryExpenseItemAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type QueryExpenseItemAttachmentsByPkArgs = {
  expenseItemId: Scalars['bigint']['input'];
  fileUploadId: Scalars['bigint']['input'];
};

export type QueryExpenseItemByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryFavoriteArgs = {
  distinctOn?: InputMaybe<Array<FavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FavoriteOrderBy>>;
  where?: InputMaybe<FavoriteBoolExp>;
};

export type QueryFavoriteAggregateArgs = {
  distinctOn?: InputMaybe<Array<FavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FavoriteOrderBy>>;
  where?: InputMaybe<FavoriteBoolExp>;
};

export type QueryFavoriteByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryFileUploadArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type QueryFileUploadAggregateArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type QueryFileUploadByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryFinanceArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type QueryFinanceAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type QueryFinanceAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<FinanceAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceAttachmentsOrderBy>>;
  where?: InputMaybe<FinanceAttachmentsBoolExp>;
};

export type QueryFinanceAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceAttachmentsOrderBy>>;
  where?: InputMaybe<FinanceAttachmentsBoolExp>;
};

export type QueryFinanceAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  financeId: Scalars['bigint']['input'];
};

export type QueryFinanceByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryFinanceLogsArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryFinanceTagsArgs = {
  distinctOn?: InputMaybe<Array<FinanceTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceTagsOrderBy>>;
  where?: InputMaybe<FinanceTagsBoolExp>;
};

export type QueryFinanceTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceTagsOrderBy>>;
  where?: InputMaybe<FinanceTagsBoolExp>;
};

export type QueryFinanceTagsByPkArgs = {
  financeId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type QueryFollowArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type QueryFollowAggregateArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type QueryFollowByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryFormArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type QueryFormAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type QueryFormByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryFormSubmissionArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type QueryFormSubmissionAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type QueryFormSubmissionAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionAttachmentsOrderBy>>;
  where?: InputMaybe<FormSubmissionAttachmentsBoolExp>;
};

export type QueryFormSubmissionAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionAttachmentsOrderBy>>;
  where?: InputMaybe<FormSubmissionAttachmentsBoolExp>;
};

export type QueryFormSubmissionAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  formSubmissionId: Scalars['bigint']['input'];
};

export type QueryFormSubmissionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryGetFirstResultLinkArgs = {
  query: Scalars['String']['input'];
};

export type QueryGrantArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type QueryGrantAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type QueryGrantAllocateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type QueryGrantAllocateAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type QueryGrantAllocateAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type QueryGrantAllocateAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type QueryGrantAllocateAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  grantAllocateId: Scalars['bigint']['input'];
};

export type QueryGrantAllocateByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryGrantAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type QueryGrantAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type QueryGrantAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  grantId: Scalars['bigint']['input'];
};

export type QueryGrantByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryIndividualArgs = {
  distinctOn?: InputMaybe<Array<IndividualSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IndividualOrderBy>>;
  where?: InputMaybe<IndividualBoolExp>;
};

export type QueryIndividualAggregateArgs = {
  distinctOn?: InputMaybe<Array<IndividualSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IndividualOrderBy>>;
  where?: InputMaybe<IndividualBoolExp>;
};

export type QueryIndividualByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryIssueArgs = {
  distinctOn?: InputMaybe<Array<IssueSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueOrderBy>>;
  where?: InputMaybe<IssueBoolExp>;
};

export type QueryIssueAggregateArgs = {
  distinctOn?: InputMaybe<Array<IssueSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueOrderBy>>;
  where?: InputMaybe<IssueBoolExp>;
};

export type QueryIssueByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryIssueContributorsArgs = {
  distinctOn?: InputMaybe<Array<IssueContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueContributorsOrderBy>>;
  where?: InputMaybe<IssueContributorsBoolExp>;
};

export type QueryIssueContributorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<IssueContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueContributorsOrderBy>>;
  where?: InputMaybe<IssueContributorsBoolExp>;
};

export type QueryIssueContributorsByPkArgs = {
  individualId: Scalars['bigint']['input'];
  issueId: Scalars['bigint']['input'];
};

export type QueryIssueTagsArgs = {
  distinctOn?: InputMaybe<Array<IssueTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueTagsOrderBy>>;
  where?: InputMaybe<IssueTagsBoolExp>;
};

export type QueryIssueTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<IssueTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueTagsOrderBy>>;
  where?: InputMaybe<IssueTagsBoolExp>;
};

export type QueryIssueTagsByPkArgs = {
  issueId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type QueryLegalUnitArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type QueryLegalUnitAggregateArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type QueryLegalUnitByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryLegalUnitLocationArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitLocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitLocationOrderBy>>;
  where?: InputMaybe<LegalUnitLocationBoolExp>;
};

export type QueryLegalUnitLocationAggregateArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitLocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitLocationOrderBy>>;
  where?: InputMaybe<LegalUnitLocationBoolExp>;
};

export type QueryLegalUnitLocationByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryLocationArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type QueryLocationAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type QueryLocationByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryLocationImagesArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type QueryLocationImagesAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type QueryLocationImagesByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  locationId: Scalars['bigint']['input'];
};

export type QueryMissionArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type QueryMissionAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type QueryMissionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryMissionJoinArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type QueryMissionJoinAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type QueryMissionJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryPoleArgs = {
  distinctOn?: InputMaybe<Array<PoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoleOrderBy>>;
  where?: InputMaybe<PoleBoolExp>;
};

export type QueryPoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<PoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoleOrderBy>>;
  where?: InputMaybe<PoleBoolExp>;
};

export type QueryPoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryProcessReceiptArgs = {
  key: Scalars['String']['input'];
};

export type QueryProjectArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type QueryProjectAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type QueryProjectByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryProjectSupervisorsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorsOrderBy>>;
  where?: InputMaybe<ProjectSupervisorsBoolExp>;
};

export type QueryProjectSupervisorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorsOrderBy>>;
  where?: InputMaybe<ProjectSupervisorsBoolExp>;
};

export type QueryProjectSupervisorsByPkArgs = {
  projectId: Scalars['bigint']['input'];
  teamMemberId: Scalars['bigint']['input'];
};

export type QueryProjectTagsArgs = {
  distinctOn?: InputMaybe<Array<ProjectTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectTagsOrderBy>>;
  where?: InputMaybe<ProjectTagsBoolExp>;
};

export type QueryProjectTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectTagsOrderBy>>;
  where?: InputMaybe<ProjectTagsBoolExp>;
};

export type QueryProjectTagsByPkArgs = {
  projectId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type QueryReactionArgs = {
  distinctOn?: InputMaybe<Array<ReactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReactionOrderBy>>;
  where?: InputMaybe<ReactionBoolExp>;
};

export type QueryReactionAggregateArgs = {
  distinctOn?: InputMaybe<Array<ReactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReactionOrderBy>>;
  where?: InputMaybe<ReactionBoolExp>;
};

export type QueryReactionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryReportArgs = {
  distinctOn?: InputMaybe<Array<ReportSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReportOrderBy>>;
  where?: InputMaybe<ReportBoolExp>;
};

export type QueryReportAggregateArgs = {
  distinctOn?: InputMaybe<Array<ReportSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReportOrderBy>>;
  where?: InputMaybe<ReportBoolExp>;
};

export type QueryReportByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryRoleArgs = {
  distinctOn?: InputMaybe<Array<RoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RoleOrderBy>>;
  where?: InputMaybe<RoleBoolExp>;
};

export type QueryRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<RoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RoleOrderBy>>;
  where?: InputMaybe<RoleBoolExp>;
};

export type QueryRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QuerySearchFrenchCompanyArgs = {
  query: SearchCompanyQuery;
};

export type QuerySearchLocationArgs = {
  query: Scalars['String']['input'];
};

export type QuerySessionArgs = {
  distinctOn?: InputMaybe<Array<SessionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SessionOrderBy>>;
  where?: InputMaybe<SessionBoolExp>;
};

export type QuerySessionAggregateArgs = {
  distinctOn?: InputMaybe<Array<SessionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SessionOrderBy>>;
  where?: InputMaybe<SessionBoolExp>;
};

export type QuerySessionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryShortcutArgs = {
  distinctOn?: InputMaybe<Array<ShortcutSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ShortcutOrderBy>>;
  where?: InputMaybe<ShortcutBoolExp>;
};

export type QueryShortcutAggregateArgs = {
  distinctOn?: InputMaybe<Array<ShortcutSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ShortcutOrderBy>>;
  where?: InputMaybe<ShortcutBoolExp>;
};

export type QueryShortcutByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QuerySocialArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type QuerySocialAggregateArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type QuerySocialByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QuerySubjectArgs = {
  distinctOn?: InputMaybe<Array<SubjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectOrderBy>>;
  where?: InputMaybe<SubjectBoolExp>;
};

export type QuerySubjectAggregateArgs = {
  distinctOn?: InputMaybe<Array<SubjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectOrderBy>>;
  where?: InputMaybe<SubjectBoolExp>;
};

export type QuerySubjectByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QuerySubjectClassGroupsArgs = {
  distinctOn?: InputMaybe<Array<SubjectClassGroupsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectClassGroupsOrderBy>>;
  where?: InputMaybe<SubjectClassGroupsBoolExp>;
};

export type QuerySubjectClassGroupsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SubjectClassGroupsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectClassGroupsOrderBy>>;
  where?: InputMaybe<SubjectClassGroupsBoolExp>;
};

export type QuerySubjectClassGroupsByPkArgs = {
  classGroupId: Scalars['bigint']['input'];
  subjectId: Scalars['bigint']['input'];
};

export type QueryTagArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type QueryTagAggregateArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type QueryTagByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTeamArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type QueryTeamAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type QueryTeamByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTeamHistoryArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type QueryTeamHistoryAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type QueryTeamHistoryByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTeamJoinArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type QueryTeamJoinAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type QueryTeamJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTeamLogsArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTeamMemberArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type QueryTeamMemberAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type QueryTeamMemberByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTeamMemberRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRolesOrderBy>>;
  where?: InputMaybe<TeamMemberRolesBoolExp>;
};

export type QueryTeamMemberRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRolesOrderBy>>;
  where?: InputMaybe<TeamMemberRolesBoolExp>;
};

export type QueryTeamMemberRolesByPkArgs = {
  roleId: Scalars['bigint']['input'];
  teamMemberId: Scalars['bigint']['input'];
};

export type QueryTeamMetricArgs = {
  distinctOn?: InputMaybe<Array<TeamMetricSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMetricOrderBy>>;
  where?: InputMaybe<TeamMetricBoolExp>;
};

export type QueryTeamMetricAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMetricSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMetricOrderBy>>;
  where?: InputMaybe<TeamMetricBoolExp>;
};

export type QueryTeamMetricByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTenantArgs = {
  distinctOn?: InputMaybe<Array<TenantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrderBy>>;
  where?: InputMaybe<TenantBoolExp>;
};

export type QueryTenantAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrderBy>>;
  where?: InputMaybe<TenantBoolExp>;
};

export type QueryTenantByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTenantLogsArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryTenantOrganizeArgs = {
  distinctOn?: InputMaybe<Array<TenantOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrganizeOrderBy>>;
  where?: InputMaybe<TenantOrganizeBoolExp>;
};

export type QueryTenantOrganizeAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrganizeOrderBy>>;
  where?: InputMaybe<TenantOrganizeBoolExp>;
};

export type QueryTenantOrganizeByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryThreadArgs = {
  distinctOn?: InputMaybe<Array<ThreadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadOrderBy>>;
  where?: InputMaybe<ThreadBoolExp>;
};

export type QueryThreadAggregateArgs = {
  distinctOn?: InputMaybe<Array<ThreadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadOrderBy>>;
  where?: InputMaybe<ThreadBoolExp>;
};

export type QueryThreadByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryThreadContributorsArgs = {
  distinctOn?: InputMaybe<Array<ThreadContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadContributorsOrderBy>>;
  where?: InputMaybe<ThreadContributorsBoolExp>;
};

export type QueryThreadContributorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ThreadContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadContributorsOrderBy>>;
  where?: InputMaybe<ThreadContributorsBoolExp>;
};

export type QueryThreadContributorsByPkArgs = {
  individualId: Scalars['bigint']['input'];
  threadId: Scalars['bigint']['input'];
};

export type QueryThreadTagsArgs = {
  distinctOn?: InputMaybe<Array<ThreadTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadTagsOrderBy>>;
  where?: InputMaybe<ThreadTagsBoolExp>;
};

export type QueryThreadTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ThreadTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadTagsOrderBy>>;
  where?: InputMaybe<ThreadTagsBoolExp>;
};

export type QueryThreadTagsByPkArgs = {
  tagId: Scalars['bigint']['input'];
  threadId: Scalars['bigint']['input'];
};

export type QueryUserArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type QueryUserAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type QueryUserByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryValidationArgs = {
  distinctOn?: InputMaybe<Array<ValidationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ValidationOrderBy>>;
  where?: InputMaybe<ValidationBoolExp>;
};

export type QueryValidationAggregateArgs = {
  distinctOn?: InputMaybe<Array<ValidationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ValidationOrderBy>>;
  where?: InputMaybe<ValidationBoolExp>;
};

export type QueryValidationByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryViewArgs = {
  distinctOn?: InputMaybe<Array<ViewSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ViewOrderBy>>;
  where?: InputMaybe<ViewBoolExp>;
};

export type QueryViewAggregateArgs = {
  distinctOn?: InputMaybe<Array<ViewSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ViewOrderBy>>;
  where?: InputMaybe<ViewBoolExp>;
};

export type QueryViewByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type QueryVoteArgs = {
  distinctOn?: InputMaybe<Array<VoteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<VoteOrderBy>>;
  where?: InputMaybe<VoteBoolExp>;
};

export type QueryVoteAggregateArgs = {
  distinctOn?: InputMaybe<Array<VoteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<VoteOrderBy>>;
  where?: InputMaybe<VoteBoolExp>;
};

export type QueryVoteByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type Reaction = {
  __typename?: 'Reaction';
  content?: Maybe<Content>;
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  reactionType: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type ReactionAggregate = {
  __typename?: 'ReactionAggregate';
  aggregate?: Maybe<ReactionAggregateFields>;
  nodes: Array<Reaction>;
};

export type ReactionAggregateBoolExp = {
  count?: InputMaybe<ReactionAggregateBoolExpCount>;
};

export type ReactionAggregateFields = {
  __typename?: 'ReactionAggregateFields';
  avg?: Maybe<ReactionAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ReactionMaxFields>;
  min?: Maybe<ReactionMinFields>;
  stddev?: Maybe<ReactionStddevFields>;
  stddevPop?: Maybe<ReactionStddevPopFields>;
  stddevSamp?: Maybe<ReactionStddevSampFields>;
  sum?: Maybe<ReactionSumFields>;
  varPop?: Maybe<ReactionVarPopFields>;
  varSamp?: Maybe<ReactionVarSampFields>;
  variance?: Maybe<ReactionVarianceFields>;
};

export type ReactionAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ReactionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ReactionAggregateOrderBy = {
  avg?: InputMaybe<ReactionAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ReactionMaxOrderBy>;
  min?: InputMaybe<ReactionMinOrderBy>;
  stddev?: InputMaybe<ReactionStddevOrderBy>;
  stddevPop?: InputMaybe<ReactionStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ReactionStddevSampOrderBy>;
  sum?: InputMaybe<ReactionSumOrderBy>;
  varPop?: InputMaybe<ReactionVarPopOrderBy>;
  varSamp?: InputMaybe<ReactionVarSampOrderBy>;
  variance?: InputMaybe<ReactionVarianceOrderBy>;
};

export type ReactionArrRelInsertInput = {
  data: Array<ReactionInsertInput>;
  onConflict?: InputMaybe<ReactionOnConflict>;
};

export type ReactionAvgFields = {
  __typename?: 'ReactionAvgFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ReactionAvgOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReactionBoolExp = {
  _and?: InputMaybe<Array<ReactionBoolExp>>;
  _not?: InputMaybe<ReactionBoolExp>;
  _or?: InputMaybe<Array<ReactionBoolExp>>;
  content?: InputMaybe<ContentBoolExp>;
  contentId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  reactionType?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum ReactionConstraint {
  ReactionPkey = 'reaction_pkey',
}

export type ReactionIncInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ReactionInsertInput = {
  content?: InputMaybe<ContentObjRelInsertInput>;
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  reactionType?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ReactionMaxFields = {
  __typename?: 'ReactionMaxFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  reactionType?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ReactionMaxOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  reactionType?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReactionMinFields = {
  __typename?: 'ReactionMinFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  reactionType?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ReactionMinOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  reactionType?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReactionMutationResponse = {
  __typename?: 'ReactionMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Reaction>;
};

export type ReactionOnConflict = {
  constraint: ReactionConstraint;
  updateColumns?: Array<ReactionUpdateColumn>;
  where?: InputMaybe<ReactionBoolExp>;
};

export type ReactionOrderBy = {
  content?: InputMaybe<ContentOrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  reactionType?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReactionPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ReactionSelectColumn {
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  ReactionType = 'reactionType',
  TenantId = 'tenantId',
}

export type ReactionSetInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  reactionType?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ReactionStddevFields = {
  __typename?: 'ReactionStddevFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ReactionStddevOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReactionStddevPopFields = {
  __typename?: 'ReactionStddevPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ReactionStddevPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReactionStddevSampFields = {
  __typename?: 'ReactionStddevSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ReactionStddevSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReactionStreamCursorInput = {
  initialValue: ReactionStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ReactionStreamCursorValueInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  reactionType?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ReactionSumFields = {
  __typename?: 'ReactionSumFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ReactionSumOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum ReactionUpdateColumn {
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  ReactionType = 'reactionType',
  TenantId = 'tenantId',
}

export type ReactionUpdates = {
  _inc?: InputMaybe<ReactionIncInput>;
  _set?: InputMaybe<ReactionSetInput>;
  where: ReactionBoolExp;
};

export type ReactionVarPopFields = {
  __typename?: 'ReactionVarPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ReactionVarPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReactionVarSampFields = {
  __typename?: 'ReactionVarSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ReactionVarSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReactionVarianceFields = {
  __typename?: 'ReactionVarianceFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ReactionVarianceOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Report = {
  __typename?: 'Report';
  actor?: Maybe<Actor>;
  actorId?: Maybe<Scalars['bigint']['output']>;
  content?: Maybe<Content>;
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  reason: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
};

export type ReportAggregate = {
  __typename?: 'ReportAggregate';
  aggregate?: Maybe<ReportAggregateFields>;
  nodes: Array<Report>;
};

export type ReportAggregateBoolExp = {
  count?: InputMaybe<ReportAggregateBoolExpCount>;
};

export type ReportAggregateFields = {
  __typename?: 'ReportAggregateFields';
  avg?: Maybe<ReportAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ReportMaxFields>;
  min?: Maybe<ReportMinFields>;
  stddev?: Maybe<ReportStddevFields>;
  stddevPop?: Maybe<ReportStddevPopFields>;
  stddevSamp?: Maybe<ReportStddevSampFields>;
  sum?: Maybe<ReportSumFields>;
  varPop?: Maybe<ReportVarPopFields>;
  varSamp?: Maybe<ReportVarSampFields>;
  variance?: Maybe<ReportVarianceFields>;
};

export type ReportAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ReportSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ReportAggregateOrderBy = {
  avg?: InputMaybe<ReportAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ReportMaxOrderBy>;
  min?: InputMaybe<ReportMinOrderBy>;
  stddev?: InputMaybe<ReportStddevOrderBy>;
  stddevPop?: InputMaybe<ReportStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ReportStddevSampOrderBy>;
  sum?: InputMaybe<ReportSumOrderBy>;
  varPop?: InputMaybe<ReportVarPopOrderBy>;
  varSamp?: InputMaybe<ReportVarSampOrderBy>;
  variance?: InputMaybe<ReportVarianceOrderBy>;
};

export type ReportArrRelInsertInput = {
  data: Array<ReportInsertInput>;
  onConflict?: InputMaybe<ReportOnConflict>;
};

export type ReportAvgFields = {
  __typename?: 'ReportAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ReportAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReportBoolExp = {
  _and?: InputMaybe<Array<ReportBoolExp>>;
  _not?: InputMaybe<ReportBoolExp>;
  _or?: InputMaybe<Array<ReportBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  content?: InputMaybe<ContentBoolExp>;
  contentId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  reason?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
};

export enum ReportConstraint {
  ReportPkey = 'report_pkey',
}

export type ReportIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ReportInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  content?: InputMaybe<ContentObjRelInsertInput>;
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ReportMaxFields = {
  __typename?: 'ReportMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ReportMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  reason?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ReportMinFields = {
  __typename?: 'ReportMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ReportMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  reason?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ReportMutationResponse = {
  __typename?: 'ReportMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Report>;
};

export type ReportOnConflict = {
  constraint: ReportConstraint;
  updateColumns?: Array<ReportUpdateColumn>;
  where?: InputMaybe<ReportBoolExp>;
};

export type ReportOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  content?: InputMaybe<ContentOrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  reason?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ReportPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ReportSelectColumn {
  ActorId = 'actorId',
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Reason = 'reason',
  TenantId = 'tenantId',
  Type = 'type',
}

export type ReportSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ReportStddevFields = {
  __typename?: 'ReportStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ReportStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReportStddevPopFields = {
  __typename?: 'ReportStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ReportStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReportStddevSampFields = {
  __typename?: 'ReportStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ReportStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReportStreamCursorInput = {
  initialValue: ReportStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ReportStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ReportSumFields = {
  __typename?: 'ReportSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ReportSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum ReportUpdateColumn {
  ActorId = 'actorId',
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Reason = 'reason',
  TenantId = 'tenantId',
  Type = 'type',
}

export type ReportUpdates = {
  _inc?: InputMaybe<ReportIncInput>;
  _set?: InputMaybe<ReportSetInput>;
  where: ReportBoolExp;
};

export type ReportVarPopFields = {
  __typename?: 'ReportVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ReportVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReportVarSampFields = {
  __typename?: 'ReportVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ReportVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ReportVarianceFields = {
  __typename?: 'ReportVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ReportVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Role = {
  __typename?: 'Role';
  askedTeamJoins: Array<TeamJoin>;
  askedTeamJoinsAggregate: TeamJoinAggregate;
  category: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isLocked: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  permissions: Array<Scalars['String']['output']>;
  team: Team;
  teamId: Scalars['bigint']['output'];
  teamJoins: Array<TeamJoin>;
  teamJoinsAggregate: TeamJoinAggregate;
  teamMemberRoles: Array<TeamMemberRoles>;
  teamMemberRolesAggregate: TeamMemberRolesAggregate;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
};

export type RoleAskedTeamJoinsArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type RoleAskedTeamJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type RoleTeamJoinsArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type RoleTeamJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type RoleTeamMemberRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRolesOrderBy>>;
  where?: InputMaybe<TeamMemberRolesBoolExp>;
};

export type RoleTeamMemberRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRolesOrderBy>>;
  where?: InputMaybe<TeamMemberRolesBoolExp>;
};

export type RoleAggregate = {
  __typename?: 'RoleAggregate';
  aggregate?: Maybe<RoleAggregateFields>;
  nodes: Array<Role>;
};

export type RoleAggregateBoolExp = {
  bool_and?: InputMaybe<RoleAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<RoleAggregateBoolExpBool_Or>;
  count?: InputMaybe<RoleAggregateBoolExpCount>;
};

export type RoleAggregateFields = {
  __typename?: 'RoleAggregateFields';
  avg?: Maybe<RoleAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<RoleMaxFields>;
  min?: Maybe<RoleMinFields>;
  stddev?: Maybe<RoleStddevFields>;
  stddevPop?: Maybe<RoleStddevPopFields>;
  stddevSamp?: Maybe<RoleStddevSampFields>;
  sum?: Maybe<RoleSumFields>;
  varPop?: Maybe<RoleVarPopFields>;
  varSamp?: Maybe<RoleVarSampFields>;
  variance?: Maybe<RoleVarianceFields>;
};

export type RoleAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<RoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type RoleAggregateOrderBy = {
  avg?: InputMaybe<RoleAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<RoleMaxOrderBy>;
  min?: InputMaybe<RoleMinOrderBy>;
  stddev?: InputMaybe<RoleStddevOrderBy>;
  stddevPop?: InputMaybe<RoleStddevPopOrderBy>;
  stddevSamp?: InputMaybe<RoleStddevSampOrderBy>;
  sum?: InputMaybe<RoleSumOrderBy>;
  varPop?: InputMaybe<RoleVarPopOrderBy>;
  varSamp?: InputMaybe<RoleVarSampOrderBy>;
  variance?: InputMaybe<RoleVarianceOrderBy>;
};

export type RoleArrRelInsertInput = {
  data: Array<RoleInsertInput>;
  onConflict?: InputMaybe<RoleOnConflict>;
};

export type RoleAvgFields = {
  __typename?: 'RoleAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type RoleAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type RoleBoolExp = {
  _and?: InputMaybe<Array<RoleBoolExp>>;
  _not?: InputMaybe<RoleBoolExp>;
  _or?: InputMaybe<Array<RoleBoolExp>>;
  askedTeamJoins?: InputMaybe<TeamJoinBoolExp>;
  askedTeamJoinsAggregate?: InputMaybe<TeamJoinAggregateBoolExp>;
  category?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isLocked?: InputMaybe<BooleanComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  permissions?: InputMaybe<StringArrayComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  teamJoins?: InputMaybe<TeamJoinBoolExp>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateBoolExp>;
  teamMemberRoles?: InputMaybe<TeamMemberRolesBoolExp>;
  teamMemberRolesAggregate?: InputMaybe<TeamMemberRolesAggregateBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
};

export enum RoleConstraint {
  RolePkey = 'role_pkey',
}

export type RoleIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type RoleInsertInput = {
  askedTeamJoins?: InputMaybe<TeamJoinArrRelInsertInput>;
  category?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isLocked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  permissions?: InputMaybe<Array<Scalars['String']['input']>>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  teamJoins?: InputMaybe<TeamJoinArrRelInsertInput>;
  teamMemberRoles?: InputMaybe<TeamMemberRolesArrRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type RoleMaxFields = {
  __typename?: 'RoleMaxFields';
  category?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permissions?: Maybe<Array<Scalars['String']['output']>>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type RoleMaxOrderBy = {
  category?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type RoleMinFields = {
  __typename?: 'RoleMinFields';
  category?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permissions?: Maybe<Array<Scalars['String']['output']>>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type RoleMinOrderBy = {
  category?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type RoleMutationResponse = {
  __typename?: 'RoleMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Role>;
};

export type RoleObjRelInsertInput = {
  data: RoleInsertInput;
  onConflict?: InputMaybe<RoleOnConflict>;
};

export type RoleOnConflict = {
  constraint: RoleConstraint;
  updateColumns?: Array<RoleUpdateColumn>;
  where?: InputMaybe<RoleBoolExp>;
};

export type RoleOrderBy = {
  askedTeamJoinsAggregate?: InputMaybe<TeamJoinAggregateOrderBy>;
  category?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isLocked?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateOrderBy>;
  teamMemberRolesAggregate?: InputMaybe<TeamMemberRolesAggregateOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type RolePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum RoleSelectColumn {
  Category = 'category',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsLocked = 'isLocked',
  Name = 'name',
  Permissions = 'permissions',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  Type = 'type',
}

export enum RoleSelectColumnRoleAggregateBoolExpBool_AndArgumentsColumns {
  IsLocked = 'isLocked',
}

export enum RoleSelectColumnRoleAggregateBoolExpBool_OrArgumentsColumns {
  IsLocked = 'isLocked',
}

export type RoleSetInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isLocked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  permissions?: InputMaybe<Array<Scalars['String']['input']>>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type RoleStddevFields = {
  __typename?: 'RoleStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type RoleStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type RoleStddevPopFields = {
  __typename?: 'RoleStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type RoleStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type RoleStddevSampFields = {
  __typename?: 'RoleStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type RoleStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type RoleStreamCursorInput = {
  initialValue: RoleStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type RoleStreamCursorValueInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isLocked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  permissions?: InputMaybe<Array<Scalars['String']['input']>>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type RoleSumFields = {
  __typename?: 'RoleSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type RoleSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum RoleUpdateColumn {
  Category = 'category',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsLocked = 'isLocked',
  Name = 'name',
  Permissions = 'permissions',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  Type = 'type',
}

export type RoleUpdates = {
  _inc?: InputMaybe<RoleIncInput>;
  _set?: InputMaybe<RoleSetInput>;
  where: RoleBoolExp;
};

export type RoleVarPopFields = {
  __typename?: 'RoleVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type RoleVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type RoleVarSampFields = {
  __typename?: 'RoleVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type RoleVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type RoleVarianceFields = {
  __typename?: 'RoleVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type RoleVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type SearchCompanyQuery = {
  address?: InputMaybe<AddressInfoInput>;
  name: Scalars['String']['input'];
};

export type Session = {
  __typename?: 'Session';
  clientType: Scalars['String']['output'];
  country: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  expiredAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  ip: Scalars['String']['output'];
  lastActivityAt: Scalars['timestamptz']['output'];
  lastIssuedAt: Scalars['timestamptz']['output'];
  refreshTokenHash: Scalars['String']['output'];
  revokedAt?: Maybe<Scalars['timestamptz']['output']>;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  tokenFamily: Scalars['String']['output'];
  user: User;
  userAgent: Scalars['jsonb']['output'];
  userId: Scalars['bigint']['output'];
};

export type SessionUserAgentArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

export type SessionAggregate = {
  __typename?: 'SessionAggregate';
  aggregate?: Maybe<SessionAggregateFields>;
  nodes: Array<Session>;
};

export type SessionAggregateBoolExp = {
  count?: InputMaybe<SessionAggregateBoolExpCount>;
};

export type SessionAggregateFields = {
  __typename?: 'SessionAggregateFields';
  avg?: Maybe<SessionAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<SessionMaxFields>;
  min?: Maybe<SessionMinFields>;
  stddev?: Maybe<SessionStddevFields>;
  stddevPop?: Maybe<SessionStddevPopFields>;
  stddevSamp?: Maybe<SessionStddevSampFields>;
  sum?: Maybe<SessionSumFields>;
  varPop?: Maybe<SessionVarPopFields>;
  varSamp?: Maybe<SessionVarSampFields>;
  variance?: Maybe<SessionVarianceFields>;
};

export type SessionAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<SessionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SessionAggregateOrderBy = {
  avg?: InputMaybe<SessionAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<SessionMaxOrderBy>;
  min?: InputMaybe<SessionMinOrderBy>;
  stddev?: InputMaybe<SessionStddevOrderBy>;
  stddevPop?: InputMaybe<SessionStddevPopOrderBy>;
  stddevSamp?: InputMaybe<SessionStddevSampOrderBy>;
  sum?: InputMaybe<SessionSumOrderBy>;
  varPop?: InputMaybe<SessionVarPopOrderBy>;
  varSamp?: InputMaybe<SessionVarSampOrderBy>;
  variance?: InputMaybe<SessionVarianceOrderBy>;
};

export type SessionAppendInput = {
  userAgent?: InputMaybe<Scalars['jsonb']['input']>;
};

export type SessionArrRelInsertInput = {
  data: Array<SessionInsertInput>;
  onConflict?: InputMaybe<SessionOnConflict>;
};

export type SessionAvgFields = {
  __typename?: 'SessionAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type SessionAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type SessionBoolExp = {
  _and?: InputMaybe<Array<SessionBoolExp>>;
  _not?: InputMaybe<SessionBoolExp>;
  _or?: InputMaybe<Array<SessionBoolExp>>;
  clientType?: InputMaybe<StringComparisonExp>;
  country?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  expiredAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  ip?: InputMaybe<StringComparisonExp>;
  lastActivityAt?: InputMaybe<TimestamptzComparisonExp>;
  lastIssuedAt?: InputMaybe<TimestamptzComparisonExp>;
  refreshTokenHash?: InputMaybe<StringComparisonExp>;
  revokedAt?: InputMaybe<TimestamptzComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  tokenFamily?: InputMaybe<StringComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
  userAgent?: InputMaybe<JsonbComparisonExp>;
  userId?: InputMaybe<BigintComparisonExp>;
};

export enum SessionConstraint {
  SessionPkey = 'session_pkey',
}

export type SessionDeleteAtPathInput = {
  userAgent?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type SessionDeleteElemInput = {
  userAgent?: InputMaybe<Scalars['Int']['input']>;
};

export type SessionDeleteKeyInput = {
  userAgent?: InputMaybe<Scalars['String']['input']>;
};

export type SessionIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type SessionInsertInput = {
  clientType?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  expiredAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  ip?: InputMaybe<Scalars['String']['input']>;
  lastActivityAt?: InputMaybe<Scalars['timestamptz']['input']>;
  lastIssuedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  refreshTokenHash?: InputMaybe<Scalars['String']['input']>;
  revokedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  tokenFamily?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
  userAgent?: InputMaybe<Scalars['jsonb']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type SessionMaxFields = {
  __typename?: 'SessionMaxFields';
  clientType?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  expiredAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  ip?: Maybe<Scalars['String']['output']>;
  lastActivityAt?: Maybe<Scalars['timestamptz']['output']>;
  lastIssuedAt?: Maybe<Scalars['timestamptz']['output']>;
  refreshTokenHash?: Maybe<Scalars['String']['output']>;
  revokedAt?: Maybe<Scalars['timestamptz']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  tokenFamily?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type SessionMaxOrderBy = {
  clientType?: InputMaybe<OrderBy>;
  country?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  expiredAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ip?: InputMaybe<OrderBy>;
  lastActivityAt?: InputMaybe<OrderBy>;
  lastIssuedAt?: InputMaybe<OrderBy>;
  refreshTokenHash?: InputMaybe<OrderBy>;
  revokedAt?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  tokenFamily?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type SessionMinFields = {
  __typename?: 'SessionMinFields';
  clientType?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  expiredAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  ip?: Maybe<Scalars['String']['output']>;
  lastActivityAt?: Maybe<Scalars['timestamptz']['output']>;
  lastIssuedAt?: Maybe<Scalars['timestamptz']['output']>;
  refreshTokenHash?: Maybe<Scalars['String']['output']>;
  revokedAt?: Maybe<Scalars['timestamptz']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  tokenFamily?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type SessionMinOrderBy = {
  clientType?: InputMaybe<OrderBy>;
  country?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  expiredAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ip?: InputMaybe<OrderBy>;
  lastActivityAt?: InputMaybe<OrderBy>;
  lastIssuedAt?: InputMaybe<OrderBy>;
  refreshTokenHash?: InputMaybe<OrderBy>;
  revokedAt?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  tokenFamily?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type SessionMutationResponse = {
  __typename?: 'SessionMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Session>;
};

export type SessionOnConflict = {
  constraint: SessionConstraint;
  updateColumns?: Array<SessionUpdateColumn>;
  where?: InputMaybe<SessionBoolExp>;
};

export type SessionOrderBy = {
  clientType?: InputMaybe<OrderBy>;
  country?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  expiredAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ip?: InputMaybe<OrderBy>;
  lastActivityAt?: InputMaybe<OrderBy>;
  lastIssuedAt?: InputMaybe<OrderBy>;
  refreshTokenHash?: InputMaybe<OrderBy>;
  revokedAt?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  tokenFamily?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
  userAgent?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type SessionPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export type SessionPrependInput = {
  userAgent?: InputMaybe<Scalars['jsonb']['input']>;
};

export enum SessionSelectColumn {
  ClientType = 'clientType',
  Country = 'country',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  ExpiredAt = 'expiredAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Ip = 'ip',
  LastActivityAt = 'lastActivityAt',
  LastIssuedAt = 'lastIssuedAt',
  RefreshTokenHash = 'refreshTokenHash',
  RevokedAt = 'revokedAt',
  TenantId = 'tenantId',
  TokenFamily = 'tokenFamily',
  UserAgent = 'userAgent',
  UserId = 'userId',
}

export type SessionSetInput = {
  clientType?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  expiredAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  ip?: InputMaybe<Scalars['String']['input']>;
  lastActivityAt?: InputMaybe<Scalars['timestamptz']['input']>;
  lastIssuedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  refreshTokenHash?: InputMaybe<Scalars['String']['input']>;
  revokedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  tokenFamily?: InputMaybe<Scalars['String']['input']>;
  userAgent?: InputMaybe<Scalars['jsonb']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type SessionStddevFields = {
  __typename?: 'SessionStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type SessionStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type SessionStddevPopFields = {
  __typename?: 'SessionStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type SessionStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type SessionStddevSampFields = {
  __typename?: 'SessionStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type SessionStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type SessionStreamCursorInput = {
  initialValue: SessionStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type SessionStreamCursorValueInput = {
  clientType?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  expiredAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  ip?: InputMaybe<Scalars['String']['input']>;
  lastActivityAt?: InputMaybe<Scalars['timestamptz']['input']>;
  lastIssuedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  refreshTokenHash?: InputMaybe<Scalars['String']['input']>;
  revokedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  tokenFamily?: InputMaybe<Scalars['String']['input']>;
  userAgent?: InputMaybe<Scalars['jsonb']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type SessionSumFields = {
  __typename?: 'SessionSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type SessionSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum SessionUpdateColumn {
  ClientType = 'clientType',
  Country = 'country',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  ExpiredAt = 'expiredAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Ip = 'ip',
  LastActivityAt = 'lastActivityAt',
  LastIssuedAt = 'lastIssuedAt',
  RefreshTokenHash = 'refreshTokenHash',
  RevokedAt = 'revokedAt',
  TenantId = 'tenantId',
  TokenFamily = 'tokenFamily',
  UserAgent = 'userAgent',
  UserId = 'userId',
}

export type SessionUpdates = {
  _append?: InputMaybe<SessionAppendInput>;
  _deleteAtPath?: InputMaybe<SessionDeleteAtPathInput>;
  _deleteElem?: InputMaybe<SessionDeleteElemInput>;
  _deleteKey?: InputMaybe<SessionDeleteKeyInput>;
  _inc?: InputMaybe<SessionIncInput>;
  _prepend?: InputMaybe<SessionPrependInput>;
  _set?: InputMaybe<SessionSetInput>;
  where: SessionBoolExp;
};

export type SessionVarPopFields = {
  __typename?: 'SessionVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type SessionVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type SessionVarSampFields = {
  __typename?: 'SessionVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type SessionVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type SessionVarianceFields = {
  __typename?: 'SessionVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type SessionVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type Shortcut = {
  __typename?: 'Shortcut';
  actor: Actor;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  targetActorId: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
  user: User;
  userId: Scalars['bigint']['output'];
};

export type ShortcutAggregate = {
  __typename?: 'ShortcutAggregate';
  aggregate?: Maybe<ShortcutAggregateFields>;
  nodes: Array<Shortcut>;
};

export type ShortcutAggregateBoolExp = {
  count?: InputMaybe<ShortcutAggregateBoolExpCount>;
};

export type ShortcutAggregateFields = {
  __typename?: 'ShortcutAggregateFields';
  avg?: Maybe<ShortcutAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ShortcutMaxFields>;
  min?: Maybe<ShortcutMinFields>;
  stddev?: Maybe<ShortcutStddevFields>;
  stddevPop?: Maybe<ShortcutStddevPopFields>;
  stddevSamp?: Maybe<ShortcutStddevSampFields>;
  sum?: Maybe<ShortcutSumFields>;
  varPop?: Maybe<ShortcutVarPopFields>;
  varSamp?: Maybe<ShortcutVarSampFields>;
  variance?: Maybe<ShortcutVarianceFields>;
};

export type ShortcutAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ShortcutSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ShortcutAggregateOrderBy = {
  avg?: InputMaybe<ShortcutAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ShortcutMaxOrderBy>;
  min?: InputMaybe<ShortcutMinOrderBy>;
  stddev?: InputMaybe<ShortcutStddevOrderBy>;
  stddevPop?: InputMaybe<ShortcutStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ShortcutStddevSampOrderBy>;
  sum?: InputMaybe<ShortcutSumOrderBy>;
  varPop?: InputMaybe<ShortcutVarPopOrderBy>;
  varSamp?: InputMaybe<ShortcutVarSampOrderBy>;
  variance?: InputMaybe<ShortcutVarianceOrderBy>;
};

export type ShortcutArrRelInsertInput = {
  data: Array<ShortcutInsertInput>;
  onConflict?: InputMaybe<ShortcutOnConflict>;
};

export type ShortcutAvgFields = {
  __typename?: 'ShortcutAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  targetActorId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ShortcutAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  targetActorId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ShortcutBoolExp = {
  _and?: InputMaybe<Array<ShortcutBoolExp>>;
  _not?: InputMaybe<ShortcutBoolExp>;
  _or?: InputMaybe<Array<ShortcutBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  targetActorId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
  userId?: InputMaybe<BigintComparisonExp>;
};

export enum ShortcutConstraint {
  ShortcutPkey = 'shortcut_pkey',
}

export type ShortcutIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  targetActorId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ShortcutInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  targetActorId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ShortcutMaxFields = {
  __typename?: 'ShortcutMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  targetActorId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ShortcutMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  targetActorId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ShortcutMinFields = {
  __typename?: 'ShortcutMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  targetActorId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ShortcutMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  targetActorId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ShortcutMutationResponse = {
  __typename?: 'ShortcutMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Shortcut>;
};

export type ShortcutOnConflict = {
  constraint: ShortcutConstraint;
  updateColumns?: Array<ShortcutUpdateColumn>;
  where?: InputMaybe<ShortcutBoolExp>;
};

export type ShortcutOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  targetActorId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ShortcutPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ShortcutSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TargetActorId = 'targetActorId',
  TenantId = 'tenantId',
  Type = 'type',
  UserId = 'userId',
}

export type ShortcutSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  targetActorId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ShortcutStddevFields = {
  __typename?: 'ShortcutStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  targetActorId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ShortcutStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  targetActorId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ShortcutStddevPopFields = {
  __typename?: 'ShortcutStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  targetActorId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ShortcutStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  targetActorId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ShortcutStddevSampFields = {
  __typename?: 'ShortcutStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  targetActorId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ShortcutStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  targetActorId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ShortcutStreamCursorInput = {
  initialValue: ShortcutStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ShortcutStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  targetActorId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ShortcutSumFields = {
  __typename?: 'ShortcutSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  targetActorId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type ShortcutSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  targetActorId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum ShortcutUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TargetActorId = 'targetActorId',
  TenantId = 'tenantId',
  Type = 'type',
  UserId = 'userId',
}

export type ShortcutUpdates = {
  _inc?: InputMaybe<ShortcutIncInput>;
  _set?: InputMaybe<ShortcutSetInput>;
  where: ShortcutBoolExp;
};

export type ShortcutVarPopFields = {
  __typename?: 'ShortcutVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  targetActorId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ShortcutVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  targetActorId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ShortcutVarSampFields = {
  __typename?: 'ShortcutVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  targetActorId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ShortcutVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  targetActorId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type ShortcutVarianceFields = {
  __typename?: 'ShortcutVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  targetActorId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type ShortcutVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  targetActorId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type SmallintComparisonExp = {
  _eq?: InputMaybe<Scalars['smallint']['input']>;
  _gt?: InputMaybe<Scalars['smallint']['input']>;
  _gte?: InputMaybe<Scalars['smallint']['input']>;
  _in?: InputMaybe<Array<Scalars['smallint']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['smallint']['input']>;
  _lte?: InputMaybe<Scalars['smallint']['input']>;
  _neq?: InputMaybe<Scalars['smallint']['input']>;
  _nin?: InputMaybe<Array<Scalars['smallint']['input']>>;
};

export type Social = {
  __typename?: 'Social';
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  order: Scalars['smallint']['output'];
  pseudo: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type SocialAggregate = {
  __typename?: 'SocialAggregate';
  aggregate?: Maybe<SocialAggregateFields>;
  nodes: Array<Social>;
};

export type SocialAggregateBoolExp = {
  count?: InputMaybe<SocialAggregateBoolExpCount>;
};

export type SocialAggregateFields = {
  __typename?: 'SocialAggregateFields';
  avg?: Maybe<SocialAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<SocialMaxFields>;
  min?: Maybe<SocialMinFields>;
  stddev?: Maybe<SocialStddevFields>;
  stddevPop?: Maybe<SocialStddevPopFields>;
  stddevSamp?: Maybe<SocialStddevSampFields>;
  sum?: Maybe<SocialSumFields>;
  varPop?: Maybe<SocialVarPopFields>;
  varSamp?: Maybe<SocialVarSampFields>;
  variance?: Maybe<SocialVarianceFields>;
};

export type SocialAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<SocialSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SocialAggregateOrderBy = {
  avg?: InputMaybe<SocialAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<SocialMaxOrderBy>;
  min?: InputMaybe<SocialMinOrderBy>;
  stddev?: InputMaybe<SocialStddevOrderBy>;
  stddevPop?: InputMaybe<SocialStddevPopOrderBy>;
  stddevSamp?: InputMaybe<SocialStddevSampOrderBy>;
  sum?: InputMaybe<SocialSumOrderBy>;
  varPop?: InputMaybe<SocialVarPopOrderBy>;
  varSamp?: InputMaybe<SocialVarSampOrderBy>;
  variance?: InputMaybe<SocialVarianceOrderBy>;
};

export type SocialArrRelInsertInput = {
  data: Array<SocialInsertInput>;
  onConflict?: InputMaybe<SocialOnConflict>;
};

export type SocialAvgFields = {
  __typename?: 'SocialAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type SocialAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type SocialBoolExp = {
  _and?: InputMaybe<Array<SocialBoolExp>>;
  _not?: InputMaybe<SocialBoolExp>;
  _or?: InputMaybe<Array<SocialBoolExp>>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  order?: InputMaybe<SmallintComparisonExp>;
  pseudo?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
  url?: InputMaybe<StringComparisonExp>;
};

export enum SocialConstraint {
  SocialPkey = 'social_pkey',
}

export type SocialIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  order?: InputMaybe<Scalars['smallint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type SocialInsertInput = {
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  order?: InputMaybe<Scalars['smallint']['input']>;
  pseudo?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type SocialMaxFields = {
  __typename?: 'SocialMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  order?: Maybe<Scalars['smallint']['output']>;
  pseudo?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type SocialMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  pseudo?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  url?: InputMaybe<OrderBy>;
};

export type SocialMinFields = {
  __typename?: 'SocialMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  order?: Maybe<Scalars['smallint']['output']>;
  pseudo?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type SocialMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  pseudo?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  url?: InputMaybe<OrderBy>;
};

export type SocialMutationResponse = {
  __typename?: 'SocialMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Social>;
};

export type SocialOnConflict = {
  constraint: SocialConstraint;
  updateColumns?: Array<SocialUpdateColumn>;
  where?: InputMaybe<SocialBoolExp>;
};

export type SocialOrderBy = {
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  pseudo?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  url?: InputMaybe<OrderBy>;
};

export type SocialPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum SocialSelectColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Order = 'order',
  Pseudo = 'pseudo',
  TenantId = 'tenantId',
  Type = 'type',
  Url = 'url',
}

export type SocialSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  order?: InputMaybe<Scalars['smallint']['input']>;
  pseudo?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type SocialStddevFields = {
  __typename?: 'SocialStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type SocialStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type SocialStddevPopFields = {
  __typename?: 'SocialStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type SocialStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type SocialStddevSampFields = {
  __typename?: 'SocialStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type SocialStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type SocialStreamCursorInput = {
  initialValue: SocialStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type SocialStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  order?: InputMaybe<Scalars['smallint']['input']>;
  pseudo?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type SocialSumFields = {
  __typename?: 'SocialSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  order?: Maybe<Scalars['smallint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type SocialSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum SocialUpdateColumn {
  ActorId = 'actorId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Order = 'order',
  Pseudo = 'pseudo',
  TenantId = 'tenantId',
  Type = 'type',
  Url = 'url',
}

export type SocialUpdates = {
  _inc?: InputMaybe<SocialIncInput>;
  _set?: InputMaybe<SocialSetInput>;
  where: SocialBoolExp;
};

export type SocialVarPopFields = {
  __typename?: 'SocialVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type SocialVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type SocialVarSampFields = {
  __typename?: 'SocialVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type SocialVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type SocialVarianceFields = {
  __typename?: 'SocialVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type SocialVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  order?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type StringArrayComparisonExp = {
  _containedIn?: InputMaybe<Array<Scalars['String']['input']>>;
  _contains?: InputMaybe<Array<Scalars['String']['input']>>;
  _eq?: InputMaybe<Array<Scalars['String']['input']>>;
  _gt?: InputMaybe<Array<Scalars['String']['input']>>;
  _gte?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Array<Scalars['String']['input']>>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Array<Scalars['String']['input']>>;
  _lte?: InputMaybe<Array<Scalars['String']['input']>>;
  _neq?: InputMaybe<Array<Scalars['String']['input']>>;
  _nin?: InputMaybe<Array<Array<Scalars['String']['input']>>>;
};

export type StringComparisonExp = {
  _eq?: InputMaybe<Scalars['String']['input']>;
  _gt?: InputMaybe<Scalars['String']['input']>;
  _gte?: InputMaybe<Scalars['String']['input']>;
  _ilike?: InputMaybe<Scalars['String']['input']>;
  _in?: InputMaybe<Array<Scalars['String']['input']>>;
  _iregex?: InputMaybe<Scalars['String']['input']>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _like?: InputMaybe<Scalars['String']['input']>;
  _lt?: InputMaybe<Scalars['String']['input']>;
  _lte?: InputMaybe<Scalars['String']['input']>;
  _neq?: InputMaybe<Scalars['String']['input']>;
  _nilike?: InputMaybe<Scalars['String']['input']>;
  _nin?: InputMaybe<Array<Scalars['String']['input']>>;
  _niregex?: InputMaybe<Scalars['String']['input']>;
  _nlike?: InputMaybe<Scalars['String']['input']>;
  _nregex?: InputMaybe<Scalars['String']['input']>;
  _nsimilar?: InputMaybe<Scalars['String']['input']>;
  _regex?: InputMaybe<Scalars['String']['input']>;
  _similar?: InputMaybe<Scalars['String']['input']>;
};

export type Subject = {
  __typename?: 'Subject';
  classGroupTeacherSubjects: Array<ClassGroupTeacherSubjects>;
  classGroupTeacherSubjectsAggregate: ClassGroupTeacherSubjectsAggregate;
  code: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  documents: Array<Document>;
  documentsAggregate: DocumentAggregate;
  englishName: Scalars['String']['output'];
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  subjectClassGroups: Array<SubjectClassGroups>;
  subjectClassGroupsAggregate: SubjectClassGroupsAggregate;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
};

export type SubjectClassGroupTeacherSubjectsArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSubjectsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherSubjectsOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherSubjectsBoolExp>;
};

export type SubjectClassGroupTeacherSubjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSubjectsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherSubjectsOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherSubjectsBoolExp>;
};

export type SubjectDocumentsArgs = {
  distinctOn?: InputMaybe<Array<DocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DocumentOrderBy>>;
  where?: InputMaybe<DocumentBoolExp>;
};

export type SubjectDocumentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<DocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DocumentOrderBy>>;
  where?: InputMaybe<DocumentBoolExp>;
};

export type SubjectSubjectClassGroupsArgs = {
  distinctOn?: InputMaybe<Array<SubjectClassGroupsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectClassGroupsOrderBy>>;
  where?: InputMaybe<SubjectClassGroupsBoolExp>;
};

export type SubjectSubjectClassGroupsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SubjectClassGroupsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectClassGroupsOrderBy>>;
  where?: InputMaybe<SubjectClassGroupsBoolExp>;
};

export type SubjectAggregate = {
  __typename?: 'SubjectAggregate';
  aggregate?: Maybe<SubjectAggregateFields>;
  nodes: Array<Subject>;
};

export type SubjectAggregateBoolExp = {
  count?: InputMaybe<SubjectAggregateBoolExpCount>;
};

export type SubjectAggregateFields = {
  __typename?: 'SubjectAggregateFields';
  avg?: Maybe<SubjectAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<SubjectMaxFields>;
  min?: Maybe<SubjectMinFields>;
  stddev?: Maybe<SubjectStddevFields>;
  stddevPop?: Maybe<SubjectStddevPopFields>;
  stddevSamp?: Maybe<SubjectStddevSampFields>;
  sum?: Maybe<SubjectSumFields>;
  varPop?: Maybe<SubjectVarPopFields>;
  varSamp?: Maybe<SubjectVarSampFields>;
  variance?: Maybe<SubjectVarianceFields>;
};

export type SubjectAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<SubjectSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SubjectAggregateOrderBy = {
  avg?: InputMaybe<SubjectAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<SubjectMaxOrderBy>;
  min?: InputMaybe<SubjectMinOrderBy>;
  stddev?: InputMaybe<SubjectStddevOrderBy>;
  stddevPop?: InputMaybe<SubjectStddevPopOrderBy>;
  stddevSamp?: InputMaybe<SubjectStddevSampOrderBy>;
  sum?: InputMaybe<SubjectSumOrderBy>;
  varPop?: InputMaybe<SubjectVarPopOrderBy>;
  varSamp?: InputMaybe<SubjectVarSampOrderBy>;
  variance?: InputMaybe<SubjectVarianceOrderBy>;
};

export type SubjectArrRelInsertInput = {
  data: Array<SubjectInsertInput>;
  onConflict?: InputMaybe<SubjectOnConflict>;
};

export type SubjectAvgFields = {
  __typename?: 'SubjectAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type SubjectAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type SubjectBoolExp = {
  _and?: InputMaybe<Array<SubjectBoolExp>>;
  _not?: InputMaybe<SubjectBoolExp>;
  _or?: InputMaybe<Array<SubjectBoolExp>>;
  classGroupTeacherSubjects?: InputMaybe<ClassGroupTeacherSubjectsBoolExp>;
  classGroupTeacherSubjectsAggregate?: InputMaybe<ClassGroupTeacherSubjectsAggregateBoolExp>;
  code?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  documents?: InputMaybe<DocumentBoolExp>;
  documentsAggregate?: InputMaybe<DocumentAggregateBoolExp>;
  englishName?: InputMaybe<StringComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  subjectClassGroups?: InputMaybe<SubjectClassGroupsBoolExp>;
  subjectClassGroupsAggregate?: InputMaybe<SubjectClassGroupsAggregateBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
};

export type SubjectClassGroups = {
  __typename?: 'SubjectClassGroups';
  classGroup: ClassGroup;
  classGroupId: Scalars['bigint']['output'];
  subject: Subject;
  subjectId: Scalars['bigint']['output'];
};

export type SubjectClassGroupsAggregate = {
  __typename?: 'SubjectClassGroupsAggregate';
  aggregate?: Maybe<SubjectClassGroupsAggregateFields>;
  nodes: Array<SubjectClassGroups>;
};

export type SubjectClassGroupsAggregateBoolExp = {
  count?: InputMaybe<SubjectClassGroupsAggregateBoolExpCount>;
};

export type SubjectClassGroupsAggregateFields = {
  __typename?: 'SubjectClassGroupsAggregateFields';
  avg?: Maybe<SubjectClassGroupsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<SubjectClassGroupsMaxFields>;
  min?: Maybe<SubjectClassGroupsMinFields>;
  stddev?: Maybe<SubjectClassGroupsStddevFields>;
  stddevPop?: Maybe<SubjectClassGroupsStddevPopFields>;
  stddevSamp?: Maybe<SubjectClassGroupsStddevSampFields>;
  sum?: Maybe<SubjectClassGroupsSumFields>;
  varPop?: Maybe<SubjectClassGroupsVarPopFields>;
  varSamp?: Maybe<SubjectClassGroupsVarSampFields>;
  variance?: Maybe<SubjectClassGroupsVarianceFields>;
};

export type SubjectClassGroupsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<SubjectClassGroupsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SubjectClassGroupsAggregateOrderBy = {
  avg?: InputMaybe<SubjectClassGroupsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<SubjectClassGroupsMaxOrderBy>;
  min?: InputMaybe<SubjectClassGroupsMinOrderBy>;
  stddev?: InputMaybe<SubjectClassGroupsStddevOrderBy>;
  stddevPop?: InputMaybe<SubjectClassGroupsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<SubjectClassGroupsStddevSampOrderBy>;
  sum?: InputMaybe<SubjectClassGroupsSumOrderBy>;
  varPop?: InputMaybe<SubjectClassGroupsVarPopOrderBy>;
  varSamp?: InputMaybe<SubjectClassGroupsVarSampOrderBy>;
  variance?: InputMaybe<SubjectClassGroupsVarianceOrderBy>;
};

export type SubjectClassGroupsArrRelInsertInput = {
  data: Array<SubjectClassGroupsInsertInput>;
  onConflict?: InputMaybe<SubjectClassGroupsOnConflict>;
};

export type SubjectClassGroupsAvgFields = {
  __typename?: 'SubjectClassGroupsAvgFields';
  classGroupId?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
};

export type SubjectClassGroupsAvgOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type SubjectClassGroupsBoolExp = {
  _and?: InputMaybe<Array<SubjectClassGroupsBoolExp>>;
  _not?: InputMaybe<SubjectClassGroupsBoolExp>;
  _or?: InputMaybe<Array<SubjectClassGroupsBoolExp>>;
  classGroup?: InputMaybe<ClassGroupBoolExp>;
  classGroupId?: InputMaybe<BigintComparisonExp>;
  subject?: InputMaybe<SubjectBoolExp>;
  subjectId?: InputMaybe<BigintComparisonExp>;
};

export enum SubjectClassGroupsConstraint {
  SubjectClassGroupsPkey = 'subject_class_groups_pkey',
}

export type SubjectClassGroupsIncInput = {
  classGroupId?: InputMaybe<Scalars['bigint']['input']>;
  subjectId?: InputMaybe<Scalars['bigint']['input']>;
};

export type SubjectClassGroupsInsertInput = {
  classGroup?: InputMaybe<ClassGroupObjRelInsertInput>;
  classGroupId?: InputMaybe<Scalars['bigint']['input']>;
  subject?: InputMaybe<SubjectObjRelInsertInput>;
  subjectId?: InputMaybe<Scalars['bigint']['input']>;
};

export type SubjectClassGroupsMaxFields = {
  __typename?: 'SubjectClassGroupsMaxFields';
  classGroupId?: Maybe<Scalars['bigint']['output']>;
  subjectId?: Maybe<Scalars['bigint']['output']>;
};

export type SubjectClassGroupsMaxOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type SubjectClassGroupsMinFields = {
  __typename?: 'SubjectClassGroupsMinFields';
  classGroupId?: Maybe<Scalars['bigint']['output']>;
  subjectId?: Maybe<Scalars['bigint']['output']>;
};

export type SubjectClassGroupsMinOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type SubjectClassGroupsMutationResponse = {
  __typename?: 'SubjectClassGroupsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<SubjectClassGroups>;
};

export type SubjectClassGroupsOnConflict = {
  constraint: SubjectClassGroupsConstraint;
  updateColumns?: Array<SubjectClassGroupsUpdateColumn>;
  where?: InputMaybe<SubjectClassGroupsBoolExp>;
};

export type SubjectClassGroupsOrderBy = {
  classGroup?: InputMaybe<ClassGroupOrderBy>;
  classGroupId?: InputMaybe<OrderBy>;
  subject?: InputMaybe<SubjectOrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type SubjectClassGroupsPkColumnsInput = {
  classGroupId: Scalars['bigint']['input'];
  subjectId: Scalars['bigint']['input'];
};

export enum SubjectClassGroupsSelectColumn {
  ClassGroupId = 'classGroupId',
  SubjectId = 'subjectId',
}

export type SubjectClassGroupsSetInput = {
  classGroupId?: InputMaybe<Scalars['bigint']['input']>;
  subjectId?: InputMaybe<Scalars['bigint']['input']>;
};

export type SubjectClassGroupsStddevFields = {
  __typename?: 'SubjectClassGroupsStddevFields';
  classGroupId?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
};

export type SubjectClassGroupsStddevOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type SubjectClassGroupsStddevPopFields = {
  __typename?: 'SubjectClassGroupsStddevPopFields';
  classGroupId?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
};

export type SubjectClassGroupsStddevPopOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type SubjectClassGroupsStddevSampFields = {
  __typename?: 'SubjectClassGroupsStddevSampFields';
  classGroupId?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
};

export type SubjectClassGroupsStddevSampOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type SubjectClassGroupsStreamCursorInput = {
  initialValue: SubjectClassGroupsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type SubjectClassGroupsStreamCursorValueInput = {
  classGroupId?: InputMaybe<Scalars['bigint']['input']>;
  subjectId?: InputMaybe<Scalars['bigint']['input']>;
};

export type SubjectClassGroupsSumFields = {
  __typename?: 'SubjectClassGroupsSumFields';
  classGroupId?: Maybe<Scalars['bigint']['output']>;
  subjectId?: Maybe<Scalars['bigint']['output']>;
};

export type SubjectClassGroupsSumOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export enum SubjectClassGroupsUpdateColumn {
  ClassGroupId = 'classGroupId',
  SubjectId = 'subjectId',
}

export type SubjectClassGroupsUpdates = {
  _inc?: InputMaybe<SubjectClassGroupsIncInput>;
  _set?: InputMaybe<SubjectClassGroupsSetInput>;
  where: SubjectClassGroupsBoolExp;
};

export type SubjectClassGroupsVarPopFields = {
  __typename?: 'SubjectClassGroupsVarPopFields';
  classGroupId?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
};

export type SubjectClassGroupsVarPopOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type SubjectClassGroupsVarSampFields = {
  __typename?: 'SubjectClassGroupsVarSampFields';
  classGroupId?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
};

export type SubjectClassGroupsVarSampOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export type SubjectClassGroupsVarianceFields = {
  __typename?: 'SubjectClassGroupsVarianceFields';
  classGroupId?: Maybe<Scalars['Float']['output']>;
  subjectId?: Maybe<Scalars['Float']['output']>;
};

export type SubjectClassGroupsVarianceOrderBy = {
  classGroupId?: InputMaybe<OrderBy>;
  subjectId?: InputMaybe<OrderBy>;
};

export enum SubjectConstraint {
  SubjectPkey = 'subject_pkey',
}

export type SubjectIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type SubjectInsertInput = {
  classGroupTeacherSubjects?: InputMaybe<ClassGroupTeacherSubjectsArrRelInsertInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  documents?: InputMaybe<DocumentArrRelInsertInput>;
  englishName?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  subjectClassGroups?: InputMaybe<SubjectClassGroupsArrRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type SubjectMaxFields = {
  __typename?: 'SubjectMaxFields';
  code?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  englishName?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type SubjectMaxOrderBy = {
  code?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  englishName?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type SubjectMinFields = {
  __typename?: 'SubjectMinFields';
  code?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  englishName?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type SubjectMinOrderBy = {
  code?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  englishName?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type SubjectMutationResponse = {
  __typename?: 'SubjectMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Subject>;
};

export type SubjectObjRelInsertInput = {
  data: SubjectInsertInput;
  onConflict?: InputMaybe<SubjectOnConflict>;
};

export type SubjectOnConflict = {
  constraint: SubjectConstraint;
  updateColumns?: Array<SubjectUpdateColumn>;
  where?: InputMaybe<SubjectBoolExp>;
};

export type SubjectOrderBy = {
  classGroupTeacherSubjectsAggregate?: InputMaybe<ClassGroupTeacherSubjectsAggregateOrderBy>;
  code?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  documentsAggregate?: InputMaybe<DocumentAggregateOrderBy>;
  englishName?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  subjectClassGroupsAggregate?: InputMaybe<SubjectClassGroupsAggregateOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type SubjectPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum SubjectSelectColumn {
  Code = 'code',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EnglishName = 'englishName',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  TenantId = 'tenantId',
  Type = 'type',
}

export type SubjectSetInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  englishName?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type SubjectStddevFields = {
  __typename?: 'SubjectStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type SubjectStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type SubjectStddevPopFields = {
  __typename?: 'SubjectStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type SubjectStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type SubjectStddevSampFields = {
  __typename?: 'SubjectStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type SubjectStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type SubjectStreamCursorInput = {
  initialValue: SubjectStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type SubjectStreamCursorValueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  englishName?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type SubjectSumFields = {
  __typename?: 'SubjectSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type SubjectSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum SubjectUpdateColumn {
  Code = 'code',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EnglishName = 'englishName',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  TenantId = 'tenantId',
  Type = 'type',
}

export type SubjectUpdates = {
  _inc?: InputMaybe<SubjectIncInput>;
  _set?: InputMaybe<SubjectSetInput>;
  where: SubjectBoolExp;
};

export type SubjectVarPopFields = {
  __typename?: 'SubjectVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type SubjectVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type SubjectVarSampFields = {
  __typename?: 'SubjectVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type SubjectVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type SubjectVarianceFields = {
  __typename?: 'SubjectVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type SubjectVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Subscription = {
  __typename?: 'Subscription';
  account: Array<Account>;
  accountAggregate: AccountAggregate;
  accountByPk?: Maybe<Account>;
  accountStream: Array<Account>;
  action: Array<Action>;
  actionAggregate: ActionAggregate;
  actionByPk?: Maybe<Action>;
  actionStream: Array<Action>;
  actor: Array<Actor>;
  actorAggregate: ActorAggregate;
  actorByPk?: Maybe<Actor>;
  actorImage: Array<ActorImage>;
  actorImageAggregate: ActorImageAggregate;
  actorImageByPk?: Maybe<ActorImage>;
  actorImageStream: Array<ActorImage>;
  actorStream: Array<Actor>;
  actorTags: Array<ActorTags>;
  actorTagsAggregate: ActorTagsAggregate;
  actorTagsByPk?: Maybe<ActorTags>;
  actorTagsStream: Array<ActorTags>;
  address: Array<Address>;
  addressAggregate: AddressAggregate;
  addressByPk?: Maybe<Address>;
  addressStream: Array<Address>;
  bank: Array<Bank>;
  bankAggregate: BankAggregate;
  bankByPk?: Maybe<Bank>;
  bankStream: Array<Bank>;
  bot: Array<Bot>;
  botAggregate: BotAggregate;
  botByPk?: Maybe<Bot>;
  botStream: Array<Bot>;
  campus: Array<Campus>;
  campusAggregate: CampusAggregate;
  campusByPk?: Maybe<Campus>;
  campusCluster: Array<CampusCluster>;
  campusClusterAggregate: CampusClusterAggregate;
  campusClusterByPk?: Maybe<CampusCluster>;
  campusClusterStream: Array<CampusCluster>;
  campusStream: Array<Campus>;
  canteen: Array<Canteen>;
  canteenAggregate: CanteenAggregate;
  canteenByPk?: Maybe<Canteen>;
  canteenFood: Array<CanteenFood>;
  canteenFoodAggregate: CanteenFoodAggregate;
  canteenFoodByPk?: Maybe<CanteenFood>;
  canteenFoodStream: Array<CanteenFood>;
  canteenMenu: Array<CanteenMenu>;
  canteenMenuAggregate: CanteenMenuAggregate;
  canteenMenuByPk?: Maybe<CanteenMenu>;
  canteenMenuStream: Array<CanteenMenu>;
  canteenStream: Array<Canteen>;
  classGroup: Array<ClassGroup>;
  classGroupAggregate: ClassGroupAggregate;
  classGroupByPk?: Maybe<ClassGroup>;
  classGroupStream: Array<ClassGroup>;
  classGroupTeacher: Array<ClassGroupTeacher>;
  classGroupTeacherAggregate: ClassGroupTeacherAggregate;
  classGroupTeacherByPk?: Maybe<ClassGroupTeacher>;
  classGroupTeacherStream: Array<ClassGroupTeacher>;
  classGroupTeacherSubjects: Array<ClassGroupTeacherSubjects>;
  classGroupTeacherSubjectsAggregate: ClassGroupTeacherSubjectsAggregate;
  classGroupTeacherSubjectsByPk?: Maybe<ClassGroupTeacherSubjects>;
  classGroupTeacherSubjectsStream: Array<ClassGroupTeacherSubjects>;
  cohort: Array<Cohort>;
  cohortAggregate: CohortAggregate;
  cohortByPk?: Maybe<Cohort>;
  cohortStream: Array<Cohort>;
  content: Array<Content>;
  contentAggregate: ContentAggregate;
  contentAttachments: Array<ContentAttachments>;
  contentAttachmentsAggregate: ContentAttachmentsAggregate;
  contentAttachmentsByPk?: Maybe<ContentAttachments>;
  contentAttachmentsStream: Array<ContentAttachments>;
  contentByPk?: Maybe<Content>;
  contentStream: Array<Content>;
  document: Array<Document>;
  documentAggregate: DocumentAggregate;
  documentByPk?: Maybe<Document>;
  documentStream: Array<Document>;
  event: Array<Event>;
  eventAggregate: EventAggregate;
  eventApproval: Array<EventApproval>;
  eventApprovalAggregate: EventApprovalAggregate;
  eventApprovalByPk?: Maybe<EventApproval>;
  eventApprovalStep: Array<EventApprovalStep>;
  eventApprovalStepAggregate: EventApprovalStepAggregate;
  eventApprovalStepByPk?: Maybe<EventApprovalStep>;
  eventApprovalStepNotifiees: Array<EventApprovalStepNotifiees>;
  eventApprovalStepNotifieesAggregate: EventApprovalStepNotifieesAggregate;
  eventApprovalStepNotifieesByPk?: Maybe<EventApprovalStepNotifiees>;
  eventApprovalStepNotifieesStream: Array<EventApprovalStepNotifiees>;
  eventApprovalStepStream: Array<EventApprovalStep>;
  eventApprovalStepValidators: Array<EventApprovalStepValidators>;
  eventApprovalStepValidatorsAggregate: EventApprovalStepValidatorsAggregate;
  eventApprovalStepValidatorsByPk?: Maybe<EventApprovalStepValidators>;
  eventApprovalStepValidatorsStream: Array<EventApprovalStepValidators>;
  eventApprovalStream: Array<EventApproval>;
  eventByPk?: Maybe<Event>;
  eventFavorite: Array<EventFavorite>;
  eventFavoriteAggregate: EventFavoriteAggregate;
  eventFavoriteByPk?: Maybe<EventFavorite>;
  eventFavoriteStream: Array<EventFavorite>;
  eventJoin: Array<EventJoin>;
  eventJoinAggregate: EventJoinAggregate;
  eventJoinByPk?: Maybe<EventJoin>;
  eventJoinStream: Array<EventJoin>;
  eventOrganize: Array<EventOrganize>;
  eventOrganizeAggregate: EventOrganizeAggregate;
  eventOrganizeByPk?: Maybe<EventOrganize>;
  eventOrganizeStream: Array<EventOrganize>;
  eventStream: Array<Event>;
  eventSupervisor: Array<EventSupervisor>;
  eventSupervisorAggregate: EventSupervisorAggregate;
  eventSupervisorByPk?: Maybe<EventSupervisor>;
  eventSupervisorStream: Array<EventSupervisor>;
  eventTags: Array<EventTags>;
  eventTagsAggregate: EventTagsAggregate;
  eventTagsByPk?: Maybe<EventTags>;
  eventTagsStream: Array<EventTags>;
  expense: Array<Expense>;
  expenseAggregate: ExpenseAggregate;
  expenseByPk?: Maybe<Expense>;
  expenseItem: Array<ExpenseItem>;
  expenseItemAggregate: ExpenseItemAggregate;
  expenseItemAttachments: Array<ExpenseItemAttachments>;
  expenseItemAttachmentsAggregate: ExpenseItemAttachmentsAggregate;
  expenseItemAttachmentsByPk?: Maybe<ExpenseItemAttachments>;
  expenseItemAttachmentsStream: Array<ExpenseItemAttachments>;
  expenseItemByPk?: Maybe<ExpenseItem>;
  expenseItemStream: Array<ExpenseItem>;
  expenseStream: Array<Expense>;
  favorite: Array<Favorite>;
  favoriteAggregate: FavoriteAggregate;
  favoriteByPk?: Maybe<Favorite>;
  favoriteStream: Array<Favorite>;
  fileUpload: Array<FileUpload>;
  fileUploadAggregate: FileUploadAggregate;
  fileUploadByPk?: Maybe<FileUpload>;
  fileUploadStream: Array<FileUpload>;
  finance: Array<Finance>;
  financeAggregate: FinanceAggregate;
  financeAttachments: Array<FinanceAttachments>;
  financeAttachmentsAggregate: FinanceAttachmentsAggregate;
  financeAttachmentsByPk?: Maybe<FinanceAttachments>;
  financeAttachmentsStream: Array<FinanceAttachments>;
  financeByPk?: Maybe<Finance>;
  financeStream: Array<Finance>;
  financeTags: Array<FinanceTags>;
  financeTagsAggregate: FinanceTagsAggregate;
  financeTagsByPk?: Maybe<FinanceTags>;
  financeTagsStream: Array<FinanceTags>;
  follow: Array<Follow>;
  followAggregate: FollowAggregate;
  followByPk?: Maybe<Follow>;
  followStream: Array<Follow>;
  form: Array<Form>;
  formAggregate: FormAggregate;
  formByPk?: Maybe<Form>;
  formStream: Array<Form>;
  formSubmission: Array<FormSubmission>;
  formSubmissionAggregate: FormSubmissionAggregate;
  formSubmissionAttachments: Array<FormSubmissionAttachments>;
  formSubmissionAttachmentsAggregate: FormSubmissionAttachmentsAggregate;
  formSubmissionAttachmentsByPk?: Maybe<FormSubmissionAttachments>;
  formSubmissionAttachmentsStream: Array<FormSubmissionAttachments>;
  formSubmissionByPk?: Maybe<FormSubmission>;
  formSubmissionStream: Array<FormSubmission>;
  grant: Array<Grant>;
  grantAggregate: GrantAggregate;
  grantAllocate: Array<GrantAllocate>;
  grantAllocateAggregate: GrantAllocateAggregate;
  grantAllocateAttachments: Array<GrantAllocateAttachments>;
  grantAllocateAttachmentsAggregate: GrantAllocateAttachmentsAggregate;
  grantAllocateAttachmentsByPk?: Maybe<GrantAllocateAttachments>;
  grantAllocateAttachmentsStream: Array<GrantAllocateAttachments>;
  grantAllocateByPk?: Maybe<GrantAllocate>;
  grantAllocateStream: Array<GrantAllocate>;
  grantAttachments: Array<GrantAttachments>;
  grantAttachmentsAggregate: GrantAttachmentsAggregate;
  grantAttachmentsByPk?: Maybe<GrantAttachments>;
  grantAttachmentsStream: Array<GrantAttachments>;
  grantByPk?: Maybe<Grant>;
  grantStream: Array<Grant>;
  individual: Array<Individual>;
  individualAggregate: IndividualAggregate;
  individualByPk?: Maybe<Individual>;
  individualStream: Array<Individual>;
  issue: Array<Issue>;
  issueAggregate: IssueAggregate;
  issueByPk?: Maybe<Issue>;
  issueContributors: Array<IssueContributors>;
  issueContributorsAggregate: IssueContributorsAggregate;
  issueContributorsByPk?: Maybe<IssueContributors>;
  issueContributorsStream: Array<IssueContributors>;
  issueStream: Array<Issue>;
  issueTags: Array<IssueTags>;
  issueTagsAggregate: IssueTagsAggregate;
  issueTagsByPk?: Maybe<IssueTags>;
  issueTagsStream: Array<IssueTags>;
  legalUnit: Array<LegalUnit>;
  legalUnitAggregate: LegalUnitAggregate;
  legalUnitByPk?: Maybe<LegalUnit>;
  legalUnitLocation: Array<LegalUnitLocation>;
  legalUnitLocationAggregate: LegalUnitLocationAggregate;
  legalUnitLocationByPk?: Maybe<LegalUnitLocation>;
  legalUnitLocationStream: Array<LegalUnitLocation>;
  legalUnitStream: Array<LegalUnit>;
  location: Array<Location>;
  locationAggregate: LocationAggregate;
  locationByPk?: Maybe<Location>;
  locationImages: Array<LocationImages>;
  locationImagesAggregate: LocationImagesAggregate;
  locationImagesByPk?: Maybe<LocationImages>;
  locationImagesStream: Array<LocationImages>;
  locationStream: Array<Location>;
  mission: Array<Mission>;
  missionAggregate: MissionAggregate;
  missionByPk?: Maybe<Mission>;
  missionJoin: Array<MissionJoin>;
  missionJoinAggregate: MissionJoinAggregate;
  missionJoinByPk?: Maybe<MissionJoin>;
  missionJoinStream: Array<MissionJoin>;
  missionStream: Array<Mission>;
  pole: Array<Pole>;
  poleAggregate: PoleAggregate;
  poleByPk?: Maybe<Pole>;
  poleStream: Array<Pole>;
  project: Array<Project>;
  projectAggregate: ProjectAggregate;
  projectByPk?: Maybe<Project>;
  projectStream: Array<Project>;
  projectSupervisors: Array<ProjectSupervisors>;
  projectSupervisorsAggregate: ProjectSupervisorsAggregate;
  projectSupervisorsByPk?: Maybe<ProjectSupervisors>;
  projectSupervisorsStream: Array<ProjectSupervisors>;
  projectTags: Array<ProjectTags>;
  projectTagsAggregate: ProjectTagsAggregate;
  projectTagsByPk?: Maybe<ProjectTags>;
  projectTagsStream: Array<ProjectTags>;
  reaction: Array<Reaction>;
  reactionAggregate: ReactionAggregate;
  reactionByPk?: Maybe<Reaction>;
  reactionStream: Array<Reaction>;
  report: Array<Report>;
  reportAggregate: ReportAggregate;
  reportByPk?: Maybe<Report>;
  reportStream: Array<Report>;
  role: Array<Role>;
  roleAggregate: RoleAggregate;
  roleByPk?: Maybe<Role>;
  roleStream: Array<Role>;
  session: Array<Session>;
  sessionAggregate: SessionAggregate;
  sessionByPk?: Maybe<Session>;
  sessionStream: Array<Session>;
  shortcut: Array<Shortcut>;
  shortcutAggregate: ShortcutAggregate;
  shortcutByPk?: Maybe<Shortcut>;
  shortcutStream: Array<Shortcut>;
  social: Array<Social>;
  socialAggregate: SocialAggregate;
  socialByPk?: Maybe<Social>;
  socialStream: Array<Social>;
  subject: Array<Subject>;
  subjectAggregate: SubjectAggregate;
  subjectByPk?: Maybe<Subject>;
  subjectClassGroups: Array<SubjectClassGroups>;
  subjectClassGroupsAggregate: SubjectClassGroupsAggregate;
  subjectClassGroupsByPk?: Maybe<SubjectClassGroups>;
  subjectClassGroupsStream: Array<SubjectClassGroups>;
  subjectStream: Array<Subject>;
  tag: Array<Tag>;
  tagAggregate: TagAggregate;
  tagByPk?: Maybe<Tag>;
  tagStream: Array<Tag>;
  team: Array<Team>;
  teamAggregate: TeamAggregate;
  teamByPk?: Maybe<Team>;
  teamHistory: Array<TeamHistory>;
  teamHistoryAggregate: TeamHistoryAggregate;
  teamHistoryByPk?: Maybe<TeamHistory>;
  teamHistoryStream: Array<TeamHistory>;
  teamJoin: Array<TeamJoin>;
  teamJoinAggregate: TeamJoinAggregate;
  teamJoinByPk?: Maybe<TeamJoin>;
  teamJoinStream: Array<TeamJoin>;
  teamMember: Array<TeamMember>;
  teamMemberAggregate: TeamMemberAggregate;
  teamMemberByPk?: Maybe<TeamMember>;
  teamMemberRoles: Array<TeamMemberRoles>;
  teamMemberRolesAggregate: TeamMemberRolesAggregate;
  teamMemberRolesByPk?: Maybe<TeamMemberRoles>;
  teamMemberRolesStream: Array<TeamMemberRoles>;
  teamMemberStream: Array<TeamMember>;
  teamMetric: Array<TeamMetric>;
  teamMetricAggregate: TeamMetricAggregate;
  teamMetricByPk?: Maybe<TeamMetric>;
  teamMetricStream: Array<TeamMetric>;
  teamStream: Array<Team>;
  tenant: Array<Tenant>;
  tenantAggregate: TenantAggregate;
  tenantByPk?: Maybe<Tenant>;
  tenantOrganize: Array<TenantOrganize>;
  tenantOrganizeAggregate: TenantOrganizeAggregate;
  tenantOrganizeByPk?: Maybe<TenantOrganize>;
  tenantOrganizeStream: Array<TenantOrganize>;
  tenantStream: Array<Tenant>;
  thread: Array<Thread>;
  threadAggregate: ThreadAggregate;
  threadByPk?: Maybe<Thread>;
  threadContributors: Array<ThreadContributors>;
  threadContributorsAggregate: ThreadContributorsAggregate;
  threadContributorsByPk?: Maybe<ThreadContributors>;
  threadContributorsStream: Array<ThreadContributors>;
  threadStream: Array<Thread>;
  threadTags: Array<ThreadTags>;
  threadTagsAggregate: ThreadTagsAggregate;
  threadTagsByPk?: Maybe<ThreadTags>;
  threadTagsStream: Array<ThreadTags>;
  user: Array<User>;
  userAggregate: UserAggregate;
  userByPk?: Maybe<User>;
  userStream: Array<User>;
  validation: Array<Validation>;
  validationAggregate: ValidationAggregate;
  validationByPk?: Maybe<Validation>;
  validationStream: Array<Validation>;
  view: Array<View>;
  viewAggregate: ViewAggregate;
  viewByPk?: Maybe<View>;
  viewStream: Array<View>;
  vote: Array<Vote>;
  voteAggregate: VoteAggregate;
  voteByPk?: Maybe<Vote>;
  voteStream: Array<Vote>;
};

export type SubscriptionAccountArgs = {
  distinctOn?: InputMaybe<Array<AccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountOrderBy>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type SubscriptionAccountAggregateArgs = {
  distinctOn?: InputMaybe<Array<AccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountOrderBy>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type SubscriptionAccountByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionAccountStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<AccountStreamCursorInput>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type SubscriptionActionArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type SubscriptionActionAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type SubscriptionActionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionActionStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ActionStreamCursorInput>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type SubscriptionActorArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type SubscriptionActorAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type SubscriptionActorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionActorImageArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type SubscriptionActorImageAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type SubscriptionActorImageByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionActorImageStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ActorImageStreamCursorInput>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type SubscriptionActorStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ActorStreamCursorInput>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type SubscriptionActorTagsArgs = {
  distinctOn?: InputMaybe<Array<ActorTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagsOrderBy>>;
  where?: InputMaybe<ActorTagsBoolExp>;
};

export type SubscriptionActorTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagsOrderBy>>;
  where?: InputMaybe<ActorTagsBoolExp>;
};

export type SubscriptionActorTagsByPkArgs = {
  actorId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type SubscriptionActorTagsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ActorTagsStreamCursorInput>>;
  where?: InputMaybe<ActorTagsBoolExp>;
};

export type SubscriptionAddressArgs = {
  distinctOn?: InputMaybe<Array<AddressSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AddressOrderBy>>;
  where?: InputMaybe<AddressBoolExp>;
};

export type SubscriptionAddressAggregateArgs = {
  distinctOn?: InputMaybe<Array<AddressSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AddressOrderBy>>;
  where?: InputMaybe<AddressBoolExp>;
};

export type SubscriptionAddressByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionAddressStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<AddressStreamCursorInput>>;
  where?: InputMaybe<AddressBoolExp>;
};

export type SubscriptionBankArgs = {
  distinctOn?: InputMaybe<Array<BankSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankOrderBy>>;
  where?: InputMaybe<BankBoolExp>;
};

export type SubscriptionBankAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankOrderBy>>;
  where?: InputMaybe<BankBoolExp>;
};

export type SubscriptionBankByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionBankStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<BankStreamCursorInput>>;
  where?: InputMaybe<BankBoolExp>;
};

export type SubscriptionBotArgs = {
  distinctOn?: InputMaybe<Array<BotSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BotOrderBy>>;
  where?: InputMaybe<BotBoolExp>;
};

export type SubscriptionBotAggregateArgs = {
  distinctOn?: InputMaybe<Array<BotSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BotOrderBy>>;
  where?: InputMaybe<BotBoolExp>;
};

export type SubscriptionBotByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionBotStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<BotStreamCursorInput>>;
  where?: InputMaybe<BotBoolExp>;
};

export type SubscriptionCampusArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type SubscriptionCampusAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type SubscriptionCampusByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionCampusClusterArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type SubscriptionCampusClusterAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type SubscriptionCampusClusterByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionCampusClusterStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CampusClusterStreamCursorInput>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type SubscriptionCampusStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CampusStreamCursorInput>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type SubscriptionCanteenArgs = {
  distinctOn?: InputMaybe<Array<CanteenSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenOrderBy>>;
  where?: InputMaybe<CanteenBoolExp>;
};

export type SubscriptionCanteenAggregateArgs = {
  distinctOn?: InputMaybe<Array<CanteenSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenOrderBy>>;
  where?: InputMaybe<CanteenBoolExp>;
};

export type SubscriptionCanteenByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionCanteenFoodArgs = {
  distinctOn?: InputMaybe<Array<CanteenFoodSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenFoodOrderBy>>;
  where?: InputMaybe<CanteenFoodBoolExp>;
};

export type SubscriptionCanteenFoodAggregateArgs = {
  distinctOn?: InputMaybe<Array<CanteenFoodSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenFoodOrderBy>>;
  where?: InputMaybe<CanteenFoodBoolExp>;
};

export type SubscriptionCanteenFoodByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionCanteenFoodStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CanteenFoodStreamCursorInput>>;
  where?: InputMaybe<CanteenFoodBoolExp>;
};

export type SubscriptionCanteenMenuArgs = {
  distinctOn?: InputMaybe<Array<CanteenMenuSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenMenuOrderBy>>;
  where?: InputMaybe<CanteenMenuBoolExp>;
};

export type SubscriptionCanteenMenuAggregateArgs = {
  distinctOn?: InputMaybe<Array<CanteenMenuSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenMenuOrderBy>>;
  where?: InputMaybe<CanteenMenuBoolExp>;
};

export type SubscriptionCanteenMenuByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionCanteenMenuStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CanteenMenuStreamCursorInput>>;
  where?: InputMaybe<CanteenMenuBoolExp>;
};

export type SubscriptionCanteenStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CanteenStreamCursorInput>>;
  where?: InputMaybe<CanteenBoolExp>;
};

export type SubscriptionClassGroupArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupOrderBy>>;
  where?: InputMaybe<ClassGroupBoolExp>;
};

export type SubscriptionClassGroupAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupOrderBy>>;
  where?: InputMaybe<ClassGroupBoolExp>;
};

export type SubscriptionClassGroupByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionClassGroupStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ClassGroupStreamCursorInput>>;
  where?: InputMaybe<ClassGroupBoolExp>;
};

export type SubscriptionClassGroupTeacherArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherBoolExp>;
};

export type SubscriptionClassGroupTeacherAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherBoolExp>;
};

export type SubscriptionClassGroupTeacherByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionClassGroupTeacherStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ClassGroupTeacherStreamCursorInput>>;
  where?: InputMaybe<ClassGroupTeacherBoolExp>;
};

export type SubscriptionClassGroupTeacherSubjectsArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSubjectsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherSubjectsOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherSubjectsBoolExp>;
};

export type SubscriptionClassGroupTeacherSubjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSubjectsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherSubjectsOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherSubjectsBoolExp>;
};

export type SubscriptionClassGroupTeacherSubjectsByPkArgs = {
  classGroupTeacherId: Scalars['bigint']['input'];
  subjectId: Scalars['bigint']['input'];
};

export type SubscriptionClassGroupTeacherSubjectsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ClassGroupTeacherSubjectsStreamCursorInput>>;
  where?: InputMaybe<ClassGroupTeacherSubjectsBoolExp>;
};

export type SubscriptionCohortArgs = {
  distinctOn?: InputMaybe<Array<CohortSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CohortOrderBy>>;
  where?: InputMaybe<CohortBoolExp>;
};

export type SubscriptionCohortAggregateArgs = {
  distinctOn?: InputMaybe<Array<CohortSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CohortOrderBy>>;
  where?: InputMaybe<CohortBoolExp>;
};

export type SubscriptionCohortByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionCohortStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CohortStreamCursorInput>>;
  where?: InputMaybe<CohortBoolExp>;
};

export type SubscriptionContentArgs = {
  distinctOn?: InputMaybe<Array<ContentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentOrderBy>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type SubscriptionContentAggregateArgs = {
  distinctOn?: InputMaybe<Array<ContentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentOrderBy>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type SubscriptionContentAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<ContentAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentAttachmentsOrderBy>>;
  where?: InputMaybe<ContentAttachmentsBoolExp>;
};

export type SubscriptionContentAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ContentAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentAttachmentsOrderBy>>;
  where?: InputMaybe<ContentAttachmentsBoolExp>;
};

export type SubscriptionContentAttachmentsByPkArgs = {
  contentId: Scalars['bigint']['input'];
  fileUploadId: Scalars['bigint']['input'];
};

export type SubscriptionContentAttachmentsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ContentAttachmentsStreamCursorInput>>;
  where?: InputMaybe<ContentAttachmentsBoolExp>;
};

export type SubscriptionContentByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionContentStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ContentStreamCursorInput>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type SubscriptionDocumentArgs = {
  distinctOn?: InputMaybe<Array<DocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DocumentOrderBy>>;
  where?: InputMaybe<DocumentBoolExp>;
};

export type SubscriptionDocumentAggregateArgs = {
  distinctOn?: InputMaybe<Array<DocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DocumentOrderBy>>;
  where?: InputMaybe<DocumentBoolExp>;
};

export type SubscriptionDocumentByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionDocumentStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<DocumentStreamCursorInput>>;
  where?: InputMaybe<DocumentBoolExp>;
};

export type SubscriptionEventArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type SubscriptionEventAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type SubscriptionEventApprovalArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type SubscriptionEventApprovalAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type SubscriptionEventApprovalByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventApprovalStepArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type SubscriptionEventApprovalStepAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type SubscriptionEventApprovalStepByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventApprovalStepNotifieesArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepNotifieesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepNotifieesOrderBy>>;
  where?: InputMaybe<EventApprovalStepNotifieesBoolExp>;
};

export type SubscriptionEventApprovalStepNotifieesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepNotifieesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepNotifieesOrderBy>>;
  where?: InputMaybe<EventApprovalStepNotifieesBoolExp>;
};

export type SubscriptionEventApprovalStepNotifieesByPkArgs = {
  eventApprovalStepId: Scalars['bigint']['input'];
  individualId: Scalars['bigint']['input'];
};

export type SubscriptionEventApprovalStepNotifieesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventApprovalStepNotifieesStreamCursorInput>>;
  where?: InputMaybe<EventApprovalStepNotifieesBoolExp>;
};

export type SubscriptionEventApprovalStepStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventApprovalStepStreamCursorInput>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type SubscriptionEventApprovalStepValidatorsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepValidatorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepValidatorsOrderBy>>;
  where?: InputMaybe<EventApprovalStepValidatorsBoolExp>;
};

export type SubscriptionEventApprovalStepValidatorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepValidatorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepValidatorsOrderBy>>;
  where?: InputMaybe<EventApprovalStepValidatorsBoolExp>;
};

export type SubscriptionEventApprovalStepValidatorsByPkArgs = {
  eventApprovalStepId: Scalars['bigint']['input'];
  individualId: Scalars['bigint']['input'];
};

export type SubscriptionEventApprovalStepValidatorsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventApprovalStepValidatorsStreamCursorInput>>;
  where?: InputMaybe<EventApprovalStepValidatorsBoolExp>;
};

export type SubscriptionEventApprovalStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventApprovalStreamCursorInput>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type SubscriptionEventByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventFavoriteArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type SubscriptionEventFavoriteAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type SubscriptionEventFavoriteByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventFavoriteStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventFavoriteStreamCursorInput>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type SubscriptionEventJoinArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type SubscriptionEventJoinAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type SubscriptionEventJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventJoinStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventJoinStreamCursorInput>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type SubscriptionEventOrganizeArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type SubscriptionEventOrganizeAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type SubscriptionEventOrganizeByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventOrganizeStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventOrganizeStreamCursorInput>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type SubscriptionEventStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventStreamCursorInput>>;
  where?: InputMaybe<EventBoolExp>;
};

export type SubscriptionEventSupervisorArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type SubscriptionEventSupervisorAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type SubscriptionEventSupervisorByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionEventSupervisorStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventSupervisorStreamCursorInput>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type SubscriptionEventTagsArgs = {
  distinctOn?: InputMaybe<Array<EventTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventTagsOrderBy>>;
  where?: InputMaybe<EventTagsBoolExp>;
};

export type SubscriptionEventTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventTagsOrderBy>>;
  where?: InputMaybe<EventTagsBoolExp>;
};

export type SubscriptionEventTagsByPkArgs = {
  eventId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type SubscriptionEventTagsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventTagsStreamCursorInput>>;
  where?: InputMaybe<EventTagsBoolExp>;
};

export type SubscriptionExpenseArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type SubscriptionExpenseAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type SubscriptionExpenseByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionExpenseItemArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type SubscriptionExpenseItemAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type SubscriptionExpenseItemAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type SubscriptionExpenseItemAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemAttachmentsOrderBy>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type SubscriptionExpenseItemAttachmentsByPkArgs = {
  expenseItemId: Scalars['bigint']['input'];
  fileUploadId: Scalars['bigint']['input'];
};

export type SubscriptionExpenseItemAttachmentsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ExpenseItemAttachmentsStreamCursorInput>>;
  where?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
};

export type SubscriptionExpenseItemByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionExpenseItemStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ExpenseItemStreamCursorInput>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type SubscriptionExpenseStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ExpenseStreamCursorInput>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type SubscriptionFavoriteArgs = {
  distinctOn?: InputMaybe<Array<FavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FavoriteOrderBy>>;
  where?: InputMaybe<FavoriteBoolExp>;
};

export type SubscriptionFavoriteAggregateArgs = {
  distinctOn?: InputMaybe<Array<FavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FavoriteOrderBy>>;
  where?: InputMaybe<FavoriteBoolExp>;
};

export type SubscriptionFavoriteByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionFavoriteStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FavoriteStreamCursorInput>>;
  where?: InputMaybe<FavoriteBoolExp>;
};

export type SubscriptionFileUploadArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type SubscriptionFileUploadAggregateArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type SubscriptionFileUploadByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionFileUploadStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FileUploadStreamCursorInput>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type SubscriptionFinanceArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type SubscriptionFinanceAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type SubscriptionFinanceAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<FinanceAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceAttachmentsOrderBy>>;
  where?: InputMaybe<FinanceAttachmentsBoolExp>;
};

export type SubscriptionFinanceAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceAttachmentsOrderBy>>;
  where?: InputMaybe<FinanceAttachmentsBoolExp>;
};

export type SubscriptionFinanceAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  financeId: Scalars['bigint']['input'];
};

export type SubscriptionFinanceAttachmentsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FinanceAttachmentsStreamCursorInput>>;
  where?: InputMaybe<FinanceAttachmentsBoolExp>;
};

export type SubscriptionFinanceByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionFinanceStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FinanceStreamCursorInput>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type SubscriptionFinanceTagsArgs = {
  distinctOn?: InputMaybe<Array<FinanceTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceTagsOrderBy>>;
  where?: InputMaybe<FinanceTagsBoolExp>;
};

export type SubscriptionFinanceTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceTagsOrderBy>>;
  where?: InputMaybe<FinanceTagsBoolExp>;
};

export type SubscriptionFinanceTagsByPkArgs = {
  financeId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type SubscriptionFinanceTagsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FinanceTagsStreamCursorInput>>;
  where?: InputMaybe<FinanceTagsBoolExp>;
};

export type SubscriptionFollowArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type SubscriptionFollowAggregateArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type SubscriptionFollowByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionFollowStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FollowStreamCursorInput>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type SubscriptionFormArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type SubscriptionFormAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type SubscriptionFormByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionFormStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FormStreamCursorInput>>;
  where?: InputMaybe<FormBoolExp>;
};

export type SubscriptionFormSubmissionArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type SubscriptionFormSubmissionAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type SubscriptionFormSubmissionAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionAttachmentsOrderBy>>;
  where?: InputMaybe<FormSubmissionAttachmentsBoolExp>;
};

export type SubscriptionFormSubmissionAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionAttachmentsOrderBy>>;
  where?: InputMaybe<FormSubmissionAttachmentsBoolExp>;
};

export type SubscriptionFormSubmissionAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  formSubmissionId: Scalars['bigint']['input'];
};

export type SubscriptionFormSubmissionAttachmentsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FormSubmissionAttachmentsStreamCursorInput>>;
  where?: InputMaybe<FormSubmissionAttachmentsBoolExp>;
};

export type SubscriptionFormSubmissionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionFormSubmissionStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FormSubmissionStreamCursorInput>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type SubscriptionGrantArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type SubscriptionGrantAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type SubscriptionGrantAllocateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type SubscriptionGrantAllocateAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type SubscriptionGrantAllocateAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type SubscriptionGrantAllocateAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type SubscriptionGrantAllocateAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  grantAllocateId: Scalars['bigint']['input'];
};

export type SubscriptionGrantAllocateAttachmentsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<GrantAllocateAttachmentsStreamCursorInput>>;
  where?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
};

export type SubscriptionGrantAllocateByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionGrantAllocateStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<GrantAllocateStreamCursorInput>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type SubscriptionGrantAttachmentsArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type SubscriptionGrantAttachmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAttachmentsOrderBy>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type SubscriptionGrantAttachmentsByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  grantId: Scalars['bigint']['input'];
};

export type SubscriptionGrantAttachmentsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<GrantAttachmentsStreamCursorInput>>;
  where?: InputMaybe<GrantAttachmentsBoolExp>;
};

export type SubscriptionGrantByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionGrantStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<GrantStreamCursorInput>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type SubscriptionIndividualArgs = {
  distinctOn?: InputMaybe<Array<IndividualSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IndividualOrderBy>>;
  where?: InputMaybe<IndividualBoolExp>;
};

export type SubscriptionIndividualAggregateArgs = {
  distinctOn?: InputMaybe<Array<IndividualSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IndividualOrderBy>>;
  where?: InputMaybe<IndividualBoolExp>;
};

export type SubscriptionIndividualByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionIndividualStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<IndividualStreamCursorInput>>;
  where?: InputMaybe<IndividualBoolExp>;
};

export type SubscriptionIssueArgs = {
  distinctOn?: InputMaybe<Array<IssueSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueOrderBy>>;
  where?: InputMaybe<IssueBoolExp>;
};

export type SubscriptionIssueAggregateArgs = {
  distinctOn?: InputMaybe<Array<IssueSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueOrderBy>>;
  where?: InputMaybe<IssueBoolExp>;
};

export type SubscriptionIssueByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionIssueContributorsArgs = {
  distinctOn?: InputMaybe<Array<IssueContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueContributorsOrderBy>>;
  where?: InputMaybe<IssueContributorsBoolExp>;
};

export type SubscriptionIssueContributorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<IssueContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueContributorsOrderBy>>;
  where?: InputMaybe<IssueContributorsBoolExp>;
};

export type SubscriptionIssueContributorsByPkArgs = {
  individualId: Scalars['bigint']['input'];
  issueId: Scalars['bigint']['input'];
};

export type SubscriptionIssueContributorsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<IssueContributorsStreamCursorInput>>;
  where?: InputMaybe<IssueContributorsBoolExp>;
};

export type SubscriptionIssueStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<IssueStreamCursorInput>>;
  where?: InputMaybe<IssueBoolExp>;
};

export type SubscriptionIssueTagsArgs = {
  distinctOn?: InputMaybe<Array<IssueTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueTagsOrderBy>>;
  where?: InputMaybe<IssueTagsBoolExp>;
};

export type SubscriptionIssueTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<IssueTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueTagsOrderBy>>;
  where?: InputMaybe<IssueTagsBoolExp>;
};

export type SubscriptionIssueTagsByPkArgs = {
  issueId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type SubscriptionIssueTagsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<IssueTagsStreamCursorInput>>;
  where?: InputMaybe<IssueTagsBoolExp>;
};

export type SubscriptionLegalUnitArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type SubscriptionLegalUnitAggregateArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type SubscriptionLegalUnitByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionLegalUnitLocationArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitLocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitLocationOrderBy>>;
  where?: InputMaybe<LegalUnitLocationBoolExp>;
};

export type SubscriptionLegalUnitLocationAggregateArgs = {
  distinctOn?: InputMaybe<Array<LegalUnitLocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LegalUnitLocationOrderBy>>;
  where?: InputMaybe<LegalUnitLocationBoolExp>;
};

export type SubscriptionLegalUnitLocationByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionLegalUnitLocationStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<LegalUnitLocationStreamCursorInput>>;
  where?: InputMaybe<LegalUnitLocationBoolExp>;
};

export type SubscriptionLegalUnitStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<LegalUnitStreamCursorInput>>;
  where?: InputMaybe<LegalUnitBoolExp>;
};

export type SubscriptionLocationArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type SubscriptionLocationAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type SubscriptionLocationByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionLocationImagesArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type SubscriptionLocationImagesAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationImagesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationImagesOrderBy>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type SubscriptionLocationImagesByPkArgs = {
  fileUploadId: Scalars['bigint']['input'];
  locationId: Scalars['bigint']['input'];
};

export type SubscriptionLocationImagesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<LocationImagesStreamCursorInput>>;
  where?: InputMaybe<LocationImagesBoolExp>;
};

export type SubscriptionLocationStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<LocationStreamCursorInput>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type SubscriptionMissionArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type SubscriptionMissionAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type SubscriptionMissionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionMissionJoinArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type SubscriptionMissionJoinAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type SubscriptionMissionJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionMissionJoinStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<MissionJoinStreamCursorInput>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type SubscriptionMissionStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<MissionStreamCursorInput>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type SubscriptionPoleArgs = {
  distinctOn?: InputMaybe<Array<PoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoleOrderBy>>;
  where?: InputMaybe<PoleBoolExp>;
};

export type SubscriptionPoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<PoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoleOrderBy>>;
  where?: InputMaybe<PoleBoolExp>;
};

export type SubscriptionPoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionPoleStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PoleStreamCursorInput>>;
  where?: InputMaybe<PoleBoolExp>;
};

export type SubscriptionProjectArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type SubscriptionProjectAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type SubscriptionProjectByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionProjectStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ProjectStreamCursorInput>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type SubscriptionProjectSupervisorsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorsOrderBy>>;
  where?: InputMaybe<ProjectSupervisorsBoolExp>;
};

export type SubscriptionProjectSupervisorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorsOrderBy>>;
  where?: InputMaybe<ProjectSupervisorsBoolExp>;
};

export type SubscriptionProjectSupervisorsByPkArgs = {
  projectId: Scalars['bigint']['input'];
  teamMemberId: Scalars['bigint']['input'];
};

export type SubscriptionProjectSupervisorsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ProjectSupervisorsStreamCursorInput>>;
  where?: InputMaybe<ProjectSupervisorsBoolExp>;
};

export type SubscriptionProjectTagsArgs = {
  distinctOn?: InputMaybe<Array<ProjectTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectTagsOrderBy>>;
  where?: InputMaybe<ProjectTagsBoolExp>;
};

export type SubscriptionProjectTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectTagsOrderBy>>;
  where?: InputMaybe<ProjectTagsBoolExp>;
};

export type SubscriptionProjectTagsByPkArgs = {
  projectId: Scalars['bigint']['input'];
  tagId: Scalars['bigint']['input'];
};

export type SubscriptionProjectTagsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ProjectTagsStreamCursorInput>>;
  where?: InputMaybe<ProjectTagsBoolExp>;
};

export type SubscriptionReactionArgs = {
  distinctOn?: InputMaybe<Array<ReactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReactionOrderBy>>;
  where?: InputMaybe<ReactionBoolExp>;
};

export type SubscriptionReactionAggregateArgs = {
  distinctOn?: InputMaybe<Array<ReactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReactionOrderBy>>;
  where?: InputMaybe<ReactionBoolExp>;
};

export type SubscriptionReactionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionReactionStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ReactionStreamCursorInput>>;
  where?: InputMaybe<ReactionBoolExp>;
};

export type SubscriptionReportArgs = {
  distinctOn?: InputMaybe<Array<ReportSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReportOrderBy>>;
  where?: InputMaybe<ReportBoolExp>;
};

export type SubscriptionReportAggregateArgs = {
  distinctOn?: InputMaybe<Array<ReportSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReportOrderBy>>;
  where?: InputMaybe<ReportBoolExp>;
};

export type SubscriptionReportByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionReportStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ReportStreamCursorInput>>;
  where?: InputMaybe<ReportBoolExp>;
};

export type SubscriptionRoleArgs = {
  distinctOn?: InputMaybe<Array<RoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RoleOrderBy>>;
  where?: InputMaybe<RoleBoolExp>;
};

export type SubscriptionRoleAggregateArgs = {
  distinctOn?: InputMaybe<Array<RoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RoleOrderBy>>;
  where?: InputMaybe<RoleBoolExp>;
};

export type SubscriptionRoleByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionRoleStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<RoleStreamCursorInput>>;
  where?: InputMaybe<RoleBoolExp>;
};

export type SubscriptionSessionArgs = {
  distinctOn?: InputMaybe<Array<SessionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SessionOrderBy>>;
  where?: InputMaybe<SessionBoolExp>;
};

export type SubscriptionSessionAggregateArgs = {
  distinctOn?: InputMaybe<Array<SessionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SessionOrderBy>>;
  where?: InputMaybe<SessionBoolExp>;
};

export type SubscriptionSessionByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionSessionStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SessionStreamCursorInput>>;
  where?: InputMaybe<SessionBoolExp>;
};

export type SubscriptionShortcutArgs = {
  distinctOn?: InputMaybe<Array<ShortcutSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ShortcutOrderBy>>;
  where?: InputMaybe<ShortcutBoolExp>;
};

export type SubscriptionShortcutAggregateArgs = {
  distinctOn?: InputMaybe<Array<ShortcutSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ShortcutOrderBy>>;
  where?: InputMaybe<ShortcutBoolExp>;
};

export type SubscriptionShortcutByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionShortcutStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ShortcutStreamCursorInput>>;
  where?: InputMaybe<ShortcutBoolExp>;
};

export type SubscriptionSocialArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type SubscriptionSocialAggregateArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type SubscriptionSocialByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionSocialStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SocialStreamCursorInput>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type SubscriptionSubjectArgs = {
  distinctOn?: InputMaybe<Array<SubjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectOrderBy>>;
  where?: InputMaybe<SubjectBoolExp>;
};

export type SubscriptionSubjectAggregateArgs = {
  distinctOn?: InputMaybe<Array<SubjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectOrderBy>>;
  where?: InputMaybe<SubjectBoolExp>;
};

export type SubscriptionSubjectByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionSubjectClassGroupsArgs = {
  distinctOn?: InputMaybe<Array<SubjectClassGroupsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectClassGroupsOrderBy>>;
  where?: InputMaybe<SubjectClassGroupsBoolExp>;
};

export type SubscriptionSubjectClassGroupsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SubjectClassGroupsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectClassGroupsOrderBy>>;
  where?: InputMaybe<SubjectClassGroupsBoolExp>;
};

export type SubscriptionSubjectClassGroupsByPkArgs = {
  classGroupId: Scalars['bigint']['input'];
  subjectId: Scalars['bigint']['input'];
};

export type SubscriptionSubjectClassGroupsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SubjectClassGroupsStreamCursorInput>>;
  where?: InputMaybe<SubjectClassGroupsBoolExp>;
};

export type SubscriptionSubjectStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SubjectStreamCursorInput>>;
  where?: InputMaybe<SubjectBoolExp>;
};

export type SubscriptionTagArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type SubscriptionTagAggregateArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type SubscriptionTagByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTagStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TagStreamCursorInput>>;
  where?: InputMaybe<TagBoolExp>;
};

export type SubscriptionTeamArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type SubscriptionTeamAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type SubscriptionTeamByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTeamHistoryArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type SubscriptionTeamHistoryAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type SubscriptionTeamHistoryByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTeamHistoryStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamHistoryStreamCursorInput>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type SubscriptionTeamJoinArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type SubscriptionTeamJoinAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type SubscriptionTeamJoinByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTeamJoinStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamJoinStreamCursorInput>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type SubscriptionTeamMemberArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type SubscriptionTeamMemberAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type SubscriptionTeamMemberByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTeamMemberRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRolesOrderBy>>;
  where?: InputMaybe<TeamMemberRolesBoolExp>;
};

export type SubscriptionTeamMemberRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRolesOrderBy>>;
  where?: InputMaybe<TeamMemberRolesBoolExp>;
};

export type SubscriptionTeamMemberRolesByPkArgs = {
  roleId: Scalars['bigint']['input'];
  teamMemberId: Scalars['bigint']['input'];
};

export type SubscriptionTeamMemberRolesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamMemberRolesStreamCursorInput>>;
  where?: InputMaybe<TeamMemberRolesBoolExp>;
};

export type SubscriptionTeamMemberStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamMemberStreamCursorInput>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type SubscriptionTeamMetricArgs = {
  distinctOn?: InputMaybe<Array<TeamMetricSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMetricOrderBy>>;
  where?: InputMaybe<TeamMetricBoolExp>;
};

export type SubscriptionTeamMetricAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMetricSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMetricOrderBy>>;
  where?: InputMaybe<TeamMetricBoolExp>;
};

export type SubscriptionTeamMetricByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTeamMetricStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamMetricStreamCursorInput>>;
  where?: InputMaybe<TeamMetricBoolExp>;
};

export type SubscriptionTeamStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamStreamCursorInput>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type SubscriptionTenantArgs = {
  distinctOn?: InputMaybe<Array<TenantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrderBy>>;
  where?: InputMaybe<TenantBoolExp>;
};

export type SubscriptionTenantAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrderBy>>;
  where?: InputMaybe<TenantBoolExp>;
};

export type SubscriptionTenantByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTenantOrganizeArgs = {
  distinctOn?: InputMaybe<Array<TenantOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrganizeOrderBy>>;
  where?: InputMaybe<TenantOrganizeBoolExp>;
};

export type SubscriptionTenantOrganizeAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrganizeOrderBy>>;
  where?: InputMaybe<TenantOrganizeBoolExp>;
};

export type SubscriptionTenantOrganizeByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionTenantOrganizeStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TenantOrganizeStreamCursorInput>>;
  where?: InputMaybe<TenantOrganizeBoolExp>;
};

export type SubscriptionTenantStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TenantStreamCursorInput>>;
  where?: InputMaybe<TenantBoolExp>;
};

export type SubscriptionThreadArgs = {
  distinctOn?: InputMaybe<Array<ThreadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadOrderBy>>;
  where?: InputMaybe<ThreadBoolExp>;
};

export type SubscriptionThreadAggregateArgs = {
  distinctOn?: InputMaybe<Array<ThreadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadOrderBy>>;
  where?: InputMaybe<ThreadBoolExp>;
};

export type SubscriptionThreadByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionThreadContributorsArgs = {
  distinctOn?: InputMaybe<Array<ThreadContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadContributorsOrderBy>>;
  where?: InputMaybe<ThreadContributorsBoolExp>;
};

export type SubscriptionThreadContributorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ThreadContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadContributorsOrderBy>>;
  where?: InputMaybe<ThreadContributorsBoolExp>;
};

export type SubscriptionThreadContributorsByPkArgs = {
  individualId: Scalars['bigint']['input'];
  threadId: Scalars['bigint']['input'];
};

export type SubscriptionThreadContributorsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ThreadContributorsStreamCursorInput>>;
  where?: InputMaybe<ThreadContributorsBoolExp>;
};

export type SubscriptionThreadStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ThreadStreamCursorInput>>;
  where?: InputMaybe<ThreadBoolExp>;
};

export type SubscriptionThreadTagsArgs = {
  distinctOn?: InputMaybe<Array<ThreadTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadTagsOrderBy>>;
  where?: InputMaybe<ThreadTagsBoolExp>;
};

export type SubscriptionThreadTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ThreadTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadTagsOrderBy>>;
  where?: InputMaybe<ThreadTagsBoolExp>;
};

export type SubscriptionThreadTagsByPkArgs = {
  tagId: Scalars['bigint']['input'];
  threadId: Scalars['bigint']['input'];
};

export type SubscriptionThreadTagsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ThreadTagsStreamCursorInput>>;
  where?: InputMaybe<ThreadTagsBoolExp>;
};

export type SubscriptionUserArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type SubscriptionUserAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type SubscriptionUserByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionUserStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<UserStreamCursorInput>>;
  where?: InputMaybe<UserBoolExp>;
};

export type SubscriptionValidationArgs = {
  distinctOn?: InputMaybe<Array<ValidationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ValidationOrderBy>>;
  where?: InputMaybe<ValidationBoolExp>;
};

export type SubscriptionValidationAggregateArgs = {
  distinctOn?: InputMaybe<Array<ValidationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ValidationOrderBy>>;
  where?: InputMaybe<ValidationBoolExp>;
};

export type SubscriptionValidationByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionValidationStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ValidationStreamCursorInput>>;
  where?: InputMaybe<ValidationBoolExp>;
};

export type SubscriptionViewArgs = {
  distinctOn?: InputMaybe<Array<ViewSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ViewOrderBy>>;
  where?: InputMaybe<ViewBoolExp>;
};

export type SubscriptionViewAggregateArgs = {
  distinctOn?: InputMaybe<Array<ViewSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ViewOrderBy>>;
  where?: InputMaybe<ViewBoolExp>;
};

export type SubscriptionViewByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionViewStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ViewStreamCursorInput>>;
  where?: InputMaybe<ViewBoolExp>;
};

export type SubscriptionVoteArgs = {
  distinctOn?: InputMaybe<Array<VoteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<VoteOrderBy>>;
  where?: InputMaybe<VoteBoolExp>;
};

export type SubscriptionVoteAggregateArgs = {
  distinctOn?: InputMaybe<Array<VoteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<VoteOrderBy>>;
  where?: InputMaybe<VoteBoolExp>;
};

export type SubscriptionVoteByPkArgs = {
  id: Scalars['bigint']['input'];
};

export type SubscriptionVoteStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<VoteStreamCursorInput>>;
  where?: InputMaybe<VoteBoolExp>;
};

export type Tag = {
  __typename?: 'Tag';
  actorTags: Array<ActorTags>;
  actorTagsAggregate: ActorTagsAggregate;
  color: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  eventTags: Array<EventTags>;
  eventTagsAggregate: EventTagsAggregate;
  financeTags: Array<FinanceTags>;
  financeTagsAggregate: FinanceTagsAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  image?: Maybe<FileUpload>;
  imageId?: Maybe<Scalars['bigint']['output']>;
  issueTags: Array<IssueTags>;
  issueTagsAggregate: IssueTagsAggregate;
  name: Scalars['String']['output'];
  projectTags: Array<ProjectTags>;
  projectTagsAggregate: ProjectTagsAggregate;
  slug: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  threadTags: Array<ThreadTags>;
  threadTagsAggregate: ThreadTagsAggregate;
  type: Scalars['String']['output'];
};

export type TagActorTagsArgs = {
  distinctOn?: InputMaybe<Array<ActorTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagsOrderBy>>;
  where?: InputMaybe<ActorTagsBoolExp>;
};

export type TagActorTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorTagsOrderBy>>;
  where?: InputMaybe<ActorTagsBoolExp>;
};

export type TagEventTagsArgs = {
  distinctOn?: InputMaybe<Array<EventTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventTagsOrderBy>>;
  where?: InputMaybe<EventTagsBoolExp>;
};

export type TagEventTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventTagsOrderBy>>;
  where?: InputMaybe<EventTagsBoolExp>;
};

export type TagFinanceTagsArgs = {
  distinctOn?: InputMaybe<Array<FinanceTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceTagsOrderBy>>;
  where?: InputMaybe<FinanceTagsBoolExp>;
};

export type TagFinanceTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceTagsOrderBy>>;
  where?: InputMaybe<FinanceTagsBoolExp>;
};

export type TagIssueTagsArgs = {
  distinctOn?: InputMaybe<Array<IssueTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueTagsOrderBy>>;
  where?: InputMaybe<IssueTagsBoolExp>;
};

export type TagIssueTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<IssueTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueTagsOrderBy>>;
  where?: InputMaybe<IssueTagsBoolExp>;
};

export type TagProjectTagsArgs = {
  distinctOn?: InputMaybe<Array<ProjectTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectTagsOrderBy>>;
  where?: InputMaybe<ProjectTagsBoolExp>;
};

export type TagProjectTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectTagsOrderBy>>;
  where?: InputMaybe<ProjectTagsBoolExp>;
};

export type TagThreadTagsArgs = {
  distinctOn?: InputMaybe<Array<ThreadTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadTagsOrderBy>>;
  where?: InputMaybe<ThreadTagsBoolExp>;
};

export type TagThreadTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ThreadTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadTagsOrderBy>>;
  where?: InputMaybe<ThreadTagsBoolExp>;
};

export type TagAggregate = {
  __typename?: 'TagAggregate';
  aggregate?: Maybe<TagAggregateFields>;
  nodes: Array<Tag>;
};

export type TagAggregateBoolExp = {
  count?: InputMaybe<TagAggregateBoolExpCount>;
};

export type TagAggregateFields = {
  __typename?: 'TagAggregateFields';
  avg?: Maybe<TagAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TagMaxFields>;
  min?: Maybe<TagMinFields>;
  stddev?: Maybe<TagStddevFields>;
  stddevPop?: Maybe<TagStddevPopFields>;
  stddevSamp?: Maybe<TagStddevSampFields>;
  sum?: Maybe<TagSumFields>;
  varPop?: Maybe<TagVarPopFields>;
  varSamp?: Maybe<TagVarSampFields>;
  variance?: Maybe<TagVarianceFields>;
};

export type TagAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TagSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TagAggregateOrderBy = {
  avg?: InputMaybe<TagAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TagMaxOrderBy>;
  min?: InputMaybe<TagMinOrderBy>;
  stddev?: InputMaybe<TagStddevOrderBy>;
  stddevPop?: InputMaybe<TagStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TagStddevSampOrderBy>;
  sum?: InputMaybe<TagSumOrderBy>;
  varPop?: InputMaybe<TagVarPopOrderBy>;
  varSamp?: InputMaybe<TagVarSampOrderBy>;
  variance?: InputMaybe<TagVarianceOrderBy>;
};

export type TagArrRelInsertInput = {
  data: Array<TagInsertInput>;
  onConflict?: InputMaybe<TagOnConflict>;
};

export type TagAvgFields = {
  __typename?: 'TagAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TagAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TagBoolExp = {
  _and?: InputMaybe<Array<TagBoolExp>>;
  _not?: InputMaybe<TagBoolExp>;
  _or?: InputMaybe<Array<TagBoolExp>>;
  actorTags?: InputMaybe<ActorTagsBoolExp>;
  actorTagsAggregate?: InputMaybe<ActorTagsAggregateBoolExp>;
  color?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  eventTags?: InputMaybe<EventTagsBoolExp>;
  eventTagsAggregate?: InputMaybe<EventTagsAggregateBoolExp>;
  financeTags?: InputMaybe<FinanceTagsBoolExp>;
  financeTagsAggregate?: InputMaybe<FinanceTagsAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  image?: InputMaybe<FileUploadBoolExp>;
  imageId?: InputMaybe<BigintComparisonExp>;
  issueTags?: InputMaybe<IssueTagsBoolExp>;
  issueTagsAggregate?: InputMaybe<IssueTagsAggregateBoolExp>;
  name?: InputMaybe<StringComparisonExp>;
  projectTags?: InputMaybe<ProjectTagsBoolExp>;
  projectTagsAggregate?: InputMaybe<ProjectTagsAggregateBoolExp>;
  slug?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  threadTags?: InputMaybe<ThreadTagsBoolExp>;
  threadTagsAggregate?: InputMaybe<ThreadTagsAggregateBoolExp>;
  type?: InputMaybe<StringComparisonExp>;
};

export enum TagConstraint {
  TagPkey = 'tag_pkey',
}

export type TagIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  imageId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TagInsertInput = {
  actorTags?: InputMaybe<ActorTagsArrRelInsertInput>;
  color?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  eventTags?: InputMaybe<EventTagsArrRelInsertInput>;
  financeTags?: InputMaybe<FinanceTagsArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  image?: InputMaybe<FileUploadObjRelInsertInput>;
  imageId?: InputMaybe<Scalars['bigint']['input']>;
  issueTags?: InputMaybe<IssueTagsArrRelInsertInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  projectTags?: InputMaybe<ProjectTagsArrRelInsertInput>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  threadTags?: InputMaybe<ThreadTagsArrRelInsertInput>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type TagMaxFields = {
  __typename?: 'TagMaxFields';
  color?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  imageId?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type TagMaxOrderBy = {
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TagMinFields = {
  __typename?: 'TagMinFields';
  color?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  imageId?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type TagMinOrderBy = {
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TagMutationResponse = {
  __typename?: 'TagMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Tag>;
};

export type TagObjRelInsertInput = {
  data: TagInsertInput;
  onConflict?: InputMaybe<TagOnConflict>;
};

export type TagOnConflict = {
  constraint: TagConstraint;
  updateColumns?: Array<TagUpdateColumn>;
  where?: InputMaybe<TagBoolExp>;
};

export type TagOrderBy = {
  actorTagsAggregate?: InputMaybe<ActorTagsAggregateOrderBy>;
  color?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  eventTagsAggregate?: InputMaybe<EventTagsAggregateOrderBy>;
  financeTagsAggregate?: InputMaybe<FinanceTagsAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  image?: InputMaybe<FileUploadOrderBy>;
  imageId?: InputMaybe<OrderBy>;
  issueTagsAggregate?: InputMaybe<IssueTagsAggregateOrderBy>;
  name?: InputMaybe<OrderBy>;
  projectTagsAggregate?: InputMaybe<ProjectTagsAggregateOrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  threadTagsAggregate?: InputMaybe<ThreadTagsAggregateOrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TagPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TagSelectColumn {
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  ImageId = 'imageId',
  Name = 'name',
  Slug = 'slug',
  TenantId = 'tenantId',
  Type = 'type',
}

export type TagSetInput = {
  color?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  imageId?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type TagStddevFields = {
  __typename?: 'TagStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TagStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TagStddevPopFields = {
  __typename?: 'TagStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TagStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TagStddevSampFields = {
  __typename?: 'TagStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TagStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TagStreamCursorInput = {
  initialValue: TagStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TagStreamCursorValueInput = {
  color?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  imageId?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type TagSumFields = {
  __typename?: 'TagSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  imageId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type TagSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum TagUpdateColumn {
  Color = 'color',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  ImageId = 'imageId',
  Name = 'name',
  Slug = 'slug',
  TenantId = 'tenantId',
  Type = 'type',
}

export type TagUpdates = {
  _inc?: InputMaybe<TagIncInput>;
  _set?: InputMaybe<TagSetInput>;
  where: TagBoolExp;
};

export type TagVarPopFields = {
  __typename?: 'TagVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TagVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TagVarSampFields = {
  __typename?: 'TagVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TagVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TagVarianceFields = {
  __typename?: 'TagVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  imageId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TagVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  imageId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Team = {
  __typename?: 'Team';
  accounts: Array<Account>;
  accountsAggregate: AccountAggregate;
  actions: Array<Action>;
  actionsAggregate: ActionAggregate;
  actor: Actor;
  actorId: Scalars['bigint']['output'];
  administeredTenant?: Maybe<Tenant>;
  canteen?: Maybe<Canteen>;
  canteenId?: Maybe<Scalars['bigint']['output']>;
  classGroup?: Maybe<ClassGroup>;
  classGroupId?: Maybe<Scalars['bigint']['output']>;
  cohort?: Maybe<Cohort>;
  cohortId?: Maybe<Scalars['bigint']['output']>;
  contents: Array<Content>;
  contentsAggregate: ContentAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  directorsCategoryName: Scalars['String']['output'];
  documents: Array<Document>;
  documentsAggregate: DocumentAggregate;
  eventOrganizes: Array<EventOrganize>;
  eventOrganizesAggregate: EventOrganizeAggregate;
  expectingPresidentEmail?: Maybe<Scalars['String']['output']>;
  expectingSecretaryEmail?: Maybe<Scalars['String']['output']>;
  expectingTreasurerEmail?: Maybe<Scalars['String']['output']>;
  finances: Array<Finance>;
  financesAggregate: FinanceAggregate;
  grantFund?: Maybe<LegalUnit>;
  grants: Array<Grant>;
  grantsAggregate: GrantAggregate;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  isJoinFormActive: Scalars['Boolean']['output'];
  isOnboardingComplete: Scalars['Boolean']['output'];
  joinForm: Form;
  joinFormId: Scalars['bigint']['output'];
  managersCategoryName: Scalars['String']['output'];
  membersCategoryName: Scalars['String']['output'];
  membershipDuration: Scalars['String']['output'];
  membershipFees: Scalars['Float']['output'];
  missions: Array<Mission>;
  missionsAggregate: MissionAggregate;
  parent?: Maybe<Team>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  poles: Array<Pole>;
  polesAggregate: PoleAggregate;
  projects: Array<Project>;
  projectsAggregate: ProjectAggregate;
  roles: Array<Role>;
  rolesAggregate: RoleAggregate;
  teamHistories: Array<TeamHistory>;
  teamHistoriesAggregate: TeamHistoryAggregate;
  teamJoins: Array<TeamJoin>;
  teamJoinsAggregate: TeamJoinAggregate;
  teamMembers: Array<TeamMember>;
  teamMembersAggregate: TeamMemberAggregate;
  teams: Array<Team>;
  teamsAggregate: TeamAggregate;
  tenant: Tenant;
  tenantGrantFundId?: Maybe<Scalars['bigint']['output']>;
  tenantId: Scalars['bigint']['output'];
  tenantOrganizes: Array<TenantOrganize>;
  tenantOrganizesAggregate: TenantOrganizeAggregate;
  type: Scalars['String']['output'];
  video?: Maybe<FileUpload>;
  videoId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamAccountsArgs = {
  distinctOn?: InputMaybe<Array<AccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountOrderBy>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type TeamAccountsAggregateArgs = {
  distinctOn?: InputMaybe<Array<AccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountOrderBy>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type TeamActionsArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type TeamActionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type TeamContentsArgs = {
  distinctOn?: InputMaybe<Array<ContentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentOrderBy>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type TeamContentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ContentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentOrderBy>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type TeamDocumentsArgs = {
  distinctOn?: InputMaybe<Array<DocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DocumentOrderBy>>;
  where?: InputMaybe<DocumentBoolExp>;
};

export type TeamDocumentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<DocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DocumentOrderBy>>;
  where?: InputMaybe<DocumentBoolExp>;
};

export type TeamEventOrganizesArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type TeamEventOrganizesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type TeamFinancesArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type TeamFinancesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type TeamGrantsArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type TeamGrantsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type TeamMissionsArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type TeamMissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type TeamPolesArgs = {
  distinctOn?: InputMaybe<Array<PoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoleOrderBy>>;
  where?: InputMaybe<PoleBoolExp>;
};

export type TeamPolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoleOrderBy>>;
  where?: InputMaybe<PoleBoolExp>;
};

export type TeamProjectsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type TeamProjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type TeamRolesArgs = {
  distinctOn?: InputMaybe<Array<RoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RoleOrderBy>>;
  where?: InputMaybe<RoleBoolExp>;
};

export type TeamRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<RoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RoleOrderBy>>;
  where?: InputMaybe<RoleBoolExp>;
};

export type TeamTeamHistoriesArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type TeamTeamHistoriesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type TeamTeamJoinsArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type TeamTeamJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type TeamTeamMembersArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type TeamTeamMembersAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type TeamTeamsArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type TeamTeamsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type TeamTenantOrganizesArgs = {
  distinctOn?: InputMaybe<Array<TenantOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrganizeOrderBy>>;
  where?: InputMaybe<TenantOrganizeBoolExp>;
};

export type TeamTenantOrganizesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrganizeOrderBy>>;
  where?: InputMaybe<TenantOrganizeBoolExp>;
};

export type TeamAggregate = {
  __typename?: 'TeamAggregate';
  aggregate?: Maybe<TeamAggregateFields>;
  nodes: Array<Team>;
};

export type TeamAggregateBoolExp = {
  bool_and?: InputMaybe<TeamAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<TeamAggregateBoolExpBool_Or>;
  count?: InputMaybe<TeamAggregateBoolExpCount>;
};

export type TeamAggregateFields = {
  __typename?: 'TeamAggregateFields';
  avg?: Maybe<TeamAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamMaxFields>;
  min?: Maybe<TeamMinFields>;
  stddev?: Maybe<TeamStddevFields>;
  stddevPop?: Maybe<TeamStddevPopFields>;
  stddevSamp?: Maybe<TeamStddevSampFields>;
  sum?: Maybe<TeamSumFields>;
  varPop?: Maybe<TeamVarPopFields>;
  varSamp?: Maybe<TeamVarSampFields>;
  variance?: Maybe<TeamVarianceFields>;
};

export type TeamAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TeamAggregateOrderBy = {
  avg?: InputMaybe<TeamAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TeamMaxOrderBy>;
  min?: InputMaybe<TeamMinOrderBy>;
  stddev?: InputMaybe<TeamStddevOrderBy>;
  stddevPop?: InputMaybe<TeamStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TeamStddevSampOrderBy>;
  sum?: InputMaybe<TeamSumOrderBy>;
  varPop?: InputMaybe<TeamVarPopOrderBy>;
  varSamp?: InputMaybe<TeamVarSampOrderBy>;
  variance?: InputMaybe<TeamVarianceOrderBy>;
};

export type TeamArrRelInsertInput = {
  data: Array<TeamInsertInput>;
  onConflict?: InputMaybe<TeamOnConflict>;
};

export type TeamAvgFields = {
  __typename?: 'TeamAvgFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  canteenId?: Maybe<Scalars['Float']['output']>;
  classGroupId?: Maybe<Scalars['Float']['output']>;
  cohortId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  tenantGrantFundId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  videoId?: Maybe<Scalars['Float']['output']>;
};

export type TeamAvgOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  canteenId?: InputMaybe<OrderBy>;
  classGroupId?: InputMaybe<OrderBy>;
  cohortId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamBoolExp = {
  _and?: InputMaybe<Array<TeamBoolExp>>;
  _not?: InputMaybe<TeamBoolExp>;
  _or?: InputMaybe<Array<TeamBoolExp>>;
  accounts?: InputMaybe<AccountBoolExp>;
  accountsAggregate?: InputMaybe<AccountAggregateBoolExp>;
  actions?: InputMaybe<ActionBoolExp>;
  actionsAggregate?: InputMaybe<ActionAggregateBoolExp>;
  actor?: InputMaybe<ActorBoolExp>;
  actorId?: InputMaybe<BigintComparisonExp>;
  administeredTenant?: InputMaybe<TenantBoolExp>;
  canteen?: InputMaybe<CanteenBoolExp>;
  canteenId?: InputMaybe<BigintComparisonExp>;
  classGroup?: InputMaybe<ClassGroupBoolExp>;
  classGroupId?: InputMaybe<BigintComparisonExp>;
  cohort?: InputMaybe<CohortBoolExp>;
  cohortId?: InputMaybe<BigintComparisonExp>;
  contents?: InputMaybe<ContentBoolExp>;
  contentsAggregate?: InputMaybe<ContentAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  directorsCategoryName?: InputMaybe<StringComparisonExp>;
  documents?: InputMaybe<DocumentBoolExp>;
  documentsAggregate?: InputMaybe<DocumentAggregateBoolExp>;
  eventOrganizes?: InputMaybe<EventOrganizeBoolExp>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateBoolExp>;
  expectingPresidentEmail?: InputMaybe<StringComparisonExp>;
  expectingSecretaryEmail?: InputMaybe<StringComparisonExp>;
  expectingTreasurerEmail?: InputMaybe<StringComparisonExp>;
  finances?: InputMaybe<FinanceBoolExp>;
  financesAggregate?: InputMaybe<FinanceAggregateBoolExp>;
  grantFund?: InputMaybe<LegalUnitBoolExp>;
  grants?: InputMaybe<GrantBoolExp>;
  grantsAggregate?: InputMaybe<GrantAggregateBoolExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  isJoinFormActive?: InputMaybe<BooleanComparisonExp>;
  isOnboardingComplete?: InputMaybe<BooleanComparisonExp>;
  joinForm?: InputMaybe<FormBoolExp>;
  joinFormId?: InputMaybe<BigintComparisonExp>;
  managersCategoryName?: InputMaybe<StringComparisonExp>;
  membersCategoryName?: InputMaybe<StringComparisonExp>;
  membershipDuration?: InputMaybe<StringComparisonExp>;
  membershipFees?: InputMaybe<FloatComparisonExp>;
  missions?: InputMaybe<MissionBoolExp>;
  missionsAggregate?: InputMaybe<MissionAggregateBoolExp>;
  parent?: InputMaybe<TeamBoolExp>;
  parentId?: InputMaybe<BigintComparisonExp>;
  poles?: InputMaybe<PoleBoolExp>;
  polesAggregate?: InputMaybe<PoleAggregateBoolExp>;
  projects?: InputMaybe<ProjectBoolExp>;
  projectsAggregate?: InputMaybe<ProjectAggregateBoolExp>;
  roles?: InputMaybe<RoleBoolExp>;
  rolesAggregate?: InputMaybe<RoleAggregateBoolExp>;
  teamHistories?: InputMaybe<TeamHistoryBoolExp>;
  teamHistoriesAggregate?: InputMaybe<TeamHistoryAggregateBoolExp>;
  teamJoins?: InputMaybe<TeamJoinBoolExp>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateBoolExp>;
  teamMembers?: InputMaybe<TeamMemberBoolExp>;
  teamMembersAggregate?: InputMaybe<TeamMemberAggregateBoolExp>;
  teams?: InputMaybe<TeamBoolExp>;
  teamsAggregate?: InputMaybe<TeamAggregateBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantGrantFundId?: InputMaybe<BigintComparisonExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  tenantOrganizes?: InputMaybe<TenantOrganizeBoolExp>;
  tenantOrganizesAggregate?: InputMaybe<TenantOrganizeAggregateBoolExp>;
  type?: InputMaybe<StringComparisonExp>;
  video?: InputMaybe<FileUploadBoolExp>;
  videoId?: InputMaybe<BigintComparisonExp>;
};

export enum TeamConstraint {
  TeamActorIdUnique = 'team_actor_id_unique',
  TeamCanteenIdUnique = 'team_canteen_id_unique',
  TeamClassGroupIdUnique = 'team_class_group_id_unique',
  TeamCohortIdUnique = 'team_cohort_id_unique',
  TeamJoinFormIdUnique = 'team_join_form_id_unique',
  TeamPkey = 'team_pkey',
}

export type TeamHistory = {
  __typename?: 'TeamHistory';
  approximateDate: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventDate: Scalars['timestamptz']['output'];
  eventType: Scalars['String']['output'];
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type TeamHistoryAggregate = {
  __typename?: 'TeamHistoryAggregate';
  aggregate?: Maybe<TeamHistoryAggregateFields>;
  nodes: Array<TeamHistory>;
};

export type TeamHistoryAggregateBoolExp = {
  count?: InputMaybe<TeamHistoryAggregateBoolExpCount>;
};

export type TeamHistoryAggregateFields = {
  __typename?: 'TeamHistoryAggregateFields';
  avg?: Maybe<TeamHistoryAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamHistoryMaxFields>;
  min?: Maybe<TeamHistoryMinFields>;
  stddev?: Maybe<TeamHistoryStddevFields>;
  stddevPop?: Maybe<TeamHistoryStddevPopFields>;
  stddevSamp?: Maybe<TeamHistoryStddevSampFields>;
  sum?: Maybe<TeamHistorySumFields>;
  varPop?: Maybe<TeamHistoryVarPopFields>;
  varSamp?: Maybe<TeamHistoryVarSampFields>;
  variance?: Maybe<TeamHistoryVarianceFields>;
};

export type TeamHistoryAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamHistorySelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TeamHistoryAggregateOrderBy = {
  avg?: InputMaybe<TeamHistoryAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TeamHistoryMaxOrderBy>;
  min?: InputMaybe<TeamHistoryMinOrderBy>;
  stddev?: InputMaybe<TeamHistoryStddevOrderBy>;
  stddevPop?: InputMaybe<TeamHistoryStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TeamHistoryStddevSampOrderBy>;
  sum?: InputMaybe<TeamHistorySumOrderBy>;
  varPop?: InputMaybe<TeamHistoryVarPopOrderBy>;
  varSamp?: InputMaybe<TeamHistoryVarSampOrderBy>;
  variance?: InputMaybe<TeamHistoryVarianceOrderBy>;
};

export type TeamHistoryArrRelInsertInput = {
  data: Array<TeamHistoryInsertInput>;
  onConflict?: InputMaybe<TeamHistoryOnConflict>;
};

export type TeamHistoryAvgFields = {
  __typename?: 'TeamHistoryAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamHistoryAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamHistoryBoolExp = {
  _and?: InputMaybe<Array<TeamHistoryBoolExp>>;
  _not?: InputMaybe<TeamHistoryBoolExp>;
  _or?: InputMaybe<Array<TeamHistoryBoolExp>>;
  approximateDate?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  eventDate?: InputMaybe<TimestamptzComparisonExp>;
  eventType?: InputMaybe<StringComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum TeamHistoryConstraint {
  TeamHistoryPkey = 'team_history_pkey',
}

export type TeamHistoryIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamHistoryInsertInput = {
  approximateDate?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventDate?: InputMaybe<Scalars['timestamptz']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamHistoryMaxFields = {
  __typename?: 'TeamHistoryMaxFields';
  approximateDate?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventDate?: Maybe<Scalars['timestamptz']['output']>;
  eventType?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamHistoryMaxOrderBy = {
  approximateDate?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventDate?: InputMaybe<OrderBy>;
  eventType?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamHistoryMinFields = {
  __typename?: 'TeamHistoryMinFields';
  approximateDate?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventDate?: Maybe<Scalars['timestamptz']['output']>;
  eventType?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamHistoryMinOrderBy = {
  approximateDate?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventDate?: InputMaybe<OrderBy>;
  eventType?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamHistoryMutationResponse = {
  __typename?: 'TeamHistoryMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TeamHistory>;
};

export type TeamHistoryOnConflict = {
  constraint: TeamHistoryConstraint;
  updateColumns?: Array<TeamHistoryUpdateColumn>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type TeamHistoryOrderBy = {
  approximateDate?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventDate?: InputMaybe<OrderBy>;
  eventType?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamHistoryPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TeamHistorySelectColumn {
  ApproximateDate = 'approximateDate',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventDate = 'eventDate',
  EventType = 'eventType',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TeamId = 'teamId',
  TenantId = 'tenantId',
}

export type TeamHistorySetInput = {
  approximateDate?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventDate?: InputMaybe<Scalars['timestamptz']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamHistoryStddevFields = {
  __typename?: 'TeamHistoryStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamHistoryStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamHistoryStddevPopFields = {
  __typename?: 'TeamHistoryStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamHistoryStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamHistoryStddevSampFields = {
  __typename?: 'TeamHistoryStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamHistoryStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamHistoryStreamCursorInput = {
  initialValue: TeamHistoryStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TeamHistoryStreamCursorValueInput = {
  approximateDate?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventDate?: InputMaybe<Scalars['timestamptz']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamHistorySumFields = {
  __typename?: 'TeamHistorySumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamHistorySumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum TeamHistoryUpdateColumn {
  ApproximateDate = 'approximateDate',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EventDate = 'eventDate',
  EventType = 'eventType',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TeamId = 'teamId',
  TenantId = 'tenantId',
}

export type TeamHistoryUpdates = {
  _inc?: InputMaybe<TeamHistoryIncInput>;
  _set?: InputMaybe<TeamHistorySetInput>;
  where: TeamHistoryBoolExp;
};

export type TeamHistoryVarPopFields = {
  __typename?: 'TeamHistoryVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamHistoryVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamHistoryVarSampFields = {
  __typename?: 'TeamHistoryVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamHistoryVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamHistoryVarianceFields = {
  __typename?: 'TeamHistoryVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamHistoryVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamIncInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  canteenId?: InputMaybe<Scalars['bigint']['input']>;
  classGroupId?: InputMaybe<Scalars['bigint']['input']>;
  cohortId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  membershipFees?: InputMaybe<Scalars['Float']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  tenantGrantFundId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  videoId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamInsertInput = {
  accounts?: InputMaybe<AccountArrRelInsertInput>;
  actions?: InputMaybe<ActionArrRelInsertInput>;
  actor?: InputMaybe<ActorObjRelInsertInput>;
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  administeredTenant?: InputMaybe<TenantObjRelInsertInput>;
  canteen?: InputMaybe<CanteenObjRelInsertInput>;
  canteenId?: InputMaybe<Scalars['bigint']['input']>;
  classGroup?: InputMaybe<ClassGroupObjRelInsertInput>;
  classGroupId?: InputMaybe<Scalars['bigint']['input']>;
  cohort?: InputMaybe<CohortObjRelInsertInput>;
  cohortId?: InputMaybe<Scalars['bigint']['input']>;
  contents?: InputMaybe<ContentArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  directorsCategoryName?: InputMaybe<Scalars['String']['input']>;
  documents?: InputMaybe<DocumentArrRelInsertInput>;
  eventOrganizes?: InputMaybe<EventOrganizeArrRelInsertInput>;
  expectingPresidentEmail?: InputMaybe<Scalars['String']['input']>;
  expectingSecretaryEmail?: InputMaybe<Scalars['String']['input']>;
  expectingTreasurerEmail?: InputMaybe<Scalars['String']['input']>;
  finances?: InputMaybe<FinanceArrRelInsertInput>;
  grantFund?: InputMaybe<LegalUnitObjRelInsertInput>;
  grants?: InputMaybe<GrantArrRelInsertInput>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isJoinFormActive?: InputMaybe<Scalars['Boolean']['input']>;
  isOnboardingComplete?: InputMaybe<Scalars['Boolean']['input']>;
  joinForm?: InputMaybe<FormObjRelInsertInput>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  managersCategoryName?: InputMaybe<Scalars['String']['input']>;
  membersCategoryName?: InputMaybe<Scalars['String']['input']>;
  membershipDuration?: InputMaybe<Scalars['String']['input']>;
  membershipFees?: InputMaybe<Scalars['Float']['input']>;
  missions?: InputMaybe<MissionArrRelInsertInput>;
  parent?: InputMaybe<TeamObjRelInsertInput>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  poles?: InputMaybe<PoleArrRelInsertInput>;
  projects?: InputMaybe<ProjectArrRelInsertInput>;
  roles?: InputMaybe<RoleArrRelInsertInput>;
  teamHistories?: InputMaybe<TeamHistoryArrRelInsertInput>;
  teamJoins?: InputMaybe<TeamJoinArrRelInsertInput>;
  teamMembers?: InputMaybe<TeamMemberArrRelInsertInput>;
  teams?: InputMaybe<TeamArrRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantGrantFundId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  tenantOrganizes?: InputMaybe<TenantOrganizeArrRelInsertInput>;
  type?: InputMaybe<Scalars['String']['input']>;
  video?: InputMaybe<FileUploadObjRelInsertInput>;
  videoId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamJoin = {
  __typename?: 'TeamJoin';
  askedRole: Role;
  askedRoleId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  formSubmission?: Maybe<FormSubmission>;
  formSubmissionId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  joinedBy: User;
  joinedById: Scalars['bigint']['output'];
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedBy?: Maybe<Individual>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  receivedPole?: Maybe<Pole>;
  receivedPoleId?: Maybe<Scalars['bigint']['output']>;
  receivedRole?: Maybe<Role>;
  receivedRoleId?: Maybe<Scalars['bigint']['output']>;
  state: Scalars['String']['output'];
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type TeamJoinAggregate = {
  __typename?: 'TeamJoinAggregate';
  aggregate?: Maybe<TeamJoinAggregateFields>;
  nodes: Array<TeamJoin>;
};

export type TeamJoinAggregateBoolExp = {
  count?: InputMaybe<TeamJoinAggregateBoolExpCount>;
};

export type TeamJoinAggregateFields = {
  __typename?: 'TeamJoinAggregateFields';
  avg?: Maybe<TeamJoinAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamJoinMaxFields>;
  min?: Maybe<TeamJoinMinFields>;
  stddev?: Maybe<TeamJoinStddevFields>;
  stddevPop?: Maybe<TeamJoinStddevPopFields>;
  stddevSamp?: Maybe<TeamJoinStddevSampFields>;
  sum?: Maybe<TeamJoinSumFields>;
  varPop?: Maybe<TeamJoinVarPopFields>;
  varSamp?: Maybe<TeamJoinVarSampFields>;
  variance?: Maybe<TeamJoinVarianceFields>;
};

export type TeamJoinAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamJoinSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TeamJoinAggregateOrderBy = {
  avg?: InputMaybe<TeamJoinAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TeamJoinMaxOrderBy>;
  min?: InputMaybe<TeamJoinMinOrderBy>;
  stddev?: InputMaybe<TeamJoinStddevOrderBy>;
  stddevPop?: InputMaybe<TeamJoinStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TeamJoinStddevSampOrderBy>;
  sum?: InputMaybe<TeamJoinSumOrderBy>;
  varPop?: InputMaybe<TeamJoinVarPopOrderBy>;
  varSamp?: InputMaybe<TeamJoinVarSampOrderBy>;
  variance?: InputMaybe<TeamJoinVarianceOrderBy>;
};

export type TeamJoinArrRelInsertInput = {
  data: Array<TeamJoinInsertInput>;
  onConflict?: InputMaybe<TeamJoinOnConflict>;
};

export type TeamJoinAvgFields = {
  __typename?: 'TeamJoinAvgFields';
  askedRoleId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  receivedPoleId?: Maybe<Scalars['Float']['output']>;
  receivedRoleId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamJoinAvgOrderBy = {
  askedRoleId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  receivedPoleId?: InputMaybe<OrderBy>;
  receivedRoleId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamJoinBoolExp = {
  _and?: InputMaybe<Array<TeamJoinBoolExp>>;
  _not?: InputMaybe<TeamJoinBoolExp>;
  _or?: InputMaybe<Array<TeamJoinBoolExp>>;
  askedRole?: InputMaybe<RoleBoolExp>;
  askedRoleId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  formSubmission?: InputMaybe<FormSubmissionBoolExp>;
  formSubmissionId?: InputMaybe<BigintComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  joinedBy?: InputMaybe<UserBoolExp>;
  joinedById?: InputMaybe<BigintComparisonExp>;
  processedAt?: InputMaybe<TimestamptzComparisonExp>;
  processedBy?: InputMaybe<IndividualBoolExp>;
  processedById?: InputMaybe<BigintComparisonExp>;
  receivedPole?: InputMaybe<PoleBoolExp>;
  receivedPoleId?: InputMaybe<BigintComparisonExp>;
  receivedRole?: InputMaybe<RoleBoolExp>;
  receivedRoleId?: InputMaybe<BigintComparisonExp>;
  state?: InputMaybe<StringComparisonExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum TeamJoinConstraint {
  TeamJoinPkey = 'team_join_pkey',
}

export type TeamJoinIncInput = {
  askedRoleId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  formSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  receivedPoleId?: InputMaybe<Scalars['bigint']['input']>;
  receivedRoleId?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamJoinInsertInput = {
  askedRole?: InputMaybe<RoleObjRelInsertInput>;
  askedRoleId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  formSubmission?: InputMaybe<FormSubmissionObjRelInsertInput>;
  formSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinedBy?: InputMaybe<UserObjRelInsertInput>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedBy?: InputMaybe<IndividualObjRelInsertInput>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  receivedPole?: InputMaybe<PoleObjRelInsertInput>;
  receivedPoleId?: InputMaybe<Scalars['bigint']['input']>;
  receivedRole?: InputMaybe<RoleObjRelInsertInput>;
  receivedRoleId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamJoinMaxFields = {
  __typename?: 'TeamJoinMaxFields';
  askedRoleId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  formSubmissionId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  receivedPoleId?: Maybe<Scalars['bigint']['output']>;
  receivedRoleId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamJoinMaxOrderBy = {
  askedRoleId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  receivedPoleId?: InputMaybe<OrderBy>;
  receivedRoleId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamJoinMinFields = {
  __typename?: 'TeamJoinMinFields';
  askedRoleId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  formSubmissionId?: Maybe<Scalars['bigint']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  processedAt?: Maybe<Scalars['timestamptz']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  receivedPoleId?: Maybe<Scalars['bigint']['output']>;
  receivedRoleId?: Maybe<Scalars['bigint']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamJoinMinOrderBy = {
  askedRoleId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  receivedPoleId?: InputMaybe<OrderBy>;
  receivedRoleId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamJoinMutationResponse = {
  __typename?: 'TeamJoinMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TeamJoin>;
};

export type TeamJoinOnConflict = {
  constraint: TeamJoinConstraint;
  updateColumns?: Array<TeamJoinUpdateColumn>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type TeamJoinOrderBy = {
  askedRole?: InputMaybe<RoleOrderBy>;
  askedRoleId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  formSubmission?: InputMaybe<FormSubmissionOrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedBy?: InputMaybe<UserOrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedAt?: InputMaybe<OrderBy>;
  processedBy?: InputMaybe<IndividualOrderBy>;
  processedById?: InputMaybe<OrderBy>;
  receivedPole?: InputMaybe<PoleOrderBy>;
  receivedPoleId?: InputMaybe<OrderBy>;
  receivedRole?: InputMaybe<RoleOrderBy>;
  receivedRoleId?: InputMaybe<OrderBy>;
  state?: InputMaybe<OrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamJoinPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TeamJoinSelectColumn {
  AskedRoleId = 'askedRoleId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FormSubmissionId = 'formSubmissionId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  JoinedById = 'joinedById',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  ReceivedPoleId = 'receivedPoleId',
  ReceivedRoleId = 'receivedRoleId',
  State = 'state',
  TeamId = 'teamId',
  TenantId = 'tenantId',
}

export type TeamJoinSetInput = {
  askedRoleId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  formSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  receivedPoleId?: InputMaybe<Scalars['bigint']['input']>;
  receivedRoleId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamJoinStddevFields = {
  __typename?: 'TeamJoinStddevFields';
  askedRoleId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  receivedPoleId?: Maybe<Scalars['Float']['output']>;
  receivedRoleId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamJoinStddevOrderBy = {
  askedRoleId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  receivedPoleId?: InputMaybe<OrderBy>;
  receivedRoleId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamJoinStddevPopFields = {
  __typename?: 'TeamJoinStddevPopFields';
  askedRoleId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  receivedPoleId?: Maybe<Scalars['Float']['output']>;
  receivedRoleId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamJoinStddevPopOrderBy = {
  askedRoleId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  receivedPoleId?: InputMaybe<OrderBy>;
  receivedRoleId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamJoinStddevSampFields = {
  __typename?: 'TeamJoinStddevSampFields';
  askedRoleId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  receivedPoleId?: Maybe<Scalars['Float']['output']>;
  receivedRoleId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamJoinStddevSampOrderBy = {
  askedRoleId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  receivedPoleId?: InputMaybe<OrderBy>;
  receivedRoleId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamJoinStreamCursorInput = {
  initialValue: TeamJoinStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TeamJoinStreamCursorValueInput = {
  askedRoleId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  formSubmissionId?: InputMaybe<Scalars['bigint']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  joinedById?: InputMaybe<Scalars['bigint']['input']>;
  processedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  processedById?: InputMaybe<Scalars['bigint']['input']>;
  receivedPoleId?: InputMaybe<Scalars['bigint']['input']>;
  receivedRoleId?: InputMaybe<Scalars['bigint']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamJoinSumFields = {
  __typename?: 'TeamJoinSumFields';
  askedRoleId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  formSubmissionId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinedById?: Maybe<Scalars['bigint']['output']>;
  processedById?: Maybe<Scalars['bigint']['output']>;
  receivedPoleId?: Maybe<Scalars['bigint']['output']>;
  receivedRoleId?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamJoinSumOrderBy = {
  askedRoleId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  receivedPoleId?: InputMaybe<OrderBy>;
  receivedRoleId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum TeamJoinUpdateColumn {
  AskedRoleId = 'askedRoleId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FormSubmissionId = 'formSubmissionId',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  JoinedById = 'joinedById',
  ProcessedAt = 'processedAt',
  ProcessedById = 'processedById',
  ReceivedPoleId = 'receivedPoleId',
  ReceivedRoleId = 'receivedRoleId',
  State = 'state',
  TeamId = 'teamId',
  TenantId = 'tenantId',
}

export type TeamJoinUpdates = {
  _inc?: InputMaybe<TeamJoinIncInput>;
  _set?: InputMaybe<TeamJoinSetInput>;
  where: TeamJoinBoolExp;
};

export type TeamJoinVarPopFields = {
  __typename?: 'TeamJoinVarPopFields';
  askedRoleId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  receivedPoleId?: Maybe<Scalars['Float']['output']>;
  receivedRoleId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamJoinVarPopOrderBy = {
  askedRoleId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  receivedPoleId?: InputMaybe<OrderBy>;
  receivedRoleId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamJoinVarSampFields = {
  __typename?: 'TeamJoinVarSampFields';
  askedRoleId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  receivedPoleId?: Maybe<Scalars['Float']['output']>;
  receivedRoleId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamJoinVarSampOrderBy = {
  askedRoleId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  receivedPoleId?: InputMaybe<OrderBy>;
  receivedRoleId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamJoinVarianceFields = {
  __typename?: 'TeamJoinVarianceFields';
  askedRoleId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  formSubmissionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinedById?: Maybe<Scalars['Float']['output']>;
  processedById?: Maybe<Scalars['Float']['output']>;
  receivedPoleId?: Maybe<Scalars['Float']['output']>;
  receivedRoleId?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamJoinVarianceOrderBy = {
  askedRoleId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  formSubmissionId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinedById?: InputMaybe<OrderBy>;
  processedById?: InputMaybe<OrderBy>;
  receivedPoleId?: InputMaybe<OrderBy>;
  receivedRoleId?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamMaxFields = {
  __typename?: 'TeamMaxFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  canteenId?: Maybe<Scalars['bigint']['output']>;
  classGroupId?: Maybe<Scalars['bigint']['output']>;
  cohortId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  directorsCategoryName?: Maybe<Scalars['String']['output']>;
  expectingPresidentEmail?: Maybe<Scalars['String']['output']>;
  expectingSecretaryEmail?: Maybe<Scalars['String']['output']>;
  expectingTreasurerEmail?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  managersCategoryName?: Maybe<Scalars['String']['output']>;
  membersCategoryName?: Maybe<Scalars['String']['output']>;
  membershipDuration?: Maybe<Scalars['String']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  tenantGrantFundId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  videoId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMaxOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  canteenId?: InputMaybe<OrderBy>;
  classGroupId?: InputMaybe<OrderBy>;
  cohortId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  directorsCategoryName?: InputMaybe<OrderBy>;
  expectingPresidentEmail?: InputMaybe<OrderBy>;
  expectingSecretaryEmail?: InputMaybe<OrderBy>;
  expectingTreasurerEmail?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  managersCategoryName?: InputMaybe<OrderBy>;
  membersCategoryName?: InputMaybe<OrderBy>;
  membershipDuration?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamMember = {
  __typename?: 'TeamMember';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  endDate?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  permissions: Scalars['Int']['output'];
  startDate: Scalars['timestamptz']['output'];
  supervisedProjects: Array<ProjectSupervisors>;
  supervisedProjectsAggregate: ProjectSupervisorsAggregate;
  team: Team;
  teamId: Scalars['bigint']['output'];
  teamMemberRoles: Array<TeamMemberRoles>;
  teamMemberRolesAggregate: TeamMemberRolesAggregate;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  user: User;
  userId: Scalars['bigint']['output'];
};

export type TeamMemberSupervisedProjectsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorsOrderBy>>;
  where?: InputMaybe<ProjectSupervisorsBoolExp>;
};

export type TeamMemberSupervisedProjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSupervisorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectSupervisorsOrderBy>>;
  where?: InputMaybe<ProjectSupervisorsBoolExp>;
};

export type TeamMemberTeamMemberRolesArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRolesOrderBy>>;
  where?: InputMaybe<TeamMemberRolesBoolExp>;
};

export type TeamMemberTeamMemberRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberRolesOrderBy>>;
  where?: InputMaybe<TeamMemberRolesBoolExp>;
};

export type TeamMemberAggregate = {
  __typename?: 'TeamMemberAggregate';
  aggregate?: Maybe<TeamMemberAggregateFields>;
  nodes: Array<TeamMember>;
};

export type TeamMemberAggregateBoolExp = {
  count?: InputMaybe<TeamMemberAggregateBoolExpCount>;
};

export type TeamMemberAggregateFields = {
  __typename?: 'TeamMemberAggregateFields';
  avg?: Maybe<TeamMemberAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamMemberMaxFields>;
  min?: Maybe<TeamMemberMinFields>;
  stddev?: Maybe<TeamMemberStddevFields>;
  stddevPop?: Maybe<TeamMemberStddevPopFields>;
  stddevSamp?: Maybe<TeamMemberStddevSampFields>;
  sum?: Maybe<TeamMemberSumFields>;
  varPop?: Maybe<TeamMemberVarPopFields>;
  varSamp?: Maybe<TeamMemberVarSampFields>;
  variance?: Maybe<TeamMemberVarianceFields>;
};

export type TeamMemberAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamMemberSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TeamMemberAggregateOrderBy = {
  avg?: InputMaybe<TeamMemberAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TeamMemberMaxOrderBy>;
  min?: InputMaybe<TeamMemberMinOrderBy>;
  stddev?: InputMaybe<TeamMemberStddevOrderBy>;
  stddevPop?: InputMaybe<TeamMemberStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TeamMemberStddevSampOrderBy>;
  sum?: InputMaybe<TeamMemberSumOrderBy>;
  varPop?: InputMaybe<TeamMemberVarPopOrderBy>;
  varSamp?: InputMaybe<TeamMemberVarSampOrderBy>;
  variance?: InputMaybe<TeamMemberVarianceOrderBy>;
};

export type TeamMemberArrRelInsertInput = {
  data: Array<TeamMemberInsertInput>;
  onConflict?: InputMaybe<TeamMemberOnConflict>;
};

export type TeamMemberAvgFields = {
  __typename?: 'TeamMemberAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permissions?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberBoolExp = {
  _and?: InputMaybe<Array<TeamMemberBoolExp>>;
  _not?: InputMaybe<TeamMemberBoolExp>;
  _or?: InputMaybe<Array<TeamMemberBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  endDate?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  permissions?: InputMaybe<IntComparisonExp>;
  startDate?: InputMaybe<TimestamptzComparisonExp>;
  supervisedProjects?: InputMaybe<ProjectSupervisorsBoolExp>;
  supervisedProjectsAggregate?: InputMaybe<ProjectSupervisorsAggregateBoolExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  teamMemberRoles?: InputMaybe<TeamMemberRolesBoolExp>;
  teamMemberRolesAggregate?: InputMaybe<TeamMemberRolesAggregateBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  user?: InputMaybe<UserBoolExp>;
  userId?: InputMaybe<BigintComparisonExp>;
};

export enum TeamMemberConstraint {
  TeamMemberPkey = 'team_member_pkey',
}

export type TeamMemberIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  permissions?: InputMaybe<Scalars['Int']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  endDate?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  permissions?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['timestamptz']['input']>;
  supervisedProjects?: InputMaybe<ProjectSupervisorsArrRelInsertInput>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberRoles?: InputMaybe<TeamMemberRolesArrRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<UserObjRelInsertInput>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberMaxFields = {
  __typename?: 'TeamMemberMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  endDate?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  permissions?: Maybe<Scalars['Int']['output']>;
  startDate?: Maybe<Scalars['timestamptz']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMemberMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  endDate?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
  startDate?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberMinFields = {
  __typename?: 'TeamMemberMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  endDate?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  permissions?: Maybe<Scalars['Int']['output']>;
  startDate?: Maybe<Scalars['timestamptz']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMemberMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  endDate?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
  startDate?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberMutationResponse = {
  __typename?: 'TeamMemberMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TeamMember>;
};

export type TeamMemberObjRelInsertInput = {
  data: TeamMemberInsertInput;
  onConflict?: InputMaybe<TeamMemberOnConflict>;
};

export type TeamMemberOnConflict = {
  constraint: TeamMemberConstraint;
  updateColumns?: Array<TeamMemberUpdateColumn>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type TeamMemberOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  endDate?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
  startDate?: InputMaybe<OrderBy>;
  supervisedProjectsAggregate?: InputMaybe<ProjectSupervisorsAggregateOrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  teamMemberRolesAggregate?: InputMaybe<TeamMemberRolesAggregateOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  user?: InputMaybe<UserOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export type TeamMemberRoles = {
  __typename?: 'TeamMemberRoles';
  role: Role;
  roleId: Scalars['bigint']['output'];
  teamMember: TeamMember;
  teamMemberId: Scalars['bigint']['output'];
};

export type TeamMemberRolesAggregate = {
  __typename?: 'TeamMemberRolesAggregate';
  aggregate?: Maybe<TeamMemberRolesAggregateFields>;
  nodes: Array<TeamMemberRoles>;
};

export type TeamMemberRolesAggregateBoolExp = {
  count?: InputMaybe<TeamMemberRolesAggregateBoolExpCount>;
};

export type TeamMemberRolesAggregateFields = {
  __typename?: 'TeamMemberRolesAggregateFields';
  avg?: Maybe<TeamMemberRolesAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamMemberRolesMaxFields>;
  min?: Maybe<TeamMemberRolesMinFields>;
  stddev?: Maybe<TeamMemberRolesStddevFields>;
  stddevPop?: Maybe<TeamMemberRolesStddevPopFields>;
  stddevSamp?: Maybe<TeamMemberRolesStddevSampFields>;
  sum?: Maybe<TeamMemberRolesSumFields>;
  varPop?: Maybe<TeamMemberRolesVarPopFields>;
  varSamp?: Maybe<TeamMemberRolesVarSampFields>;
  variance?: Maybe<TeamMemberRolesVarianceFields>;
};

export type TeamMemberRolesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamMemberRolesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TeamMemberRolesAggregateOrderBy = {
  avg?: InputMaybe<TeamMemberRolesAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TeamMemberRolesMaxOrderBy>;
  min?: InputMaybe<TeamMemberRolesMinOrderBy>;
  stddev?: InputMaybe<TeamMemberRolesStddevOrderBy>;
  stddevPop?: InputMaybe<TeamMemberRolesStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TeamMemberRolesStddevSampOrderBy>;
  sum?: InputMaybe<TeamMemberRolesSumOrderBy>;
  varPop?: InputMaybe<TeamMemberRolesVarPopOrderBy>;
  varSamp?: InputMaybe<TeamMemberRolesVarSampOrderBy>;
  variance?: InputMaybe<TeamMemberRolesVarianceOrderBy>;
};

export type TeamMemberRolesArrRelInsertInput = {
  data: Array<TeamMemberRolesInsertInput>;
  onConflict?: InputMaybe<TeamMemberRolesOnConflict>;
};

export type TeamMemberRolesAvgFields = {
  __typename?: 'TeamMemberRolesAvgFields';
  roleId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberRolesAvgOrderBy = {
  roleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type TeamMemberRolesBoolExp = {
  _and?: InputMaybe<Array<TeamMemberRolesBoolExp>>;
  _not?: InputMaybe<TeamMemberRolesBoolExp>;
  _or?: InputMaybe<Array<TeamMemberRolesBoolExp>>;
  role?: InputMaybe<RoleBoolExp>;
  roleId?: InputMaybe<BigintComparisonExp>;
  teamMember?: InputMaybe<TeamMemberBoolExp>;
  teamMemberId?: InputMaybe<BigintComparisonExp>;
};

export enum TeamMemberRolesConstraint {
  TeamMemberRolesPkey = 'team_member_roles_pkey',
}

export type TeamMemberRolesIncInput = {
  roleId?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberRolesInsertInput = {
  role?: InputMaybe<RoleObjRelInsertInput>;
  roleId?: InputMaybe<Scalars['bigint']['input']>;
  teamMember?: InputMaybe<TeamMemberObjRelInsertInput>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberRolesMaxFields = {
  __typename?: 'TeamMemberRolesMaxFields';
  roleId?: Maybe<Scalars['bigint']['output']>;
  teamMemberId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMemberRolesMaxOrderBy = {
  roleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type TeamMemberRolesMinFields = {
  __typename?: 'TeamMemberRolesMinFields';
  roleId?: Maybe<Scalars['bigint']['output']>;
  teamMemberId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMemberRolesMinOrderBy = {
  roleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type TeamMemberRolesMutationResponse = {
  __typename?: 'TeamMemberRolesMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TeamMemberRoles>;
};

export type TeamMemberRolesOnConflict = {
  constraint: TeamMemberRolesConstraint;
  updateColumns?: Array<TeamMemberRolesUpdateColumn>;
  where?: InputMaybe<TeamMemberRolesBoolExp>;
};

export type TeamMemberRolesOrderBy = {
  role?: InputMaybe<RoleOrderBy>;
  roleId?: InputMaybe<OrderBy>;
  teamMember?: InputMaybe<TeamMemberOrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type TeamMemberRolesPkColumnsInput = {
  roleId: Scalars['bigint']['input'];
  teamMemberId: Scalars['bigint']['input'];
};

export enum TeamMemberRolesSelectColumn {
  RoleId = 'roleId',
  TeamMemberId = 'teamMemberId',
}

export type TeamMemberRolesSetInput = {
  roleId?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberRolesStddevFields = {
  __typename?: 'TeamMemberRolesStddevFields';
  roleId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberRolesStddevOrderBy = {
  roleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type TeamMemberRolesStddevPopFields = {
  __typename?: 'TeamMemberRolesStddevPopFields';
  roleId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberRolesStddevPopOrderBy = {
  roleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type TeamMemberRolesStddevSampFields = {
  __typename?: 'TeamMemberRolesStddevSampFields';
  roleId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberRolesStddevSampOrderBy = {
  roleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type TeamMemberRolesStreamCursorInput = {
  initialValue: TeamMemberRolesStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TeamMemberRolesStreamCursorValueInput = {
  roleId?: InputMaybe<Scalars['bigint']['input']>;
  teamMemberId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberRolesSumFields = {
  __typename?: 'TeamMemberRolesSumFields';
  roleId?: Maybe<Scalars['bigint']['output']>;
  teamMemberId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMemberRolesSumOrderBy = {
  roleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export enum TeamMemberRolesUpdateColumn {
  RoleId = 'roleId',
  TeamMemberId = 'teamMemberId',
}

export type TeamMemberRolesUpdates = {
  _inc?: InputMaybe<TeamMemberRolesIncInput>;
  _set?: InputMaybe<TeamMemberRolesSetInput>;
  where: TeamMemberRolesBoolExp;
};

export type TeamMemberRolesVarPopFields = {
  __typename?: 'TeamMemberRolesVarPopFields';
  roleId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberRolesVarPopOrderBy = {
  roleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type TeamMemberRolesVarSampFields = {
  __typename?: 'TeamMemberRolesVarSampFields';
  roleId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberRolesVarSampOrderBy = {
  roleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export type TeamMemberRolesVarianceFields = {
  __typename?: 'TeamMemberRolesVarianceFields';
  roleId?: Maybe<Scalars['Float']['output']>;
  teamMemberId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberRolesVarianceOrderBy = {
  roleId?: InputMaybe<OrderBy>;
  teamMemberId?: InputMaybe<OrderBy>;
};

export enum TeamMemberSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EndDate = 'endDate',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Permissions = 'permissions',
  StartDate = 'startDate',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  UserId = 'userId',
}

export type TeamMemberSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  endDate?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  permissions?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['timestamptz']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberStddevFields = {
  __typename?: 'TeamMemberStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permissions?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberStddevPopFields = {
  __typename?: 'TeamMemberStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permissions?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberStddevSampFields = {
  __typename?: 'TeamMemberStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permissions?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberStreamCursorInput = {
  initialValue: TeamMemberStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TeamMemberStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  endDate?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  permissions?: InputMaybe<Scalars['Int']['input']>;
  startDate?: InputMaybe<Scalars['timestamptz']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMemberSumFields = {
  __typename?: 'TeamMemberSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  permissions?: Maybe<Scalars['Int']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMemberSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export enum TeamMemberUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  EndDate = 'endDate',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Permissions = 'permissions',
  StartDate = 'startDate',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  UserId = 'userId',
}

export type TeamMemberUpdates = {
  _inc?: InputMaybe<TeamMemberIncInput>;
  _set?: InputMaybe<TeamMemberSetInput>;
  where: TeamMemberBoolExp;
};

export type TeamMemberVarPopFields = {
  __typename?: 'TeamMemberVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permissions?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberVarSampFields = {
  __typename?: 'TeamMemberVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permissions?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMemberVarianceFields = {
  __typename?: 'TeamMemberVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permissions?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMemberVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

export type TeamMetric = {
  __typename?: 'TeamMetric';
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type TeamMetricAggregate = {
  __typename?: 'TeamMetricAggregate';
  aggregate?: Maybe<TeamMetricAggregateFields>;
  nodes: Array<TeamMetric>;
};

export type TeamMetricAggregateBoolExp = {
  count?: InputMaybe<TeamMetricAggregateBoolExpCount>;
};

export type TeamMetricAggregateFields = {
  __typename?: 'TeamMetricAggregateFields';
  avg?: Maybe<TeamMetricAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamMetricMaxFields>;
  min?: Maybe<TeamMetricMinFields>;
  stddev?: Maybe<TeamMetricStddevFields>;
  stddevPop?: Maybe<TeamMetricStddevPopFields>;
  stddevSamp?: Maybe<TeamMetricStddevSampFields>;
  sum?: Maybe<TeamMetricSumFields>;
  varPop?: Maybe<TeamMetricVarPopFields>;
  varSamp?: Maybe<TeamMetricVarSampFields>;
  variance?: Maybe<TeamMetricVarianceFields>;
};

export type TeamMetricAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamMetricSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TeamMetricAggregateOrderBy = {
  avg?: InputMaybe<TeamMetricAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TeamMetricMaxOrderBy>;
  min?: InputMaybe<TeamMetricMinOrderBy>;
  stddev?: InputMaybe<TeamMetricStddevOrderBy>;
  stddevPop?: InputMaybe<TeamMetricStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TeamMetricStddevSampOrderBy>;
  sum?: InputMaybe<TeamMetricSumOrderBy>;
  varPop?: InputMaybe<TeamMetricVarPopOrderBy>;
  varSamp?: InputMaybe<TeamMetricVarSampOrderBy>;
  variance?: InputMaybe<TeamMetricVarianceOrderBy>;
};

export type TeamMetricArrRelInsertInput = {
  data: Array<TeamMetricInsertInput>;
  onConflict?: InputMaybe<TeamMetricOnConflict>;
};

export type TeamMetricAvgFields = {
  __typename?: 'TeamMetricAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMetricAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamMetricBoolExp = {
  _and?: InputMaybe<Array<TeamMetricBoolExp>>;
  _not?: InputMaybe<TeamMetricBoolExp>;
  _or?: InputMaybe<Array<TeamMetricBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
  value?: InputMaybe<StringComparisonExp>;
};

export enum TeamMetricConstraint {
  TeamMetricPkey = 'team_metric_pkey',
}

export type TeamMetricIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamMetricInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

export type TeamMetricMaxFields = {
  __typename?: 'TeamMetricMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

export type TeamMetricMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export type TeamMetricMinFields = {
  __typename?: 'TeamMetricMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

export type TeamMetricMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export type TeamMetricMutationResponse = {
  __typename?: 'TeamMetricMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TeamMetric>;
};

export type TeamMetricOnConflict = {
  constraint: TeamMetricConstraint;
  updateColumns?: Array<TeamMetricUpdateColumn>;
  where?: InputMaybe<TeamMetricBoolExp>;
};

export type TeamMetricOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export type TeamMetricPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TeamMetricSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
  Type = 'type',
  Value = 'value',
}

export type TeamMetricSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

export type TeamMetricStddevFields = {
  __typename?: 'TeamMetricStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMetricStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamMetricStddevPopFields = {
  __typename?: 'TeamMetricStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMetricStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamMetricStddevSampFields = {
  __typename?: 'TeamMetricStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMetricStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamMetricStreamCursorInput = {
  initialValue: TeamMetricStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TeamMetricStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

export type TeamMetricSumFields = {
  __typename?: 'TeamMetricSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMetricSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum TeamMetricUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
  Type = 'type',
  Value = 'value',
}

export type TeamMetricUpdates = {
  _inc?: InputMaybe<TeamMetricIncInput>;
  _set?: InputMaybe<TeamMetricSetInput>;
  where: TeamMetricBoolExp;
};

export type TeamMetricVarPopFields = {
  __typename?: 'TeamMetricVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMetricVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamMetricVarSampFields = {
  __typename?: 'TeamMetricVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMetricVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamMetricVarianceFields = {
  __typename?: 'TeamMetricVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TeamMetricVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TeamMinFields = {
  __typename?: 'TeamMinFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  canteenId?: Maybe<Scalars['bigint']['output']>;
  classGroupId?: Maybe<Scalars['bigint']['output']>;
  cohortId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  directorsCategoryName?: Maybe<Scalars['String']['output']>;
  expectingPresidentEmail?: Maybe<Scalars['String']['output']>;
  expectingSecretaryEmail?: Maybe<Scalars['String']['output']>;
  expectingTreasurerEmail?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  managersCategoryName?: Maybe<Scalars['String']['output']>;
  membersCategoryName?: Maybe<Scalars['String']['output']>;
  membershipDuration?: Maybe<Scalars['String']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  tenantGrantFundId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  videoId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamMinOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  canteenId?: InputMaybe<OrderBy>;
  classGroupId?: InputMaybe<OrderBy>;
  cohortId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  directorsCategoryName?: InputMaybe<OrderBy>;
  expectingPresidentEmail?: InputMaybe<OrderBy>;
  expectingSecretaryEmail?: InputMaybe<OrderBy>;
  expectingTreasurerEmail?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  managersCategoryName?: InputMaybe<OrderBy>;
  membersCategoryName?: InputMaybe<OrderBy>;
  membershipDuration?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamMutationResponse = {
  __typename?: 'TeamMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Team>;
};

export type TeamObjRelInsertInput = {
  data: TeamInsertInput;
  onConflict?: InputMaybe<TeamOnConflict>;
};

export type TeamOnConflict = {
  constraint: TeamConstraint;
  updateColumns?: Array<TeamUpdateColumn>;
  where?: InputMaybe<TeamBoolExp>;
};

export type TeamOrderBy = {
  accountsAggregate?: InputMaybe<AccountAggregateOrderBy>;
  actionsAggregate?: InputMaybe<ActionAggregateOrderBy>;
  actor?: InputMaybe<ActorOrderBy>;
  actorId?: InputMaybe<OrderBy>;
  administeredTenant?: InputMaybe<TenantOrderBy>;
  canteen?: InputMaybe<CanteenOrderBy>;
  canteenId?: InputMaybe<OrderBy>;
  classGroup?: InputMaybe<ClassGroupOrderBy>;
  classGroupId?: InputMaybe<OrderBy>;
  cohort?: InputMaybe<CohortOrderBy>;
  cohortId?: InputMaybe<OrderBy>;
  contentsAggregate?: InputMaybe<ContentAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  directorsCategoryName?: InputMaybe<OrderBy>;
  documentsAggregate?: InputMaybe<DocumentAggregateOrderBy>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateOrderBy>;
  expectingPresidentEmail?: InputMaybe<OrderBy>;
  expectingSecretaryEmail?: InputMaybe<OrderBy>;
  expectingTreasurerEmail?: InputMaybe<OrderBy>;
  financesAggregate?: InputMaybe<FinanceAggregateOrderBy>;
  grantFund?: InputMaybe<LegalUnitOrderBy>;
  grantsAggregate?: InputMaybe<GrantAggregateOrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isJoinFormActive?: InputMaybe<OrderBy>;
  isOnboardingComplete?: InputMaybe<OrderBy>;
  joinForm?: InputMaybe<FormOrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  managersCategoryName?: InputMaybe<OrderBy>;
  membersCategoryName?: InputMaybe<OrderBy>;
  membershipDuration?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  missionsAggregate?: InputMaybe<MissionAggregateOrderBy>;
  parent?: InputMaybe<TeamOrderBy>;
  parentId?: InputMaybe<OrderBy>;
  polesAggregate?: InputMaybe<PoleAggregateOrderBy>;
  projectsAggregate?: InputMaybe<ProjectAggregateOrderBy>;
  rolesAggregate?: InputMaybe<RoleAggregateOrderBy>;
  teamHistoriesAggregate?: InputMaybe<TeamHistoryAggregateOrderBy>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateOrderBy>;
  teamMembersAggregate?: InputMaybe<TeamMemberAggregateOrderBy>;
  teamsAggregate?: InputMaybe<TeamAggregateOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  tenantOrganizesAggregate?: InputMaybe<TenantOrganizeAggregateOrderBy>;
  type?: InputMaybe<OrderBy>;
  video?: InputMaybe<FileUploadOrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TeamSelectColumn {
  ActorId = 'actorId',
  CanteenId = 'canteenId',
  ClassGroupId = 'classGroupId',
  CohortId = 'cohortId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  DirectorsCategoryName = 'directorsCategoryName',
  ExpectingPresidentEmail = 'expectingPresidentEmail',
  ExpectingSecretaryEmail = 'expectingSecretaryEmail',
  ExpectingTreasurerEmail = 'expectingTreasurerEmail',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsJoinFormActive = 'isJoinFormActive',
  IsOnboardingComplete = 'isOnboardingComplete',
  JoinFormId = 'joinFormId',
  ManagersCategoryName = 'managersCategoryName',
  MembersCategoryName = 'membersCategoryName',
  MembershipDuration = 'membershipDuration',
  MembershipFees = 'membershipFees',
  ParentId = 'parentId',
  TenantGrantFundId = 'tenantGrantFundId',
  TenantId = 'tenantId',
  Type = 'type',
  VideoId = 'videoId',
}

export enum TeamSelectColumnTeamAggregateBoolExpBool_AndArgumentsColumns {
  IsJoinFormActive = 'isJoinFormActive',
  IsOnboardingComplete = 'isOnboardingComplete',
}

export enum TeamSelectColumnTeamAggregateBoolExpBool_OrArgumentsColumns {
  IsJoinFormActive = 'isJoinFormActive',
  IsOnboardingComplete = 'isOnboardingComplete',
}

export type TeamSetInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  canteenId?: InputMaybe<Scalars['bigint']['input']>;
  classGroupId?: InputMaybe<Scalars['bigint']['input']>;
  cohortId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  directorsCategoryName?: InputMaybe<Scalars['String']['input']>;
  expectingPresidentEmail?: InputMaybe<Scalars['String']['input']>;
  expectingSecretaryEmail?: InputMaybe<Scalars['String']['input']>;
  expectingTreasurerEmail?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isJoinFormActive?: InputMaybe<Scalars['Boolean']['input']>;
  isOnboardingComplete?: InputMaybe<Scalars['Boolean']['input']>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  managersCategoryName?: InputMaybe<Scalars['String']['input']>;
  membersCategoryName?: InputMaybe<Scalars['String']['input']>;
  membershipDuration?: InputMaybe<Scalars['String']['input']>;
  membershipFees?: InputMaybe<Scalars['Float']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  tenantGrantFundId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  videoId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamStddevFields = {
  __typename?: 'TeamStddevFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  canteenId?: Maybe<Scalars['Float']['output']>;
  classGroupId?: Maybe<Scalars['Float']['output']>;
  cohortId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  tenantGrantFundId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  videoId?: Maybe<Scalars['Float']['output']>;
};

export type TeamStddevOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  canteenId?: InputMaybe<OrderBy>;
  classGroupId?: InputMaybe<OrderBy>;
  cohortId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamStddevPopFields = {
  __typename?: 'TeamStddevPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  canteenId?: Maybe<Scalars['Float']['output']>;
  classGroupId?: Maybe<Scalars['Float']['output']>;
  cohortId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  tenantGrantFundId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  videoId?: Maybe<Scalars['Float']['output']>;
};

export type TeamStddevPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  canteenId?: InputMaybe<OrderBy>;
  classGroupId?: InputMaybe<OrderBy>;
  cohortId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamStddevSampFields = {
  __typename?: 'TeamStddevSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  canteenId?: Maybe<Scalars['Float']['output']>;
  classGroupId?: Maybe<Scalars['Float']['output']>;
  cohortId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  tenantGrantFundId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  videoId?: Maybe<Scalars['Float']['output']>;
};

export type TeamStddevSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  canteenId?: InputMaybe<OrderBy>;
  classGroupId?: InputMaybe<OrderBy>;
  cohortId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamStreamCursorInput = {
  initialValue: TeamStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TeamStreamCursorValueInput = {
  actorId?: InputMaybe<Scalars['bigint']['input']>;
  canteenId?: InputMaybe<Scalars['bigint']['input']>;
  classGroupId?: InputMaybe<Scalars['bigint']['input']>;
  cohortId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  directorsCategoryName?: InputMaybe<Scalars['String']['input']>;
  expectingPresidentEmail?: InputMaybe<Scalars['String']['input']>;
  expectingSecretaryEmail?: InputMaybe<Scalars['String']['input']>;
  expectingTreasurerEmail?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isJoinFormActive?: InputMaybe<Scalars['Boolean']['input']>;
  isOnboardingComplete?: InputMaybe<Scalars['Boolean']['input']>;
  joinFormId?: InputMaybe<Scalars['bigint']['input']>;
  managersCategoryName?: InputMaybe<Scalars['String']['input']>;
  membersCategoryName?: InputMaybe<Scalars['String']['input']>;
  membershipDuration?: InputMaybe<Scalars['String']['input']>;
  membershipFees?: InputMaybe<Scalars['Float']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  tenantGrantFundId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  videoId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TeamSumFields = {
  __typename?: 'TeamSumFields';
  actorId?: Maybe<Scalars['bigint']['output']>;
  canteenId?: Maybe<Scalars['bigint']['output']>;
  classGroupId?: Maybe<Scalars['bigint']['output']>;
  cohortId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  joinFormId?: Maybe<Scalars['bigint']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  tenantGrantFundId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  videoId?: Maybe<Scalars['bigint']['output']>;
};

export type TeamSumOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  canteenId?: InputMaybe<OrderBy>;
  classGroupId?: InputMaybe<OrderBy>;
  cohortId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export enum TeamUpdateColumn {
  ActorId = 'actorId',
  CanteenId = 'canteenId',
  ClassGroupId = 'classGroupId',
  CohortId = 'cohortId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  DirectorsCategoryName = 'directorsCategoryName',
  ExpectingPresidentEmail = 'expectingPresidentEmail',
  ExpectingSecretaryEmail = 'expectingSecretaryEmail',
  ExpectingTreasurerEmail = 'expectingTreasurerEmail',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IsJoinFormActive = 'isJoinFormActive',
  IsOnboardingComplete = 'isOnboardingComplete',
  JoinFormId = 'joinFormId',
  ManagersCategoryName = 'managersCategoryName',
  MembersCategoryName = 'membersCategoryName',
  MembershipDuration = 'membershipDuration',
  MembershipFees = 'membershipFees',
  ParentId = 'parentId',
  TenantGrantFundId = 'tenantGrantFundId',
  TenantId = 'tenantId',
  Type = 'type',
  VideoId = 'videoId',
}

export type TeamUpdates = {
  _inc?: InputMaybe<TeamIncInput>;
  _set?: InputMaybe<TeamSetInput>;
  where: TeamBoolExp;
};

export type TeamVarPopFields = {
  __typename?: 'TeamVarPopFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  canteenId?: Maybe<Scalars['Float']['output']>;
  classGroupId?: Maybe<Scalars['Float']['output']>;
  cohortId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  tenantGrantFundId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  videoId?: Maybe<Scalars['Float']['output']>;
};

export type TeamVarPopOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  canteenId?: InputMaybe<OrderBy>;
  classGroupId?: InputMaybe<OrderBy>;
  cohortId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamVarSampFields = {
  __typename?: 'TeamVarSampFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  canteenId?: Maybe<Scalars['Float']['output']>;
  classGroupId?: Maybe<Scalars['Float']['output']>;
  cohortId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  tenantGrantFundId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  videoId?: Maybe<Scalars['Float']['output']>;
};

export type TeamVarSampOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  canteenId?: InputMaybe<OrderBy>;
  classGroupId?: InputMaybe<OrderBy>;
  cohortId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type TeamVarianceFields = {
  __typename?: 'TeamVarianceFields';
  actorId?: Maybe<Scalars['Float']['output']>;
  canteenId?: Maybe<Scalars['Float']['output']>;
  classGroupId?: Maybe<Scalars['Float']['output']>;
  cohortId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  joinFormId?: Maybe<Scalars['Float']['output']>;
  membershipFees?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  tenantGrantFundId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  videoId?: Maybe<Scalars['Float']['output']>;
};

export type TeamVarianceOrderBy = {
  actorId?: InputMaybe<OrderBy>;
  canteenId?: InputMaybe<OrderBy>;
  classGroupId?: InputMaybe<OrderBy>;
  cohortId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  joinFormId?: InputMaybe<OrderBy>;
  membershipFees?: InputMaybe<OrderBy>;
  parentId?: InputMaybe<OrderBy>;
  tenantGrantFundId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  videoId?: InputMaybe<OrderBy>;
};

export type Tenant = {
  __typename?: 'Tenant';
  accounts: Array<Account>;
  accountsAggregate: AccountAggregate;
  actions: Array<Action>;
  actionsAggregate: ActionAggregate;
  actorImages: Array<ActorImage>;
  actorImagesAggregate: ActorImageAggregate;
  actors: Array<Actor>;
  actorsAggregate: ActorAggregate;
  adminTeam?: Maybe<Team>;
  adminTeamId?: Maybe<Scalars['bigint']['output']>;
  banks: Array<Bank>;
  banksAggregate: BankAggregate;
  bots: Array<Bot>;
  botsAggregate: BotAggregate;
  campusClusters: Array<CampusCluster>;
  campusClustersAggregate: CampusClusterAggregate;
  campuses: Array<Campus>;
  campusesAggregate: CampusAggregate;
  canteenFoods: Array<CanteenFood>;
  canteenFoodsAggregate: CanteenFoodAggregate;
  canteenMenus: Array<CanteenMenu>;
  canteenMenusAggregate: CanteenMenuAggregate;
  canteens: Array<Canteen>;
  canteensAggregate: CanteenAggregate;
  classGroupTeachers: Array<ClassGroupTeacher>;
  classGroupTeachersAggregate: ClassGroupTeacherAggregate;
  classGroups: Array<ClassGroup>;
  classGroupsAggregate: ClassGroupAggregate;
  cohorts: Array<Cohort>;
  cohortsAggregate: CohortAggregate;
  contents: Array<Content>;
  contentsAggregate: ContentAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  documents: Array<Document>;
  documentsAggregate: DocumentAggregate;
  domain: Scalars['String']['output'];
  eventApprovalSteps: Array<EventApprovalStep>;
  eventApprovalStepsAggregate: EventApprovalStepAggregate;
  eventApprovals: Array<EventApproval>;
  eventApprovalsAggregate: EventApprovalAggregate;
  eventFavorites: Array<EventFavorite>;
  eventFavoritesAggregate: EventFavoriteAggregate;
  eventJoins: Array<EventJoin>;
  eventJoinsAggregate: EventJoinAggregate;
  eventOrganizes: Array<EventOrganize>;
  eventOrganizesAggregate: EventOrganizeAggregate;
  eventSupervisors: Array<EventSupervisor>;
  eventSupervisorsAggregate: EventSupervisorAggregate;
  eventValidationForm?: Maybe<Form>;
  eventValidationFormId?: Maybe<Scalars['bigint']['output']>;
  events: Array<Event>;
  eventsAggregate: EventAggregate;
  expenseItems: Array<ExpenseItem>;
  expenseItemsAggregate: ExpenseItemAggregate;
  expenses: Array<Expense>;
  expensesAggregate: ExpenseAggregate;
  favorites: Array<Favorite>;
  favoritesAggregate: FavoriteAggregate;
  fileUploads: Array<FileUpload>;
  fileUploadsAggregate: FileUploadAggregate;
  finances: Array<Finance>;
  financesAggregate: FinanceAggregate;
  follows: Array<Follow>;
  followsAggregate: FollowAggregate;
  formSubmissions: Array<FormSubmission>;
  formSubmissionsAggregate: FormSubmissionAggregate;
  forms: Array<Form>;
  formsAggregate: FormAggregate;
  grantAllocates: Array<GrantAllocate>;
  grantAllocatesAggregate: GrantAllocateAggregate;
  grants: Array<Grant>;
  grantsAggregate: GrantAggregate;
  id: Scalars['bigint']['output'];
  individuals: Array<Individual>;
  individualsAggregate: IndividualAggregate;
  isOidcEnabled: Scalars['Boolean']['output'];
  issues: Array<Issue>;
  issuesAggregate: IssueAggregate;
  locations: Array<Location>;
  locationsAggregate: LocationAggregate;
  missionJoins: Array<MissionJoin>;
  missionJoinsAggregate: MissionJoinAggregate;
  missions: Array<Mission>;
  missionsAggregate: MissionAggregate;
  oidcCallbackUri: Scalars['String']['output'];
  oidcClientId: Scalars['String']['output'];
  oidcClientSecret: Scalars['String']['output'];
  oidcDiscoveryUrl: Scalars['String']['output'];
  oidcName: Scalars['String']['output'];
  oidcScopes: Scalars['String']['output'];
  pointName: Scalars['String']['output'];
  poles: Array<Pole>;
  polesAggregate: PoleAggregate;
  projects: Array<Project>;
  projectsAggregate: ProjectAggregate;
  reactions: Array<Reaction>;
  reactionsAggregate: ReactionAggregate;
  reports: Array<Report>;
  reportsAggregate: ReportAggregate;
  roles: Array<Role>;
  rolesAggregate: RoleAggregate;
  sessions: Array<Session>;
  sessionsAggregate: SessionAggregate;
  shortcuts: Array<Shortcut>;
  shortcutsAggregate: ShortcutAggregate;
  socials: Array<Social>;
  socialsAggregate: SocialAggregate;
  subjects: Array<Subject>;
  subjectsAggregate: SubjectAggregate;
  tags: Array<Tag>;
  tagsAggregate: TagAggregate;
  teamHistories: Array<TeamHistory>;
  teamHistoriesAggregate: TeamHistoryAggregate;
  teamJoins: Array<TeamJoin>;
  teamJoinsAggregate: TeamJoinAggregate;
  teamMembers: Array<TeamMember>;
  teamMembersAggregate: TeamMemberAggregate;
  teamMetrics: Array<TeamMetric>;
  teamMetricsAggregate: TeamMetricAggregate;
  teams: Array<Team>;
  teamsAggregate: TeamAggregate;
  tenantOrganizes: Array<TenantOrganize>;
  tenantOrganizesAggregate: TenantOrganizeAggregate;
  threads: Array<Thread>;
  threadsAggregate: ThreadAggregate;
  users: Array<User>;
  usersAggregate: UserAggregate;
  validations: Array<Validation>;
  validationsAggregate: ValidationAggregate;
  views: Array<View>;
  viewsAggregate: ViewAggregate;
  votes: Array<Vote>;
  votesAggregate: VoteAggregate;
};

export type TenantAccountsArgs = {
  distinctOn?: InputMaybe<Array<AccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountOrderBy>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type TenantAccountsAggregateArgs = {
  distinctOn?: InputMaybe<Array<AccountSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountOrderBy>>;
  where?: InputMaybe<AccountBoolExp>;
};

export type TenantActionsArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type TenantActionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type TenantActorImagesArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type TenantActorImagesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorImageSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorImageOrderBy>>;
  where?: InputMaybe<ActorImageBoolExp>;
};

export type TenantActorsArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type TenantActorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActorOrderBy>>;
  where?: InputMaybe<ActorBoolExp>;
};

export type TenantBanksArgs = {
  distinctOn?: InputMaybe<Array<BankSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankOrderBy>>;
  where?: InputMaybe<BankBoolExp>;
};

export type TenantBanksAggregateArgs = {
  distinctOn?: InputMaybe<Array<BankSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BankOrderBy>>;
  where?: InputMaybe<BankBoolExp>;
};

export type TenantBotsArgs = {
  distinctOn?: InputMaybe<Array<BotSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BotOrderBy>>;
  where?: InputMaybe<BotBoolExp>;
};

export type TenantBotsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BotSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BotOrderBy>>;
  where?: InputMaybe<BotBoolExp>;
};

export type TenantCampusClustersArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type TenantCampusClustersAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusClusterSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusClusterOrderBy>>;
  where?: InputMaybe<CampusClusterBoolExp>;
};

export type TenantCampusesArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type TenantCampusesAggregateArgs = {
  distinctOn?: InputMaybe<Array<CampusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CampusOrderBy>>;
  where?: InputMaybe<CampusBoolExp>;
};

export type TenantCanteenFoodsArgs = {
  distinctOn?: InputMaybe<Array<CanteenFoodSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenFoodOrderBy>>;
  where?: InputMaybe<CanteenFoodBoolExp>;
};

export type TenantCanteenFoodsAggregateArgs = {
  distinctOn?: InputMaybe<Array<CanteenFoodSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenFoodOrderBy>>;
  where?: InputMaybe<CanteenFoodBoolExp>;
};

export type TenantCanteenMenusArgs = {
  distinctOn?: InputMaybe<Array<CanteenMenuSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenMenuOrderBy>>;
  where?: InputMaybe<CanteenMenuBoolExp>;
};

export type TenantCanteenMenusAggregateArgs = {
  distinctOn?: InputMaybe<Array<CanteenMenuSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenMenuOrderBy>>;
  where?: InputMaybe<CanteenMenuBoolExp>;
};

export type TenantCanteensArgs = {
  distinctOn?: InputMaybe<Array<CanteenSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenOrderBy>>;
  where?: InputMaybe<CanteenBoolExp>;
};

export type TenantCanteensAggregateArgs = {
  distinctOn?: InputMaybe<Array<CanteenSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CanteenOrderBy>>;
  where?: InputMaybe<CanteenBoolExp>;
};

export type TenantClassGroupTeachersArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherBoolExp>;
};

export type TenantClassGroupTeachersAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherBoolExp>;
};

export type TenantClassGroupsArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupOrderBy>>;
  where?: InputMaybe<ClassGroupBoolExp>;
};

export type TenantClassGroupsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupOrderBy>>;
  where?: InputMaybe<ClassGroupBoolExp>;
};

export type TenantCohortsArgs = {
  distinctOn?: InputMaybe<Array<CohortSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CohortOrderBy>>;
  where?: InputMaybe<CohortBoolExp>;
};

export type TenantCohortsAggregateArgs = {
  distinctOn?: InputMaybe<Array<CohortSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CohortOrderBy>>;
  where?: InputMaybe<CohortBoolExp>;
};

export type TenantContentsArgs = {
  distinctOn?: InputMaybe<Array<ContentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentOrderBy>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type TenantContentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ContentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ContentOrderBy>>;
  where?: InputMaybe<ContentBoolExp>;
};

export type TenantDocumentsArgs = {
  distinctOn?: InputMaybe<Array<DocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DocumentOrderBy>>;
  where?: InputMaybe<DocumentBoolExp>;
};

export type TenantDocumentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<DocumentSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DocumentOrderBy>>;
  where?: InputMaybe<DocumentBoolExp>;
};

export type TenantEventApprovalStepsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type TenantEventApprovalStepsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalStepOrderBy>>;
  where?: InputMaybe<EventApprovalStepBoolExp>;
};

export type TenantEventApprovalsArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type TenantEventApprovalsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventApprovalSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventApprovalOrderBy>>;
  where?: InputMaybe<EventApprovalBoolExp>;
};

export type TenantEventFavoritesArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type TenantEventFavoritesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventFavoriteOrderBy>>;
  where?: InputMaybe<EventFavoriteBoolExp>;
};

export type TenantEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type TenantEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type TenantEventOrganizesArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type TenantEventOrganizesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy>>;
  where?: InputMaybe<EventOrganizeBoolExp>;
};

export type TenantEventSupervisorsArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type TenantEventSupervisorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type TenantEventsArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type TenantEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventOrderBy>>;
  where?: InputMaybe<EventBoolExp>;
};

export type TenantExpenseItemsArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type TenantExpenseItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseItemOrderBy>>;
  where?: InputMaybe<ExpenseItemBoolExp>;
};

export type TenantExpensesArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type TenantExpensesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExpenseSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExpenseOrderBy>>;
  where?: InputMaybe<ExpenseBoolExp>;
};

export type TenantFavoritesArgs = {
  distinctOn?: InputMaybe<Array<FavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FavoriteOrderBy>>;
  where?: InputMaybe<FavoriteBoolExp>;
};

export type TenantFavoritesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FavoriteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FavoriteOrderBy>>;
  where?: InputMaybe<FavoriteBoolExp>;
};

export type TenantFileUploadsArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type TenantFileUploadsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FileUploadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FileUploadOrderBy>>;
  where?: InputMaybe<FileUploadBoolExp>;
};

export type TenantFinancesArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type TenantFinancesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FinanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FinanceOrderBy>>;
  where?: InputMaybe<FinanceBoolExp>;
};

export type TenantFollowsArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type TenantFollowsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FollowSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FollowOrderBy>>;
  where?: InputMaybe<FollowBoolExp>;
};

export type TenantFormSubmissionsArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type TenantFormSubmissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormSubmissionOrderBy>>;
  where?: InputMaybe<FormSubmissionBoolExp>;
};

export type TenantFormsArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type TenantFormsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FormSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FormOrderBy>>;
  where?: InputMaybe<FormBoolExp>;
};

export type TenantGrantAllocatesArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type TenantGrantAllocatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantAllocateOrderBy>>;
  where?: InputMaybe<GrantAllocateBoolExp>;
};

export type TenantGrantsArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type TenantGrantsAggregateArgs = {
  distinctOn?: InputMaybe<Array<GrantSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<GrantOrderBy>>;
  where?: InputMaybe<GrantBoolExp>;
};

export type TenantIndividualsArgs = {
  distinctOn?: InputMaybe<Array<IndividualSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IndividualOrderBy>>;
  where?: InputMaybe<IndividualBoolExp>;
};

export type TenantIndividualsAggregateArgs = {
  distinctOn?: InputMaybe<Array<IndividualSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IndividualOrderBy>>;
  where?: InputMaybe<IndividualBoolExp>;
};

export type TenantIssuesArgs = {
  distinctOn?: InputMaybe<Array<IssueSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueOrderBy>>;
  where?: InputMaybe<IssueBoolExp>;
};

export type TenantIssuesAggregateArgs = {
  distinctOn?: InputMaybe<Array<IssueSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IssueOrderBy>>;
  where?: InputMaybe<IssueBoolExp>;
};

export type TenantLocationsArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type TenantLocationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LocationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LocationOrderBy>>;
  where?: InputMaybe<LocationBoolExp>;
};

export type TenantMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type TenantMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type TenantMissionsArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type TenantMissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionOrderBy>>;
  where?: InputMaybe<MissionBoolExp>;
};

export type TenantPolesArgs = {
  distinctOn?: InputMaybe<Array<PoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoleOrderBy>>;
  where?: InputMaybe<PoleBoolExp>;
};

export type TenantPolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoleOrderBy>>;
  where?: InputMaybe<PoleBoolExp>;
};

export type TenantProjectsArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type TenantProjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ProjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderBy>>;
  where?: InputMaybe<ProjectBoolExp>;
};

export type TenantReactionsArgs = {
  distinctOn?: InputMaybe<Array<ReactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReactionOrderBy>>;
  where?: InputMaybe<ReactionBoolExp>;
};

export type TenantReactionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ReactionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReactionOrderBy>>;
  where?: InputMaybe<ReactionBoolExp>;
};

export type TenantReportsArgs = {
  distinctOn?: InputMaybe<Array<ReportSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReportOrderBy>>;
  where?: InputMaybe<ReportBoolExp>;
};

export type TenantReportsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ReportSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ReportOrderBy>>;
  where?: InputMaybe<ReportBoolExp>;
};

export type TenantRolesArgs = {
  distinctOn?: InputMaybe<Array<RoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RoleOrderBy>>;
  where?: InputMaybe<RoleBoolExp>;
};

export type TenantRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<RoleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RoleOrderBy>>;
  where?: InputMaybe<RoleBoolExp>;
};

export type TenantSessionsArgs = {
  distinctOn?: InputMaybe<Array<SessionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SessionOrderBy>>;
  where?: InputMaybe<SessionBoolExp>;
};

export type TenantSessionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SessionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SessionOrderBy>>;
  where?: InputMaybe<SessionBoolExp>;
};

export type TenantShortcutsArgs = {
  distinctOn?: InputMaybe<Array<ShortcutSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ShortcutOrderBy>>;
  where?: InputMaybe<ShortcutBoolExp>;
};

export type TenantShortcutsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ShortcutSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ShortcutOrderBy>>;
  where?: InputMaybe<ShortcutBoolExp>;
};

export type TenantSocialsArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type TenantSocialsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SocialSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SocialOrderBy>>;
  where?: InputMaybe<SocialBoolExp>;
};

export type TenantSubjectsArgs = {
  distinctOn?: InputMaybe<Array<SubjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectOrderBy>>;
  where?: InputMaybe<SubjectBoolExp>;
};

export type TenantSubjectsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SubjectSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SubjectOrderBy>>;
  where?: InputMaybe<SubjectBoolExp>;
};

export type TenantTagsArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type TenantTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TagSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TagOrderBy>>;
  where?: InputMaybe<TagBoolExp>;
};

export type TenantTeamHistoriesArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type TenantTeamHistoriesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamHistorySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamHistoryOrderBy>>;
  where?: InputMaybe<TeamHistoryBoolExp>;
};

export type TenantTeamJoinsArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type TenantTeamJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type TenantTeamMembersArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type TenantTeamMembersAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type TenantTeamMetricsArgs = {
  distinctOn?: InputMaybe<Array<TeamMetricSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMetricOrderBy>>;
  where?: InputMaybe<TeamMetricBoolExp>;
};

export type TenantTeamMetricsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMetricSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMetricOrderBy>>;
  where?: InputMaybe<TeamMetricBoolExp>;
};

export type TenantTeamsArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type TenantTeamsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamOrderBy>>;
  where?: InputMaybe<TeamBoolExp>;
};

export type TenantTenantOrganizesArgs = {
  distinctOn?: InputMaybe<Array<TenantOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrganizeOrderBy>>;
  where?: InputMaybe<TenantOrganizeBoolExp>;
};

export type TenantTenantOrganizesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TenantOrganizeSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TenantOrganizeOrderBy>>;
  where?: InputMaybe<TenantOrganizeBoolExp>;
};

export type TenantThreadsArgs = {
  distinctOn?: InputMaybe<Array<ThreadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadOrderBy>>;
  where?: InputMaybe<ThreadBoolExp>;
};

export type TenantThreadsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ThreadSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadOrderBy>>;
  where?: InputMaybe<ThreadBoolExp>;
};

export type TenantUsersArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type TenantUsersAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserOrderBy>>;
  where?: InputMaybe<UserBoolExp>;
};

export type TenantValidationsArgs = {
  distinctOn?: InputMaybe<Array<ValidationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ValidationOrderBy>>;
  where?: InputMaybe<ValidationBoolExp>;
};

export type TenantValidationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ValidationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ValidationOrderBy>>;
  where?: InputMaybe<ValidationBoolExp>;
};

export type TenantViewsArgs = {
  distinctOn?: InputMaybe<Array<ViewSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ViewOrderBy>>;
  where?: InputMaybe<ViewBoolExp>;
};

export type TenantViewsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ViewSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ViewOrderBy>>;
  where?: InputMaybe<ViewBoolExp>;
};

export type TenantVotesArgs = {
  distinctOn?: InputMaybe<Array<VoteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<VoteOrderBy>>;
  where?: InputMaybe<VoteBoolExp>;
};

export type TenantVotesAggregateArgs = {
  distinctOn?: InputMaybe<Array<VoteSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<VoteOrderBy>>;
  where?: InputMaybe<VoteBoolExp>;
};

export type TenantAggregate = {
  __typename?: 'TenantAggregate';
  aggregate?: Maybe<TenantAggregateFields>;
  nodes: Array<Tenant>;
};

export type TenantAggregateBoolExp = {
  bool_and?: InputMaybe<TenantAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<TenantAggregateBoolExpBool_Or>;
  count?: InputMaybe<TenantAggregateBoolExpCount>;
};

export type TenantAggregateFields = {
  __typename?: 'TenantAggregateFields';
  avg?: Maybe<TenantAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TenantMaxFields>;
  min?: Maybe<TenantMinFields>;
  stddev?: Maybe<TenantStddevFields>;
  stddevPop?: Maybe<TenantStddevPopFields>;
  stddevSamp?: Maybe<TenantStddevSampFields>;
  sum?: Maybe<TenantSumFields>;
  varPop?: Maybe<TenantVarPopFields>;
  varSamp?: Maybe<TenantVarSampFields>;
  variance?: Maybe<TenantVarianceFields>;
};

export type TenantAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TenantSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TenantAggregateOrderBy = {
  avg?: InputMaybe<TenantAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TenantMaxOrderBy>;
  min?: InputMaybe<TenantMinOrderBy>;
  stddev?: InputMaybe<TenantStddevOrderBy>;
  stddevPop?: InputMaybe<TenantStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TenantStddevSampOrderBy>;
  sum?: InputMaybe<TenantSumOrderBy>;
  varPop?: InputMaybe<TenantVarPopOrderBy>;
  varSamp?: InputMaybe<TenantVarSampOrderBy>;
  variance?: InputMaybe<TenantVarianceOrderBy>;
};

export type TenantArrRelInsertInput = {
  data: Array<TenantInsertInput>;
  onConflict?: InputMaybe<TenantOnConflict>;
};

export type TenantAvgFields = {
  __typename?: 'TenantAvgFields';
  adminTeamId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventValidationFormId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

export type TenantAvgOrderBy = {
  adminTeamId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventValidationFormId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
};

export type TenantBoolExp = {
  _and?: InputMaybe<Array<TenantBoolExp>>;
  _not?: InputMaybe<TenantBoolExp>;
  _or?: InputMaybe<Array<TenantBoolExp>>;
  accounts?: InputMaybe<AccountBoolExp>;
  accountsAggregate?: InputMaybe<AccountAggregateBoolExp>;
  actions?: InputMaybe<ActionBoolExp>;
  actionsAggregate?: InputMaybe<ActionAggregateBoolExp>;
  actorImages?: InputMaybe<ActorImageBoolExp>;
  actorImagesAggregate?: InputMaybe<ActorImageAggregateBoolExp>;
  actors?: InputMaybe<ActorBoolExp>;
  actorsAggregate?: InputMaybe<ActorAggregateBoolExp>;
  adminTeam?: InputMaybe<TeamBoolExp>;
  adminTeamId?: InputMaybe<BigintComparisonExp>;
  banks?: InputMaybe<BankBoolExp>;
  banksAggregate?: InputMaybe<BankAggregateBoolExp>;
  bots?: InputMaybe<BotBoolExp>;
  botsAggregate?: InputMaybe<BotAggregateBoolExp>;
  campusClusters?: InputMaybe<CampusClusterBoolExp>;
  campusClustersAggregate?: InputMaybe<CampusClusterAggregateBoolExp>;
  campuses?: InputMaybe<CampusBoolExp>;
  campusesAggregate?: InputMaybe<CampusAggregateBoolExp>;
  canteenFoods?: InputMaybe<CanteenFoodBoolExp>;
  canteenFoodsAggregate?: InputMaybe<CanteenFoodAggregateBoolExp>;
  canteenMenus?: InputMaybe<CanteenMenuBoolExp>;
  canteenMenusAggregate?: InputMaybe<CanteenMenuAggregateBoolExp>;
  canteens?: InputMaybe<CanteenBoolExp>;
  canteensAggregate?: InputMaybe<CanteenAggregateBoolExp>;
  classGroupTeachers?: InputMaybe<ClassGroupTeacherBoolExp>;
  classGroupTeachersAggregate?: InputMaybe<ClassGroupTeacherAggregateBoolExp>;
  classGroups?: InputMaybe<ClassGroupBoolExp>;
  classGroupsAggregate?: InputMaybe<ClassGroupAggregateBoolExp>;
  cohorts?: InputMaybe<CohortBoolExp>;
  cohortsAggregate?: InputMaybe<CohortAggregateBoolExp>;
  contents?: InputMaybe<ContentBoolExp>;
  contentsAggregate?: InputMaybe<ContentAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  documents?: InputMaybe<DocumentBoolExp>;
  documentsAggregate?: InputMaybe<DocumentAggregateBoolExp>;
  domain?: InputMaybe<StringComparisonExp>;
  eventApprovalSteps?: InputMaybe<EventApprovalStepBoolExp>;
  eventApprovalStepsAggregate?: InputMaybe<EventApprovalStepAggregateBoolExp>;
  eventApprovals?: InputMaybe<EventApprovalBoolExp>;
  eventApprovalsAggregate?: InputMaybe<EventApprovalAggregateBoolExp>;
  eventFavorites?: InputMaybe<EventFavoriteBoolExp>;
  eventFavoritesAggregate?: InputMaybe<EventFavoriteAggregateBoolExp>;
  eventJoins?: InputMaybe<EventJoinBoolExp>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  eventOrganizes?: InputMaybe<EventOrganizeBoolExp>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateBoolExp>;
  eventSupervisors?: InputMaybe<EventSupervisorBoolExp>;
  eventSupervisorsAggregate?: InputMaybe<EventSupervisorAggregateBoolExp>;
  eventValidationForm?: InputMaybe<FormBoolExp>;
  eventValidationFormId?: InputMaybe<BigintComparisonExp>;
  events?: InputMaybe<EventBoolExp>;
  eventsAggregate?: InputMaybe<EventAggregateBoolExp>;
  expenseItems?: InputMaybe<ExpenseItemBoolExp>;
  expenseItemsAggregate?: InputMaybe<ExpenseItemAggregateBoolExp>;
  expenses?: InputMaybe<ExpenseBoolExp>;
  expensesAggregate?: InputMaybe<ExpenseAggregateBoolExp>;
  favorites?: InputMaybe<FavoriteBoolExp>;
  favoritesAggregate?: InputMaybe<FavoriteAggregateBoolExp>;
  fileUploads?: InputMaybe<FileUploadBoolExp>;
  fileUploadsAggregate?: InputMaybe<FileUploadAggregateBoolExp>;
  finances?: InputMaybe<FinanceBoolExp>;
  financesAggregate?: InputMaybe<FinanceAggregateBoolExp>;
  follows?: InputMaybe<FollowBoolExp>;
  followsAggregate?: InputMaybe<FollowAggregateBoolExp>;
  formSubmissions?: InputMaybe<FormSubmissionBoolExp>;
  formSubmissionsAggregate?: InputMaybe<FormSubmissionAggregateBoolExp>;
  forms?: InputMaybe<FormBoolExp>;
  formsAggregate?: InputMaybe<FormAggregateBoolExp>;
  grantAllocates?: InputMaybe<GrantAllocateBoolExp>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateBoolExp>;
  grants?: InputMaybe<GrantBoolExp>;
  grantsAggregate?: InputMaybe<GrantAggregateBoolExp>;
  id?: InputMaybe<BigintComparisonExp>;
  individuals?: InputMaybe<IndividualBoolExp>;
  individualsAggregate?: InputMaybe<IndividualAggregateBoolExp>;
  isOidcEnabled?: InputMaybe<BooleanComparisonExp>;
  issues?: InputMaybe<IssueBoolExp>;
  issuesAggregate?: InputMaybe<IssueAggregateBoolExp>;
  locations?: InputMaybe<LocationBoolExp>;
  locationsAggregate?: InputMaybe<LocationAggregateBoolExp>;
  missionJoins?: InputMaybe<MissionJoinBoolExp>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  missions?: InputMaybe<MissionBoolExp>;
  missionsAggregate?: InputMaybe<MissionAggregateBoolExp>;
  oidcCallbackUri?: InputMaybe<StringComparisonExp>;
  oidcClientId?: InputMaybe<StringComparisonExp>;
  oidcClientSecret?: InputMaybe<StringComparisonExp>;
  oidcDiscoveryUrl?: InputMaybe<StringComparisonExp>;
  oidcName?: InputMaybe<StringComparisonExp>;
  oidcScopes?: InputMaybe<StringComparisonExp>;
  pointName?: InputMaybe<StringComparisonExp>;
  poles?: InputMaybe<PoleBoolExp>;
  polesAggregate?: InputMaybe<PoleAggregateBoolExp>;
  projects?: InputMaybe<ProjectBoolExp>;
  projectsAggregate?: InputMaybe<ProjectAggregateBoolExp>;
  reactions?: InputMaybe<ReactionBoolExp>;
  reactionsAggregate?: InputMaybe<ReactionAggregateBoolExp>;
  reports?: InputMaybe<ReportBoolExp>;
  reportsAggregate?: InputMaybe<ReportAggregateBoolExp>;
  roles?: InputMaybe<RoleBoolExp>;
  rolesAggregate?: InputMaybe<RoleAggregateBoolExp>;
  sessions?: InputMaybe<SessionBoolExp>;
  sessionsAggregate?: InputMaybe<SessionAggregateBoolExp>;
  shortcuts?: InputMaybe<ShortcutBoolExp>;
  shortcutsAggregate?: InputMaybe<ShortcutAggregateBoolExp>;
  socials?: InputMaybe<SocialBoolExp>;
  socialsAggregate?: InputMaybe<SocialAggregateBoolExp>;
  subjects?: InputMaybe<SubjectBoolExp>;
  subjectsAggregate?: InputMaybe<SubjectAggregateBoolExp>;
  tags?: InputMaybe<TagBoolExp>;
  tagsAggregate?: InputMaybe<TagAggregateBoolExp>;
  teamHistories?: InputMaybe<TeamHistoryBoolExp>;
  teamHistoriesAggregate?: InputMaybe<TeamHistoryAggregateBoolExp>;
  teamJoins?: InputMaybe<TeamJoinBoolExp>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateBoolExp>;
  teamMembers?: InputMaybe<TeamMemberBoolExp>;
  teamMembersAggregate?: InputMaybe<TeamMemberAggregateBoolExp>;
  teamMetrics?: InputMaybe<TeamMetricBoolExp>;
  teamMetricsAggregate?: InputMaybe<TeamMetricAggregateBoolExp>;
  teams?: InputMaybe<TeamBoolExp>;
  teamsAggregate?: InputMaybe<TeamAggregateBoolExp>;
  tenantOrganizes?: InputMaybe<TenantOrganizeBoolExp>;
  tenantOrganizesAggregate?: InputMaybe<TenantOrganizeAggregateBoolExp>;
  threads?: InputMaybe<ThreadBoolExp>;
  threadsAggregate?: InputMaybe<ThreadAggregateBoolExp>;
  users?: InputMaybe<UserBoolExp>;
  usersAggregate?: InputMaybe<UserAggregateBoolExp>;
  validations?: InputMaybe<ValidationBoolExp>;
  validationsAggregate?: InputMaybe<ValidationAggregateBoolExp>;
  views?: InputMaybe<ViewBoolExp>;
  viewsAggregate?: InputMaybe<ViewAggregateBoolExp>;
  votes?: InputMaybe<VoteBoolExp>;
  votesAggregate?: InputMaybe<VoteAggregateBoolExp>;
};

export enum TenantConstraint {
  TenantAdminTeamIdUnique = 'tenant_admin_team_id_unique',
  TenantDomainUnique = 'tenant_domain_unique',
  TenantEventValidationFormIdUnique = 'tenant_event_validation_form_id_unique',
  TenantPkey = 'tenant_pkey',
}

export type TenantIncInput = {
  adminTeamId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  eventValidationFormId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

export type TenantInsertInput = {
  accounts?: InputMaybe<AccountArrRelInsertInput>;
  actions?: InputMaybe<ActionArrRelInsertInput>;
  actorImages?: InputMaybe<ActorImageArrRelInsertInput>;
  actors?: InputMaybe<ActorArrRelInsertInput>;
  adminTeam?: InputMaybe<TeamObjRelInsertInput>;
  adminTeamId?: InputMaybe<Scalars['bigint']['input']>;
  banks?: InputMaybe<BankArrRelInsertInput>;
  bots?: InputMaybe<BotArrRelInsertInput>;
  campusClusters?: InputMaybe<CampusClusterArrRelInsertInput>;
  campuses?: InputMaybe<CampusArrRelInsertInput>;
  canteenFoods?: InputMaybe<CanteenFoodArrRelInsertInput>;
  canteenMenus?: InputMaybe<CanteenMenuArrRelInsertInput>;
  canteens?: InputMaybe<CanteenArrRelInsertInput>;
  classGroupTeachers?: InputMaybe<ClassGroupTeacherArrRelInsertInput>;
  classGroups?: InputMaybe<ClassGroupArrRelInsertInput>;
  cohorts?: InputMaybe<CohortArrRelInsertInput>;
  contents?: InputMaybe<ContentArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  documents?: InputMaybe<DocumentArrRelInsertInput>;
  domain?: InputMaybe<Scalars['String']['input']>;
  eventApprovalSteps?: InputMaybe<EventApprovalStepArrRelInsertInput>;
  eventApprovals?: InputMaybe<EventApprovalArrRelInsertInput>;
  eventFavorites?: InputMaybe<EventFavoriteArrRelInsertInput>;
  eventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  eventOrganizes?: InputMaybe<EventOrganizeArrRelInsertInput>;
  eventSupervisors?: InputMaybe<EventSupervisorArrRelInsertInput>;
  eventValidationForm?: InputMaybe<FormObjRelInsertInput>;
  eventValidationFormId?: InputMaybe<Scalars['bigint']['input']>;
  events?: InputMaybe<EventArrRelInsertInput>;
  expenseItems?: InputMaybe<ExpenseItemArrRelInsertInput>;
  expenses?: InputMaybe<ExpenseArrRelInsertInput>;
  favorites?: InputMaybe<FavoriteArrRelInsertInput>;
  fileUploads?: InputMaybe<FileUploadArrRelInsertInput>;
  finances?: InputMaybe<FinanceArrRelInsertInput>;
  follows?: InputMaybe<FollowArrRelInsertInput>;
  formSubmissions?: InputMaybe<FormSubmissionArrRelInsertInput>;
  forms?: InputMaybe<FormArrRelInsertInput>;
  grantAllocates?: InputMaybe<GrantAllocateArrRelInsertInput>;
  grants?: InputMaybe<GrantArrRelInsertInput>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individuals?: InputMaybe<IndividualArrRelInsertInput>;
  isOidcEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  issues?: InputMaybe<IssueArrRelInsertInput>;
  locations?: InputMaybe<LocationArrRelInsertInput>;
  missionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  missions?: InputMaybe<MissionArrRelInsertInput>;
  oidcCallbackUri?: InputMaybe<Scalars['String']['input']>;
  oidcClientId?: InputMaybe<Scalars['String']['input']>;
  oidcClientSecret?: InputMaybe<Scalars['String']['input']>;
  oidcDiscoveryUrl?: InputMaybe<Scalars['String']['input']>;
  oidcName?: InputMaybe<Scalars['String']['input']>;
  oidcScopes?: InputMaybe<Scalars['String']['input']>;
  pointName?: InputMaybe<Scalars['String']['input']>;
  poles?: InputMaybe<PoleArrRelInsertInput>;
  projects?: InputMaybe<ProjectArrRelInsertInput>;
  reactions?: InputMaybe<ReactionArrRelInsertInput>;
  reports?: InputMaybe<ReportArrRelInsertInput>;
  roles?: InputMaybe<RoleArrRelInsertInput>;
  sessions?: InputMaybe<SessionArrRelInsertInput>;
  shortcuts?: InputMaybe<ShortcutArrRelInsertInput>;
  socials?: InputMaybe<SocialArrRelInsertInput>;
  subjects?: InputMaybe<SubjectArrRelInsertInput>;
  tags?: InputMaybe<TagArrRelInsertInput>;
  teamHistories?: InputMaybe<TeamHistoryArrRelInsertInput>;
  teamJoins?: InputMaybe<TeamJoinArrRelInsertInput>;
  teamMembers?: InputMaybe<TeamMemberArrRelInsertInput>;
  teamMetrics?: InputMaybe<TeamMetricArrRelInsertInput>;
  teams?: InputMaybe<TeamArrRelInsertInput>;
  tenantOrganizes?: InputMaybe<TenantOrganizeArrRelInsertInput>;
  threads?: InputMaybe<ThreadArrRelInsertInput>;
  users?: InputMaybe<UserArrRelInsertInput>;
  validations?: InputMaybe<ValidationArrRelInsertInput>;
  views?: InputMaybe<ViewArrRelInsertInput>;
  votes?: InputMaybe<VoteArrRelInsertInput>;
};

export type TenantMaxFields = {
  __typename?: 'TenantMaxFields';
  adminTeamId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  eventValidationFormId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  oidcCallbackUri?: Maybe<Scalars['String']['output']>;
  oidcClientId?: Maybe<Scalars['String']['output']>;
  oidcClientSecret?: Maybe<Scalars['String']['output']>;
  oidcDiscoveryUrl?: Maybe<Scalars['String']['output']>;
  oidcName?: Maybe<Scalars['String']['output']>;
  oidcScopes?: Maybe<Scalars['String']['output']>;
  pointName?: Maybe<Scalars['String']['output']>;
};

export type TenantMaxOrderBy = {
  adminTeamId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  domain?: InputMaybe<OrderBy>;
  eventValidationFormId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  oidcCallbackUri?: InputMaybe<OrderBy>;
  oidcClientId?: InputMaybe<OrderBy>;
  oidcClientSecret?: InputMaybe<OrderBy>;
  oidcDiscoveryUrl?: InputMaybe<OrderBy>;
  oidcName?: InputMaybe<OrderBy>;
  oidcScopes?: InputMaybe<OrderBy>;
  pointName?: InputMaybe<OrderBy>;
};

export type TenantMinFields = {
  __typename?: 'TenantMinFields';
  adminTeamId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  eventValidationFormId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  oidcCallbackUri?: Maybe<Scalars['String']['output']>;
  oidcClientId?: Maybe<Scalars['String']['output']>;
  oidcClientSecret?: Maybe<Scalars['String']['output']>;
  oidcDiscoveryUrl?: Maybe<Scalars['String']['output']>;
  oidcName?: Maybe<Scalars['String']['output']>;
  oidcScopes?: Maybe<Scalars['String']['output']>;
  pointName?: Maybe<Scalars['String']['output']>;
};

export type TenantMinOrderBy = {
  adminTeamId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  domain?: InputMaybe<OrderBy>;
  eventValidationFormId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  oidcCallbackUri?: InputMaybe<OrderBy>;
  oidcClientId?: InputMaybe<OrderBy>;
  oidcClientSecret?: InputMaybe<OrderBy>;
  oidcDiscoveryUrl?: InputMaybe<OrderBy>;
  oidcName?: InputMaybe<OrderBy>;
  oidcScopes?: InputMaybe<OrderBy>;
  pointName?: InputMaybe<OrderBy>;
};

export type TenantMutationResponse = {
  __typename?: 'TenantMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Tenant>;
};

export type TenantObjRelInsertInput = {
  data: TenantInsertInput;
  onConflict?: InputMaybe<TenantOnConflict>;
};

export type TenantOnConflict = {
  constraint: TenantConstraint;
  updateColumns?: Array<TenantUpdateColumn>;
  where?: InputMaybe<TenantBoolExp>;
};

export type TenantOrderBy = {
  accountsAggregate?: InputMaybe<AccountAggregateOrderBy>;
  actionsAggregate?: InputMaybe<ActionAggregateOrderBy>;
  actorImagesAggregate?: InputMaybe<ActorImageAggregateOrderBy>;
  actorsAggregate?: InputMaybe<ActorAggregateOrderBy>;
  adminTeam?: InputMaybe<TeamOrderBy>;
  adminTeamId?: InputMaybe<OrderBy>;
  banksAggregate?: InputMaybe<BankAggregateOrderBy>;
  botsAggregate?: InputMaybe<BotAggregateOrderBy>;
  campusClustersAggregate?: InputMaybe<CampusClusterAggregateOrderBy>;
  campusesAggregate?: InputMaybe<CampusAggregateOrderBy>;
  canteenFoodsAggregate?: InputMaybe<CanteenFoodAggregateOrderBy>;
  canteenMenusAggregate?: InputMaybe<CanteenMenuAggregateOrderBy>;
  canteensAggregate?: InputMaybe<CanteenAggregateOrderBy>;
  classGroupTeachersAggregate?: InputMaybe<ClassGroupTeacherAggregateOrderBy>;
  classGroupsAggregate?: InputMaybe<ClassGroupAggregateOrderBy>;
  cohortsAggregate?: InputMaybe<CohortAggregateOrderBy>;
  contentsAggregate?: InputMaybe<ContentAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  documentsAggregate?: InputMaybe<DocumentAggregateOrderBy>;
  domain?: InputMaybe<OrderBy>;
  eventApprovalStepsAggregate?: InputMaybe<EventApprovalStepAggregateOrderBy>;
  eventApprovalsAggregate?: InputMaybe<EventApprovalAggregateOrderBy>;
  eventFavoritesAggregate?: InputMaybe<EventFavoriteAggregateOrderBy>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  eventOrganizesAggregate?: InputMaybe<EventOrganizeAggregateOrderBy>;
  eventSupervisorsAggregate?: InputMaybe<EventSupervisorAggregateOrderBy>;
  eventValidationForm?: InputMaybe<FormOrderBy>;
  eventValidationFormId?: InputMaybe<OrderBy>;
  eventsAggregate?: InputMaybe<EventAggregateOrderBy>;
  expenseItemsAggregate?: InputMaybe<ExpenseItemAggregateOrderBy>;
  expensesAggregate?: InputMaybe<ExpenseAggregateOrderBy>;
  favoritesAggregate?: InputMaybe<FavoriteAggregateOrderBy>;
  fileUploadsAggregate?: InputMaybe<FileUploadAggregateOrderBy>;
  financesAggregate?: InputMaybe<FinanceAggregateOrderBy>;
  followsAggregate?: InputMaybe<FollowAggregateOrderBy>;
  formSubmissionsAggregate?: InputMaybe<FormSubmissionAggregateOrderBy>;
  formsAggregate?: InputMaybe<FormAggregateOrderBy>;
  grantAllocatesAggregate?: InputMaybe<GrantAllocateAggregateOrderBy>;
  grantsAggregate?: InputMaybe<GrantAggregateOrderBy>;
  id?: InputMaybe<OrderBy>;
  individualsAggregate?: InputMaybe<IndividualAggregateOrderBy>;
  isOidcEnabled?: InputMaybe<OrderBy>;
  issuesAggregate?: InputMaybe<IssueAggregateOrderBy>;
  locationsAggregate?: InputMaybe<LocationAggregateOrderBy>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  missionsAggregate?: InputMaybe<MissionAggregateOrderBy>;
  oidcCallbackUri?: InputMaybe<OrderBy>;
  oidcClientId?: InputMaybe<OrderBy>;
  oidcClientSecret?: InputMaybe<OrderBy>;
  oidcDiscoveryUrl?: InputMaybe<OrderBy>;
  oidcName?: InputMaybe<OrderBy>;
  oidcScopes?: InputMaybe<OrderBy>;
  pointName?: InputMaybe<OrderBy>;
  polesAggregate?: InputMaybe<PoleAggregateOrderBy>;
  projectsAggregate?: InputMaybe<ProjectAggregateOrderBy>;
  reactionsAggregate?: InputMaybe<ReactionAggregateOrderBy>;
  reportsAggregate?: InputMaybe<ReportAggregateOrderBy>;
  rolesAggregate?: InputMaybe<RoleAggregateOrderBy>;
  sessionsAggregate?: InputMaybe<SessionAggregateOrderBy>;
  shortcutsAggregate?: InputMaybe<ShortcutAggregateOrderBy>;
  socialsAggregate?: InputMaybe<SocialAggregateOrderBy>;
  subjectsAggregate?: InputMaybe<SubjectAggregateOrderBy>;
  tagsAggregate?: InputMaybe<TagAggregateOrderBy>;
  teamHistoriesAggregate?: InputMaybe<TeamHistoryAggregateOrderBy>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateOrderBy>;
  teamMembersAggregate?: InputMaybe<TeamMemberAggregateOrderBy>;
  teamMetricsAggregate?: InputMaybe<TeamMetricAggregateOrderBy>;
  teamsAggregate?: InputMaybe<TeamAggregateOrderBy>;
  tenantOrganizesAggregate?: InputMaybe<TenantOrganizeAggregateOrderBy>;
  threadsAggregate?: InputMaybe<ThreadAggregateOrderBy>;
  usersAggregate?: InputMaybe<UserAggregateOrderBy>;
  validationsAggregate?: InputMaybe<ValidationAggregateOrderBy>;
  viewsAggregate?: InputMaybe<ViewAggregateOrderBy>;
  votesAggregate?: InputMaybe<VoteAggregateOrderBy>;
};

export type TenantOrganize = {
  __typename?: 'TenantOrganize';
  campusCluster: CampusCluster;
  campusClusterId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  individual?: Maybe<Individual>;
  team: Team;
  teamId: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
};

export type TenantOrganizeAggregate = {
  __typename?: 'TenantOrganizeAggregate';
  aggregate?: Maybe<TenantOrganizeAggregateFields>;
  nodes: Array<TenantOrganize>;
};

export type TenantOrganizeAggregateBoolExp = {
  count?: InputMaybe<TenantOrganizeAggregateBoolExpCount>;
};

export type TenantOrganizeAggregateFields = {
  __typename?: 'TenantOrganizeAggregateFields';
  avg?: Maybe<TenantOrganizeAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TenantOrganizeMaxFields>;
  min?: Maybe<TenantOrganizeMinFields>;
  stddev?: Maybe<TenantOrganizeStddevFields>;
  stddevPop?: Maybe<TenantOrganizeStddevPopFields>;
  stddevSamp?: Maybe<TenantOrganizeStddevSampFields>;
  sum?: Maybe<TenantOrganizeSumFields>;
  varPop?: Maybe<TenantOrganizeVarPopFields>;
  varSamp?: Maybe<TenantOrganizeVarSampFields>;
  variance?: Maybe<TenantOrganizeVarianceFields>;
};

export type TenantOrganizeAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TenantOrganizeSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TenantOrganizeAggregateOrderBy = {
  avg?: InputMaybe<TenantOrganizeAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TenantOrganizeMaxOrderBy>;
  min?: InputMaybe<TenantOrganizeMinOrderBy>;
  stddev?: InputMaybe<TenantOrganizeStddevOrderBy>;
  stddevPop?: InputMaybe<TenantOrganizeStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TenantOrganizeStddevSampOrderBy>;
  sum?: InputMaybe<TenantOrganizeSumOrderBy>;
  varPop?: InputMaybe<TenantOrganizeVarPopOrderBy>;
  varSamp?: InputMaybe<TenantOrganizeVarSampOrderBy>;
  variance?: InputMaybe<TenantOrganizeVarianceOrderBy>;
};

export type TenantOrganizeArrRelInsertInput = {
  data: Array<TenantOrganizeInsertInput>;
  onConflict?: InputMaybe<TenantOrganizeOnConflict>;
};

export type TenantOrganizeAvgFields = {
  __typename?: 'TenantOrganizeAvgFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TenantOrganizeAvgOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TenantOrganizeBoolExp = {
  _and?: InputMaybe<Array<TenantOrganizeBoolExp>>;
  _not?: InputMaybe<TenantOrganizeBoolExp>;
  _or?: InputMaybe<Array<TenantOrganizeBoolExp>>;
  campusCluster?: InputMaybe<CampusClusterBoolExp>;
  campusClusterId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  individual?: InputMaybe<IndividualBoolExp>;
  team?: InputMaybe<TeamBoolExp>;
  teamId?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
};

export enum TenantOrganizeConstraint {
  TenantOrganizePkey = 'tenant_organize_pkey',
}

export type TenantOrganizeIncInput = {
  campusClusterId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type TenantOrganizeInsertInput = {
  campusCluster?: InputMaybe<CampusClusterObjRelInsertInput>;
  campusClusterId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individual?: InputMaybe<IndividualObjRelInsertInput>;
  team?: InputMaybe<TeamObjRelInsertInput>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type TenantOrganizeMaxFields = {
  __typename?: 'TenantOrganizeMaxFields';
  campusClusterId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type TenantOrganizeMaxOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TenantOrganizeMinFields = {
  __typename?: 'TenantOrganizeMinFields';
  campusClusterId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type TenantOrganizeMinOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TenantOrganizeMutationResponse = {
  __typename?: 'TenantOrganizeMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<TenantOrganize>;
};

export type TenantOrganizeOnConflict = {
  constraint: TenantOrganizeConstraint;
  updateColumns?: Array<TenantOrganizeUpdateColumn>;
  where?: InputMaybe<TenantOrganizeBoolExp>;
};

export type TenantOrganizeOrderBy = {
  campusCluster?: InputMaybe<CampusClusterOrderBy>;
  campusClusterId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individual?: InputMaybe<IndividualOrderBy>;
  team?: InputMaybe<TeamOrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type TenantOrganizePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TenantOrganizeSelectColumn {
  CampusClusterId = 'campusClusterId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  Type = 'type',
}

export type TenantOrganizeSetInput = {
  campusClusterId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type TenantOrganizeStddevFields = {
  __typename?: 'TenantOrganizeStddevFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TenantOrganizeStddevOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TenantOrganizeStddevPopFields = {
  __typename?: 'TenantOrganizeStddevPopFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TenantOrganizeStddevPopOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TenantOrganizeStddevSampFields = {
  __typename?: 'TenantOrganizeStddevSampFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TenantOrganizeStddevSampOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TenantOrganizeStreamCursorInput = {
  initialValue: TenantOrganizeStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TenantOrganizeStreamCursorValueInput = {
  campusClusterId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  teamId?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type TenantOrganizeSumFields = {
  __typename?: 'TenantOrganizeSumFields';
  campusClusterId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  teamId?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type TenantOrganizeSumOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum TenantOrganizeUpdateColumn {
  CampusClusterId = 'campusClusterId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TeamId = 'teamId',
  TenantId = 'tenantId',
  Type = 'type',
}

export type TenantOrganizeUpdates = {
  _inc?: InputMaybe<TenantOrganizeIncInput>;
  _set?: InputMaybe<TenantOrganizeSetInput>;
  where: TenantOrganizeBoolExp;
};

export type TenantOrganizeVarPopFields = {
  __typename?: 'TenantOrganizeVarPopFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TenantOrganizeVarPopOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TenantOrganizeVarSampFields = {
  __typename?: 'TenantOrganizeVarSampFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TenantOrganizeVarSampOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TenantOrganizeVarianceFields = {
  __typename?: 'TenantOrganizeVarianceFields';
  campusClusterId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  teamId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type TenantOrganizeVarianceOrderBy = {
  campusClusterId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  teamId?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TenantPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum TenantSelectColumn {
  AdminTeamId = 'adminTeamId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Domain = 'domain',
  EventValidationFormId = 'eventValidationFormId',
  Id = 'id',
  IsOidcEnabled = 'isOidcEnabled',
  OidcCallbackUri = 'oidcCallbackUri',
  OidcClientId = 'oidcClientId',
  OidcClientSecret = 'oidcClientSecret',
  OidcDiscoveryUrl = 'oidcDiscoveryUrl',
  OidcName = 'oidcName',
  OidcScopes = 'oidcScopes',
  PointName = 'pointName',
}

export enum TenantSelectColumnTenantAggregateBoolExpBool_AndArgumentsColumns {
  IsOidcEnabled = 'isOidcEnabled',
}

export enum TenantSelectColumnTenantAggregateBoolExpBool_OrArgumentsColumns {
  IsOidcEnabled = 'isOidcEnabled',
}

export type TenantSetInput = {
  adminTeamId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  domain?: InputMaybe<Scalars['String']['input']>;
  eventValidationFormId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isOidcEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  oidcCallbackUri?: InputMaybe<Scalars['String']['input']>;
  oidcClientId?: InputMaybe<Scalars['String']['input']>;
  oidcClientSecret?: InputMaybe<Scalars['String']['input']>;
  oidcDiscoveryUrl?: InputMaybe<Scalars['String']['input']>;
  oidcName?: InputMaybe<Scalars['String']['input']>;
  oidcScopes?: InputMaybe<Scalars['String']['input']>;
  pointName?: InputMaybe<Scalars['String']['input']>;
};

export type TenantStddevFields = {
  __typename?: 'TenantStddevFields';
  adminTeamId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventValidationFormId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

export type TenantStddevOrderBy = {
  adminTeamId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventValidationFormId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
};

export type TenantStddevPopFields = {
  __typename?: 'TenantStddevPopFields';
  adminTeamId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventValidationFormId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

export type TenantStddevPopOrderBy = {
  adminTeamId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventValidationFormId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
};

export type TenantStddevSampFields = {
  __typename?: 'TenantStddevSampFields';
  adminTeamId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventValidationFormId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

export type TenantStddevSampOrderBy = {
  adminTeamId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventValidationFormId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
};

export type TenantStreamCursorInput = {
  initialValue: TenantStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type TenantStreamCursorValueInput = {
  adminTeamId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  domain?: InputMaybe<Scalars['String']['input']>;
  eventValidationFormId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isOidcEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  oidcCallbackUri?: InputMaybe<Scalars['String']['input']>;
  oidcClientId?: InputMaybe<Scalars['String']['input']>;
  oidcClientSecret?: InputMaybe<Scalars['String']['input']>;
  oidcDiscoveryUrl?: InputMaybe<Scalars['String']['input']>;
  oidcName?: InputMaybe<Scalars['String']['input']>;
  oidcScopes?: InputMaybe<Scalars['String']['input']>;
  pointName?: InputMaybe<Scalars['String']['input']>;
};

export type TenantSumFields = {
  __typename?: 'TenantSumFields';
  adminTeamId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  eventValidationFormId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
};

export type TenantSumOrderBy = {
  adminTeamId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventValidationFormId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
};

export enum TenantUpdateColumn {
  AdminTeamId = 'adminTeamId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  Domain = 'domain',
  EventValidationFormId = 'eventValidationFormId',
  Id = 'id',
  IsOidcEnabled = 'isOidcEnabled',
  OidcCallbackUri = 'oidcCallbackUri',
  OidcClientId = 'oidcClientId',
  OidcClientSecret = 'oidcClientSecret',
  OidcDiscoveryUrl = 'oidcDiscoveryUrl',
  OidcName = 'oidcName',
  OidcScopes = 'oidcScopes',
  PointName = 'pointName',
}

export type TenantUpdates = {
  _inc?: InputMaybe<TenantIncInput>;
  _set?: InputMaybe<TenantSetInput>;
  where: TenantBoolExp;
};

export type TenantVarPopFields = {
  __typename?: 'TenantVarPopFields';
  adminTeamId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventValidationFormId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

export type TenantVarPopOrderBy = {
  adminTeamId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventValidationFormId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
};

export type TenantVarSampFields = {
  __typename?: 'TenantVarSampFields';
  adminTeamId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventValidationFormId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

export type TenantVarSampOrderBy = {
  adminTeamId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventValidationFormId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
};

export type TenantVarianceFields = {
  __typename?: 'TenantVarianceFields';
  adminTeamId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  eventValidationFormId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

export type TenantVarianceOrderBy = {
  adminTeamId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  eventValidationFormId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
};

export type Thread = {
  __typename?: 'Thread';
  content: Content;
  contentId: Scalars['bigint']['output'];
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  threadContributors: Array<ThreadContributors>;
  threadContributorsAggregate: ThreadContributorsAggregate;
  threadTags: Array<ThreadTags>;
  threadTagsAggregate: ThreadTagsAggregate;
};

export type ThreadThreadContributorsArgs = {
  distinctOn?: InputMaybe<Array<ThreadContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadContributorsOrderBy>>;
  where?: InputMaybe<ThreadContributorsBoolExp>;
};

export type ThreadThreadContributorsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ThreadContributorsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadContributorsOrderBy>>;
  where?: InputMaybe<ThreadContributorsBoolExp>;
};

export type ThreadThreadTagsArgs = {
  distinctOn?: InputMaybe<Array<ThreadTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadTagsOrderBy>>;
  where?: InputMaybe<ThreadTagsBoolExp>;
};

export type ThreadThreadTagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ThreadTagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ThreadTagsOrderBy>>;
  where?: InputMaybe<ThreadTagsBoolExp>;
};

export type ThreadAggregate = {
  __typename?: 'ThreadAggregate';
  aggregate?: Maybe<ThreadAggregateFields>;
  nodes: Array<Thread>;
};

export type ThreadAggregateBoolExp = {
  count?: InputMaybe<ThreadAggregateBoolExpCount>;
};

export type ThreadAggregateFields = {
  __typename?: 'ThreadAggregateFields';
  avg?: Maybe<ThreadAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ThreadMaxFields>;
  min?: Maybe<ThreadMinFields>;
  stddev?: Maybe<ThreadStddevFields>;
  stddevPop?: Maybe<ThreadStddevPopFields>;
  stddevSamp?: Maybe<ThreadStddevSampFields>;
  sum?: Maybe<ThreadSumFields>;
  varPop?: Maybe<ThreadVarPopFields>;
  varSamp?: Maybe<ThreadVarSampFields>;
  variance?: Maybe<ThreadVarianceFields>;
};

export type ThreadAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ThreadSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ThreadAggregateOrderBy = {
  avg?: InputMaybe<ThreadAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ThreadMaxOrderBy>;
  min?: InputMaybe<ThreadMinOrderBy>;
  stddev?: InputMaybe<ThreadStddevOrderBy>;
  stddevPop?: InputMaybe<ThreadStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ThreadStddevSampOrderBy>;
  sum?: InputMaybe<ThreadSumOrderBy>;
  varPop?: InputMaybe<ThreadVarPopOrderBy>;
  varSamp?: InputMaybe<ThreadVarSampOrderBy>;
  variance?: InputMaybe<ThreadVarianceOrderBy>;
};

export type ThreadArrRelInsertInput = {
  data: Array<ThreadInsertInput>;
  onConflict?: InputMaybe<ThreadOnConflict>;
};

export type ThreadAvgFields = {
  __typename?: 'ThreadAvgFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadAvgOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ThreadBoolExp = {
  _and?: InputMaybe<Array<ThreadBoolExp>>;
  _not?: InputMaybe<ThreadBoolExp>;
  _or?: InputMaybe<Array<ThreadBoolExp>>;
  content?: InputMaybe<ContentBoolExp>;
  contentId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  slug?: InputMaybe<StringComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  threadContributors?: InputMaybe<ThreadContributorsBoolExp>;
  threadContributorsAggregate?: InputMaybe<ThreadContributorsAggregateBoolExp>;
  threadTags?: InputMaybe<ThreadTagsBoolExp>;
  threadTagsAggregate?: InputMaybe<ThreadTagsAggregateBoolExp>;
};

export enum ThreadConstraint {
  ThreadContentIdUnique = 'thread_content_id_unique',
  ThreadPkey = 'thread_pkey',
}

export type ThreadContributors = {
  __typename?: 'ThreadContributors';
  individual: Individual;
  individualId: Scalars['bigint']['output'];
  thread: Thread;
  threadId: Scalars['bigint']['output'];
};

export type ThreadContributorsAggregate = {
  __typename?: 'ThreadContributorsAggregate';
  aggregate?: Maybe<ThreadContributorsAggregateFields>;
  nodes: Array<ThreadContributors>;
};

export type ThreadContributorsAggregateBoolExp = {
  count?: InputMaybe<ThreadContributorsAggregateBoolExpCount>;
};

export type ThreadContributorsAggregateFields = {
  __typename?: 'ThreadContributorsAggregateFields';
  avg?: Maybe<ThreadContributorsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ThreadContributorsMaxFields>;
  min?: Maybe<ThreadContributorsMinFields>;
  stddev?: Maybe<ThreadContributorsStddevFields>;
  stddevPop?: Maybe<ThreadContributorsStddevPopFields>;
  stddevSamp?: Maybe<ThreadContributorsStddevSampFields>;
  sum?: Maybe<ThreadContributorsSumFields>;
  varPop?: Maybe<ThreadContributorsVarPopFields>;
  varSamp?: Maybe<ThreadContributorsVarSampFields>;
  variance?: Maybe<ThreadContributorsVarianceFields>;
};

export type ThreadContributorsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ThreadContributorsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ThreadContributorsAggregateOrderBy = {
  avg?: InputMaybe<ThreadContributorsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ThreadContributorsMaxOrderBy>;
  min?: InputMaybe<ThreadContributorsMinOrderBy>;
  stddev?: InputMaybe<ThreadContributorsStddevOrderBy>;
  stddevPop?: InputMaybe<ThreadContributorsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ThreadContributorsStddevSampOrderBy>;
  sum?: InputMaybe<ThreadContributorsSumOrderBy>;
  varPop?: InputMaybe<ThreadContributorsVarPopOrderBy>;
  varSamp?: InputMaybe<ThreadContributorsVarSampOrderBy>;
  variance?: InputMaybe<ThreadContributorsVarianceOrderBy>;
};

export type ThreadContributorsArrRelInsertInput = {
  data: Array<ThreadContributorsInsertInput>;
  onConflict?: InputMaybe<ThreadContributorsOnConflict>;
};

export type ThreadContributorsAvgFields = {
  __typename?: 'ThreadContributorsAvgFields';
  individualId?: Maybe<Scalars['Float']['output']>;
  threadId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadContributorsAvgOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadContributorsBoolExp = {
  _and?: InputMaybe<Array<ThreadContributorsBoolExp>>;
  _not?: InputMaybe<ThreadContributorsBoolExp>;
  _or?: InputMaybe<Array<ThreadContributorsBoolExp>>;
  individual?: InputMaybe<IndividualBoolExp>;
  individualId?: InputMaybe<BigintComparisonExp>;
  thread?: InputMaybe<ThreadBoolExp>;
  threadId?: InputMaybe<BigintComparisonExp>;
};

export enum ThreadContributorsConstraint {
  ThreadContributorsPkey = 'thread_contributors_pkey',
}

export type ThreadContributorsIncInput = {
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  threadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ThreadContributorsInsertInput = {
  individual?: InputMaybe<IndividualObjRelInsertInput>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  thread?: InputMaybe<ThreadObjRelInsertInput>;
  threadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ThreadContributorsMaxFields = {
  __typename?: 'ThreadContributorsMaxFields';
  individualId?: Maybe<Scalars['bigint']['output']>;
  threadId?: Maybe<Scalars['bigint']['output']>;
};

export type ThreadContributorsMaxOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadContributorsMinFields = {
  __typename?: 'ThreadContributorsMinFields';
  individualId?: Maybe<Scalars['bigint']['output']>;
  threadId?: Maybe<Scalars['bigint']['output']>;
};

export type ThreadContributorsMinOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadContributorsMutationResponse = {
  __typename?: 'ThreadContributorsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ThreadContributors>;
};

export type ThreadContributorsOnConflict = {
  constraint: ThreadContributorsConstraint;
  updateColumns?: Array<ThreadContributorsUpdateColumn>;
  where?: InputMaybe<ThreadContributorsBoolExp>;
};

export type ThreadContributorsOrderBy = {
  individual?: InputMaybe<IndividualOrderBy>;
  individualId?: InputMaybe<OrderBy>;
  thread?: InputMaybe<ThreadOrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadContributorsPkColumnsInput = {
  individualId: Scalars['bigint']['input'];
  threadId: Scalars['bigint']['input'];
};

export enum ThreadContributorsSelectColumn {
  IndividualId = 'individualId',
  ThreadId = 'threadId',
}

export type ThreadContributorsSetInput = {
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  threadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ThreadContributorsStddevFields = {
  __typename?: 'ThreadContributorsStddevFields';
  individualId?: Maybe<Scalars['Float']['output']>;
  threadId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadContributorsStddevOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadContributorsStddevPopFields = {
  __typename?: 'ThreadContributorsStddevPopFields';
  individualId?: Maybe<Scalars['Float']['output']>;
  threadId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadContributorsStddevPopOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadContributorsStddevSampFields = {
  __typename?: 'ThreadContributorsStddevSampFields';
  individualId?: Maybe<Scalars['Float']['output']>;
  threadId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadContributorsStddevSampOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadContributorsStreamCursorInput = {
  initialValue: ThreadContributorsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ThreadContributorsStreamCursorValueInput = {
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  threadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ThreadContributorsSumFields = {
  __typename?: 'ThreadContributorsSumFields';
  individualId?: Maybe<Scalars['bigint']['output']>;
  threadId?: Maybe<Scalars['bigint']['output']>;
};

export type ThreadContributorsSumOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export enum ThreadContributorsUpdateColumn {
  IndividualId = 'individualId',
  ThreadId = 'threadId',
}

export type ThreadContributorsUpdates = {
  _inc?: InputMaybe<ThreadContributorsIncInput>;
  _set?: InputMaybe<ThreadContributorsSetInput>;
  where: ThreadContributorsBoolExp;
};

export type ThreadContributorsVarPopFields = {
  __typename?: 'ThreadContributorsVarPopFields';
  individualId?: Maybe<Scalars['Float']['output']>;
  threadId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadContributorsVarPopOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadContributorsVarSampFields = {
  __typename?: 'ThreadContributorsVarSampFields';
  individualId?: Maybe<Scalars['Float']['output']>;
  threadId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadContributorsVarSampOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadContributorsVarianceFields = {
  __typename?: 'ThreadContributorsVarianceFields';
  individualId?: Maybe<Scalars['Float']['output']>;
  threadId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadContributorsVarianceOrderBy = {
  individualId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadIncInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ThreadInsertInput = {
  content?: InputMaybe<ContentObjRelInsertInput>;
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  threadContributors?: InputMaybe<ThreadContributorsArrRelInsertInput>;
  threadTags?: InputMaybe<ThreadTagsArrRelInsertInput>;
};

export type ThreadMaxFields = {
  __typename?: 'ThreadMaxFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ThreadMaxOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ThreadMinFields = {
  __typename?: 'ThreadMinFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ThreadMinOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ThreadMutationResponse = {
  __typename?: 'ThreadMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Thread>;
};

export type ThreadObjRelInsertInput = {
  data: ThreadInsertInput;
  onConflict?: InputMaybe<ThreadOnConflict>;
};

export type ThreadOnConflict = {
  constraint: ThreadConstraint;
  updateColumns?: Array<ThreadUpdateColumn>;
  where?: InputMaybe<ThreadBoolExp>;
};

export type ThreadOrderBy = {
  content?: InputMaybe<ContentOrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  slug?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  threadContributorsAggregate?: InputMaybe<ThreadContributorsAggregateOrderBy>;
  threadTagsAggregate?: InputMaybe<ThreadTagsAggregateOrderBy>;
};

export type ThreadPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ThreadSelectColumn {
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  Slug = 'slug',
  TenantId = 'tenantId',
}

export type ThreadSetInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ThreadStddevFields = {
  __typename?: 'ThreadStddevFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadStddevOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ThreadStddevPopFields = {
  __typename?: 'ThreadStddevPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadStddevPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ThreadStddevSampFields = {
  __typename?: 'ThreadStddevSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadStddevSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ThreadStreamCursorInput = {
  initialValue: ThreadStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ThreadStreamCursorValueInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ThreadSumFields = {
  __typename?: 'ThreadSumFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ThreadSumOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ThreadTags = {
  __typename?: 'ThreadTags';
  tag: Tag;
  tagId: Scalars['bigint']['output'];
  thread: Thread;
  threadId: Scalars['bigint']['output'];
};

export type ThreadTagsAggregate = {
  __typename?: 'ThreadTagsAggregate';
  aggregate?: Maybe<ThreadTagsAggregateFields>;
  nodes: Array<ThreadTags>;
};

export type ThreadTagsAggregateBoolExp = {
  count?: InputMaybe<ThreadTagsAggregateBoolExpCount>;
};

export type ThreadTagsAggregateFields = {
  __typename?: 'ThreadTagsAggregateFields';
  avg?: Maybe<ThreadTagsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ThreadTagsMaxFields>;
  min?: Maybe<ThreadTagsMinFields>;
  stddev?: Maybe<ThreadTagsStddevFields>;
  stddevPop?: Maybe<ThreadTagsStddevPopFields>;
  stddevSamp?: Maybe<ThreadTagsStddevSampFields>;
  sum?: Maybe<ThreadTagsSumFields>;
  varPop?: Maybe<ThreadTagsVarPopFields>;
  varSamp?: Maybe<ThreadTagsVarSampFields>;
  variance?: Maybe<ThreadTagsVarianceFields>;
};

export type ThreadTagsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ThreadTagsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ThreadTagsAggregateOrderBy = {
  avg?: InputMaybe<ThreadTagsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ThreadTagsMaxOrderBy>;
  min?: InputMaybe<ThreadTagsMinOrderBy>;
  stddev?: InputMaybe<ThreadTagsStddevOrderBy>;
  stddevPop?: InputMaybe<ThreadTagsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ThreadTagsStddevSampOrderBy>;
  sum?: InputMaybe<ThreadTagsSumOrderBy>;
  varPop?: InputMaybe<ThreadTagsVarPopOrderBy>;
  varSamp?: InputMaybe<ThreadTagsVarSampOrderBy>;
  variance?: InputMaybe<ThreadTagsVarianceOrderBy>;
};

export type ThreadTagsArrRelInsertInput = {
  data: Array<ThreadTagsInsertInput>;
  onConflict?: InputMaybe<ThreadTagsOnConflict>;
};

export type ThreadTagsAvgFields = {
  __typename?: 'ThreadTagsAvgFields';
  tagId?: Maybe<Scalars['Float']['output']>;
  threadId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadTagsAvgOrderBy = {
  tagId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadTagsBoolExp = {
  _and?: InputMaybe<Array<ThreadTagsBoolExp>>;
  _not?: InputMaybe<ThreadTagsBoolExp>;
  _or?: InputMaybe<Array<ThreadTagsBoolExp>>;
  tag?: InputMaybe<TagBoolExp>;
  tagId?: InputMaybe<BigintComparisonExp>;
  thread?: InputMaybe<ThreadBoolExp>;
  threadId?: InputMaybe<BigintComparisonExp>;
};

export enum ThreadTagsConstraint {
  ThreadTagsPkey = 'thread_tags_pkey',
}

export type ThreadTagsIncInput = {
  tagId?: InputMaybe<Scalars['bigint']['input']>;
  threadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ThreadTagsInsertInput = {
  tag?: InputMaybe<TagObjRelInsertInput>;
  tagId?: InputMaybe<Scalars['bigint']['input']>;
  thread?: InputMaybe<ThreadObjRelInsertInput>;
  threadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ThreadTagsMaxFields = {
  __typename?: 'ThreadTagsMaxFields';
  tagId?: Maybe<Scalars['bigint']['output']>;
  threadId?: Maybe<Scalars['bigint']['output']>;
};

export type ThreadTagsMaxOrderBy = {
  tagId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadTagsMinFields = {
  __typename?: 'ThreadTagsMinFields';
  tagId?: Maybe<Scalars['bigint']['output']>;
  threadId?: Maybe<Scalars['bigint']['output']>;
};

export type ThreadTagsMinOrderBy = {
  tagId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadTagsMutationResponse = {
  __typename?: 'ThreadTagsMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<ThreadTags>;
};

export type ThreadTagsOnConflict = {
  constraint: ThreadTagsConstraint;
  updateColumns?: Array<ThreadTagsUpdateColumn>;
  where?: InputMaybe<ThreadTagsBoolExp>;
};

export type ThreadTagsOrderBy = {
  tag?: InputMaybe<TagOrderBy>;
  tagId?: InputMaybe<OrderBy>;
  thread?: InputMaybe<ThreadOrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadTagsPkColumnsInput = {
  tagId: Scalars['bigint']['input'];
  threadId: Scalars['bigint']['input'];
};

export enum ThreadTagsSelectColumn {
  TagId = 'tagId',
  ThreadId = 'threadId',
}

export type ThreadTagsSetInput = {
  tagId?: InputMaybe<Scalars['bigint']['input']>;
  threadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ThreadTagsStddevFields = {
  __typename?: 'ThreadTagsStddevFields';
  tagId?: Maybe<Scalars['Float']['output']>;
  threadId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadTagsStddevOrderBy = {
  tagId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadTagsStddevPopFields = {
  __typename?: 'ThreadTagsStddevPopFields';
  tagId?: Maybe<Scalars['Float']['output']>;
  threadId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadTagsStddevPopOrderBy = {
  tagId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadTagsStddevSampFields = {
  __typename?: 'ThreadTagsStddevSampFields';
  tagId?: Maybe<Scalars['Float']['output']>;
  threadId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadTagsStddevSampOrderBy = {
  tagId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadTagsStreamCursorInput = {
  initialValue: ThreadTagsStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ThreadTagsStreamCursorValueInput = {
  tagId?: InputMaybe<Scalars['bigint']['input']>;
  threadId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ThreadTagsSumFields = {
  __typename?: 'ThreadTagsSumFields';
  tagId?: Maybe<Scalars['bigint']['output']>;
  threadId?: Maybe<Scalars['bigint']['output']>;
};

export type ThreadTagsSumOrderBy = {
  tagId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export enum ThreadTagsUpdateColumn {
  TagId = 'tagId',
  ThreadId = 'threadId',
}

export type ThreadTagsUpdates = {
  _inc?: InputMaybe<ThreadTagsIncInput>;
  _set?: InputMaybe<ThreadTagsSetInput>;
  where: ThreadTagsBoolExp;
};

export type ThreadTagsVarPopFields = {
  __typename?: 'ThreadTagsVarPopFields';
  tagId?: Maybe<Scalars['Float']['output']>;
  threadId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadTagsVarPopOrderBy = {
  tagId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadTagsVarSampFields = {
  __typename?: 'ThreadTagsVarSampFields';
  tagId?: Maybe<Scalars['Float']['output']>;
  threadId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadTagsVarSampOrderBy = {
  tagId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export type ThreadTagsVarianceFields = {
  __typename?: 'ThreadTagsVarianceFields';
  tagId?: Maybe<Scalars['Float']['output']>;
  threadId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadTagsVarianceOrderBy = {
  tagId?: InputMaybe<OrderBy>;
  threadId?: InputMaybe<OrderBy>;
};

export enum ThreadUpdateColumn {
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  Name = 'name',
  Slug = 'slug',
  TenantId = 'tenantId',
}

export type ThreadUpdates = {
  _inc?: InputMaybe<ThreadIncInput>;
  _set?: InputMaybe<ThreadSetInput>;
  where: ThreadBoolExp;
};

export type ThreadVarPopFields = {
  __typename?: 'ThreadVarPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadVarPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ThreadVarSampFields = {
  __typename?: 'ThreadVarSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadVarSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ThreadVarianceFields = {
  __typename?: 'ThreadVarianceFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ThreadVarianceOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type TimestamptzComparisonExp = {
  _eq?: InputMaybe<Scalars['timestamptz']['input']>;
  _gt?: InputMaybe<Scalars['timestamptz']['input']>;
  _gte?: InputMaybe<Scalars['timestamptz']['input']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['timestamptz']['input']>;
  _lte?: InputMaybe<Scalars['timestamptz']['input']>;
  _neq?: InputMaybe<Scalars['timestamptz']['input']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
};

export type User = {
  __typename?: 'User';
  actions: Array<Action>;
  actionsAggregate: ActionAggregate;
  classGroupTeachers: Array<ClassGroupTeacher>;
  classGroupTeachersAggregate: ClassGroupTeacherAggregate;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  eventJoins: Array<EventJoin>;
  eventJoinsAggregate: EventJoinAggregate;
  firstName: Scalars['String']['output'];
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  individual: Individual;
  individualId: Scalars['bigint']['output'];
  isDarkModePreferred: Scalars['Boolean']['output'];
  isDataAnonymizedOnDeactivation: Scalars['Boolean']['output'];
  isDataExportedOnDeactivation: Scalars['Boolean']['output'];
  isIntroductionFinished: Scalars['Boolean']['output'];
  isOnboardingFinished: Scalars['Boolean']['output'];
  lastName: Scalars['String']['output'];
  middleNames: Array<Scalars['String']['output']>;
  missionJoins: Array<MissionJoin>;
  missionJoinsAggregate: MissionJoinAggregate;
  points: Scalars['Float']['output'];
  sessions: Array<Session>;
  sessionsAggregate: SessionAggregate;
  shortcuts: Array<Shortcut>;
  shortcutsAggregate: ShortcutAggregate;
  supervisedEvents: Array<EventSupervisor>;
  supervisedEventsAggregate: EventSupervisorAggregate;
  teamJoins: Array<TeamJoin>;
  teamJoinsAggregate: TeamJoinAggregate;
  teamMembers: Array<TeamMember>;
  teamMembersAggregate: TeamMemberAggregate;
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type UserActionsArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type UserActionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ActionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ActionOrderBy>>;
  where?: InputMaybe<ActionBoolExp>;
};

export type UserClassGroupTeachersArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherBoolExp>;
};

export type UserClassGroupTeachersAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClassGroupTeacherSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClassGroupTeacherOrderBy>>;
  where?: InputMaybe<ClassGroupTeacherBoolExp>;
};

export type UserEventJoinsArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type UserEventJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventJoinOrderBy>>;
  where?: InputMaybe<EventJoinBoolExp>;
};

export type UserMissionJoinsArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type UserMissionJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<MissionJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MissionJoinOrderBy>>;
  where?: InputMaybe<MissionJoinBoolExp>;
};

export type UserSessionsArgs = {
  distinctOn?: InputMaybe<Array<SessionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SessionOrderBy>>;
  where?: InputMaybe<SessionBoolExp>;
};

export type UserSessionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SessionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SessionOrderBy>>;
  where?: InputMaybe<SessionBoolExp>;
};

export type UserShortcutsArgs = {
  distinctOn?: InputMaybe<Array<ShortcutSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ShortcutOrderBy>>;
  where?: InputMaybe<ShortcutBoolExp>;
};

export type UserShortcutsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ShortcutSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ShortcutOrderBy>>;
  where?: InputMaybe<ShortcutBoolExp>;
};

export type UserSupervisedEventsArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type UserSupervisedEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventSupervisorOrderBy>>;
  where?: InputMaybe<EventSupervisorBoolExp>;
};

export type UserTeamJoinsArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type UserTeamJoinsAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamJoinSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy>>;
  where?: InputMaybe<TeamJoinBoolExp>;
};

export type UserTeamMembersArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type UserTeamMembersAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamMemberSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamMemberOrderBy>>;
  where?: InputMaybe<TeamMemberBoolExp>;
};

export type UserAggregate = {
  __typename?: 'UserAggregate';
  aggregate?: Maybe<UserAggregateFields>;
  nodes: Array<User>;
};

export type UserAggregateBoolExp = {
  bool_and?: InputMaybe<UserAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<UserAggregateBoolExpBool_Or>;
  count?: InputMaybe<UserAggregateBoolExpCount>;
};

export type UserAggregateFields = {
  __typename?: 'UserAggregateFields';
  avg?: Maybe<UserAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<UserMaxFields>;
  min?: Maybe<UserMinFields>;
  stddev?: Maybe<UserStddevFields>;
  stddevPop?: Maybe<UserStddevPopFields>;
  stddevSamp?: Maybe<UserStddevSampFields>;
  sum?: Maybe<UserSumFields>;
  varPop?: Maybe<UserVarPopFields>;
  varSamp?: Maybe<UserVarSampFields>;
  variance?: Maybe<UserVarianceFields>;
};

export type UserAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<UserSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserAggregateOrderBy = {
  avg?: InputMaybe<UserAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<UserMaxOrderBy>;
  min?: InputMaybe<UserMinOrderBy>;
  stddev?: InputMaybe<UserStddevOrderBy>;
  stddevPop?: InputMaybe<UserStddevPopOrderBy>;
  stddevSamp?: InputMaybe<UserStddevSampOrderBy>;
  sum?: InputMaybe<UserSumOrderBy>;
  varPop?: InputMaybe<UserVarPopOrderBy>;
  varSamp?: InputMaybe<UserVarSampOrderBy>;
  variance?: InputMaybe<UserVarianceOrderBy>;
};

export type UserArrRelInsertInput = {
  data: Array<UserInsertInput>;
  onConflict?: InputMaybe<UserOnConflict>;
};

export type UserAvgFields = {
  __typename?: 'UserAvgFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type UserAvgOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type UserBoolExp = {
  _and?: InputMaybe<Array<UserBoolExp>>;
  _not?: InputMaybe<UserBoolExp>;
  _or?: InputMaybe<Array<UserBoolExp>>;
  actions?: InputMaybe<ActionBoolExp>;
  actionsAggregate?: InputMaybe<ActionAggregateBoolExp>;
  classGroupTeachers?: InputMaybe<ClassGroupTeacherBoolExp>;
  classGroupTeachersAggregate?: InputMaybe<ClassGroupTeacherAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  eventJoins?: InputMaybe<EventJoinBoolExp>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateBoolExp>;
  firstName?: InputMaybe<StringComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  individual?: InputMaybe<IndividualBoolExp>;
  individualId?: InputMaybe<BigintComparisonExp>;
  isDarkModePreferred?: InputMaybe<BooleanComparisonExp>;
  isDataAnonymizedOnDeactivation?: InputMaybe<BooleanComparisonExp>;
  isDataExportedOnDeactivation?: InputMaybe<BooleanComparisonExp>;
  isIntroductionFinished?: InputMaybe<BooleanComparisonExp>;
  isOnboardingFinished?: InputMaybe<BooleanComparisonExp>;
  lastName?: InputMaybe<StringComparisonExp>;
  middleNames?: InputMaybe<StringArrayComparisonExp>;
  missionJoins?: InputMaybe<MissionJoinBoolExp>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateBoolExp>;
  points?: InputMaybe<FloatComparisonExp>;
  sessions?: InputMaybe<SessionBoolExp>;
  sessionsAggregate?: InputMaybe<SessionAggregateBoolExp>;
  shortcuts?: InputMaybe<ShortcutBoolExp>;
  shortcutsAggregate?: InputMaybe<ShortcutAggregateBoolExp>;
  supervisedEvents?: InputMaybe<EventSupervisorBoolExp>;
  supervisedEventsAggregate?: InputMaybe<EventSupervisorAggregateBoolExp>;
  teamJoins?: InputMaybe<TeamJoinBoolExp>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateBoolExp>;
  teamMembers?: InputMaybe<TeamMemberBoolExp>;
  teamMembersAggregate?: InputMaybe<TeamMemberAggregateBoolExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum UserConstraint {
  UserIndividualIdUnique = 'user_individual_id_unique',
  UserPkey = 'user_pkey',
}

export type UserIncInput = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  points?: InputMaybe<Scalars['Float']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type UserInsertInput = {
  actions?: InputMaybe<ActionArrRelInsertInput>;
  classGroupTeachers?: InputMaybe<ClassGroupTeacherArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventJoins?: InputMaybe<EventJoinArrRelInsertInput>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individual?: InputMaybe<IndividualObjRelInsertInput>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  isDarkModePreferred?: InputMaybe<Scalars['Boolean']['input']>;
  isDataAnonymizedOnDeactivation?: InputMaybe<Scalars['Boolean']['input']>;
  isDataExportedOnDeactivation?: InputMaybe<Scalars['Boolean']['input']>;
  isIntroductionFinished?: InputMaybe<Scalars['Boolean']['input']>;
  isOnboardingFinished?: InputMaybe<Scalars['Boolean']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  middleNames?: InputMaybe<Array<Scalars['String']['input']>>;
  missionJoins?: InputMaybe<MissionJoinArrRelInsertInput>;
  points?: InputMaybe<Scalars['Float']['input']>;
  sessions?: InputMaybe<SessionArrRelInsertInput>;
  shortcuts?: InputMaybe<ShortcutArrRelInsertInput>;
  supervisedEvents?: InputMaybe<EventSupervisorArrRelInsertInput>;
  teamJoins?: InputMaybe<TeamJoinArrRelInsertInput>;
  teamMembers?: InputMaybe<TeamMemberArrRelInsertInput>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type UserLogin = {
  __typename?: 'UserLogin';
  canManageTenant: Scalars['Boolean']['output'];
  onboardingTeams: Array<Team>;
  user: User;
};

export type UserMaxFields = {
  __typename?: 'UserMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  individualId?: Maybe<Scalars['bigint']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  middleNames?: Maybe<Array<Scalars['String']['output']>>;
  points?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type UserMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  firstName?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  lastName?: InputMaybe<OrderBy>;
  middleNames?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type UserMinFields = {
  __typename?: 'UserMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  individualId?: Maybe<Scalars['bigint']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  middleNames?: Maybe<Array<Scalars['String']['output']>>;
  points?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type UserMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  firstName?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  lastName?: InputMaybe<OrderBy>;
  middleNames?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type UserMutationResponse = {
  __typename?: 'UserMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<User>;
};

export type UserObjRelInsertInput = {
  data: UserInsertInput;
  onConflict?: InputMaybe<UserOnConflict>;
};

export type UserOnConflict = {
  constraint: UserConstraint;
  updateColumns?: Array<UserUpdateColumn>;
  where?: InputMaybe<UserBoolExp>;
};

export type UserOrderBy = {
  actionsAggregate?: InputMaybe<ActionAggregateOrderBy>;
  classGroupTeachersAggregate?: InputMaybe<ClassGroupTeacherAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  eventJoinsAggregate?: InputMaybe<EventJoinAggregateOrderBy>;
  firstName?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individual?: InputMaybe<IndividualOrderBy>;
  individualId?: InputMaybe<OrderBy>;
  isDarkModePreferred?: InputMaybe<OrderBy>;
  isDataAnonymizedOnDeactivation?: InputMaybe<OrderBy>;
  isDataExportedOnDeactivation?: InputMaybe<OrderBy>;
  isIntroductionFinished?: InputMaybe<OrderBy>;
  isOnboardingFinished?: InputMaybe<OrderBy>;
  lastName?: InputMaybe<OrderBy>;
  middleNames?: InputMaybe<OrderBy>;
  missionJoinsAggregate?: InputMaybe<MissionJoinAggregateOrderBy>;
  points?: InputMaybe<OrderBy>;
  sessionsAggregate?: InputMaybe<SessionAggregateOrderBy>;
  shortcutsAggregate?: InputMaybe<ShortcutAggregateOrderBy>;
  supervisedEventsAggregate?: InputMaybe<EventSupervisorAggregateOrderBy>;
  teamJoinsAggregate?: InputMaybe<TeamJoinAggregateOrderBy>;
  teamMembersAggregate?: InputMaybe<TeamMemberAggregateOrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type UserPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum UserSelectColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FirstName = 'firstName',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IndividualId = 'individualId',
  IsDarkModePreferred = 'isDarkModePreferred',
  IsDataAnonymizedOnDeactivation = 'isDataAnonymizedOnDeactivation',
  IsDataExportedOnDeactivation = 'isDataExportedOnDeactivation',
  IsIntroductionFinished = 'isIntroductionFinished',
  IsOnboardingFinished = 'isOnboardingFinished',
  LastName = 'lastName',
  MiddleNames = 'middleNames',
  Points = 'points',
  TenantId = 'tenantId',
}

export enum UserSelectColumnUserAggregateBoolExpBool_AndArgumentsColumns {
  IsDarkModePreferred = 'isDarkModePreferred',
  IsDataAnonymizedOnDeactivation = 'isDataAnonymizedOnDeactivation',
  IsDataExportedOnDeactivation = 'isDataExportedOnDeactivation',
  IsIntroductionFinished = 'isIntroductionFinished',
  IsOnboardingFinished = 'isOnboardingFinished',
}

export enum UserSelectColumnUserAggregateBoolExpBool_OrArgumentsColumns {
  IsDarkModePreferred = 'isDarkModePreferred',
  IsDataAnonymizedOnDeactivation = 'isDataAnonymizedOnDeactivation',
  IsDataExportedOnDeactivation = 'isDataExportedOnDeactivation',
  IsIntroductionFinished = 'isIntroductionFinished',
  IsOnboardingFinished = 'isOnboardingFinished',
}

export type UserSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  isDarkModePreferred?: InputMaybe<Scalars['Boolean']['input']>;
  isDataAnonymizedOnDeactivation?: InputMaybe<Scalars['Boolean']['input']>;
  isDataExportedOnDeactivation?: InputMaybe<Scalars['Boolean']['input']>;
  isIntroductionFinished?: InputMaybe<Scalars['Boolean']['input']>;
  isOnboardingFinished?: InputMaybe<Scalars['Boolean']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  middleNames?: InputMaybe<Array<Scalars['String']['input']>>;
  points?: InputMaybe<Scalars['Float']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type UserStddevFields = {
  __typename?: 'UserStddevFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type UserStddevOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type UserStddevPopFields = {
  __typename?: 'UserStddevPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type UserStddevPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type UserStddevSampFields = {
  __typename?: 'UserStddevSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type UserStddevSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type UserStreamCursorInput = {
  initialValue: UserStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type UserStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  individualId?: InputMaybe<Scalars['bigint']['input']>;
  isDarkModePreferred?: InputMaybe<Scalars['Boolean']['input']>;
  isDataAnonymizedOnDeactivation?: InputMaybe<Scalars['Boolean']['input']>;
  isDataExportedOnDeactivation?: InputMaybe<Scalars['Boolean']['input']>;
  isIntroductionFinished?: InputMaybe<Scalars['Boolean']['input']>;
  isOnboardingFinished?: InputMaybe<Scalars['Boolean']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  middleNames?: InputMaybe<Array<Scalars['String']['input']>>;
  points?: InputMaybe<Scalars['Float']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type UserSumFields = {
  __typename?: 'UserSumFields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  individualId?: Maybe<Scalars['bigint']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type UserSumOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum UserUpdateColumn {
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  FirstName = 'firstName',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  IndividualId = 'individualId',
  IsDarkModePreferred = 'isDarkModePreferred',
  IsDataAnonymizedOnDeactivation = 'isDataAnonymizedOnDeactivation',
  IsDataExportedOnDeactivation = 'isDataExportedOnDeactivation',
  IsIntroductionFinished = 'isIntroductionFinished',
  IsOnboardingFinished = 'isOnboardingFinished',
  LastName = 'lastName',
  MiddleNames = 'middleNames',
  Points = 'points',
  TenantId = 'tenantId',
}

export type UserUpdates = {
  _inc?: InputMaybe<UserIncInput>;
  _set?: InputMaybe<UserSetInput>;
  where: UserBoolExp;
};

export type UserVarPopFields = {
  __typename?: 'UserVarPopFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type UserVarPopOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type UserVarSampFields = {
  __typename?: 'UserVarSampFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type UserVarSampOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type UserVarianceFields = {
  __typename?: 'UserVarianceFields';
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  individualId?: Maybe<Scalars['Float']['output']>;
  points?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type UserVarianceOrderBy = {
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  individualId?: InputMaybe<OrderBy>;
  points?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Validation = {
  __typename?: 'Validation';
  content?: Maybe<Content>;
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  type: Scalars['String']['output'];
};

export type ValidationAggregate = {
  __typename?: 'ValidationAggregate';
  aggregate?: Maybe<ValidationAggregateFields>;
  nodes: Array<Validation>;
};

export type ValidationAggregateBoolExp = {
  count?: InputMaybe<ValidationAggregateBoolExpCount>;
};

export type ValidationAggregateFields = {
  __typename?: 'ValidationAggregateFields';
  avg?: Maybe<ValidationAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ValidationMaxFields>;
  min?: Maybe<ValidationMinFields>;
  stddev?: Maybe<ValidationStddevFields>;
  stddevPop?: Maybe<ValidationStddevPopFields>;
  stddevSamp?: Maybe<ValidationStddevSampFields>;
  sum?: Maybe<ValidationSumFields>;
  varPop?: Maybe<ValidationVarPopFields>;
  varSamp?: Maybe<ValidationVarSampFields>;
  variance?: Maybe<ValidationVarianceFields>;
};

export type ValidationAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ValidationSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ValidationAggregateOrderBy = {
  avg?: InputMaybe<ValidationAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ValidationMaxOrderBy>;
  min?: InputMaybe<ValidationMinOrderBy>;
  stddev?: InputMaybe<ValidationStddevOrderBy>;
  stddevPop?: InputMaybe<ValidationStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ValidationStddevSampOrderBy>;
  sum?: InputMaybe<ValidationSumOrderBy>;
  varPop?: InputMaybe<ValidationVarPopOrderBy>;
  varSamp?: InputMaybe<ValidationVarSampOrderBy>;
  variance?: InputMaybe<ValidationVarianceOrderBy>;
};

export type ValidationArrRelInsertInput = {
  data: Array<ValidationInsertInput>;
  onConflict?: InputMaybe<ValidationOnConflict>;
};

export type ValidationAvgFields = {
  __typename?: 'ValidationAvgFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ValidationAvgOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ValidationBoolExp = {
  _and?: InputMaybe<Array<ValidationBoolExp>>;
  _not?: InputMaybe<ValidationBoolExp>;
  _or?: InputMaybe<Array<ValidationBoolExp>>;
  content?: InputMaybe<ContentBoolExp>;
  contentId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  type?: InputMaybe<StringComparisonExp>;
};

export enum ValidationConstraint {
  ValidationPkey = 'validation_pkey',
}

export type ValidationIncInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ValidationInsertInput = {
  content?: InputMaybe<ContentObjRelInsertInput>;
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ValidationMaxFields = {
  __typename?: 'ValidationMaxFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ValidationMaxOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ValidationMinFields = {
  __typename?: 'ValidationMinFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type ValidationMinOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ValidationMutationResponse = {
  __typename?: 'ValidationMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Validation>;
};

export type ValidationOnConflict = {
  constraint: ValidationConstraint;
  updateColumns?: Array<ValidationUpdateColumn>;
  where?: InputMaybe<ValidationBoolExp>;
};

export type ValidationOrderBy = {
  content?: InputMaybe<ContentOrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ValidationPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ValidationSelectColumn {
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
  Type = 'type',
}

export type ValidationSetInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ValidationStddevFields = {
  __typename?: 'ValidationStddevFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ValidationStddevOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ValidationStddevPopFields = {
  __typename?: 'ValidationStddevPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ValidationStddevPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ValidationStddevSampFields = {
  __typename?: 'ValidationStddevSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ValidationStddevSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ValidationStreamCursorInput = {
  initialValue: ValidationStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ValidationStreamCursorValueInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ValidationSumFields = {
  __typename?: 'ValidationSumFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ValidationSumOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum ValidationUpdateColumn {
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
  Type = 'type',
}

export type ValidationUpdates = {
  _inc?: InputMaybe<ValidationIncInput>;
  _set?: InputMaybe<ValidationSetInput>;
  where: ValidationBoolExp;
};

export type ValidationVarPopFields = {
  __typename?: 'ValidationVarPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ValidationVarPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ValidationVarSampFields = {
  __typename?: 'ValidationVarSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ValidationVarSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ValidationVarianceFields = {
  __typename?: 'ValidationVarianceFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ValidationVarianceOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type View = {
  __typename?: 'View';
  content?: Maybe<Content>;
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
};

export type ViewAggregate = {
  __typename?: 'ViewAggregate';
  aggregate?: Maybe<ViewAggregateFields>;
  nodes: Array<View>;
};

export type ViewAggregateBoolExp = {
  count?: InputMaybe<ViewAggregateBoolExpCount>;
};

export type ViewAggregateFields = {
  __typename?: 'ViewAggregateFields';
  avg?: Maybe<ViewAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ViewMaxFields>;
  min?: Maybe<ViewMinFields>;
  stddev?: Maybe<ViewStddevFields>;
  stddevPop?: Maybe<ViewStddevPopFields>;
  stddevSamp?: Maybe<ViewStddevSampFields>;
  sum?: Maybe<ViewSumFields>;
  varPop?: Maybe<ViewVarPopFields>;
  varSamp?: Maybe<ViewVarSampFields>;
  variance?: Maybe<ViewVarianceFields>;
};

export type ViewAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ViewSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ViewAggregateOrderBy = {
  avg?: InputMaybe<ViewAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ViewMaxOrderBy>;
  min?: InputMaybe<ViewMinOrderBy>;
  stddev?: InputMaybe<ViewStddevOrderBy>;
  stddevPop?: InputMaybe<ViewStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ViewStddevSampOrderBy>;
  sum?: InputMaybe<ViewSumOrderBy>;
  varPop?: InputMaybe<ViewVarPopOrderBy>;
  varSamp?: InputMaybe<ViewVarSampOrderBy>;
  variance?: InputMaybe<ViewVarianceOrderBy>;
};

export type ViewArrRelInsertInput = {
  data: Array<ViewInsertInput>;
  onConflict?: InputMaybe<ViewOnConflict>;
};

export type ViewAvgFields = {
  __typename?: 'ViewAvgFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ViewAvgOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ViewBoolExp = {
  _and?: InputMaybe<Array<ViewBoolExp>>;
  _not?: InputMaybe<ViewBoolExp>;
  _or?: InputMaybe<Array<ViewBoolExp>>;
  content?: InputMaybe<ContentBoolExp>;
  contentId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
};

export enum ViewConstraint {
  ViewPkey = 'view_pkey',
}

export type ViewIncInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ViewInsertInput = {
  content?: InputMaybe<ContentObjRelInsertInput>;
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ViewMaxFields = {
  __typename?: 'ViewMaxFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ViewMaxOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ViewMinFields = {
  __typename?: 'ViewMinFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ViewMinOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ViewMutationResponse = {
  __typename?: 'ViewMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<View>;
};

export type ViewOnConflict = {
  constraint: ViewConstraint;
  updateColumns?: Array<ViewUpdateColumn>;
  where?: InputMaybe<ViewBoolExp>;
};

export type ViewOrderBy = {
  content?: InputMaybe<ContentOrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ViewPkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum ViewSelectColumn {
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
}

export type ViewSetInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ViewStddevFields = {
  __typename?: 'ViewStddevFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ViewStddevOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ViewStddevPopFields = {
  __typename?: 'ViewStddevPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ViewStddevPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ViewStddevSampFields = {
  __typename?: 'ViewStddevSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ViewStddevSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ViewStreamCursorInput = {
  initialValue: ViewStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type ViewStreamCursorValueInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
};

export type ViewSumFields = {
  __typename?: 'ViewSumFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
};

export type ViewSumOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export enum ViewUpdateColumn {
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
}

export type ViewUpdates = {
  _inc?: InputMaybe<ViewIncInput>;
  _set?: InputMaybe<ViewSetInput>;
  where: ViewBoolExp;
};

export type ViewVarPopFields = {
  __typename?: 'ViewVarPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ViewVarPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ViewVarSampFields = {
  __typename?: 'ViewVarSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ViewVarSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type ViewVarianceFields = {
  __typename?: 'ViewVarianceFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

export type ViewVarianceOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
};

export type Vote = {
  __typename?: 'Vote';
  content?: Maybe<Content>;
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Individual>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['bigint']['output'];
  tenant: Tenant;
  tenantId: Scalars['bigint']['output'];
  value: Scalars['smallint']['output'];
};

export type VoteAggregate = {
  __typename?: 'VoteAggregate';
  aggregate?: Maybe<VoteAggregateFields>;
  nodes: Array<Vote>;
};

export type VoteAggregateBoolExp = {
  count?: InputMaybe<VoteAggregateBoolExpCount>;
};

export type VoteAggregateFields = {
  __typename?: 'VoteAggregateFields';
  avg?: Maybe<VoteAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<VoteMaxFields>;
  min?: Maybe<VoteMinFields>;
  stddev?: Maybe<VoteStddevFields>;
  stddevPop?: Maybe<VoteStddevPopFields>;
  stddevSamp?: Maybe<VoteStddevSampFields>;
  sum?: Maybe<VoteSumFields>;
  varPop?: Maybe<VoteVarPopFields>;
  varSamp?: Maybe<VoteVarSampFields>;
  variance?: Maybe<VoteVarianceFields>;
};

export type VoteAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<VoteSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

export type VoteAggregateOrderBy = {
  avg?: InputMaybe<VoteAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<VoteMaxOrderBy>;
  min?: InputMaybe<VoteMinOrderBy>;
  stddev?: InputMaybe<VoteStddevOrderBy>;
  stddevPop?: InputMaybe<VoteStddevPopOrderBy>;
  stddevSamp?: InputMaybe<VoteStddevSampOrderBy>;
  sum?: InputMaybe<VoteSumOrderBy>;
  varPop?: InputMaybe<VoteVarPopOrderBy>;
  varSamp?: InputMaybe<VoteVarSampOrderBy>;
  variance?: InputMaybe<VoteVarianceOrderBy>;
};

export type VoteArrRelInsertInput = {
  data: Array<VoteInsertInput>;
  onConflict?: InputMaybe<VoteOnConflict>;
};

export type VoteAvgFields = {
  __typename?: 'VoteAvgFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

export type VoteAvgOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export type VoteBoolExp = {
  _and?: InputMaybe<Array<VoteBoolExp>>;
  _not?: InputMaybe<VoteBoolExp>;
  _or?: InputMaybe<Array<VoteBoolExp>>;
  content?: InputMaybe<ContentBoolExp>;
  contentId?: InputMaybe<BigintComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<IndividualBoolExp>;
  createdById?: InputMaybe<BigintComparisonExp>;
  deletedAt?: InputMaybe<TimestamptzComparisonExp>;
  hiddenAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<BigintComparisonExp>;
  tenant?: InputMaybe<TenantBoolExp>;
  tenantId?: InputMaybe<BigintComparisonExp>;
  value?: InputMaybe<SmallintComparisonExp>;
};

export enum VoteConstraint {
  VotePkey = 'vote_pkey',
}

export type VoteIncInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  value?: InputMaybe<Scalars['smallint']['input']>;
};

export type VoteInsertInput = {
  content?: InputMaybe<ContentObjRelInsertInput>;
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<IndividualObjRelInsertInput>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenant?: InputMaybe<TenantObjRelInsertInput>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  value?: InputMaybe<Scalars['smallint']['input']>;
};

export type VoteMaxFields = {
  __typename?: 'VoteMaxFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  value?: Maybe<Scalars['smallint']['output']>;
};

export type VoteMaxOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export type VoteMinFields = {
  __typename?: 'VoteMinFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  deletedAt?: Maybe<Scalars['timestamptz']['output']>;
  hiddenAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  value?: Maybe<Scalars['smallint']['output']>;
};

export type VoteMinOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export type VoteMutationResponse = {
  __typename?: 'VoteMutationResponse';
  affectedRows: Scalars['Int']['output'];
  returning: Array<Vote>;
};

export type VoteOnConflict = {
  constraint: VoteConstraint;
  updateColumns?: Array<VoteUpdateColumn>;
  where?: InputMaybe<VoteBoolExp>;
};

export type VoteOrderBy = {
  content?: InputMaybe<ContentOrderBy>;
  contentId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<IndividualOrderBy>;
  createdById?: InputMaybe<OrderBy>;
  deletedAt?: InputMaybe<OrderBy>;
  hiddenAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenant?: InputMaybe<TenantOrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export type VotePkColumnsInput = {
  id: Scalars['bigint']['input'];
};

export enum VoteSelectColumn {
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
  Value = 'value',
}

export type VoteSetInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  value?: InputMaybe<Scalars['smallint']['input']>;
};

export type VoteStddevFields = {
  __typename?: 'VoteStddevFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

export type VoteStddevOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export type VoteStddevPopFields = {
  __typename?: 'VoteStddevPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

export type VoteStddevPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export type VoteStddevSampFields = {
  __typename?: 'VoteStddevSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

export type VoteStddevSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export type VoteStreamCursorInput = {
  initialValue: VoteStreamCursorValueInput;
  ordering?: InputMaybe<CursorOrdering>;
};

export type VoteStreamCursorValueInput = {
  contentId?: InputMaybe<Scalars['bigint']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  deletedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hiddenAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['bigint']['input']>;
  value?: InputMaybe<Scalars['smallint']['input']>;
};

export type VoteSumFields = {
  __typename?: 'VoteSumFields';
  contentId?: Maybe<Scalars['bigint']['output']>;
  createdById?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['bigint']['output']>;
  value?: Maybe<Scalars['smallint']['output']>;
};

export type VoteSumOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export enum VoteUpdateColumn {
  ContentId = 'contentId',
  CreatedAt = 'createdAt',
  CreatedById = 'createdById',
  DeletedAt = 'deletedAt',
  HiddenAt = 'hiddenAt',
  Id = 'id',
  TenantId = 'tenantId',
  Value = 'value',
}

export type VoteUpdates = {
  _inc?: InputMaybe<VoteIncInput>;
  _set?: InputMaybe<VoteSetInput>;
  where: VoteBoolExp;
};

export type VoteVarPopFields = {
  __typename?: 'VoteVarPopFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

export type VoteVarPopOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export type VoteVarSampFields = {
  __typename?: 'VoteVarSampFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

export type VoteVarSampOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export type VoteVarianceFields = {
  __typename?: 'VoteVarianceFields';
  contentId?: Maybe<Scalars['Float']['output']>;
  createdById?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

export type VoteVarianceOrderBy = {
  contentId?: InputMaybe<OrderBy>;
  createdById?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  tenantId?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export type AccountAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<AccountSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<AccountBoolExp>;
  predicate: IntComparisonExp;
};

export type ActionAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ActionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ActionBoolExp>;
  predicate: IntComparisonExp;
};

export type ActorAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ActorSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ActorBoolExp>;
  predicate: IntComparisonExp;
};

export type ActorImageAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ActorImageSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ActorImageBoolExp>;
  predicate: IntComparisonExp;
};

export type ActorTagsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ActorTagsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ActorTagsBoolExp>;
  predicate: IntComparisonExp;
};

export type AddressAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<AddressSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<AddressBoolExp>;
  predicate: IntComparisonExp;
};

export type BankAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<BankSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<BankBoolExp>;
  predicate: IntComparisonExp;
};

export type BotAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<BotSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<BotBoolExp>;
  predicate: IntComparisonExp;
};

export type CampusAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<CampusSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<CampusBoolExp>;
  predicate: IntComparisonExp;
};

export type CampusClusterAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<CampusClusterSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<CampusClusterBoolExp>;
  predicate: IntComparisonExp;
};

export type CanteenAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<CanteenSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<CanteenBoolExp>;
  predicate: IntComparisonExp;
};

export type CanteenFoodAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<CanteenFoodSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<CanteenFoodBoolExp>;
  predicate: IntComparisonExp;
};

export type CanteenMenuAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<CanteenMenuSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<CanteenMenuBoolExp>;
  predicate: IntComparisonExp;
};

export type ClassGroupAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ClassGroupSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClassGroupBoolExp>;
  predicate: IntComparisonExp;
};

export type ClassGroupTeacherAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ClassGroupTeacherSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClassGroupTeacherBoolExp>;
  predicate: IntComparisonExp;
};

export type ClassGroupTeacherSubjectsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ClassGroupTeacherSubjectsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClassGroupTeacherSubjectsBoolExp>;
  predicate: IntComparisonExp;
};

export type CohortAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<CohortSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<CohortBoolExp>;
  predicate: IntComparisonExp;
};

export type ContentAggregateBoolExpBool_And = {
  arguments: ContentSelectColumnContentAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ContentBoolExp>;
  predicate: BooleanComparisonExp;
};

export type ContentAggregateBoolExpBool_Or = {
  arguments: ContentSelectColumnContentAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ContentBoolExp>;
  predicate: BooleanComparisonExp;
};

export type ContentAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ContentSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ContentBoolExp>;
  predicate: IntComparisonExp;
};

export type ContentAttachmentsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ContentAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ContentAttachmentsBoolExp>;
  predicate: IntComparisonExp;
};

export type DocumentAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<DocumentSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<DocumentBoolExp>;
  predicate: IntComparisonExp;
};

export type EventAggregateBoolExpBool_And = {
  arguments: EventSelectColumnEventAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EventAggregateBoolExpBool_Or = {
  arguments: EventSelectColumnEventAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EventAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventBoolExp>;
  predicate: IntComparisonExp;
};

export type EventApprovalAggregateBoolExpBool_And = {
  arguments: EventApprovalSelectColumnEventApprovalAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventApprovalBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EventApprovalAggregateBoolExpBool_Or = {
  arguments: EventApprovalSelectColumnEventApprovalAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventApprovalBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EventApprovalAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventApprovalSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventApprovalBoolExp>;
  predicate: IntComparisonExp;
};

export type EventApprovalStepAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventApprovalStepSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventApprovalStepBoolExp>;
  predicate: IntComparisonExp;
};

export type EventApprovalStepNotifieesAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventApprovalStepNotifieesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventApprovalStepNotifieesBoolExp>;
  predicate: IntComparisonExp;
};

export type EventApprovalStepValidatorsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventApprovalStepValidatorsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventApprovalStepValidatorsBoolExp>;
  predicate: IntComparisonExp;
};

export type EventFavoriteAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventFavoriteSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventFavoriteBoolExp>;
  predicate: IntComparisonExp;
};

export type EventJoinAggregateBoolExpBool_And = {
  arguments: EventJoinSelectColumnEventJoinAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventJoinBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EventJoinAggregateBoolExpBool_Or = {
  arguments: EventJoinSelectColumnEventJoinAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventJoinBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EventJoinAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventJoinSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventJoinBoolExp>;
  predicate: IntComparisonExp;
};

export type EventOrganizeAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventOrganizeSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventOrganizeBoolExp>;
  predicate: IntComparisonExp;
};

export type EventSupervisorAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventSupervisorSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventSupervisorBoolExp>;
  predicate: IntComparisonExp;
};

export type EventTagsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EventTagsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventTagsBoolExp>;
  predicate: IntComparisonExp;
};

export type ExpenseAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ExpenseSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ExpenseBoolExp>;
  predicate: IntComparisonExp;
};

export type ExpenseItemAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ExpenseItemSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ExpenseItemBoolExp>;
  predicate: IntComparisonExp;
};

export type ExpenseItemAttachmentsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ExpenseItemAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ExpenseItemAttachmentsBoolExp>;
  predicate: IntComparisonExp;
};

export type FavoriteAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<FavoriteSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FavoriteBoolExp>;
  predicate: IntComparisonExp;
};

export type FileUploadAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<FileUploadSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FileUploadBoolExp>;
  predicate: IntComparisonExp;
};

export type FinanceAggregateBoolExpBool_And = {
  arguments: FinanceSelectColumnFinanceAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FinanceBoolExp>;
  predicate: BooleanComparisonExp;
};

export type FinanceAggregateBoolExpBool_Or = {
  arguments: FinanceSelectColumnFinanceAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FinanceBoolExp>;
  predicate: BooleanComparisonExp;
};

export type FinanceAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<FinanceSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FinanceBoolExp>;
  predicate: IntComparisonExp;
};

export type FinanceAttachmentsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<FinanceAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FinanceAttachmentsBoolExp>;
  predicate: IntComparisonExp;
};

export type FinanceTagsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<FinanceTagsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FinanceTagsBoolExp>;
  predicate: IntComparisonExp;
};

export type FollowAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<FollowSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FollowBoolExp>;
  predicate: IntComparisonExp;
};

export type FormAggregateBoolExpBool_And = {
  arguments: FormSelectColumnFormAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FormBoolExp>;
  predicate: BooleanComparisonExp;
};

export type FormAggregateBoolExpBool_Or = {
  arguments: FormSelectColumnFormAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FormBoolExp>;
  predicate: BooleanComparisonExp;
};

export type FormAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<FormSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FormBoolExp>;
  predicate: IntComparisonExp;
};

export type FormSubmissionAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<FormSubmissionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FormSubmissionBoolExp>;
  predicate: IntComparisonExp;
};

export type FormSubmissionAttachmentsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<FormSubmissionAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FormSubmissionAttachmentsBoolExp>;
  predicate: IntComparisonExp;
};

export type GrantAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<GrantSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<GrantBoolExp>;
  predicate: IntComparisonExp;
};

export type GrantAllocateAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<GrantAllocateSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<GrantAllocateBoolExp>;
  predicate: IntComparisonExp;
};

export type GrantAllocateAttachmentsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<GrantAllocateAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<GrantAllocateAttachmentsBoolExp>;
  predicate: IntComparisonExp;
};

export type GrantAttachmentsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<GrantAttachmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<GrantAttachmentsBoolExp>;
  predicate: IntComparisonExp;
};

export type IndividualAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<IndividualSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<IndividualBoolExp>;
  predicate: IntComparisonExp;
};

export type IssueAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<IssueSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<IssueBoolExp>;
  predicate: IntComparisonExp;
};

export type IssueContributorsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<IssueContributorsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<IssueContributorsBoolExp>;
  predicate: IntComparisonExp;
};

export type IssueTagsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<IssueTagsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<IssueTagsBoolExp>;
  predicate: IntComparisonExp;
};

export type LegalUnitAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<LegalUnitSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<LegalUnitBoolExp>;
  predicate: IntComparisonExp;
};

export type LegalUnitLocationAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<LegalUnitLocationSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<LegalUnitLocationBoolExp>;
  predicate: IntComparisonExp;
};

export type LocationAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<LocationSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<LocationBoolExp>;
  predicate: IntComparisonExp;
};

export type LocationImagesAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<LocationImagesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<LocationImagesBoolExp>;
  predicate: IntComparisonExp;
};

export type MissionAggregateBoolExpBool_And = {
  arguments: MissionSelectColumnMissionAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MissionBoolExp>;
  predicate: BooleanComparisonExp;
};

export type MissionAggregateBoolExpBool_Or = {
  arguments: MissionSelectColumnMissionAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MissionBoolExp>;
  predicate: BooleanComparisonExp;
};

export type MissionAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<MissionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MissionBoolExp>;
  predicate: IntComparisonExp;
};

export type MissionJoinAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<MissionJoinSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MissionJoinBoolExp>;
  predicate: IntComparisonExp;
};

export type PoleAggregateBoolExpBool_And = {
  arguments: PoleSelectColumnPoleAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PoleBoolExp>;
  predicate: BooleanComparisonExp;
};

export type PoleAggregateBoolExpBool_Or = {
  arguments: PoleSelectColumnPoleAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PoleBoolExp>;
  predicate: BooleanComparisonExp;
};

export type PoleAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<PoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PoleBoolExp>;
  predicate: IntComparisonExp;
};

export type ProjectAggregateBoolExpBool_And = {
  arguments: ProjectSelectColumnProjectAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectBoolExp>;
  predicate: BooleanComparisonExp;
};

export type ProjectAggregateBoolExpBool_Or = {
  arguments: ProjectSelectColumnProjectAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectBoolExp>;
  predicate: BooleanComparisonExp;
};

export type ProjectAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ProjectSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectBoolExp>;
  predicate: IntComparisonExp;
};

export type ProjectSupervisorsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ProjectSupervisorsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectSupervisorsBoolExp>;
  predicate: IntComparisonExp;
};

export type ProjectTagsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ProjectTagsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectTagsBoolExp>;
  predicate: IntComparisonExp;
};

export type ReactionAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ReactionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReactionBoolExp>;
  predicate: IntComparisonExp;
};

export type ReportAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ReportSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportBoolExp>;
  predicate: IntComparisonExp;
};

export type RoleAggregateBoolExpBool_And = {
  arguments: RoleSelectColumnRoleAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<RoleBoolExp>;
  predicate: BooleanComparisonExp;
};

export type RoleAggregateBoolExpBool_Or = {
  arguments: RoleSelectColumnRoleAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<RoleBoolExp>;
  predicate: BooleanComparisonExp;
};

export type RoleAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<RoleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<RoleBoolExp>;
  predicate: IntComparisonExp;
};

export type SessionAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<SessionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<SessionBoolExp>;
  predicate: IntComparisonExp;
};

export type ShortcutAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ShortcutSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ShortcutBoolExp>;
  predicate: IntComparisonExp;
};

export type SocialAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<SocialSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<SocialBoolExp>;
  predicate: IntComparisonExp;
};

export type SubjectAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<SubjectSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<SubjectBoolExp>;
  predicate: IntComparisonExp;
};

export type SubjectClassGroupsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<SubjectClassGroupsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<SubjectClassGroupsBoolExp>;
  predicate: IntComparisonExp;
};

export type TagAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TagSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TagBoolExp>;
  predicate: IntComparisonExp;
};

export type TeamAggregateBoolExpBool_And = {
  arguments: TeamSelectColumnTeamAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamBoolExp>;
  predicate: BooleanComparisonExp;
};

export type TeamAggregateBoolExpBool_Or = {
  arguments: TeamSelectColumnTeamAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamBoolExp>;
  predicate: BooleanComparisonExp;
};

export type TeamAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TeamSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamBoolExp>;
  predicate: IntComparisonExp;
};

export type TeamHistoryAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TeamHistorySelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamHistoryBoolExp>;
  predicate: IntComparisonExp;
};

export type TeamJoinAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TeamJoinSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamJoinBoolExp>;
  predicate: IntComparisonExp;
};

export type TeamMemberAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TeamMemberSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamMemberBoolExp>;
  predicate: IntComparisonExp;
};

export type TeamMemberRolesAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TeamMemberRolesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamMemberRolesBoolExp>;
  predicate: IntComparisonExp;
};

export type TeamMetricAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TeamMetricSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TeamMetricBoolExp>;
  predicate: IntComparisonExp;
};

export type TenantAggregateBoolExpBool_And = {
  arguments: TenantSelectColumnTenantAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TenantBoolExp>;
  predicate: BooleanComparisonExp;
};

export type TenantAggregateBoolExpBool_Or = {
  arguments: TenantSelectColumnTenantAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TenantBoolExp>;
  predicate: BooleanComparisonExp;
};

export type TenantAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TenantSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TenantBoolExp>;
  predicate: IntComparisonExp;
};

export type TenantOrganizeAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TenantOrganizeSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TenantOrganizeBoolExp>;
  predicate: IntComparisonExp;
};

export type ThreadAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ThreadSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ThreadBoolExp>;
  predicate: IntComparisonExp;
};

export type ThreadContributorsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ThreadContributorsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ThreadContributorsBoolExp>;
  predicate: IntComparisonExp;
};

export type ThreadTagsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ThreadTagsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ThreadTagsBoolExp>;
  predicate: IntComparisonExp;
};

export type UserAggregateBoolExpBool_And = {
  arguments: UserSelectColumnUserAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserBoolExp>;
  predicate: BooleanComparisonExp;
};

export type UserAggregateBoolExpBool_Or = {
  arguments: UserSelectColumnUserAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserBoolExp>;
  predicate: BooleanComparisonExp;
};

export type UserAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<UserSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserBoolExp>;
  predicate: IntComparisonExp;
};

export type ValidationAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ValidationSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ValidationBoolExp>;
  predicate: IntComparisonExp;
};

export type ViewAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ViewSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ViewBoolExp>;
  predicate: IntComparisonExp;
};

export type VoteAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<VoteSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VoteBoolExp>;
  predicate: IntComparisonExp;
};

export type GetMeQueryVariables = Exact<{ [key: string]: never }>;

export type GetMeQuery = {
  __typename?: 'Query';
  me: {
    __typename: 'UserLogin';
    canManageTenant: boolean;
    onboardingTeams: Array<{
      __typename: 'Team';
      id: string;
      membershipFees: number;
      membershipDuration: string;
      type: string;
      actor: {
        __typename: 'Actor';
        id: string;
        bio: string;
        email: string;
        name: string;
        slug: string;
        status: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          createdAt: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
        socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: string; order: number }>;
      };
      joinForm: { __typename: 'Form'; id: string; name: string; schema: JSONType; type: string };
    }>;
    user: {
      __typename: 'User';
      id: string;
      createdAt: string;
      firstName: string;
      lastName: string;
      individual: {
        __typename: 'Individual';
        id: string;
        actor: {
          __typename: 'Actor';
          id: string;
          bio: string;
          email: string;
          name: string;
          slug: string;
          status: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            createdAt: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
          socials: Array<{
            __typename: 'Social';
            id: string;
            pseudo: string;
            url: string;
            type: string;
            order: number;
          }>;
        };
        following: Array<{
          __typename: 'Follow';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            name: string;
            slug: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              type: string;
              image: { __typename: 'FileUpload'; id: string; url: string };
            }>;
            team?: {
              __typename: 'Team';
              id: string;
              actor: {
                __typename: 'Actor';
                id: string;
                slug: string;
                actorImages: Array<{
                  __typename: 'ActorImage';
                  id: string;
                  type: string;
                  image: { __typename: 'FileUpload'; id: string; url: string };
                }>;
              };
            } | null;
          };
        }>;
      };
      teamMembers: Array<{
        __typename: 'TeamMember';
        id: string;
        createdAt: string;
        startDate: string;
        endDate?: string | null;
        teamMemberRoles: Array<{
          __typename?: 'TeamMemberRoles';
          role: {
            __typename: 'Role';
            id: string;
            createdAt: string;
            category: string;
            type: string;
            name: string;
            permissions: Array<string>;
          };
        }>;
        team: {
          __typename: 'Team';
          id: string;
          actor: {
            __typename: 'Actor';
            id: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              type: string;
              image: { __typename: 'FileUpload'; id: string; url: string };
            }>;
          };
        };
      }>;
      eventJoins: Array<{
        __typename: 'EventJoin';
        id: string;
        createdAt: string;
        state: string;
        isPresent?: boolean | null;
        event: { __typename: 'Event'; id: string; slug: string };
      }>;
      teamJoins: Array<{
        __typename: 'TeamJoin';
        id: string;
        createdAt: string;
        state: string;
        team: {
          __typename: 'Team';
          id: string;
          createdAt: string;
          type: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
          };
        };
      }>;
      shortcuts: Array<{
        __typename: 'Shortcut';
        id: string;
        createdAt: string;
        type: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string;
          name: string;
          slug: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            createdAt: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string; size: number; type: string };
          }>;
        };
      }>;
      tenant: {
        __typename: 'Tenant';
        id: string;
        createdAt: string;
        domain: string;
        pointName: string;
        eventValidationForm?: { __typename: 'Form'; id: string; name: string; schema: JSONType; type: string } | null;
        eventApprovalSteps: Array<{ __typename: 'EventApprovalStep'; id: string; name: string; order: number }>;
        adminTeam?: {
          __typename: 'Team';
          id: string;
          actor: {
            __typename: 'Actor';
            id: string;
            bio: string;
            name: string;
            slug: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              type: string;
              image: { __typename: 'FileUpload'; id: string; url: string };
            }>;
            socials: Array<{
              __typename: 'Social';
              id: string;
              pseudo: string;
              url: string;
              type: string;
              order: number;
            }>;
          };
        } | null;
      };
    };
  };
};

export type InsertFollowMutationVariables = Exact<{
  object: FollowInsertInput;
}>;

export type InsertFollowMutation = {
  __typename?: 'Mutation';
  insertFollowOne?: {
    __typename: 'Follow';
    id: string;
    actor: { __typename: 'Actor'; id: string; email: string; name: string; slug: string; website: string };
    createdBy?: {
      __typename: 'Individual';
      id: string;
      createdAt: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string;
        name: string;
        slug: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string };
        }>;
      };
      user?: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: { __typename: 'Actor'; id: string; slug: string };
        };
      } | null;
    } | null;
  } | null;
};

export type GetEventJoinQueryVariables = Exact<{
  eventJoinId: Scalars['bigint']['input'];
  userId: Scalars['bigint']['input'];
}>;

export type GetEventJoinQuery = {
  __typename?: 'Query';
  eventJoinByPk?: {
    __typename: 'EventJoin';
    id: string;
    isPresent?: boolean | null;
    state: string;
    event: {
      __typename: 'Event';
      id: string;
      slug: string;
      start: string;
      end: string;
      eventOrganizes: Array<{
        __typename: 'EventOrganize';
        id: string;
        eventSupervisors: Array<{
          __typename?: 'EventSupervisor';
          user: {
            __typename: 'User';
            id: string;
            individual: {
              __typename: 'Individual';
              id: string;
              actor: { __typename: 'Actor'; id: string; slug: string; name: string };
            };
          };
        }>;
        team: { __typename: 'Team'; id: string };
      }>;
    };
    joinedBy: {
      __typename: 'User';
      id: string;
      individual: {
        __typename: 'Individual';
        id: string;
        actor: { __typename: 'Actor'; id: string; slug: string; name: string };
      };
    };
  } | null;
};

export type UpdateEventJoinMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: EventJoinSetInput;
}>;

export type UpdateEventJoinMutation = {
  __typename?: 'Mutation';
  updateEventJoinByPk?: {
    __typename: 'EventJoin';
    id: string;
    state: string;
    processedAt?: string | null;
    processedBy?: {
      __typename: 'Individual';
      id: string;
      createdAt: string;
      actor: {
        __typename: 'Actor';
        id: string;
        slug: string;
        bio: string;
        name: string;
        email: string;
        status: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    } | null;
  } | null;
};

export type GetEventQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetEventQuery = {
  __typename?: 'Query';
  event: Array<{
    __typename: 'Event';
    id: string;
    createdAt: string;
    description: string;
    slug: string;
    start: string;
    end: string;
    name: string;
    state: string;
    price: number;
    pointsAwardedForAttendance: number;
    isPrivate: boolean;
    location?: {
      __typename: 'Location';
      id: string;
      type: string;
      onlineLink: string;
      locationDetails: string;
      address?: {
        __typename: 'Address';
        id: string;
        name: string;
        latitude?: number | null;
        longitude?: number | null;
        category: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: string;
      } | null;
    } | null;
    banner?: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    eventTags: Array<{
      __typename?: 'EventTags';
      tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
    }>;
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      eventSupervisors: Array<{
        __typename?: 'EventSupervisor';
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          individual: {
            __typename: 'Individual';
            id: string;
            createdAt: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              email: string;
              name: string;
              slug: string;
              website: string;
              bio: string;
              status: string;
              actorImages: Array<{
                __typename: 'ActorImage';
                id: string;
                type: string;
                image: { __typename: 'FileUpload'; id: string; url: string };
              }>;
              actorTags: Array<{
                __typename?: 'ActorTags';
                tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
              }>;
              socials: Array<{
                __typename: 'Social';
                id: string;
                pseudo: string;
                url: string;
                type: string;
                order: number;
              }>;
            };
          };
        };
      }>;
      team: {
        __typename: 'Team';
        id: string;
        type: string;
        actor: {
          __typename: 'Actor';
          id: string;
          name: string;
          slug: string;
          email: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
        joinForm: { __typename: 'Form'; id: string; schema: JSONType; name: string };
      };
      project?: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: string;
        isPrivate: boolean;
      } | null;
    }>;
    eventJoinsAggregate: {
      __typename?: 'EventJoinAggregate';
      aggregate?: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      createdAt: string;
      state: string;
      isPresent?: boolean | null;
      processedAt?: string | null;
      participationProcessedVia?: string | null;
      participationProcessedAt?: string | null;
      processedBy?: {
        __typename: 'Individual';
        id: string;
        createdAt: string;
        actor: {
          __typename: 'Actor';
          id: string;
          slug: string;
          bio: string;
          name: string;
          email: string;
          status: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
      } | null;
      joinedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            slug: string;
            bio: string;
            name: string;
            email: string;
            website: string;
            status: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              type: string;
              image: { __typename: 'FileUpload'; id: string; url: string };
            }>;
          };
        };
      };
    }>;
    joinForm?: {
      __typename: 'Form';
      id: string;
      createdAt: string;
      schema: JSONType;
      name: string;
      type: string;
    } | null;
  }>;
};

export type InsertEventJoinMutationVariables = Exact<{
  object: EventJoinInsertInput;
}>;

export type InsertEventJoinMutation = {
  __typename?: 'Mutation';
  insertEventJoinOne?: { __typename: 'EventJoin'; id: string } | null;
};

export type GetEventsQueryVariables = Exact<{
  where?: InputMaybe<EventBoolExp>;
  orderBy?: InputMaybe<Array<EventOrderBy> | EventOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetEventsQuery = {
  __typename?: 'Query';
  event: Array<{
    __typename: 'Event';
    id: string;
    createdAt: string;
    slug: string;
    start: string;
    end: string;
    name: string;
    state: string;
    price: number;
    pointsAwardedForAttendance: number;
    isPrivate: boolean;
    description: string;
    location?: {
      __typename: 'Location';
      id: string;
      type: string;
      onlineLink: string;
      locationDetails: string;
      address?: {
        __typename: 'Address';
        id: string;
        name: string;
        latitude?: number | null;
        longitude?: number | null;
        category: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: string;
      } | null;
    } | null;
    banner?: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    eventTags: Array<{
      __typename?: 'EventTags';
      tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
    }>;
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      eventSupervisors: Array<{
        __typename?: 'EventSupervisor';
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          individual: {
            __typename: 'Individual';
            id: string;
            createdAt: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              email: string;
              name: string;
              slug: string;
              website: string;
              bio: string;
              status: string;
              actorImages: Array<{
                __typename: 'ActorImage';
                id: string;
                createdAt: string;
                type: string;
                image: {
                  __typename: 'FileUpload';
                  id: string;
                  createdAt: string;
                  url: string;
                  size: number;
                  type: string;
                };
              }>;
              actorTags: Array<{
                __typename?: 'ActorTags';
                tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
              }>;
              socials: Array<{
                __typename: 'Social';
                id: string;
                pseudo: string;
                url: string;
                type: string;
                order: number;
              }>;
            };
          };
        };
      }>;
      team: {
        __typename: 'Team';
        id: string;
        type: string;
        actor: {
          __typename: 'Actor';
          id: string;
          name: string;
          slug: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
        joinForm: { __typename: 'Form'; id: string; schema: JSONType; name: string };
      };
      project?: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: string;
        isPrivate: boolean;
      } | null;
    }>;
    eventJoinsAggregate: {
      __typename?: 'EventJoinAggregate';
      aggregate?: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      createdAt: string;
      state: string;
      isPresent?: boolean | null;
      processedAt?: string | null;
      participationProcessedVia?: string | null;
      participationProcessedAt?: string | null;
      joinedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            bio: string;
            status: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
            actorTags: Array<{
              __typename?: 'ActorTags';
              tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
            }>;
            socials: Array<{
              __typename: 'Social';
              id: string;
              pseudo: string;
              url: string;
              type: string;
              order: number;
            }>;
          };
        };
      };
      formSubmission?: {
        __typename: 'FormSubmission';
        id: string;
        createdAt: string;
        submission: JSONType;
        form: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
      } | null;
      processedBy?: {
        __typename: 'Individual';
        id: string;
        createdAt: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string;
          name: string;
          slug: string;
          website: string;
          bio: string;
          status: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            createdAt: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string; size: number; type: string };
          }>;
          actorTags: Array<{
            __typename?: 'ActorTags';
            tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
          }>;
          socials: Array<{
            __typename: 'Social';
            id: string;
            pseudo: string;
            url: string;
            type: string;
            order: number;
          }>;
        };
      } | null;
    }>;
    joinForm?: {
      __typename: 'Form';
      id: string;
      createdAt: string;
      schema: JSONType;
      name: string;
      type: string;
    } | null;
  }>;
};

export type GetEventManageQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetEventManageQuery = {
  __typename?: 'Query';
  event: Array<{
    __typename: 'Event';
    id: string;
    createdAt: string;
    start: string;
    end: string;
    name: string;
    slug: string;
    description: string;
    state: string;
    price: number;
    pointsAwardedForAttendance: number;
    isPrivate: boolean;
    location?: {
      __typename: 'Location';
      id: string;
      createdAt: string;
      type: string;
      onlineLink: string;
      locationDetails: string;
      address?: {
        __typename: 'Address';
        id: string;
        createdAt: string;
        latitude?: number | null;
        longitude?: number | null;
        category: string;
        name: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: string;
      } | null;
    } | null;
    banner?: {
      __typename: 'FileUpload';
      id: string;
      createdAt: string;
      url: string;
      size: number;
      type: string;
      name: string;
    } | null;
    eventTags: Array<{
      __typename?: 'EventTags';
      tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
    }>;
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      team: {
        __typename: 'Team';
        id: string;
        createdAt: string;
        type: string;
        directorsCategoryName: string;
        managersCategoryName: string;
        membersCategoryName: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          name: string;
          slug: string;
          email: string;
          website: string;
          bio: string;
          status: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
          actorTags: Array<{
            __typename?: 'ActorTags';
            tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
          }>;
          socials: Array<{
            __typename: 'Social';
            id: string;
            pseudo: string;
            url: string;
            type: string;
            order: number;
          }>;
        };
        joinForm: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
        teamMembersAggregate: {
          __typename?: 'TeamMemberAggregate';
          aggregate?: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
        };
        poles: Array<{ __typename: 'Pole'; id: string; createdAt: string; name: string; description: string }>;
        projects: Array<{
          __typename: 'Project';
          id: string;
          name: string;
          slug: string;
          banner?: { __typename: 'FileUpload'; id: string; url: string } | null;
        }>;
      };
      project?: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: string;
        isPrivate: boolean;
      } | null;
      eventSupervisors: Array<{
        __typename?: 'EventSupervisor';
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          individual: {
            __typename: 'Individual';
            id: string;
            createdAt: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              email: string;
              name: string;
              slug: string;
              website: string;
              bio: string;
              status: string;
              actorImages: Array<{
                __typename: 'ActorImage';
                id: string;
                type: string;
                image: { __typename: 'FileUpload'; id: string; url: string };
              }>;
              actorTags: Array<{
                __typename?: 'ActorTags';
                tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
              }>;
              socials: Array<{
                __typename: 'Social';
                id: string;
                pseudo: string;
                url: string;
                type: string;
                order: number;
              }>;
            };
          };
        };
      }>;
    }>;
    eventJoinsAggregate: {
      __typename?: 'EventJoinAggregate';
      aggregate?: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      createdAt: string;
      state: string;
      isPresent?: boolean | null;
      processedAt?: string | null;
      participationProcessedVia?: string | null;
      participationProcessedAt?: string | null;
      joinedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            slug: string;
            bio: string;
            name: string;
            email: string;
            status: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              type: string;
              image: { __typename: 'FileUpload'; id: string; url: string };
            }>;
          };
        };
      };
      formSubmission?: {
        __typename: 'FormSubmission';
        id: string;
        createdAt: string;
        submission: JSONType;
        form: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
      } | null;
      processedBy?: {
        __typename: 'Individual';
        id: string;
        createdAt: string;
        actor: {
          __typename: 'Actor';
          id: string;
          slug: string;
          email: string;
          name: string;
          bio: string;
          status: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
      } | null;
      participationProcessedBy?: {
        __typename: 'Individual';
        id: string;
        createdAt: string;
        actor: {
          __typename: 'Actor';
          id: string;
          slug: string;
          email: string;
          name: string;
          bio: string;
          status: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            createdAt: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string; size: number; type: string };
          }>;
        };
        user?: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          individual: {
            __typename: 'Individual';
            id: string;
            createdAt: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              email: string;
              name: string;
              slug: string;
              website: string;
              actorImages: Array<{
                __typename: 'ActorImage';
                id: string;
                createdAt: string;
                type: string;
                image: {
                  __typename: 'FileUpload';
                  id: string;
                  createdAt: string;
                  url: string;
                  size: number;
                  type: string;
                };
              }>;
            };
          };
        } | null;
      } | null;
    }>;
    joinForm?: {
      __typename: 'Form';
      id: string;
      createdAt: string;
      schema: JSONType;
      name: string;
      type: string;
    } | null;
    eventApprovals: Array<{
      __typename: 'EventApproval';
      id: string;
      createdAt: string;
      isApproved: boolean;
      message: string;
      eventApprovalStep?: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
        nextSteps: Array<{
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        }>;
        previousStep?: {
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        } | null;
      } | null;
      createdBy?: {
        __typename: 'Individual';
        id: string;
        createdAt: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string;
          name: string;
          slug: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string };
          }>;
        };
        user?: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          individual: {
            __typename: 'Individual';
            id: string;
            createdAt: string;
            actor: { __typename: 'Actor'; id: string; slug: string };
          };
        } | null;
      } | null;
    }>;
    nextEventApprovalStep?: {
      __typename: 'EventApprovalStep';
      id: string;
      createdAt: string;
      name: string;
      description: string;
      order: number;
      nextSteps: Array<{
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      }>;
      previousStep?: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      } | null;
    } | null;
    eventApprovalSubmission?: {
      __typename: 'FormSubmission';
      id: string;
      createdAt: string;
      submission: JSONType;
      form: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
    } | null;
  }>;
};

export type UpdateEventMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: EventSetInput;
}>;

export type UpdateEventMutation = {
  __typename?: 'Mutation';
  updateEventByPk?: {
    __typename: 'Event';
    id: string;
    createdAt: string;
    start: string;
    end: string;
    name: string;
    slug: string;
    description: string;
    state: string;
    price: number;
    pointsAwardedForAttendance: number;
    isPrivate: boolean;
    location?: {
      __typename: 'Location';
      id: string;
      createdAt: string;
      type: string;
      onlineLink: string;
      locationDetails: string;
      address?: {
        __typename: 'Address';
        id: string;
        createdAt: string;
        latitude?: number | null;
        longitude?: number | null;
        category: string;
        name: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: string;
      } | null;
    } | null;
    banner?: {
      __typename: 'FileUpload';
      id: string;
      createdAt: string;
      url: string;
      size: number;
      type: string;
      name: string;
    } | null;
    eventTags: Array<{
      __typename?: 'EventTags';
      tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
    }>;
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      team: {
        __typename: 'Team';
        id: string;
        createdAt: string;
        type: string;
        directorsCategoryName: string;
        managersCategoryName: string;
        membersCategoryName: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          name: string;
          slug: string;
          email: string;
          website: string;
          bio: string;
          status: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
          actorTags: Array<{
            __typename?: 'ActorTags';
            tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
          }>;
          socials: Array<{
            __typename: 'Social';
            id: string;
            pseudo: string;
            url: string;
            type: string;
            order: number;
          }>;
        };
        joinForm: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
        teamMembersAggregate: {
          __typename?: 'TeamMemberAggregate';
          aggregate?: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
        };
        poles: Array<{ __typename: 'Pole'; id: string; createdAt: string; name: string; description: string }>;
      };
      project?: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: string;
        isPrivate: boolean;
      } | null;
      eventSupervisors: Array<{
        __typename?: 'EventSupervisor';
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          individual: {
            __typename: 'Individual';
            id: string;
            createdAt: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              email: string;
              name: string;
              slug: string;
              website: string;
              bio: string;
              status: string;
              actorImages: Array<{
                __typename: 'ActorImage';
                id: string;
                type: string;
                image: { __typename: 'FileUpload'; id: string; url: string };
              }>;
              actorTags: Array<{
                __typename?: 'ActorTags';
                tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
              }>;
              socials: Array<{
                __typename: 'Social';
                id: string;
                pseudo: string;
                url: string;
                type: string;
                order: number;
              }>;
            };
          };
        };
      }>;
    }>;
    eventJoinsAggregate: {
      __typename?: 'EventJoinAggregate';
      aggregate?: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      createdAt: string;
      state: string;
      isPresent?: boolean | null;
      processedAt?: string | null;
      participationProcessedVia?: string | null;
      participationProcessedAt?: string | null;
      joinedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            slug: string;
            bio: string;
            name: string;
            email: string;
            status: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              type: string;
              image: { __typename: 'FileUpload'; id: string; url: string };
            }>;
          };
        };
      };
      formSubmission?: {
        __typename: 'FormSubmission';
        id: string;
        createdAt: string;
        submission: JSONType;
        form: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
      } | null;
      processedBy?: {
        __typename: 'Individual';
        id: string;
        createdAt: string;
        actor: {
          __typename: 'Actor';
          id: string;
          slug: string;
          email: string;
          name: string;
          bio: string;
          status: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
      } | null;
      participationProcessedBy?: {
        __typename: 'Individual';
        id: string;
        createdAt: string;
        actor: {
          __typename: 'Actor';
          id: string;
          slug: string;
          email: string;
          name: string;
          bio: string;
          status: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            createdAt: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string; size: number; type: string };
          }>;
        };
        user?: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          individual: {
            __typename: 'Individual';
            id: string;
            createdAt: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              email: string;
              name: string;
              slug: string;
              website: string;
              actorImages: Array<{
                __typename: 'ActorImage';
                id: string;
                createdAt: string;
                type: string;
                image: {
                  __typename: 'FileUpload';
                  id: string;
                  createdAt: string;
                  url: string;
                  size: number;
                  type: string;
                };
              }>;
            };
          };
        } | null;
      } | null;
    }>;
    joinForm?: {
      __typename: 'Form';
      id: string;
      createdAt: string;
      schema: JSONType;
      name: string;
      type: string;
    } | null;
    eventApprovals: Array<{
      __typename: 'EventApproval';
      id: string;
      createdAt: string;
      isApproved: boolean;
      message: string;
      eventApprovalStep?: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
        nextSteps: Array<{
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        }>;
        previousStep?: {
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        } | null;
      } | null;
      createdBy?: {
        __typename: 'Individual';
        id: string;
        createdAt: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string;
          name: string;
          slug: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string };
          }>;
        };
        user?: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          individual: {
            __typename: 'Individual';
            id: string;
            createdAt: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              email: string;
              name: string;
              slug: string;
              website: string;
              actorImages: Array<{
                __typename: 'ActorImage';
                id: string;
                createdAt: string;
                type: string;
                image: {
                  __typename: 'FileUpload';
                  id: string;
                  createdAt: string;
                  url: string;
                  size: number;
                  type: string;
                };
              }>;
            };
          };
        } | null;
      } | null;
    }>;
    nextEventApprovalStep?: {
      __typename: 'EventApprovalStep';
      id: string;
      createdAt: string;
      name: string;
      description: string;
      order: number;
      nextSteps: Array<{
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      }>;
      previousStep?: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      } | null;
    } | null;
    eventApprovalSubmission?: {
      __typename: 'FormSubmission';
      id: string;
      createdAt: string;
      submission: JSONType;
      form: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
    } | null;
  } | null;
};

export type UpdateEventOrganizeProjectManyMutationVariables = Exact<{
  updates: Array<EventOrganizeUpdates> | EventOrganizeUpdates;
}>;

export type UpdateEventOrganizeProjectManyMutation = {
  __typename?: 'Mutation';
  updateEventOrganizeMany?: Array<{
    __typename?: 'EventOrganizeMutationResponse';
    returning: Array<{
      __typename: 'EventOrganize';
      id: string;
      team: { __typename: 'Team'; id: string; type: string; actor: { __typename: 'Actor'; id: string; slug: string } };
      project?: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: string;
        isPrivate: boolean;
      } | null;
    }>;
  } | null> | null;
};

export type UpdateLocationMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: LocationSetInput;
}>;

export type UpdateLocationMutation = {
  __typename?: 'Mutation';
  updateLocationByPk?: {
    __typename: 'Location';
    id: string;
    createdAt: string;
    type: string;
    onlineLink: string;
    locationDetails: string;
    address?: {
      __typename: 'Address';
      id: string;
      createdAt: string;
      latitude?: number | null;
      longitude?: number | null;
      category: string;
      name: string;
      streetNumber: string;
      street: string;
      zip: string;
      city: string;
      state: string;
      country: string;
    } | null;
  } | null;
};

export type GetProjectManageQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetProjectManageQuery = {
  __typename?: 'Query';
  project: Array<{
    __typename: 'Project';
    id: string;
    createdAt: string;
    slug: string;
    start?: string | null;
    end?: string | null;
    name: string;
    isPrivate: boolean;
    banner?: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    team: {
      __typename: 'Team';
      id: string;
      type: string;
      actor: {
        __typename: 'Actor';
        id: string;
        slug: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    };
    eventOrganizes: Array<{
      __typename?: 'EventOrganize';
      eventSupervisors: Array<{
        __typename?: 'EventSupervisor';
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          individual: {
            __typename: 'Individual';
            id: string;
            createdAt: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              email: string;
              name: string;
              slug: string;
              website: string;
              bio: string;
              status: string;
              actorImages: Array<{
                __typename: 'ActorImage';
                id: string;
                createdAt: string;
                type: string;
                image: {
                  __typename: 'FileUpload';
                  id: string;
                  createdAt: string;
                  url: string;
                  size: number;
                  type: string;
                };
              }>;
              actorTags: Array<{
                __typename?: 'ActorTags';
                tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
              }>;
              socials: Array<{
                __typename: 'Social';
                id: string;
                pseudo: string;
                url: string;
                type: string;
                order: number;
              }>;
            };
          };
        };
      }>;
      team: {
        __typename: 'Team';
        id: string;
        type: string;
        actor: {
          __typename: 'Actor';
          id: string;
          name: string;
          slug: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
        joinForm: { __typename: 'Form'; id: string; schema: JSONType; name: string };
      };
      project?: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: string;
        isPrivate: boolean;
      } | null;
    }>;
  }>;
};

export type GetTeamJoinsQueryVariables = Exact<{
  where?: InputMaybe<TeamJoinBoolExp>;
  orderBy?: InputMaybe<Array<TeamJoinOrderBy> | TeamJoinOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetTeamJoinsQuery = {
  __typename?: 'Query';
  teamJoin: Array<{
    __typename: 'TeamJoin';
    id: string;
    state: string;
    joinedBy: {
      __typename: 'User';
      id: string;
      createdAt: string;
      firstName: string;
      lastName: string;
      individual: {
        __typename: 'Individual';
        id: string;
        createdAt: string;
        actor: {
          __typename: 'Actor';
          id: string;
          slug: string;
          bio: string;
          name: string;
          email: string;
          website: string;
          status: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
      };
    };
    team: {
      __typename: 'Team';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        email: string;
        name: string;
        slug: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    };
    formSubmission?: {
      __typename: 'FormSubmission';
      id: string;
      createdAt: string;
      submission: JSONType;
      form: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
    } | null;
    receivedRole?: {
      __typename: 'Role';
      id: string;
      createdAt: string;
      category: string;
      type: string;
      name: string;
      permissions: Array<string>;
    } | null;
  }>;
};

export type UpdateTeamJoinMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: TeamJoinSetInput;
}>;

export type UpdateTeamJoinMutation = {
  __typename?: 'Mutation';
  updateTeamJoinByPk?: {
    __typename: 'TeamJoin';
    id: string;
    state: string;
    joinedBy: {
      __typename: 'User';
      id: string;
      createdAt: string;
      firstName: string;
      lastName: string;
      individual: {
        __typename: 'Individual';
        id: string;
        createdAt: string;
        actor: {
          __typename: 'Actor';
          id: string;
          slug: string;
          bio: string;
          name: string;
          email: string;
          website: string;
          status: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
      };
    };
  } | null;
};

export type GetUsersWithPointsQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetUsersWithPointsQuery = {
  __typename?: 'Query';
  user: Array<{
    __typename: 'User';
    id: string;
    createdAt: string;
    firstName: string;
    lastName: string;
    individual: {
      __typename: 'Individual';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        slug: string;
        bio: string;
        name: string;
        email: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      processedAt?: string | null;
      event: { __typename: 'Event'; id: string; slug: string; pointsAwardedForAttendance: number };
    }>;
    actions: Array<{ __typename: 'Action'; id: string; points?: number | null; pointsProcessedAt?: string | null }>;
    missionJoins: Array<{
      __typename: 'MissionJoin';
      id: string;
      points?: number | null;
      pointsProcessedAt?: string | null;
    }>;
  }>;
};

export type DeleteSocialsMutationVariables = Exact<{
  where: SocialBoolExp;
}>;

export type DeleteSocialsMutation = {
  __typename?: 'Mutation';
  deleteSocial?: {
    __typename?: 'SocialMutationResponse';
    returning: Array<{
      __typename: 'Social';
      id: string;
      deletedAt?: string | null;
      type: string;
      pseudo: string;
      order: number;
      url: string;
    }>;
  } | null;
};

export type InsertSocialsMutationVariables = Exact<{
  objects: Array<SocialInsertInput> | SocialInsertInput;
}>;

export type InsertSocialsMutation = {
  __typename?: 'Mutation';
  insertSocial?: {
    __typename?: 'SocialMutationResponse';
    returning: Array<{ __typename: 'Social'; id: string; type: string; pseudo: string; order: number; url: string }>;
  } | null;
};

export type UpdateSocialsMutationVariables = Exact<{
  updates: Array<SocialUpdates> | SocialUpdates;
}>;

export type UpdateSocialsMutation = {
  __typename?: 'Mutation';
  updateSocialMany?: Array<{
    __typename?: 'SocialMutationResponse';
    returning: Array<{ __typename: 'Social'; id: string; type: string; pseudo: string; order: number; url: string }>;
  } | null> | null;
};

export type DeleteActorImageMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;

export type DeleteActorImageMutation = {
  __typename?: 'Mutation';
  deleteActorImageByPk?: {
    __typename: 'ActorImage';
    id: string;
    createdAt: string;
    type: string;
    image: { __typename: 'FileUpload'; id: string; url: string };
    actor: { __typename: 'Actor'; id: string; email: string; name: string; slug: string; website: string };
  } | null;
};

export type GetTeamManageQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetTeamManageQuery = {
  __typename?: 'Query';
  team: Array<{
    __typename: 'Team';
    id: string;
    createdAt: string;
    type: string;
    membershipFees: number;
    membershipDuration: string;
    directorsCategoryName: string;
    managersCategoryName: string;
    membersCategoryName: string;
    isJoinFormActive: boolean;
    actor: {
      __typename: 'Actor';
      id: string;
      createdAt: string;
      email: string;
      name: string;
      slug: string;
      website: string;
      bio: string;
      status: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        createdAt: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: string; order: number }>;
    };
    joinForm: { __typename: 'Form'; id: string; schema: JSONType; name: string };
    parent?: {
      __typename: 'Team';
      id: string;
      type: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string;
        name: string;
        slug: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          createdAt: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    } | null;
    poles: Array<{ __typename: 'Pole'; id: string; createdAt: string; name: string; description: string }>;
    roles: Array<{
      __typename: 'Role';
      id: string;
      createdAt: string;
      category: string;
      type: string;
      name: string;
      permissions: Array<string>;
    }>;
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      createdAt: string;
      startDate: string;
      endDate?: string | null;
      teamMemberRoles: Array<{
        __typename?: 'TeamMemberRoles';
        role: {
          __typename: 'Role';
          id: string;
          createdAt: string;
          category: string;
          type: string;
          name: string;
          permissions: Array<string>;
        };
      }>;
      user: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            bio: string;
            slug: string;
            status: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: { __typename: 'FileUpload'; id: string; url: string };
            }>;
            socials: Array<{
              __typename: 'Social';
              id: string;
              pseudo: string;
              url: string;
              type: string;
              order: number;
            }>;
          };
        };
      };
    }>;
    projects: Array<{
      __typename: 'Project';
      id: string;
      createdAt: string;
      color: string;
      description: string;
      name: string;
      slug: string;
      isPrivate: boolean;
      team: {
        __typename: 'Team';
        id: string;
        createdAt: string;
        type: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string;
          name: string;
          slug: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
      };
      eventOrganizes: Array<{
        __typename: 'EventOrganize';
        id: string;
        createdAt: string;
        project?: {
          __typename: 'Project';
          id: string;
          createdAt: string;
          name: string;
          slug: string;
          color: string;
          isPrivate: boolean;
        } | null;
        event: {
          __typename: 'Event';
          id: string;
          createdAt: string;
          start: string;
          end: string;
          name: string;
          slug: string;
          description: string;
          state: string;
          price: number;
          pointsAwardedForAttendance: number;
          isPrivate: boolean;
          location?: {
            __typename: 'Location';
            id: string;
            type: string;
            createdAt: string;
            onlineLink: string;
            locationDetails: string;
            address?: {
              __typename: 'Address';
              id: string;
              createdAt: string;
              latitude?: number | null;
              longitude?: number | null;
              category: string;
              name: string;
              streetNumber: string;
              street: string;
              zip: string;
              city: string;
              state: string;
              country: string;
            } | null;
          } | null;
          banner?: {
            __typename: 'FileUpload';
            id: string;
            createdAt: string;
            url: string;
            size: number;
            type: string;
            name: string;
          } | null;
          eventTags: Array<{
            __typename?: 'EventTags';
            tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
          }>;
          eventOrganizes: Array<{
            __typename: 'EventOrganize';
            id: string;
            team: {
              __typename: 'Team';
              id: string;
              createdAt: string;
              type: string;
              directorsCategoryName: string;
              managersCategoryName: string;
              membersCategoryName: string;
              actor: {
                __typename: 'Actor';
                id: string;
                createdAt: string;
                email: string;
                name: string;
                slug: string;
                website: string;
                bio: string;
                status: string;
                actorImages: Array<{
                  __typename: 'ActorImage';
                  id: string;
                  createdAt: string;
                  type: string;
                  image: {
                    __typename: 'FileUpload';
                    id: string;
                    createdAt: string;
                    url: string;
                    size: number;
                    type: string;
                  };
                }>;
                actorTags: Array<{
                  __typename?: 'ActorTags';
                  tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
                }>;
                socials: Array<{
                  __typename: 'Social';
                  id: string;
                  pseudo: string;
                  url: string;
                  type: string;
                  order: number;
                }>;
              };
              joinForm: {
                __typename: 'Form';
                id: string;
                createdAt: string;
                schema: JSONType;
                name: string;
                type: string;
              };
              teamMembersAggregate: {
                __typename?: 'TeamMemberAggregate';
                aggregate?: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
              };
              poles: Array<{ __typename: 'Pole'; id: string; createdAt: string; name: string; description: string }>;
            };
            project?: {
              __typename: 'Project';
              id: string;
              createdAt: string;
              name: string;
              slug: string;
              color: string;
              isPrivate: boolean;
            } | null;
            eventSupervisors: Array<{
              __typename?: 'EventSupervisor';
              user: {
                __typename: 'User';
                id: string;
                createdAt: string;
                firstName: string;
                lastName: string;
                individual: {
                  __typename: 'Individual';
                  id: string;
                  createdAt: string;
                  actor: {
                    __typename: 'Actor';
                    id: string;
                    createdAt: string;
                    email: string;
                    name: string;
                    slug: string;
                    website: string;
                    bio: string;
                    status: string;
                    actorImages: Array<{
                      __typename: 'ActorImage';
                      id: string;
                      createdAt: string;
                      type: string;
                      image: {
                        __typename: 'FileUpload';
                        id: string;
                        createdAt: string;
                        url: string;
                        size: number;
                        type: string;
                      };
                    }>;
                    actorTags: Array<{
                      __typename?: 'ActorTags';
                      tag: {
                        __typename: 'Tag';
                        id: string;
                        createdAt: string;
                        slug: string;
                        name: string;
                        color: string;
                      };
                    }>;
                    socials: Array<{
                      __typename: 'Social';
                      id: string;
                      pseudo: string;
                      url: string;
                      type: string;
                      order: number;
                    }>;
                  };
                };
              };
            }>;
          }>;
          eventJoinsAggregate: {
            __typename?: 'EventJoinAggregate';
            aggregate?: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
          };
          eventJoins: Array<{
            __typename: 'EventJoin';
            id: string;
            createdAt: string;
            state: string;
            isPresent?: boolean | null;
            joinedBy: {
              __typename: 'User';
              id: string;
              createdAt: string;
              firstName: string;
              lastName: string;
              individual: {
                __typename: 'Individual';
                id: string;
                createdAt: string;
                actor: {
                  __typename: 'Actor';
                  id: string;
                  createdAt: string;
                  email: string;
                  name: string;
                  slug: string;
                  website: string;
                  bio: string;
                  status: string;
                  actorImages: Array<{
                    __typename: 'ActorImage';
                    id: string;
                    createdAt: string;
                    type: string;
                    image: {
                      __typename: 'FileUpload';
                      id: string;
                      createdAt: string;
                      url: string;
                      size: number;
                      type: string;
                    };
                  }>;
                  actorTags: Array<{
                    __typename?: 'ActorTags';
                    tag: {
                      __typename: 'Tag';
                      id: string;
                      createdAt: string;
                      slug: string;
                      name: string;
                      color: string;
                    };
                  }>;
                  socials: Array<{
                    __typename: 'Social';
                    id: string;
                    pseudo: string;
                    url: string;
                    type: string;
                    order: number;
                  }>;
                };
              };
            };
          }>;
        };
      }>;
      banner?: {
        __typename: 'FileUpload';
        id: string;
        createdAt: string;
        url: string;
        size: number;
        type: string;
        name: string;
      } | null;
      projectSupervisors: Array<{
        __typename?: 'ProjectSupervisors';
        teamMember: {
          __typename: 'TeamMember';
          id: string;
          createdAt: string;
          startDate: string;
          endDate?: string | null;
          teamMemberRoles: Array<{
            __typename?: 'TeamMemberRoles';
            role: {
              __typename: 'Role';
              id: string;
              createdAt: string;
              category: string;
              type: string;
              name: string;
              permissions: Array<string>;
            };
          }>;
          user: {
            __typename: 'User';
            id: string;
            createdAt: string;
            firstName: string;
            lastName: string;
            individual: {
              __typename: 'Individual';
              id: string;
              createdAt: string;
              actor: {
                __typename: 'Actor';
                id: string;
                createdAt: string;
                email: string;
                name: string;
                slug: string;
                website: string;
                bio: string;
                status: string;
                actorImages: Array<{
                  __typename: 'ActorImage';
                  id: string;
                  createdAt: string;
                  type: string;
                  image: {
                    __typename: 'FileUpload';
                    id: string;
                    createdAt: string;
                    url: string;
                    size: number;
                    type: string;
                  };
                }>;
                actorTags: Array<{
                  __typename?: 'ActorTags';
                  tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
                }>;
                socials: Array<{
                  __typename: 'Social';
                  id: string;
                  pseudo: string;
                  url: string;
                  type: string;
                  order: number;
                }>;
              };
            };
          };
        };
      }>;
      projectTags: Array<{
        __typename?: 'ProjectTags';
        tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
      }>;
    }>;
    accounts: Array<{
      __typename: 'Account';
      id: string;
      createdAt: string;
      name: string;
      type: string;
      financesAggregate: {
        __typename?: 'FinanceAggregate';
        aggregate?: {
          __typename?: 'FinanceAggregateFields';
          sum?: { __typename?: 'FinanceSumFields'; amount?: number | null } | null;
        } | null;
      };
      bank?: {
        __typename: 'Bank';
        id: string;
        createdAt: string;
        bicSwift: string;
        iban: string;
        legalUnitLocation?: {
          __typename: 'LegalUnitLocation';
          id: string;
          createdAt: string;
          locationType: string;
          legalName: string;
          actor: {
            __typename: 'Actor';
            id: string;
            slug: string;
            email: string;
            website: string;
            name: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              type: string;
              image: { __typename: 'FileUpload'; id: string; url: string };
            }>;
          };
          legalUnit?: {
            __typename: 'LegalUnit';
            id: string;
            createdAt: string;
            type: string;
            legalName: string;
            actor: {
              __typename: 'Actor';
              id: string;
              slug: string;
              email: string;
              website: string;
              name: string;
              actorImages: Array<{
                __typename: 'ActorImage';
                id: string;
                type: string;
                image: { __typename: 'FileUpload'; id: string; url: string };
              }>;
            };
          } | null;
          location?: {
            __typename: 'Location';
            id: string;
            createdAt: string;
            type: string;
            locationDetails: string;
            onlineLink: string;
            address?: {
              __typename: 'Address';
              id: string;
              createdAt: string;
              latitude?: number | null;
              longitude?: number | null;
              category: string;
              name: string;
              streetNumber: string;
              street: string;
              zip: string;
              city: string;
              state: string;
              country: string;
            } | null;
          } | null;
        } | null;
      } | null;
      team: {
        __typename: 'Team';
        id: string;
        createdAt: string;
        type: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string;
          name: string;
          slug: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            createdAt: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string; size: number; type: string };
          }>;
        };
      };
      children: Array<{
        __typename: 'Account';
        id: string;
        createdAt: string;
        name: string;
        type: string;
        financesAggregate: {
          __typename?: 'FinanceAggregate';
          aggregate?: {
            __typename?: 'FinanceAggregateFields';
            sum?: { __typename?: 'FinanceSumFields'; amount?: number | null } | null;
          } | null;
        };
        bank?: {
          __typename: 'Bank';
          id: string;
          createdAt: string;
          bicSwift: string;
          iban: string;
          legalUnitLocation?: {
            __typename: 'LegalUnitLocation';
            id: string;
            createdAt: string;
            locationType: string;
            legalName: string;
            actor: { __typename?: 'Actor'; website: string; name: string };
            legalUnit?: {
              __typename: 'LegalUnit';
              id: string;
              createdAt: string;
              type: string;
              legalName: string;
              actor: { __typename: 'Actor'; id: string; createdAt: string; website: string; name: string };
            } | null;
            location?: {
              __typename: 'Location';
              id: string;
              createdAt: string;
              type: string;
              locationDetails: string;
              onlineLink: string;
              address?: {
                __typename: 'Address';
                id: string;
                createdAt: string;
                latitude?: number | null;
                longitude?: number | null;
                category: string;
                name: string;
                streetNumber: string;
                street: string;
                zip: string;
                city: string;
                state: string;
                country: string;
              } | null;
            } | null;
          } | null;
        } | null;
        team: {
          __typename: 'Team';
          id: string;
          createdAt: string;
          type: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
          };
        };
      }>;
      parent?: {
        __typename: 'Account';
        id: string;
        createdAt: string;
        name: string;
        type: string;
        financesAggregate: {
          __typename?: 'FinanceAggregate';
          aggregate?: {
            __typename?: 'FinanceAggregateFields';
            sum?: { __typename?: 'FinanceSumFields'; amount?: number | null } | null;
          } | null;
        };
        bank?: {
          __typename: 'Bank';
          id: string;
          createdAt: string;
          bicSwift: string;
          iban: string;
          legalUnitLocation?: {
            __typename: 'LegalUnitLocation';
            id: string;
            createdAt: string;
            locationType: string;
            legalName: string;
            actor: { __typename?: 'Actor'; website: string; name: string };
            legalUnit?: {
              __typename: 'LegalUnit';
              id: string;
              type: string;
              legalName: string;
              actor: { __typename: 'Actor'; id: string; createdAt: string; website: string; name: string };
            } | null;
            location?: {
              __typename: 'Location';
              id: string;
              type: string;
              createdAt: string;
              onlineLink: string;
              locationDetails: string;
              address?: {
                __typename: 'Address';
                id: string;
                latitude?: number | null;
                longitude?: number | null;
                category: string;
                name: string;
                streetNumber: string;
                street: string;
                zip: string;
                city: string;
                state: string;
                country: string;
              } | null;
            } | null;
          } | null;
        } | null;
        team: {
          __typename: 'Team';
          id: string;
          createdAt: string;
          type: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              type: string;
              image: { __typename: 'FileUpload'; id: string; url: string };
            }>;
          };
        };
      } | null;
    }>;
    teamHistories: Array<{ __typename: 'TeamHistory'; id: string; createdAt: string; eventDate: string }>;
    teams: Array<{
      __typename: 'Team';
      id: string;
      createdAt: string;
      type: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string;
        name: string;
        slug: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    }>;
  }>;
};

export type InsertActorImageMutationVariables = Exact<{
  object: ActorImageInsertInput;
}>;

export type InsertActorImageMutation = {
  __typename?: 'Mutation';
  insertActorImageOne?: {
    __typename: 'ActorImage';
    id: string;
    createdAt: string;
    type: string;
    image: { __typename: 'FileUpload'; id: string; url: string };
    actor: { __typename: 'Actor'; id: string; email: string; name: string; slug: string; website: string };
  } | null;
};

export type UpdateActorMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: ActorSetInput;
}>;

export type UpdateActorMutation = {
  __typename?: 'Mutation';
  updateActorByPk?: {
    __typename: 'Actor';
    id: string;
    slug: string;
    bio: string;
    name: string;
    status: string;
    email: string;
    website: string;
    actorImages: Array<{
      __typename: 'ActorImage';
      id: string;
      type: string;
      image: { __typename: 'FileUpload'; id: string; url: string };
    }>;
    socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: string; order: number }>;
  } | null;
};

export type UpdateTeamMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: TeamSetInput;
}>;

export type UpdateTeamMutation = {
  __typename?: 'Mutation';
  updateTeamByPk?: {
    __typename: 'Team';
    id: string;
    createdAt: string;
    type: string;
    membershipFees: number;
    membershipDuration: string;
    directorsCategoryName: string;
    managersCategoryName: string;
    membersCategoryName: string;
    actor: {
      __typename: 'Actor';
      id: string;
      slug: string;
      bio: string;
      name: string;
      status: string;
      email: string;
      website: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: string; order: number }>;
    };
    joinForm: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
    poles: Array<{ __typename: 'Pole'; id: string; createdAt: string; name: string; description: string }>;
    roles: Array<{
      __typename: 'Role';
      id: string;
      createdAt: string;
      category: string;
      type: string;
      name: string;
      permissions: Array<string>;
    }>;
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      createdAt: string;
      startDate: string;
      endDate?: string | null;
      teamMemberRoles: Array<{
        __typename?: 'TeamMemberRoles';
        role: {
          __typename: 'Role';
          id: string;
          createdAt: string;
          category: string;
          type: string;
          name: string;
          permissions: Array<string>;
        };
      }>;
      user: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            bio: string;
            status: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
            actorTags: Array<{
              __typename?: 'ActorTags';
              tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
            }>;
            socials: Array<{
              __typename: 'Social';
              id: string;
              pseudo: string;
              url: string;
              type: string;
              order: number;
            }>;
          };
        };
      };
    }>;
  } | null;
};

export type InsertAccountMutationVariables = Exact<{
  object: AccountInsertInput;
}>;

export type InsertAccountMutation = {
  __typename?: 'Mutation';
  insertAccountOne?: { __typename: 'Account'; id: string } | null;
};

export type InsertBankMutationVariables = Exact<{
  object: BankInsertInput;
}>;

export type InsertBankMutation = { __typename?: 'Mutation'; insertBankOne?: { __typename: 'Bank'; id: string } | null };

export type GetEventOrganizesQueryVariables = Exact<{
  where?: InputMaybe<EventOrganizeBoolExp>;
  orderBy?: InputMaybe<Array<EventOrganizeOrderBy> | EventOrganizeOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetEventOrganizesQuery = {
  __typename?: 'Query';
  eventOrganize: Array<{
    __typename?: 'EventOrganize';
    event: {
      __typename: 'Event';
      id: string;
      name: string;
      state: string;
      start: string;
      end: string;
      slug: string;
      banner?: { __typename: 'FileUpload'; id: string; url: string } | null;
      eventApprovals: Array<{
        __typename: 'EventApproval';
        id: string;
        createdAt: string;
        isApproved: boolean;
        message: string;
        eventApprovalStep?: {
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
          nextSteps: Array<{
            __typename: 'EventApprovalStep';
            id: string;
            createdAt: string;
            name: string;
            description: string;
            order: number;
          }>;
          previousStep?: {
            __typename: 'EventApprovalStep';
            id: string;
            createdAt: string;
            name: string;
            description: string;
            order: number;
          } | null;
        } | null;
        createdBy?: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              type: string;
              image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string };
            }>;
          };
          user?: {
            __typename: 'User';
            id: string;
            createdAt: string;
            firstName: string;
            lastName: string;
            individual: {
              __typename: 'Individual';
              id: string;
              createdAt: string;
              actor: {
                __typename: 'Actor';
                id: string;
                createdAt: string;
                email: string;
                name: string;
                slug: string;
                website: string;
                actorImages: Array<{
                  __typename: 'ActorImage';
                  id: string;
                  createdAt: string;
                  type: string;
                  image: {
                    __typename: 'FileUpload';
                    id: string;
                    createdAt: string;
                    url: string;
                    size: number;
                    type: string;
                  };
                }>;
              };
            };
          } | null;
        } | null;
      }>;
      eventApprovalSubmission?: {
        __typename: 'FormSubmission';
        id: string;
        createdAt: string;
        submission: JSONType;
        form: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
      } | null;
      nextEventApprovalStep?: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
        nextSteps: Array<{
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        }>;
        previousStep?: {
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        } | null;
      } | null;
    };
    eventSupervisors: Array<{
      __typename?: 'EventSupervisor';
      user: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            bio: string;
            status: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
            actorTags: Array<{
              __typename?: 'ActorTags';
              tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
            }>;
            socials: Array<{
              __typename: 'Social';
              id: string;
              pseudo: string;
              url: string;
              type: string;
              order: number;
            }>;
          };
        };
      };
    }>;
    team: {
      __typename: 'Team';
      id: string;
      type: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        slug: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
      joinForm: { __typename: 'Form'; id: string; schema: JSONType; name: string };
    };
    project?: {
      __typename: 'Project';
      id: string;
      createdAt: string;
      name: string;
      slug: string;
      color: string;
      isPrivate: boolean;
    } | null;
  }>;
  event: Array<{
    __typename: 'Event';
    id: string;
    createdAt: string;
    slug: string;
    start: string;
    end: string;
    name: string;
    state: string;
    price: number;
    pointsAwardedForAttendance: number;
    isPrivate: boolean;
    description: string;
    location?: {
      __typename: 'Location';
      id: string;
      type: string;
      onlineLink: string;
      locationDetails: string;
      address?: {
        __typename: 'Address';
        id: string;
        name: string;
        latitude?: number | null;
        longitude?: number | null;
        category: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: string;
      } | null;
    } | null;
    banner?: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    eventTags: Array<{
      __typename?: 'EventTags';
      tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
    }>;
    eventJoinsAggregate: {
      __typename?: 'EventJoinAggregate';
      aggregate?: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      createdAt: string;
      state: string;
      isPresent?: boolean | null;
      processedAt?: string | null;
      participationProcessedVia?: string | null;
      participationProcessedAt?: string | null;
      joinedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            bio: string;
            status: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
            actorTags: Array<{
              __typename?: 'ActorTags';
              tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
            }>;
            socials: Array<{
              __typename: 'Social';
              id: string;
              pseudo: string;
              url: string;
              type: string;
              order: number;
            }>;
          };
        };
      };
      formSubmission?: {
        __typename: 'FormSubmission';
        id: string;
        createdAt: string;
        submission: JSONType;
        form: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
      } | null;
      processedBy?: {
        __typename: 'Individual';
        id: string;
        createdAt: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string;
          name: string;
          slug: string;
          website: string;
          bio: string;
          status: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            createdAt: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string; size: number; type: string };
          }>;
          actorTags: Array<{
            __typename?: 'ActorTags';
            tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
          }>;
          socials: Array<{
            __typename: 'Social';
            id: string;
            pseudo: string;
            url: string;
            type: string;
            order: number;
          }>;
        };
      } | null;
    }>;
    joinForm?: {
      __typename: 'Form';
      id: string;
      createdAt: string;
      schema: JSONType;
      name: string;
      type: string;
    } | null;
  }>;
};

export type GetFinancesQueryVariables = Exact<{
  where?: InputMaybe<FinanceBoolExp>;
  orderBy?: InputMaybe<Array<FinanceOrderBy> | FinanceOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetFinancesQuery = {
  __typename?: 'Query';
  finance: Array<{
    __typename: 'Finance';
    id: string;
    createdAt: string;
    amount: number;
    category: string;
    method: string;
    payedAt: string;
    payedBy: {
      __typename: 'Actor';
      id: string;
      name: string;
      slug: string;
      email: string;
      website: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
      team?: { __typename: 'Team'; id: string; actor: { __typename: 'Actor'; id: string; slug: string } } | null;
      individual?: {
        __typename: 'Individual';
        id: string;
        user?: {
          __typename: 'User';
          id: string;
          individual: {
            __typename: 'Individual';
            id: string;
            actor: { __typename: 'Actor'; id: string; slug: string };
          };
        } | null;
      } | null;
    };
    receivedBy: {
      __typename: 'Actor';
      id: string;
      name: string;
      slug: string;
      email: string;
      website: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
      team?: { __typename: 'Team'; id: string; actor: { __typename: 'Actor'; id: string; slug: string } } | null;
      individual?: {
        __typename: 'Individual';
        id: string;
        user?: {
          __typename: 'User';
          id: string;
          individual: {
            __typename: 'Individual';
            id: string;
            actor: { __typename: 'Actor'; id: string; slug: string };
          };
        } | null;
      } | null;
    };
    initiatedBy?: {
      __typename: 'Individual';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        slug: string;
        email: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    } | null;
    createdBy?: {
      __typename: 'Individual';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        slug: string;
        email: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
      user?: {
        __typename: 'User';
        id: string;
        individual: { __typename: 'Individual'; id: string; actor: { __typename: 'Actor'; id: string; slug: string } };
      } | null;
    } | null;
    event?: { __typename: 'Event'; id: string; slug: string; name: string } | null;
    project?: { __typename: 'Project'; id: string; slug: string; name: string } | null;
    financeAttachments: Array<{
      __typename?: 'FinanceAttachments';
      attachment: { __typename: 'FileUpload'; id: string; name: string; size: number; type: string; url: string };
    }>;
  }>;
};

export type GetTenantManageQueryVariables = Exact<{
  domain: Scalars['String']['input'];
}>;

export type GetTenantManageQuery = {
  __typename?: 'Query';
  tenant: Array<{
    __typename: 'Tenant';
    id: string;
    domain: string;
    pointName: string;
    eventValidationForm?: { __typename: 'Form'; id: string; name: string; schema: JSONType; type: string } | null;
    eventApprovalSteps: Array<{ __typename: 'EventApprovalStep'; id: string; name: string; order: number }>;
    adminTeam?: {
      __typename: 'Team';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        slug: string;
        name: string;
        bio: string;
        email: string;
        website: string;
        status: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    } | null;
  }>;
};

export type GetTeamDashboardQueryVariables = Exact<{ [key: string]: never }>;

export type GetTeamDashboardQuery = {
  __typename?: 'Query';
  team: Array<{
    __typename: 'Team';
    id: string;
    createdAt: string;
    type: string;
    directorsCategoryName: string;
    managersCategoryName: string;
    membersCategoryName: string;
    membershipDuration: string;
    membershipFees: number;
    isJoinFormActive: boolean;
    documents: Array<{
      __typename: 'Document';
      id: string;
      name: string;
      type: string;
      file?: { __typename: 'FileUpload'; id: string; name: string; size: number; type: string; url: string } | null;
    }>;
    actor: {
      __typename: 'Actor';
      id: string;
      createdAt: string;
      email: string;
      name: string;
      slug: string;
      website: string;
      bio: string;
      status: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        createdAt: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: string; order: number }>;
    };
    joinForm: { __typename: 'Form'; id: string; schema: JSONType; name: string };
    teamMembersAggregate: {
      __typename?: 'TeamMemberAggregate';
      aggregate?: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
    };
    poles: Array<{ __typename: 'Pole'; id: string; createdAt: string; name: string; description: string }>;
    roles: Array<{
      __typename: 'Role';
      id: string;
      createdAt: string;
      category: string;
      type: string;
      name: string;
      permissions: Array<string>;
    }>;
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      createdAt: string;
      startDate: string;
      endDate?: string | null;
      teamMemberRoles: Array<{
        __typename?: 'TeamMemberRoles';
        role: {
          __typename: 'Role';
          id: string;
          createdAt: string;
          category: string;
          type: string;
          name: string;
          permissions: Array<string>;
        };
      }>;
      user: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            bio: string;
            slug: string;
            status: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: { __typename: 'FileUpload'; id: string; url: string };
            }>;
          };
        };
      };
    }>;
    accounts: Array<{
      __typename: 'Account';
      id: string;
      createdAt: string;
      name: string;
      type: string;
      financesAggregate: {
        __typename?: 'FinanceAggregate';
        aggregate?: {
          __typename?: 'FinanceAggregateFields';
          sum?: { __typename?: 'FinanceSumFields'; amount?: number | null } | null;
        } | null;
      };
      bank?: {
        __typename: 'Bank';
        id: string;
        createdAt: string;
        bicSwift: string;
        iban: string;
        legalUnitLocation?: {
          __typename: 'LegalUnitLocation';
          id: string;
          createdAt: string;
          locationType: string;
          legalName: string;
          actor: {
            __typename: 'Actor';
            id: string;
            slug: string;
            email: string;
            website: string;
            name: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              type: string;
              image: { __typename: 'FileUpload'; id: string; url: string };
            }>;
          };
          legalUnit?: {
            __typename: 'LegalUnit';
            id: string;
            createdAt: string;
            type: string;
            legalName: string;
            actor: {
              __typename: 'Actor';
              id: string;
              slug: string;
              email: string;
              website: string;
              name: string;
              actorImages: Array<{
                __typename: 'ActorImage';
                id: string;
                type: string;
                image: { __typename: 'FileUpload'; id: string; url: string };
              }>;
            };
          } | null;
          location?: {
            __typename: 'Location';
            id: string;
            createdAt: string;
            type: string;
            locationDetails: string;
            onlineLink: string;
            address?: {
              __typename: 'Address';
              id: string;
              createdAt: string;
              latitude?: number | null;
              longitude?: number | null;
              category: string;
              name: string;
              streetNumber: string;
              street: string;
              zip: string;
              city: string;
              state: string;
              country: string;
            } | null;
          } | null;
        } | null;
      } | null;
      team: {
        __typename: 'Team';
        id: string;
        createdAt: string;
        type: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string;
          name: string;
          slug: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            createdAt: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string; size: number; type: string };
          }>;
        };
      };
      children: Array<{
        __typename: 'Account';
        id: string;
        createdAt: string;
        name: string;
        type: string;
        financesAggregate: {
          __typename?: 'FinanceAggregate';
          aggregate?: {
            __typename?: 'FinanceAggregateFields';
            sum?: { __typename?: 'FinanceSumFields'; amount?: number | null } | null;
          } | null;
        };
        bank?: {
          __typename: 'Bank';
          id: string;
          createdAt: string;
          bicSwift: string;
          iban: string;
          legalUnitLocation?: {
            __typename: 'LegalUnitLocation';
            id: string;
            createdAt: string;
            locationType: string;
            legalName: string;
            actor: { __typename?: 'Actor'; website: string; name: string };
            legalUnit?: {
              __typename: 'LegalUnit';
              id: string;
              createdAt: string;
              type: string;
              legalName: string;
              actor: { __typename: 'Actor'; id: string; createdAt: string; website: string; name: string };
            } | null;
            location?: {
              __typename: 'Location';
              id: string;
              createdAt: string;
              type: string;
              locationDetails: string;
              onlineLink: string;
              address?: {
                __typename: 'Address';
                id: string;
                createdAt: string;
                latitude?: number | null;
                longitude?: number | null;
                category: string;
                name: string;
                streetNumber: string;
                street: string;
                zip: string;
                city: string;
                state: string;
                country: string;
              } | null;
            } | null;
          } | null;
        } | null;
        team: {
          __typename: 'Team';
          id: string;
          createdAt: string;
          type: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
          };
        };
      }>;
      parent?: {
        __typename: 'Account';
        id: string;
        createdAt: string;
        name: string;
        type: string;
        financesAggregate: {
          __typename?: 'FinanceAggregate';
          aggregate?: {
            __typename?: 'FinanceAggregateFields';
            sum?: { __typename?: 'FinanceSumFields'; amount?: number | null } | null;
          } | null;
        };
        bank?: {
          __typename: 'Bank';
          id: string;
          createdAt: string;
          bicSwift: string;
          iban: string;
          legalUnitLocation?: {
            __typename: 'LegalUnitLocation';
            id: string;
            createdAt: string;
            locationType: string;
            legalName: string;
            actor: { __typename?: 'Actor'; website: string; name: string };
            legalUnit?: {
              __typename: 'LegalUnit';
              id: string;
              type: string;
              legalName: string;
              actor: { __typename: 'Actor'; id: string; createdAt: string; website: string; name: string };
            } | null;
            location?: {
              __typename: 'Location';
              id: string;
              type: string;
              createdAt: string;
              onlineLink: string;
              locationDetails: string;
              address?: {
                __typename: 'Address';
                id: string;
                latitude?: number | null;
                longitude?: number | null;
                category: string;
                name: string;
                streetNumber: string;
                street: string;
                zip: string;
                city: string;
                state: string;
                country: string;
              } | null;
            } | null;
          } | null;
        } | null;
        team: {
          __typename: 'Team';
          id: string;
          createdAt: string;
          type: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              type: string;
              image: { __typename: 'FileUpload'; id: string; url: string };
            }>;
          };
        };
      } | null;
    }>;
    teamHistories: Array<{ __typename: 'TeamHistory'; id: string; createdAt: string; eventDate: string }>;
    teams: Array<{
      __typename: 'Team';
      id: string;
      createdAt: string;
      type: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string;
        name: string;
        slug: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    }>;
  }>;
};

export type GetTenantUsersWithPointsQueryVariables = Exact<{ [key: string]: never }>;

export type GetTenantUsersWithPointsQuery = {
  __typename?: 'Query';
  user: Array<{
    __typename: 'User';
    id: string;
    createdAt: string;
    firstName: string;
    lastName: string;
    individual: {
      __typename: 'Individual';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        slug: string;
        bio: string;
        name: string;
        email: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    };
    actions: Array<{ __typename: 'Action'; id: string; points?: number | null; pointsProcessedAt?: string | null }>;
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      processedAt?: string | null;
      event: { __typename: 'Event'; id: string; slug: string; pointsAwardedForAttendance: number };
    }>;
    missionJoins: Array<{
      __typename: 'MissionJoin';
      id: string;
      points?: number | null;
      pointsProcessedAt?: string | null;
    }>;
  }>;
};

export type GetEventsValidationQueryVariables = Exact<{
  where?: InputMaybe<EventBoolExp>;
  orderBy?: InputMaybe<Array<EventOrderBy> | EventOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetEventsValidationQuery = {
  __typename?: 'Query';
  event: Array<{
    __typename: 'Event';
    id: string;
    createdAt: string;
    slug: string;
    start: string;
    end: string;
    name: string;
    state: string;
    price: number;
    pointsAwardedForAttendance: number;
    isPrivate: boolean;
    description: string;
    location?: {
      __typename: 'Location';
      id: string;
      type: string;
      onlineLink: string;
      locationDetails: string;
      address?: {
        __typename: 'Address';
        id: string;
        name: string;
        latitude?: number | null;
        longitude?: number | null;
        category: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: string;
      } | null;
    } | null;
    banner?: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    nextEventApprovalStep?: {
      __typename: 'EventApprovalStep';
      id: string;
      createdAt: string;
      name: string;
      description: string;
      order: number;
      nextSteps: Array<{
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      }>;
      previousStep?: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      } | null;
    } | null;
    eventApprovalSubmission?: {
      __typename: 'FormSubmission';
      id: string;
      createdAt: string;
      submission: JSONType;
      form: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
    } | null;
    eventApprovals: Array<{
      __typename: 'EventApproval';
      id: string;
      createdAt: string;
      isApproved: boolean;
      message: string;
      eventApprovalStep?: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
        nextSteps: Array<{
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        }>;
        previousStep?: {
          __typename: 'EventApprovalStep';
          id: string;
          createdAt: string;
          name: string;
          description: string;
          order: number;
        } | null;
      } | null;
      createdBy?: {
        __typename: 'Individual';
        id: string;
        createdAt: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string;
          name: string;
          slug: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string };
          }>;
        };
        user?: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          individual: {
            __typename: 'Individual';
            id: string;
            createdAt: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              email: string;
              name: string;
              slug: string;
              website: string;
              actorImages: Array<{
                __typename: 'ActorImage';
                id: string;
                createdAt: string;
                type: string;
                image: {
                  __typename: 'FileUpload';
                  id: string;
                  createdAt: string;
                  url: string;
                  size: number;
                  type: string;
                };
              }>;
            };
          };
        } | null;
      } | null;
    }>;
    eventTags: Array<{
      __typename?: 'EventTags';
      tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
    }>;
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      eventSupervisors: Array<{
        __typename?: 'EventSupervisor';
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          individual: {
            __typename: 'Individual';
            id: string;
            createdAt: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              email: string;
              name: string;
              slug: string;
              website: string;
              bio: string;
              status: string;
              actorImages: Array<{
                __typename: 'ActorImage';
                id: string;
                createdAt: string;
                type: string;
                image: {
                  __typename: 'FileUpload';
                  id: string;
                  createdAt: string;
                  url: string;
                  size: number;
                  type: string;
                };
              }>;
              actorTags: Array<{
                __typename?: 'ActorTags';
                tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
              }>;
              socials: Array<{
                __typename: 'Social';
                id: string;
                pseudo: string;
                url: string;
                type: string;
                order: number;
              }>;
            };
          };
        };
      }>;
      team: {
        __typename: 'Team';
        id: string;
        type: string;
        actor: {
          __typename: 'Actor';
          id: string;
          slug: string;
          name: string;
          email: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
        joinForm: { __typename: 'Form'; id: string; schema: JSONType; name: string };
      };
      project?: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: string;
        isPrivate: boolean;
      } | null;
    }>;
    eventJoinsAggregate: {
      __typename?: 'EventJoinAggregate';
      aggregate?: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      createdAt: string;
      state: string;
      isPresent?: boolean | null;
      processedAt?: string | null;
      participationProcessedVia?: string | null;
      participationProcessedAt?: string | null;
      joinedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            bio: string;
            status: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
            actorTags: Array<{
              __typename?: 'ActorTags';
              tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
            }>;
            socials: Array<{
              __typename: 'Social';
              id: string;
              pseudo: string;
              url: string;
              type: string;
              order: number;
            }>;
          };
        };
      };
      formSubmission?: {
        __typename: 'FormSubmission';
        id: string;
        createdAt: string;
        submission: JSONType;
        form: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
      } | null;
      processedBy?: {
        __typename: 'Individual';
        id: string;
        createdAt: string;
        actor: {
          __typename: 'Actor';
          id: string;
          createdAt: string;
          email: string;
          name: string;
          slug: string;
          website: string;
          bio: string;
          status: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            createdAt: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string; size: number; type: string };
          }>;
          actorTags: Array<{
            __typename?: 'ActorTags';
            tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
          }>;
          socials: Array<{
            __typename: 'Social';
            id: string;
            pseudo: string;
            url: string;
            type: string;
            order: number;
          }>;
        };
      } | null;
    }>;
    joinForm?: {
      __typename: 'Form';
      id: string;
      createdAt: string;
      schema: JSONType;
      name: string;
      type: string;
    } | null;
  }>;
};

export type GetProjectQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetProjectQuery = {
  __typename?: 'Query';
  project: Array<{
    __typename: 'Project';
    id: string;
    createdAt: string;
    slug: string;
    start?: string | null;
    end?: string | null;
    name: string;
    isPrivate: boolean;
    banner?: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    team: {
      __typename: 'Team';
      id: string;
      type: string;
      actor: {
        __typename: 'Actor';
        id: string;
        slug: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    };
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      event: { __typename: 'Event'; id: string; slug: string; name: string };
      eventSupervisors: Array<{
        __typename?: 'EventSupervisor';
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          individual: {
            __typename: 'Individual';
            id: string;
            createdAt: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              email: string;
              name: string;
              slug: string;
              website: string;
              bio: string;
              status: string;
              actorImages: Array<{
                __typename: 'ActorImage';
                id: string;
                createdAt: string;
                type: string;
                image: {
                  __typename: 'FileUpload';
                  id: string;
                  createdAt: string;
                  url: string;
                  size: number;
                  type: string;
                };
              }>;
              actorTags: Array<{
                __typename?: 'ActorTags';
                tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
              }>;
              socials: Array<{
                __typename: 'Social';
                id: string;
                pseudo: string;
                url: string;
                type: string;
                order: number;
              }>;
            };
          };
        };
      }>;
      team: {
        __typename: 'Team';
        id: string;
        type: string;
        actor: {
          __typename: 'Actor';
          id: string;
          name: string;
          slug: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
        joinForm: { __typename: 'Form'; id: string; schema: JSONType; name: string };
      };
      project?: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: string;
        isPrivate: boolean;
      } | null;
    }>;
  }>;
};

export type GetTeamQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetTeamQuery = {
  __typename?: 'Query';
  team: Array<{
    __typename: 'Team';
    id: string;
    createdAt: string;
    type: string;
    directorsCategoryName: string;
    managersCategoryName: string;
    membersCategoryName: string;
    membershipFees: number;
    membershipDuration: string;
    actor: {
      __typename: 'Actor';
      id: string;
      slug: string;
      bio: string;
      name: string;
      status: string;
      email: string;
      website: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: string; order: number }>;
    };
    joinForm: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
    parent?: {
      __typename: 'Team';
      id: string;
      type: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string;
        name: string;
        slug: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          createdAt: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    } | null;
    poles: Array<{ __typename: 'Pole'; id: string; createdAt: string; name: string; description: string }>;
    roles: Array<{
      __typename: 'Role';
      id: string;
      createdAt: string;
      category: string;
      type: string;
      name: string;
      permissions: Array<string>;
    }>;
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      createdAt: string;
      startDate: string;
      endDate?: string | null;
      teamMemberRoles: Array<{
        __typename?: 'TeamMemberRoles';
        role: {
          __typename: 'Role';
          id: string;
          createdAt: string;
          category: string;
          type: string;
          name: string;
          permissions: Array<string>;
        };
      }>;
      user: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            bio: string;
            status: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
            actorTags: Array<{
              __typename?: 'ActorTags';
              tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
            }>;
            socials: Array<{
              __typename: 'Social';
              id: string;
              pseudo: string;
              url: string;
              type: string;
              order: number;
            }>;
          };
        };
      };
    }>;
  }>;
};

export type InsertTeamJoinMutationVariables = Exact<{
  object: TeamJoinInsertInput;
}>;

export type InsertTeamJoinMutation = {
  __typename?: 'Mutation';
  insertTeamJoinOne?: { __typename: 'TeamJoin'; id: string } | null;
};

export type GetTeamsQueryVariables = Exact<{
  where?: InputMaybe<TeamBoolExp>;
  orderBy?: InputMaybe<Array<TeamOrderBy> | TeamOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetTeamsQuery = {
  __typename?: 'Query';
  team: Array<{
    __typename: 'Team';
    id: string;
    createdAt: string;
    type: string;
    membershipFees: number;
    membershipDuration: string;
    directorsCategoryName: string;
    managersCategoryName: string;
    membersCategoryName: string;
    actor: {
      __typename: 'Actor';
      id: string;
      slug: string;
      status: string;
      bio: string;
      name: string;
      email: string;
      website: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: string; order: number }>;
    };
    joinForm: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
    parent?: {
      __typename: 'Team';
      id: string;
      type: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string;
        name: string;
        slug: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          createdAt: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    } | null;
    poles: Array<{ __typename: 'Pole'; id: string; createdAt: string; name: string; description: string }>;
    roles: Array<{
      __typename: 'Role';
      id: string;
      createdAt: string;
      category: string;
      type: string;
      name: string;
      permissions: Array<string>;
    }>;
    teamMembersAggregate: {
      __typename?: 'TeamMemberAggregate';
      aggregate?: { __typename?: 'TeamMemberAggregateFields'; count: number } | null;
    };
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      createdAt: string;
      startDate: string;
      endDate?: string | null;
      teamMemberRoles: Array<{
        __typename?: 'TeamMemberRoles';
        role: {
          __typename: 'Role';
          id: string;
          createdAt: string;
          category: string;
          type: string;
          name: string;
          permissions: Array<string>;
        };
      }>;
      user: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            bio: string;
            status: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
            actorTags: Array<{
              __typename?: 'ActorTags';
              tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
            }>;
            socials: Array<{
              __typename: 'Social';
              id: string;
              pseudo: string;
              url: string;
              type: string;
              order: number;
            }>;
          };
        };
      };
    }>;
  }>;
};

export type GetCategoriesQueryVariables = Exact<{
  where?: InputMaybe<TagBoolExp>;
  orderBy?: InputMaybe<Array<TagOrderBy> | TagOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetCategoriesQuery = {
  __typename?: 'Query';
  tag: Array<{
    __typename?: 'Tag';
    id: string;
    name: string;
    slug: string;
    color: string;
    image?: { __typename?: 'FileUpload'; id: string; url: string } | null;
  }>;
};

export type GetUserQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetUserQuery = {
  __typename?: 'Query';
  user: Array<{
    __typename: 'User';
    id: string;
    createdAt: string;
    firstName: string;
    lastName: string;
    individual: {
      __typename: 'Individual';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        slug: string;
        status: string;
        bio: string;
        name: string;
        email: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
        socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: string; order: number }>;
      };
    };
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      team: {
        __typename: 'Team';
        id: string;
        type: string;
        actor: {
          __typename: 'Actor';
          id: string;
          slug: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
      };
    }>;
  }>;
};

export type GetUsersQueryVariables = Exact<{
  where?: InputMaybe<UserBoolExp>;
  orderBy?: InputMaybe<Array<UserOrderBy> | UserOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetUsersQuery = {
  __typename?: 'Query';
  user: Array<{
    __typename: 'User';
    id: string;
    createdAt: string;
    firstName: string;
    lastName: string;
    individual: {
      __typename: 'Individual';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        slug: string;
        name: string;
        email: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    };
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      team: {
        __typename: 'Team';
        id: string;
        type: string;
        actor: {
          __typename: 'Actor';
          id: string;
          slug: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
      };
    }>;
  }>;
};

export type GetTenantOidcInfoQueryVariables = Exact<{ [key: string]: never }>;

export type GetTenantOidcInfoQuery = {
  __typename?: 'Query';
  tenant: Array<{
    __typename: 'Tenant';
    id: string;
    isOidcEnabled: boolean;
    oidcName: string;
    domain: string;
    adminTeam?: {
      __typename: 'Team';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        slug: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    } | null;
  }>;
};

export type UserLoginMutationVariables = Exact<{
  dto: LoginInput;
}>;

export type UserLoginMutation = {
  __typename?: 'Mutation';
  login: {
    __typename: 'UserLogin';
    canManageTenant: boolean;
    user: {
      __typename: 'User';
      id: string;
      individual: { __typename: 'Individual'; id: string; actor: { __typename: 'Actor'; id: string; slug: string } };
      tenant: { __typename: 'Tenant'; id: string; domain: string };
    };
  };
};

export type GetProjectsSelectQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;

export type GetProjectsSelectQuery = {
  __typename?: 'Query';
  project: Array<{
    __typename: 'Project';
    id: string;
    createdAt: string;
    slug: string;
    start?: string | null;
    end?: string | null;
    name: string;
    isPrivate: boolean;
    banner?: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      event: {
        __typename: 'Event';
        id: string;
        name: string;
        slug: string;
        banner?: { __typename: 'FileUpload'; id: string; url: string } | null;
      };
    }>;
  }>;
};

export type InsertEventMutationVariables = Exact<{
  object: EventInsertInput;
}>;

export type InsertEventMutation = {
  __typename?: 'Mutation';
  insertEventOne?: {
    __typename: 'Event';
    id: string;
    createdAt: string;
    slug: string;
    start: string;
    end: string;
    name: string;
    state: string;
    price: number;
    pointsAwardedForAttendance: number;
    isPrivate: boolean;
    description: string;
    location?: {
      __typename: 'Location';
      id: string;
      type: string;
      onlineLink: string;
      locationDetails: string;
      address?: {
        __typename: 'Address';
        id: string;
        name: string;
        latitude?: number | null;
        longitude?: number | null;
        category: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: string;
      } | null;
    } | null;
    banner?: { __typename: 'FileUpload'; id: string; url: string; type: string } | null;
    eventTags: Array<{
      __typename?: 'EventTags';
      tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
    }>;
    eventOrganizes: Array<{
      __typename: 'EventOrganize';
      id: string;
      eventSupervisors: Array<{
        __typename?: 'EventSupervisor';
        user: {
          __typename: 'User';
          id: string;
          createdAt: string;
          firstName: string;
          lastName: string;
          individual: {
            __typename: 'Individual';
            id: string;
            createdAt: string;
            actor: {
              __typename: 'Actor';
              id: string;
              createdAt: string;
              email: string;
              name: string;
              slug: string;
              website: string;
              bio: string;
              status: string;
              actorImages: Array<{
                __typename: 'ActorImage';
                id: string;
                type: string;
                image: { __typename: 'FileUpload'; id: string; url: string };
              }>;
              actorTags: Array<{
                __typename?: 'ActorTags';
                tag: { __typename: 'Tag'; id: string; createdAt: string; slug: string; name: string; color: string };
              }>;
              socials: Array<{
                __typename: 'Social';
                id: string;
                pseudo: string;
                url: string;
                type: string;
                order: number;
              }>;
            };
          };
        };
      }>;
      team: {
        __typename: 'Team';
        id: string;
        type: string;
        actor: {
          __typename: 'Actor';
          id: string;
          name: string;
          slug: string;
          email: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
        joinForm: { __typename: 'Form'; id: string; schema: JSONType; name: string };
      };
      project?: {
        __typename: 'Project';
        id: string;
        createdAt: string;
        name: string;
        slug: string;
        color: string;
        isPrivate: boolean;
      } | null;
    }>;
    eventJoinsAggregate: {
      __typename?: 'EventJoinAggregate';
      aggregate?: { __typename?: 'EventJoinAggregateFields'; count: number } | null;
    };
    eventJoins: Array<{
      __typename: 'EventJoin';
      id: string;
      createdAt: string;
      state: string;
      isPresent?: boolean | null;
      processedAt?: string | null;
      participationProcessedVia?: string | null;
      participationProcessedAt?: string | null;
      processedBy?: {
        __typename: 'Individual';
        id: string;
        createdAt: string;
        actor: {
          __typename: 'Actor';
          id: string;
          slug: string;
          bio: string;
          name: string;
          email: string;
          status: string;
          website: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
      } | null;
      joinedBy: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            slug: string;
            bio: string;
            name: string;
            email: string;
            website: string;
            status: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              type: string;
              image: { __typename: 'FileUpload'; id: string; url: string };
            }>;
          };
        };
      };
    }>;
    joinForm?: {
      __typename: 'Form';
      id: string;
      createdAt: string;
      schema: JSONType;
      name: string;
      type: string;
    } | null;
  } | null;
};

export type InsertFinanceMutationVariables = Exact<{
  object: FinanceInsertInput;
}>;

export type InsertFinanceMutation = {
  __typename?: 'Mutation';
  insertFinanceOne?: {
    __typename: 'Finance';
    id: string;
    createdAt: string;
    amount: number;
    category: string;
    method: string;
    payedAt: string;
    payedBy: {
      __typename: 'Actor';
      id: string;
      name: string;
      slug: string;
      email: string;
      website: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
      team?: { __typename: 'Team'; id: string; actor: { __typename: 'Actor'; id: string; slug: string } } | null;
      individual?: {
        __typename: 'Individual';
        id: string;
        actor: { __typename: 'Actor'; id: string; slug: string };
      } | null;
    };
    receivedBy: {
      __typename: 'Actor';
      id: string;
      name: string;
      slug: string;
      email: string;
      website: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
      team?: { __typename: 'Team'; id: string; actor: { __typename: 'Actor'; id: string; slug: string } } | null;
      individual?: {
        __typename: 'Individual';
        id: string;
        user?: {
          __typename: 'User';
          id: string;
          individual: {
            __typename: 'Individual';
            id: string;
            actor: { __typename: 'Actor'; id: string; slug: string };
          };
        } | null;
        actor: { __typename: 'Actor'; id: string; slug: string };
      } | null;
    };
    initiatedBy?: {
      __typename: 'Individual';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        slug: string;
        email: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    } | null;
    createdBy?: {
      __typename: 'Individual';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        slug: string;
        email: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
      user?: {
        __typename: 'User';
        id: string;
        individual: { __typename: 'Individual'; id: string; actor: { __typename: 'Actor'; id: string; slug: string } };
      } | null;
    } | null;
    event?: { __typename: 'Event'; id: string; slug: string; name: string } | null;
    project?: { __typename: 'Project'; id: string; slug: string; name: string } | null;
    financeAttachments: Array<{
      __typename?: 'FinanceAttachments';
      attachment: { __typename: 'FileUpload'; id: string; name: string; size: number; type: string; url: string };
    }>;
  } | null;
};

export type ProcessReceiptQueryVariables = Exact<{
  key: Scalars['String']['input'];
}>;

export type ProcessReceiptQuery = {
  __typename?: 'Query';
  processReceipt?: {
    __typename: 'ProcessedReceipt';
    address: string;
    amount?: number | null;
    date?: string | null;
    phone?: string | null;
    vendorName?: string | null;
    lineItems: Array<{ __typename: 'LineItem'; name: string; quantity: number; price: number }>;
  } | null;
};

export type LogoutMutationVariables = Exact<{ [key: string]: never }>;

export type LogoutMutation = { __typename?: 'Mutation'; logout: boolean };

export type GetFinanceLogsQueryVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;

export type GetFinanceLogsQuery = {
  __typename?: 'Query';
  financeLogs: Array<{
    __typename: 'Log';
    id: string;
    createdAt: string;
    context: string;
    diff: JSONType;
    note: string;
    entityId: string;
    entityName: string;
    eventType: string;
    createdBy?: {
      __typename: 'Individual';
      id: string;
      createdAt: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string;
        name: string;
        slug: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string };
        }>;
      };
      user?: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
          };
        };
      } | null;
    } | null;
  }>;
};

export type UpdateFinanceMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: FinanceSetInput;
}>;

export type UpdateFinanceMutation = {
  __typename?: 'Mutation';
  updateFinanceByPk?: {
    __typename: 'Finance';
    id: string;
    createdAt: string;
    amount: number;
    category: string;
    method: string;
    payedAt: string;
    payedBy: {
      __typename: 'Actor';
      id: string;
      name: string;
      slug: string;
      email: string;
      website: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
      team?: { __typename: 'Team'; id: string; actor: { __typename: 'Actor'; id: string; slug: string } } | null;
      individual?: {
        __typename: 'Individual';
        id: string;
        actor: { __typename: 'Actor'; id: string; slug: string };
      } | null;
    };
    receivedBy: {
      __typename: 'Actor';
      id: string;
      name: string;
      slug: string;
      email: string;
      website: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
      team?: { __typename: 'Team'; id: string; actor: { __typename: 'Actor'; id: string; slug: string } } | null;
      individual?: {
        __typename: 'Individual';
        id: string;
        user?: {
          __typename: 'User';
          id: string;
          individual: {
            __typename: 'Individual';
            id: string;
            actor: { __typename: 'Actor'; id: string; slug: string };
          };
        } | null;
      } | null;
    };
    initiatedBy?: {
      __typename: 'Individual';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        slug: string;
        email: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    } | null;
    createdBy?: {
      __typename: 'Individual';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        name: string;
        slug: string;
        email: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
      user?: {
        __typename: 'User';
        id: string;
        individual: { __typename: 'Individual'; id: string; actor: { __typename: 'Actor'; id: string; slug: string } };
      } | null;
    } | null;
    event?: { __typename: 'Event'; id: string; slug: string; name: string } | null;
    project?: { __typename: 'Project'; id: string; slug: string; name: string } | null;
    financeAttachments: Array<{
      __typename?: 'FinanceAttachments';
      attachment: { __typename: 'FileUpload'; id: string; name: string; size: number; type: string; url: string };
    }>;
  } | null;
};

export type GetEventLogsQueryVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;

export type GetEventLogsQuery = {
  __typename?: 'Query';
  eventLogs: Array<{
    __typename: 'Log';
    id: string;
    createdAt: string;
    context: string;
    diff: JSONType;
    note: string;
    entityId: string;
    entityName: string;
    eventType: string;
    createdBy?: {
      __typename: 'Individual';
      id: string;
      createdAt: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string;
        name: string;
        slug: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string };
        }>;
      };
      user?: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
          };
        };
      } | null;
    } | null;
  }>;
};

export type GetTeamLogsQueryVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;

export type GetTeamLogsQuery = {
  __typename?: 'Query';
  teamLogs: Array<{
    __typename: 'Log';
    id: string;
    createdAt: string;
    context: string;
    diff: JSONType;
    note: string;
    entityId: string;
    entityName: string;
    eventType: string;
    createdBy?: {
      __typename: 'Individual';
      id: string;
      createdAt: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string;
        name: string;
        slug: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string };
        }>;
      };
      user?: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
          };
        };
      } | null;
    } | null;
  }>;
};

export type GetTenantLogsQueryVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;

export type GetTenantLogsQuery = {
  __typename?: 'Query';
  tenantLogs: Array<{
    __typename: 'Log';
    id: string;
    createdAt: string;
    context: string;
    diff: JSONType;
    note: string;
    entityId: string;
    entityName: string;
    eventType: string;
    createdBy?: {
      __typename: 'Individual';
      id: string;
      createdAt: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string;
        name: string;
        slug: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string };
        }>;
      };
      user?: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            email: string;
            name: string;
            slug: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
          };
        };
      } | null;
    } | null;
  }>;
};

export type InsertEventApprovalMutationVariables = Exact<{
  object: EventApprovalInsertInput;
}>;

export type InsertEventApprovalMutation = {
  __typename?: 'Mutation';
  insertEventApprovalOne?: {
    __typename: 'EventApproval';
    id: string;
    createdAt: string;
    isApproved: boolean;
    message: string;
    eventApprovalStep?: {
      __typename: 'EventApprovalStep';
      id: string;
      createdAt: string;
      name: string;
      description: string;
      order: number;
      nextSteps: Array<{
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      }>;
      previousStep?: {
        __typename: 'EventApprovalStep';
        id: string;
        createdAt: string;
        name: string;
        description: string;
        order: number;
      } | null;
    } | null;
    createdBy?: {
      __typename: 'Individual';
      id: string;
      createdAt: string;
      actor: {
        __typename: 'Actor';
        id: string;
        createdAt: string;
        email: string;
        name: string;
        slug: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; createdAt: string; url: string };
        }>;
      };
      user?: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: { __typename: 'Actor'; id: string; slug: string };
        };
      } | null;
    } | null;
  } | null;
};

export type InsertSingleUploadMutationVariables = Exact<{
  file: Scalars['Upload']['input'];
  bucket: Scalars['String']['input'];
  entityId: Scalars['String']['input'];
  entityName: Scalars['String']['input'];
}>;

export type InsertSingleUploadMutation = {
  __typename?: 'Mutation';
  singleUpload?: { __typename?: 'FileUpload'; id: string; name: string; url: string; createdAt: string } | null;
};

export type GetLegalUnitLocationsQueryVariables = Exact<{
  where?: InputMaybe<LegalUnitLocationBoolExp>;
  orderBy?: InputMaybe<Array<LegalUnitLocationOrderBy> | LegalUnitLocationOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetLegalUnitLocationsQuery = {
  __typename?: 'Query';
  legalUnitLocation: Array<{
    __typename: 'LegalUnitLocation';
    id: string;
    legalName: string;
    actor: {
      __typename: 'Actor';
      id: string;
      slug: string;
      name: string;
      email: string;
      website: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
    };
    location?: {
      __typename: 'Location';
      id: string;
      type: string;
      onlineLink: string;
      locationDetails: string;
      address?: {
        __typename: 'Address';
        id: string;
        name: string;
        latitude?: number | null;
        longitude?: number | null;
        category: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: string;
      } | null;
    } | null;
  }>;
};

export type GetLegalUnitsQueryVariables = Exact<{
  where?: InputMaybe<LegalUnitBoolExp>;
  orderBy?: InputMaybe<Array<LegalUnitOrderBy> | LegalUnitOrderBy>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;

export type GetLegalUnitsQuery = {
  __typename?: 'Query';
  legalUnit: Array<{
    __typename: 'LegalUnit';
    id: string;
    createdAt: string;
    type: string;
    legalName: string;
    actor: {
      __typename: 'Actor';
      id: string;
      slug: string;
      name: string;
      email: string;
      website: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
    };
  }>;
};

export type InsertLegalUnitMutationVariables = Exact<{
  object: LegalUnitInsertInput;
}>;

export type InsertLegalUnitMutation = {
  __typename?: 'Mutation';
  insertLegalUnitOne?: {
    __typename: 'LegalUnit';
    id: string;
    createdAt: string;
    type: string;
    legalName: string;
    actor: {
      __typename: 'Actor';
      id: string;
      slug: string;
      name: string;
      email: string;
      website: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
    };
  } | null;
};

export type InsertLegalUnitLocationMutationVariables = Exact<{
  object: LegalUnitLocationInsertInput;
}>;

export type InsertLegalUnitLocationMutation = {
  __typename?: 'Mutation';
  insertLegalUnitLocationOne?: {
    __typename: 'LegalUnitLocation';
    id: string;
    legalName: string;
    actor: {
      __typename: 'Actor';
      id: string;
      slug: string;
      name: string;
      email: string;
      website: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
    };
    location?: {
      __typename: 'Location';
      id: string;
      type: string;
      onlineLink: string;
      locationDetails: string;
      address?: {
        __typename: 'Address';
        id: string;
        name: string;
        latitude?: number | null;
        longitude?: number | null;
        category: string;
        streetNumber: string;
        street: string;
        zip: string;
        city: string;
        state: string;
        country: string;
      } | null;
    } | null;
  } | null;
};

export type SearchLocationQueryVariables = Exact<{
  query: Scalars['String']['input'];
}>;

export type SearchLocationQuery = {
  __typename?: 'Query';
  searchLocation: Array<{
    __typename: 'GeocodeAddress';
    geoapifyId: string;
    name: string;
    category: string;
    latitude: number;
    longitude: number;
    street: string;
    streetNumber: string;
    city: string;
    zip: string;
    state: string;
    country: string;
  }>;
};

export type GetTeamPopoverQueryVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;

export type GetTeamPopoverQuery = {
  __typename?: 'Query';
  team: Array<{
    __typename: 'Team';
    id: string;
    createdAt: string;
    type: string;
    membershipFees: number;
    membershipDuration: string;
    directorsCategoryName: string;
    managersCategoryName: string;
    membersCategoryName: string;
    actor: {
      __typename: 'Actor';
      id: string;
      slug: string;
      bio: string;
      name: string;
      status: string;
      email: string;
      website: string;
      actorImages: Array<{
        __typename: 'ActorImage';
        id: string;
        type: string;
        image: { __typename: 'FileUpload'; id: string; url: string };
      }>;
      socials: Array<{ __typename: 'Social'; id: string; pseudo: string; url: string; type: string; order: number }>;
    };
    joinForm: { __typename: 'Form'; id: string; createdAt: string; schema: JSONType; name: string; type: string };
    poles: Array<{ __typename: 'Pole'; id: string; createdAt: string; name: string; description: string }>;
    roles: Array<{
      __typename: 'Role';
      id: string;
      createdAt: string;
      category: string;
      type: string;
      name: string;
      permissions: Array<string>;
    }>;
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      createdAt: string;
      startDate: string;
      endDate?: string | null;
      teamMemberRoles: Array<{
        __typename?: 'TeamMemberRoles';
        role: {
          __typename: 'Role';
          id: string;
          createdAt: string;
          category: string;
          type: string;
          name: string;
          permissions: Array<string>;
        };
      }>;
      user: {
        __typename: 'User';
        id: string;
        createdAt: string;
        firstName: string;
        lastName: string;
        individual: {
          __typename: 'Individual';
          id: string;
          createdAt: string;
          actor: {
            __typename: 'Actor';
            id: string;
            createdAt: string;
            bio: string;
            email: string;
            name: string;
            slug: string;
            status: string;
            website: string;
            actorImages: Array<{
              __typename: 'ActorImage';
              id: string;
              createdAt: string;
              type: string;
              image: {
                __typename: 'FileUpload';
                id: string;
                createdAt: string;
                url: string;
                size: number;
                type: string;
              };
            }>;
          };
        };
      };
    }>;
  }>;
};

export type GetUserPopoverQueryVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;

export type GetUserPopoverQuery = {
  __typename?: 'Query';
  user: Array<{
    __typename: 'User';
    id: string;
    createdAt: string;
    firstName: string;
    lastName: string;
    individual: {
      __typename: 'Individual';
      id: string;
      actor: {
        __typename: 'Actor';
        id: string;
        slug: string;
        bio: string;
        name: string;
        email: string;
        website: string;
        actorImages: Array<{
          __typename: 'ActorImage';
          id: string;
          type: string;
          image: { __typename: 'FileUpload'; id: string; url: string };
        }>;
      };
    };
    teamMembers: Array<{
      __typename: 'TeamMember';
      id: string;
      team: {
        __typename: 'Team';
        id: string;
        type: string;
        actor: {
          __typename: 'Actor';
          id: string;
          slug: string;
          actorImages: Array<{
            __typename: 'ActorImage';
            id: string;
            type: string;
            image: { __typename: 'FileUpload'; id: string; url: string };
          }>;
        };
      };
    }>;
  }>;
};

export type UpdateFormMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  update: FormSetInput;
}>;

export type UpdateFormMutation = {
  __typename?: 'Mutation';
  updateFormByPk?: {
    __typename: 'Form';
    id: string;
    createdAt: string;
    schema: JSONType;
    name: string;
    type: string;
  } | null;
};

export const GetMeDocument = gql`
  query GetMe {
    me {
      __typename
      canManageTenant
      onboardingTeams {
        __typename
        id
        membershipFees
        membershipDuration
        type
        actor {
          __typename
          id
          bio
          email
          name
          slug
          status
          website
          actorImages {
            __typename
            id
            createdAt
            type
            image {
              __typename
              id
              url
            }
          }
          socials(where: { deletedAt: { _isNull: true } }) {
            __typename
            id
            pseudo
            url
            type
            order
          }
        }
        joinForm {
          __typename
          id
          name
          schema
          type
        }
      }
      user {
        __typename
        id
        createdAt
        firstName
        lastName
        individual {
          __typename
          id
          actor {
            __typename
            id
            bio
            email
            name
            slug
            status
            website
            actorImages {
              __typename
              id
              createdAt
              type
              image {
                __typename
                id
                url
              }
            }
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
          following {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              name
              slug
              actorImages {
                __typename
                id
                type
                image {
                  __typename
                  id
                  url
                }
              }
              team {
                __typename
                id
                actor {
                  __typename
                  id
                  slug
                  actorImages {
                    __typename
                    id
                    type
                    image {
                      __typename
                      id
                      url
                    }
                  }
                }
              }
            }
          }
        }
        teamMembers(where: { endDate: { _isNull: true } }) {
          __typename
          id
          createdAt
          startDate
          endDate
          teamMemberRoles {
            role {
              __typename
              id
              createdAt
              category
              type
              name
              permissions
            }
          }
          team {
            __typename
            id
            actor {
              __typename
              id
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                type
                image {
                  __typename
                  id
                  url
                }
              }
            }
          }
        }
        eventJoins {
          __typename
          id
          createdAt
          state
          isPresent
          event {
            __typename
            id
            slug
          }
        }
        teamJoins {
          __typename
          id
          createdAt
          state
          team {
            __typename
            id
            createdAt
            type
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
            }
          }
        }
        shortcuts {
          __typename
          id
          createdAt
          type
          actor {
            __typename
            id
            createdAt
            email
            name
            slug
            website
            actorImages {
              __typename
              id
              createdAt
              type
              image {
                __typename
                id
                createdAt
                url
                size
                type
              }
            }
          }
        }
        tenant {
          __typename
          id
          createdAt
          domain
          pointName
          eventValidationForm {
            __typename
            id
            name
            schema
            type
          }
          eventApprovalSteps {
            __typename
            id
            name
            order
          }
          adminTeam {
            __typename
            id
            actor {
              __typename
              id
              bio
              name
              slug
              website
              actorImages {
                __typename
                id
                type
                image {
                  __typename
                  id
                  url
                }
              }
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetMeQuery__
 *
 * To run a query within a React component, call `useGetMeQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetMeQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetMeQuery({
 *   variables: {
 *   },
 * });
 */
export function useGetMeQuery(baseOptions?: Apollo.QueryHookOptions<GetMeQuery, GetMeQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetMeQuery, GetMeQueryVariables>(GetMeDocument, options);
}
export function useGetMeLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetMeQuery, GetMeQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetMeQuery, GetMeQueryVariables>(GetMeDocument, options);
}
export type GetMeQueryHookResult = ReturnType<typeof useGetMeQuery>;
export type GetMeLazyQueryHookResult = ReturnType<typeof useGetMeLazyQuery>;
export type GetMeQueryResult = Apollo.QueryResult<GetMeQuery, GetMeQueryVariables>;
export const InsertFollowDocument = gql`
  mutation InsertFollow($object: FollowInsertInput!) {
    insertFollowOne(object: $object) {
      __typename
      id
      actor {
        __typename
        id
        email
        name
        slug
        website
      }
      createdBy {
        __typename
        id
        createdAt
        actor {
          __typename
          id
          createdAt
          email
          name
          slug
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              createdAt
              url
            }
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              slug
            }
          }
        }
      }
    }
  }
`;
export type InsertFollowMutationFn = Apollo.MutationFunction<InsertFollowMutation, InsertFollowMutationVariables>;

/**
 * __useInsertFollowMutation__
 *
 * To run a mutation, you first call `useInsertFollowMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertFollowMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertFollowMutation, { data, loading, error }] = useInsertFollowMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertFollowMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertFollowMutation, InsertFollowMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertFollowMutation, InsertFollowMutationVariables>(InsertFollowDocument, options);
}
export type InsertFollowMutationHookResult = ReturnType<typeof useInsertFollowMutation>;
export type InsertFollowMutationResult = Apollo.MutationResult<InsertFollowMutation>;
export type InsertFollowMutationOptions = Apollo.BaseMutationOptions<
  InsertFollowMutation,
  InsertFollowMutationVariables
>;
export const GetEventJoinDocument = gql`
  query GetEventJoin($eventJoinId: bigint!, $userId: bigint!) {
    eventJoinByPk(id: $eventJoinId) {
      __typename
      id
      isPresent
      state
      event {
        __typename
        id
        slug
        start
        end
        eventOrganizes {
          __typename
          id
          eventSupervisors(where: { user: { id: { _eq: $userId } } }) {
            user {
              __typename
              id
              individual {
                __typename
                id
                actor {
                  __typename
                  id
                  slug
                  name
                }
              }
            }
          }
          team {
            __typename
            id
          }
        }
      }
      joinedBy {
        __typename
        id
        individual {
          __typename
          id
          actor {
            __typename
            id
            slug
            name
          }
        }
      }
    }
  }
`;

/**
 * __useGetEventJoinQuery__
 *
 * To run a query within a React component, call `useGetEventJoinQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetEventJoinQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetEventJoinQuery({
 *   variables: {
 *      eventJoinId: // value for 'eventJoinId'
 *      userId: // value for 'userId'
 *   },
 * });
 */
export function useGetEventJoinQuery(
  baseOptions: Apollo.QueryHookOptions<GetEventJoinQuery, GetEventJoinQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetEventJoinQuery, GetEventJoinQueryVariables>(GetEventJoinDocument, options);
}
export function useGetEventJoinLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetEventJoinQuery, GetEventJoinQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetEventJoinQuery, GetEventJoinQueryVariables>(GetEventJoinDocument, options);
}
export type GetEventJoinQueryHookResult = ReturnType<typeof useGetEventJoinQuery>;
export type GetEventJoinLazyQueryHookResult = ReturnType<typeof useGetEventJoinLazyQuery>;
export type GetEventJoinQueryResult = Apollo.QueryResult<GetEventJoinQuery, GetEventJoinQueryVariables>;
export const UpdateEventJoinDocument = gql`
  mutation UpdateEventJoin($id: bigint!, $update: EventJoinSetInput!) {
    updateEventJoinByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      state
      processedAt
      processedBy {
        __typename
        id
        createdAt
        actor {
          __typename
          id
          slug
          bio
          name
          email
          status
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
    }
  }
`;
export type UpdateEventJoinMutationFn = Apollo.MutationFunction<
  UpdateEventJoinMutation,
  UpdateEventJoinMutationVariables
>;

/**
 * __useUpdateEventJoinMutation__
 *
 * To run a mutation, you first call `useUpdateEventJoinMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateEventJoinMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateEventJoinMutation, { data, loading, error }] = useUpdateEventJoinMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateEventJoinMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateEventJoinMutation, UpdateEventJoinMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateEventJoinMutation, UpdateEventJoinMutationVariables>(
    UpdateEventJoinDocument,
    options,
  );
}
export type UpdateEventJoinMutationHookResult = ReturnType<typeof useUpdateEventJoinMutation>;
export type UpdateEventJoinMutationResult = Apollo.MutationResult<UpdateEventJoinMutation>;
export type UpdateEventJoinMutationOptions = Apollo.BaseMutationOptions<
  UpdateEventJoinMutation,
  UpdateEventJoinMutationVariables
>;
export const GetEventDocument = gql`
  query GetEvent($slug: String!) {
    event(where: { slug: { _eq: $slug } }, limit: 1) {
      __typename
      id
      createdAt
      description
      slug
      start
      end
      name
      state
      price
      pointsAwardedForAttendance
      isPrivate
      location {
        __typename
        id
        type
        onlineLink
        locationDetails
        address {
          __typename
          id
          name
          latitude
          longitude
          category
          streetNumber
          street
          zip
          city
          state
          country
        }
      }
      banner {
        __typename
        id
        url
        type
      }
      eventTags {
        tag {
          __typename
          id
          createdAt
          slug
          name
          color
        }
      }
      eventOrganizes {
        __typename
        id
        eventSupervisors {
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            individual {
              __typename
              id
              createdAt
              actor {
                __typename
                id
                createdAt
                email
                name
                slug
                website
                actorImages {
                  __typename
                  id
                  type
                  image {
                    __typename
                    id
                    url
                  }
                }
                bio
                status
                actorTags {
                  tag {
                    __typename
                    id
                    createdAt
                    slug
                    name
                    color
                  }
                }
                socials(where: { deletedAt: { _isNull: true } }) {
                  __typename
                  id
                  pseudo
                  url
                  type
                  order
                }
              }
            }
          }
        }
        team {
          __typename
          id
          type
          actor {
            __typename
            id
            name
            slug
            email
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
          joinForm {
            __typename
            id
            schema
            name
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
      }
      eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
        aggregate {
          count
        }
      }
      eventJoins(where: { state: { _eq: "Approved" } }, limit: 12) {
        __typename
        id
        createdAt
        state
        isPresent
        processedAt
        participationProcessedVia
        participationProcessedAt
        processedBy {
          __typename
          id
          createdAt
          actor {
            __typename
            id
            slug
            bio
            name
            email
            status
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
        }
        joinedBy {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              slug
              bio
              name
              email
              website
              status
              actorImages {
                __typename
                id
                type
                image {
                  __typename
                  id
                  url
                }
              }
            }
          }
        }
      }
      joinForm {
        __typename
        id
        createdAt
        schema
        name
        type
      }
    }
  }
`;

/**
 * __useGetEventQuery__
 *
 * To run a query within a React component, call `useGetEventQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetEventQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetEventQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetEventQuery(baseOptions: Apollo.QueryHookOptions<GetEventQuery, GetEventQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetEventQuery, GetEventQueryVariables>(GetEventDocument, options);
}
export function useGetEventLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetEventQuery, GetEventQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetEventQuery, GetEventQueryVariables>(GetEventDocument, options);
}
export type GetEventQueryHookResult = ReturnType<typeof useGetEventQuery>;
export type GetEventLazyQueryHookResult = ReturnType<typeof useGetEventLazyQuery>;
export type GetEventQueryResult = Apollo.QueryResult<GetEventQuery, GetEventQueryVariables>;
export const InsertEventJoinDocument = gql`
  mutation InsertEventJoin($object: EventJoinInsertInput!) {
    insertEventJoinOne(object: $object) {
      __typename
      id
    }
  }
`;
export type InsertEventJoinMutationFn = Apollo.MutationFunction<
  InsertEventJoinMutation,
  InsertEventJoinMutationVariables
>;

/**
 * __useInsertEventJoinMutation__
 *
 * To run a mutation, you first call `useInsertEventJoinMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertEventJoinMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertEventJoinMutation, { data, loading, error }] = useInsertEventJoinMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertEventJoinMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertEventJoinMutation, InsertEventJoinMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertEventJoinMutation, InsertEventJoinMutationVariables>(
    InsertEventJoinDocument,
    options,
  );
}
export type InsertEventJoinMutationHookResult = ReturnType<typeof useInsertEventJoinMutation>;
export type InsertEventJoinMutationResult = Apollo.MutationResult<InsertEventJoinMutation>;
export type InsertEventJoinMutationOptions = Apollo.BaseMutationOptions<
  InsertEventJoinMutation,
  InsertEventJoinMutationVariables
>;
export const GetEventsDocument = gql`
  query GetEvents($where: EventBoolExp, $orderBy: [EventOrderBy!], $limit: Int, $offset: Int) {
    event(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      createdAt
      slug
      start
      end
      name
      state
      price
      pointsAwardedForAttendance
      isPrivate
      description
      location {
        __typename
        id
        type
        onlineLink
        locationDetails
        address {
          __typename
          id
          name
          latitude
          longitude
          category
          streetNumber
          street
          zip
          city
          state
          country
        }
      }
      banner {
        __typename
        id
        url
        type
      }
      eventTags {
        tag {
          __typename
          id
          createdAt
          slug
          name
          color
        }
      }
      eventOrganizes {
        __typename
        id
        eventSupervisors {
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            individual {
              __typename
              id
              createdAt
              actor {
                __typename
                id
                createdAt
                email
                name
                slug
                website
                actorImages {
                  __typename
                  id
                  createdAt
                  type
                  image {
                    __typename
                    id
                    createdAt
                    url
                    size
                    type
                  }
                }
                bio
                status
                actorTags {
                  tag {
                    __typename
                    id
                    createdAt
                    slug
                    name
                    color
                  }
                }
                socials(where: { deletedAt: { _isNull: true } }) {
                  __typename
                  id
                  pseudo
                  url
                  type
                  order
                }
              }
            }
          }
        }
        team {
          __typename
          id
          type
          actor {
            __typename
            id
            name
            slug
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
          joinForm {
            __typename
            id
            schema
            name
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
      }
      eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
        aggregate {
          count
        }
      }
      eventJoins(where: { state: { _eq: "Approved" } }, limit: 12) {
        __typename
        id
        createdAt
        state
        isPresent
        joinedBy {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
              bio
              status
              actorTags {
                tag {
                  __typename
                  id
                  createdAt
                  slug
                  name
                  color
                }
              }
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
        formSubmission {
          __typename
          id
          createdAt
          submission
          form {
            __typename
            id
            createdAt
            schema
            name
            type
          }
        }
        processedBy {
          __typename
          id
          createdAt
          actor {
            __typename
            id
            createdAt
            email
            name
            slug
            website
            actorImages {
              __typename
              id
              createdAt
              type
              image {
                __typename
                id
                createdAt
                url
                size
                type
              }
            }
            bio
            status
            actorTags {
              tag {
                __typename
                id
                createdAt
                slug
                name
                color
              }
            }
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
        }
        processedAt
        participationProcessedVia
        participationProcessedAt
      }
      joinForm {
        __typename
        id
        createdAt
        schema
        name
        type
      }
    }
  }
`;

/**
 * __useGetEventsQuery__
 *
 * To run a query within a React component, call `useGetEventsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetEventsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetEventsQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetEventsQuery(baseOptions?: Apollo.QueryHookOptions<GetEventsQuery, GetEventsQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetEventsQuery, GetEventsQueryVariables>(GetEventsDocument, options);
}
export function useGetEventsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetEventsQuery, GetEventsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetEventsQuery, GetEventsQueryVariables>(GetEventsDocument, options);
}
export type GetEventsQueryHookResult = ReturnType<typeof useGetEventsQuery>;
export type GetEventsLazyQueryHookResult = ReturnType<typeof useGetEventsLazyQuery>;
export type GetEventsQueryResult = Apollo.QueryResult<GetEventsQuery, GetEventsQueryVariables>;
export const GetEventManageDocument = gql`
  query GetEventManage($slug: String!) {
    event(where: { slug: { _eq: $slug } }, limit: 1) {
      __typename
      id
      createdAt
      start
      end
      name
      slug
      description
      location {
        __typename
        id
        createdAt
        type
        onlineLink
        locationDetails
        address {
          __typename
          id
          createdAt
          latitude
          longitude
          category
          name
          streetNumber
          street
          zip
          city
          state
          country
        }
      }
      state
      price
      pointsAwardedForAttendance
      banner {
        __typename
        id
        createdAt
        url
        size
        type
        name
      }
      isPrivate
      eventTags {
        tag {
          __typename
          id
          createdAt
          slug
          name
          color
        }
      }
      eventOrganizes {
        __typename
        id
        team {
          __typename
          id
          createdAt
          type
          directorsCategoryName
          managersCategoryName
          membersCategoryName
          actor {
            __typename
            id
            createdAt
            name
            slug
            email
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
            bio
            status
            actorTags {
              tag {
                __typename
                id
                createdAt
                slug
                name
                color
              }
            }
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
          joinForm {
            __typename
            id
            createdAt
            schema
            name
            type
          }
          teamMembersAggregate {
            aggregate {
              count
            }
          }
          poles {
            __typename
            id
            createdAt
            name
            description
          }
          projects {
            __typename
            id
            name
            slug
            banner {
              __typename
              id
              url
            }
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
        eventSupervisors {
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            individual {
              __typename
              id
              createdAt
              actor {
                __typename
                id
                createdAt
                email
                name
                slug
                website
                actorImages {
                  __typename
                  id
                  type
                  image {
                    __typename
                    id
                    url
                  }
                }
                bio
                status
                actorTags {
                  tag {
                    __typename
                    id
                    createdAt
                    slug
                    name
                    color
                  }
                }
                socials(where: { deletedAt: { _isNull: true } }) {
                  __typename
                  id
                  pseudo
                  url
                  type
                  order
                }
              }
            }
          }
        }
      }
      eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
        aggregate {
          count
        }
      }
      eventJoins(orderBy: [{ participationProcessedAt: DESC }]) {
        __typename
        id
        createdAt
        state
        isPresent
        joinedBy {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              slug
              bio
              name
              email
              status
              website
              actorImages {
                __typename
                id
                type
                image {
                  __typename
                  id
                  url
                }
              }
            }
          }
        }
        formSubmission {
          __typename
          id
          createdAt
          form {
            __typename
            id
            createdAt
            schema
            name
            type
          }
          submission
        }
        processedBy {
          __typename
          id
          createdAt
          actor {
            __typename
            id
            slug
            email
            name
            bio
            status
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
        }
        processedAt
        participationProcessedVia
        participationProcessedAt
        participationProcessedBy {
          __typename
          id
          createdAt
          actor {
            __typename
            id
            slug
            email
            name
            bio
            status
            website
            actorImages {
              __typename
              id
              createdAt
              type
              image {
                __typename
                id
                createdAt
                url
                size
                type
              }
            }
          }
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            individual {
              __typename
              id
              createdAt
              actor {
                __typename
                id
                createdAt
                email
                name
                slug
                website
                actorImages {
                  __typename
                  id
                  createdAt
                  type
                  image {
                    __typename
                    id
                    createdAt
                    url
                    size
                    type
                  }
                }
              }
            }
          }
        }
      }
      joinForm {
        __typename
        id
        createdAt
        schema
        name
        type
      }
      eventApprovals {
        __typename
        id
        createdAt
        isApproved
        message
        eventApprovalStep {
          __typename
          id
          createdAt
          name
          description
          order
          nextSteps {
            __typename
            id
            createdAt
            name
            description
            order
          }
          previousStep {
            __typename
            id
            createdAt
            name
            description
            order
          }
        }
        createdBy {
          __typename
          id
          createdAt
          actor {
            __typename
            id
            createdAt
            email
            name
            slug
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                createdAt
                url
              }
            }
          }
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            individual {
              __typename
              id
              createdAt
              actor {
                __typename
                id
                slug
              }
            }
          }
        }
      }
      nextEventApprovalStep {
        __typename
        id
        createdAt
        name
        description
        order
        nextSteps {
          __typename
          id
          createdAt
          name
          description
          order
        }
        previousStep {
          __typename
          id
          createdAt
          name
          description
          order
        }
      }
      eventApprovalSubmission {
        __typename
        id
        createdAt
        form {
          __typename
          id
          createdAt
          schema
          name
          type
        }
        submission
      }
    }
  }
`;

/**
 * __useGetEventManageQuery__
 *
 * To run a query within a React component, call `useGetEventManageQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetEventManageQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetEventManageQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetEventManageQuery(
  baseOptions: Apollo.QueryHookOptions<GetEventManageQuery, GetEventManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetEventManageQuery, GetEventManageQueryVariables>(GetEventManageDocument, options);
}
export function useGetEventManageLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetEventManageQuery, GetEventManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetEventManageQuery, GetEventManageQueryVariables>(GetEventManageDocument, options);
}
export type GetEventManageQueryHookResult = ReturnType<typeof useGetEventManageQuery>;
export type GetEventManageLazyQueryHookResult = ReturnType<typeof useGetEventManageLazyQuery>;
export type GetEventManageQueryResult = Apollo.QueryResult<GetEventManageQuery, GetEventManageQueryVariables>;
export const UpdateEventDocument = gql`
  mutation UpdateEvent($id: bigint!, $update: EventSetInput!) {
    updateEventByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      createdAt
      start
      end
      name
      slug
      description
      location {
        __typename
        id
        createdAt
        type
        onlineLink
        locationDetails
        address {
          __typename
          id
          createdAt
          latitude
          longitude
          category
          name
          streetNumber
          street
          zip
          city
          state
          country
        }
      }
      state
      price
      pointsAwardedForAttendance
      banner {
        __typename
        id
        createdAt
        url
        size
        type
        name
      }
      isPrivate
      eventTags {
        tag {
          __typename
          id
          createdAt
          slug
          name
          color
        }
      }
      eventOrganizes {
        __typename
        id
        team {
          __typename
          id
          createdAt
          type
          actor {
            __typename
            id
            createdAt
            name
            slug
            email
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
            bio
            status
            actorTags {
              tag {
                __typename
                id
                createdAt
                slug
                name
                color
              }
            }
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
          directorsCategoryName
          managersCategoryName
          membersCategoryName
          joinForm {
            __typename
            id
            createdAt
            schema
            name
            type
          }
          teamMembersAggregate {
            aggregate {
              count
            }
          }
          poles {
            __typename
            id
            createdAt
            name
            description
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
        eventSupervisors {
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            individual {
              __typename
              id
              createdAt
              actor {
                __typename
                id
                createdAt
                email
                name
                slug
                website
                actorImages {
                  __typename
                  id
                  type
                  image {
                    __typename
                    id
                    url
                  }
                }
                bio
                status
                actorTags {
                  tag {
                    __typename
                    id
                    createdAt
                    slug
                    name
                    color
                  }
                }
                socials(where: { deletedAt: { _isNull: true } }) {
                  __typename
                  id
                  pseudo
                  url
                  type
                  order
                }
              }
            }
          }
        }
      }
      eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
        aggregate {
          count
        }
      }
      eventJoins(orderBy: [{ participationProcessedAt: DESC }]) {
        __typename
        id
        createdAt
        state
        isPresent
        joinedBy {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              slug
              bio
              name
              email
              status
              website
              actorImages {
                __typename
                id
                type
                image {
                  __typename
                  id
                  url
                }
              }
            }
          }
        }
        formSubmission {
          __typename
          id
          createdAt
          form {
            __typename
            id
            createdAt
            schema
            name
            type
          }
          submission
        }
        processedBy {
          __typename
          id
          createdAt
          actor {
            __typename
            id
            slug
            email
            name
            bio
            status
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
        }
        processedAt
        participationProcessedVia
        participationProcessedAt
        participationProcessedBy {
          __typename
          id
          createdAt
          actor {
            __typename
            id
            slug
            email
            name
            bio
            status
            website
            actorImages {
              __typename
              id
              createdAt
              type
              image {
                __typename
                id
                createdAt
                url
                size
                type
              }
            }
          }
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            individual {
              __typename
              id
              createdAt
              actor {
                __typename
                id
                createdAt
                email
                name
                slug
                website
                actorImages {
                  __typename
                  id
                  createdAt
                  type
                  image {
                    __typename
                    id
                    createdAt
                    url
                    size
                    type
                  }
                }
              }
            }
          }
        }
      }
      joinForm {
        __typename
        id
        createdAt
        schema
        name
        type
      }
      eventApprovals {
        __typename
        id
        createdAt
        isApproved
        message
        eventApprovalStep {
          __typename
          id
          createdAt
          name
          description
          order
          nextSteps {
            __typename
            id
            createdAt
            name
            description
            order
          }
          previousStep {
            __typename
            id
            createdAt
            name
            description
            order
          }
        }
        createdBy {
          __typename
          id
          createdAt
          actor {
            __typename
            id
            createdAt
            email
            name
            slug
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                createdAt
                url
              }
            }
          }
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            individual {
              __typename
              id
              createdAt
              actor {
                __typename
                id
                createdAt
                email
                name
                slug
                website
                actorImages {
                  __typename
                  id
                  createdAt
                  type
                  image {
                    __typename
                    id
                    createdAt
                    url
                    size
                    type
                  }
                }
              }
            }
          }
        }
      }
      nextEventApprovalStep {
        __typename
        id
        createdAt
        name
        description
        order
        nextSteps {
          __typename
          id
          createdAt
          name
          description
          order
        }
        previousStep {
          __typename
          id
          createdAt
          name
          description
          order
        }
      }
      eventApprovalSubmission {
        __typename
        id
        createdAt
        form {
          __typename
          id
          createdAt
          schema
          name
          type
        }
        submission
      }
    }
  }
`;
export type UpdateEventMutationFn = Apollo.MutationFunction<UpdateEventMutation, UpdateEventMutationVariables>;

/**
 * __useUpdateEventMutation__
 *
 * To run a mutation, you first call `useUpdateEventMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateEventMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateEventMutation, { data, loading, error }] = useUpdateEventMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateEventMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateEventMutation, UpdateEventMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateEventMutation, UpdateEventMutationVariables>(UpdateEventDocument, options);
}
export type UpdateEventMutationHookResult = ReturnType<typeof useUpdateEventMutation>;
export type UpdateEventMutationResult = Apollo.MutationResult<UpdateEventMutation>;
export type UpdateEventMutationOptions = Apollo.BaseMutationOptions<UpdateEventMutation, UpdateEventMutationVariables>;
export const UpdateEventOrganizeProjectManyDocument = gql`
  mutation UpdateEventOrganizeProjectMany($updates: [EventOrganizeUpdates!]!) {
    updateEventOrganizeMany(updates: $updates) {
      returning {
        __typename
        id
        team {
          __typename
          id
          type
          actor {
            __typename
            id
            slug
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
      }
    }
  }
`;
export type UpdateEventOrganizeProjectManyMutationFn = Apollo.MutationFunction<
  UpdateEventOrganizeProjectManyMutation,
  UpdateEventOrganizeProjectManyMutationVariables
>;

/**
 * __useUpdateEventOrganizeProjectManyMutation__
 *
 * To run a mutation, you first call `useUpdateEventOrganizeProjectManyMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateEventOrganizeProjectManyMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateEventOrganizeProjectManyMutation, { data, loading, error }] = useUpdateEventOrganizeProjectManyMutation({
 *   variables: {
 *      updates: // value for 'updates'
 *   },
 * });
 */
export function useUpdateEventOrganizeProjectManyMutation(
  baseOptions?: Apollo.MutationHookOptions<
    UpdateEventOrganizeProjectManyMutation,
    UpdateEventOrganizeProjectManyMutationVariables
  >,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateEventOrganizeProjectManyMutation, UpdateEventOrganizeProjectManyMutationVariables>(
    UpdateEventOrganizeProjectManyDocument,
    options,
  );
}
export type UpdateEventOrganizeProjectManyMutationHookResult = ReturnType<
  typeof useUpdateEventOrganizeProjectManyMutation
>;
export type UpdateEventOrganizeProjectManyMutationResult =
  Apollo.MutationResult<UpdateEventOrganizeProjectManyMutation>;
export type UpdateEventOrganizeProjectManyMutationOptions = Apollo.BaseMutationOptions<
  UpdateEventOrganizeProjectManyMutation,
  UpdateEventOrganizeProjectManyMutationVariables
>;
export const UpdateLocationDocument = gql`
  mutation UpdateLocation($id: bigint!, $update: LocationSetInput!) {
    updateLocationByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      createdAt
      type
      onlineLink
      locationDetails
      address {
        __typename
        id
        createdAt
        latitude
        longitude
        category
        name
        streetNumber
        street
        zip
        city
        state
        country
      }
    }
  }
`;
export type UpdateLocationMutationFn = Apollo.MutationFunction<UpdateLocationMutation, UpdateLocationMutationVariables>;

/**
 * __useUpdateLocationMutation__
 *
 * To run a mutation, you first call `useUpdateLocationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateLocationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateLocationMutation, { data, loading, error }] = useUpdateLocationMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateLocationMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateLocationMutation, UpdateLocationMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateLocationMutation, UpdateLocationMutationVariables>(UpdateLocationDocument, options);
}
export type UpdateLocationMutationHookResult = ReturnType<typeof useUpdateLocationMutation>;
export type UpdateLocationMutationResult = Apollo.MutationResult<UpdateLocationMutation>;
export type UpdateLocationMutationOptions = Apollo.BaseMutationOptions<
  UpdateLocationMutation,
  UpdateLocationMutationVariables
>;
export const GetProjectManageDocument = gql`
  query GetProjectManage($slug: String!) {
    project(where: { slug: { _eq: $slug } }, limit: 1) {
      __typename
      id
      createdAt
      slug
      start
      end
      name
      isPrivate
      banner {
        __typename
        id
        url
        type
      }
      team {
        __typename
        id
        type
        actor {
          __typename
          id
          slug
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
      eventOrganizes {
        eventSupervisors {
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            individual {
              __typename
              id
              createdAt
              actor {
                __typename
                id
                createdAt
                email
                name
                slug
                website
                actorImages {
                  __typename
                  id
                  createdAt
                  type
                  image {
                    __typename
                    id
                    createdAt
                    url
                    size
                    type
                  }
                }
                bio
                status
                actorTags {
                  tag {
                    __typename
                    id
                    createdAt
                    slug
                    name
                    color
                  }
                }
                socials(where: { deletedAt: { _isNull: true } }) {
                  __typename
                  id
                  pseudo
                  url
                  type
                  order
                }
              }
            }
          }
        }
        team {
          __typename
          id
          type
          actor {
            __typename
            id
            name
            slug
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
          joinForm {
            __typename
            id
            schema
            name
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
      }
    }
  }
`;

/**
 * __useGetProjectManageQuery__
 *
 * To run a query within a React component, call `useGetProjectManageQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetProjectManageQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetProjectManageQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetProjectManageQuery(
  baseOptions: Apollo.QueryHookOptions<GetProjectManageQuery, GetProjectManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetProjectManageQuery, GetProjectManageQueryVariables>(GetProjectManageDocument, options);
}
export function useGetProjectManageLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetProjectManageQuery, GetProjectManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetProjectManageQuery, GetProjectManageQueryVariables>(GetProjectManageDocument, options);
}
export type GetProjectManageQueryHookResult = ReturnType<typeof useGetProjectManageQuery>;
export type GetProjectManageLazyQueryHookResult = ReturnType<typeof useGetProjectManageLazyQuery>;
export type GetProjectManageQueryResult = Apollo.QueryResult<GetProjectManageQuery, GetProjectManageQueryVariables>;
export const GetTeamJoinsDocument = gql`
  query GetTeamJoins($where: TeamJoinBoolExp, $orderBy: [TeamJoinOrderBy!], $limit: Int, $offset: Int) {
    teamJoin(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      state
      joinedBy {
        __typename
        id
        createdAt
        firstName
        lastName
        individual {
          __typename
          id
          createdAt
          actor {
            __typename
            id
            slug
            bio
            name
            email
            website
            status
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
        }
      }
      team {
        __typename
        id
        actor {
          __typename
          id
          email
          name
          slug
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
      formSubmission {
        __typename
        id
        createdAt
        submission
        form {
          __typename
          id
          createdAt
          schema
          name
          type
        }
      }
      receivedRole {
        __typename
        id
        createdAt
        category
        type
        name
        permissions
      }
    }
  }
`;

/**
 * __useGetTeamJoinsQuery__
 *
 * To run a query within a React component, call `useGetTeamJoinsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTeamJoinsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTeamJoinsQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetTeamJoinsQuery(
  baseOptions?: Apollo.QueryHookOptions<GetTeamJoinsQuery, GetTeamJoinsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTeamJoinsQuery, GetTeamJoinsQueryVariables>(GetTeamJoinsDocument, options);
}
export function useGetTeamJoinsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTeamJoinsQuery, GetTeamJoinsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTeamJoinsQuery, GetTeamJoinsQueryVariables>(GetTeamJoinsDocument, options);
}
export type GetTeamJoinsQueryHookResult = ReturnType<typeof useGetTeamJoinsQuery>;
export type GetTeamJoinsLazyQueryHookResult = ReturnType<typeof useGetTeamJoinsLazyQuery>;
export type GetTeamJoinsQueryResult = Apollo.QueryResult<GetTeamJoinsQuery, GetTeamJoinsQueryVariables>;
export const UpdateTeamJoinDocument = gql`
  mutation UpdateTeamJoin($id: bigint!, $update: TeamJoinSetInput!) {
    updateTeamJoinByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      state
      joinedBy {
        __typename
        id
        createdAt
        firstName
        lastName
        individual {
          __typename
          id
          createdAt
          actor {
            __typename
            id
            slug
            bio
            name
            email
            website
            status
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
        }
      }
    }
  }
`;
export type UpdateTeamJoinMutationFn = Apollo.MutationFunction<UpdateTeamJoinMutation, UpdateTeamJoinMutationVariables>;

/**
 * __useUpdateTeamJoinMutation__
 *
 * To run a mutation, you first call `useUpdateTeamJoinMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateTeamJoinMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateTeamJoinMutation, { data, loading, error }] = useUpdateTeamJoinMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateTeamJoinMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateTeamJoinMutation, UpdateTeamJoinMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateTeamJoinMutation, UpdateTeamJoinMutationVariables>(UpdateTeamJoinDocument, options);
}
export type UpdateTeamJoinMutationHookResult = ReturnType<typeof useUpdateTeamJoinMutation>;
export type UpdateTeamJoinMutationResult = Apollo.MutationResult<UpdateTeamJoinMutation>;
export type UpdateTeamJoinMutationOptions = Apollo.BaseMutationOptions<
  UpdateTeamJoinMutation,
  UpdateTeamJoinMutationVariables
>;
export const GetUsersWithPointsDocument = gql`
  query GetUsersWithPoints($slug: String!) {
    user(
      where: {
        _or: [
          { actions: { pointsProcessedAt: { _isNull: false }, team: { actor: { slug: { _eq: $slug } } } } }
          {
            eventJoins: {
              participationProcessedAt: { _isNull: false }
              event: { eventOrganizes: { team: { actor: { slug: { _eq: $slug } } } } }
            }
          }
          {
            missionJoins: {
              pointsProcessedAt: { _isNull: false }
              mission: { team: { actor: { slug: { _eq: $slug } } } }
            }
          }
        ]
      }
    ) {
      __typename
      id
      createdAt
      firstName
      lastName
      individual {
        __typename
        id
        actor {
          __typename
          id
          slug
          bio
          name
          email
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
      eventJoins(
        where: {
          participationProcessedAt: { _isNull: false }
          event: { eventOrganizes: { team: { actor: { slug: { _eq: $slug } } } } }
        }
      ) {
        __typename
        id
        processedAt
        event {
          __typename
          id
          slug
          pointsAwardedForAttendance
        }
      }
      actions(where: { pointsProcessedAt: { _isNull: false }, team: { actor: { slug: { _eq: $slug } } } }) {
        __typename
        id
        points
        pointsProcessedAt
      }
      missionJoins(
        where: { pointsProcessedAt: { _isNull: false }, mission: { team: { actor: { slug: { _eq: $slug } } } } }
      ) {
        __typename
        id
        points
        pointsProcessedAt
      }
    }
  }
`;

/**
 * __useGetUsersWithPointsQuery__
 *
 * To run a query within a React component, call `useGetUsersWithPointsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetUsersWithPointsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetUsersWithPointsQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetUsersWithPointsQuery(
  baseOptions: Apollo.QueryHookOptions<GetUsersWithPointsQuery, GetUsersWithPointsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetUsersWithPointsQuery, GetUsersWithPointsQueryVariables>(
    GetUsersWithPointsDocument,
    options,
  );
}
export function useGetUsersWithPointsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetUsersWithPointsQuery, GetUsersWithPointsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetUsersWithPointsQuery, GetUsersWithPointsQueryVariables>(
    GetUsersWithPointsDocument,
    options,
  );
}
export type GetUsersWithPointsQueryHookResult = ReturnType<typeof useGetUsersWithPointsQuery>;
export type GetUsersWithPointsLazyQueryHookResult = ReturnType<typeof useGetUsersWithPointsLazyQuery>;
export type GetUsersWithPointsQueryResult = Apollo.QueryResult<
  GetUsersWithPointsQuery,
  GetUsersWithPointsQueryVariables
>;
export const DeleteSocialsDocument = gql`
  mutation DeleteSocials($where: SocialBoolExp!) {
    deleteSocial(where: $where) {
      returning {
        __typename
        id
        deletedAt
        type
        pseudo
        order
        url
      }
    }
  }
`;
export type DeleteSocialsMutationFn = Apollo.MutationFunction<DeleteSocialsMutation, DeleteSocialsMutationVariables>;

/**
 * __useDeleteSocialsMutation__
 *
 * To run a mutation, you first call `useDeleteSocialsMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteSocialsMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteSocialsMutation, { data, loading, error }] = useDeleteSocialsMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteSocialsMutation(
  baseOptions?: Apollo.MutationHookOptions<DeleteSocialsMutation, DeleteSocialsMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<DeleteSocialsMutation, DeleteSocialsMutationVariables>(DeleteSocialsDocument, options);
}
export type DeleteSocialsMutationHookResult = ReturnType<typeof useDeleteSocialsMutation>;
export type DeleteSocialsMutationResult = Apollo.MutationResult<DeleteSocialsMutation>;
export type DeleteSocialsMutationOptions = Apollo.BaseMutationOptions<
  DeleteSocialsMutation,
  DeleteSocialsMutationVariables
>;
export const InsertSocialsDocument = gql`
  mutation InsertSocials($objects: [SocialInsertInput!]!) {
    insertSocial(objects: $objects) {
      returning {
        __typename
        id
        type
        pseudo
        order
        url
      }
    }
  }
`;
export type InsertSocialsMutationFn = Apollo.MutationFunction<InsertSocialsMutation, InsertSocialsMutationVariables>;

/**
 * __useInsertSocialsMutation__
 *
 * To run a mutation, you first call `useInsertSocialsMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertSocialsMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertSocialsMutation, { data, loading, error }] = useInsertSocialsMutation({
 *   variables: {
 *      objects: // value for 'objects'
 *   },
 * });
 */
export function useInsertSocialsMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertSocialsMutation, InsertSocialsMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertSocialsMutation, InsertSocialsMutationVariables>(InsertSocialsDocument, options);
}
export type InsertSocialsMutationHookResult = ReturnType<typeof useInsertSocialsMutation>;
export type InsertSocialsMutationResult = Apollo.MutationResult<InsertSocialsMutation>;
export type InsertSocialsMutationOptions = Apollo.BaseMutationOptions<
  InsertSocialsMutation,
  InsertSocialsMutationVariables
>;
export const UpdateSocialsDocument = gql`
  mutation UpdateSocials($updates: [SocialUpdates!]!) {
    updateSocialMany(updates: $updates) {
      returning {
        __typename
        id
        type
        pseudo
        order
        url
      }
    }
  }
`;
export type UpdateSocialsMutationFn = Apollo.MutationFunction<UpdateSocialsMutation, UpdateSocialsMutationVariables>;

/**
 * __useUpdateSocialsMutation__
 *
 * To run a mutation, you first call `useUpdateSocialsMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateSocialsMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateSocialsMutation, { data, loading, error }] = useUpdateSocialsMutation({
 *   variables: {
 *      updates: // value for 'updates'
 *   },
 * });
 */
export function useUpdateSocialsMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateSocialsMutation, UpdateSocialsMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateSocialsMutation, UpdateSocialsMutationVariables>(UpdateSocialsDocument, options);
}
export type UpdateSocialsMutationHookResult = ReturnType<typeof useUpdateSocialsMutation>;
export type UpdateSocialsMutationResult = Apollo.MutationResult<UpdateSocialsMutation>;
export type UpdateSocialsMutationOptions = Apollo.BaseMutationOptions<
  UpdateSocialsMutation,
  UpdateSocialsMutationVariables
>;
export const DeleteActorImageDocument = gql`
  mutation DeleteActorImage($id: bigint!) {
    deleteActorImageByPk(id: $id) {
      __typename
      id
      createdAt
      type
      image {
        __typename
        id
        url
      }
      actor {
        __typename
        id
        email
        name
        slug
        website
      }
    }
  }
`;
export type DeleteActorImageMutationFn = Apollo.MutationFunction<
  DeleteActorImageMutation,
  DeleteActorImageMutationVariables
>;

/**
 * __useDeleteActorImageMutation__
 *
 * To run a mutation, you first call `useDeleteActorImageMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteActorImageMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteActorImageMutation, { data, loading, error }] = useDeleteActorImageMutation({
 *   variables: {
 *      id: // value for 'id'
 *   },
 * });
 */
export function useDeleteActorImageMutation(
  baseOptions?: Apollo.MutationHookOptions<DeleteActorImageMutation, DeleteActorImageMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<DeleteActorImageMutation, DeleteActorImageMutationVariables>(
    DeleteActorImageDocument,
    options,
  );
}
export type DeleteActorImageMutationHookResult = ReturnType<typeof useDeleteActorImageMutation>;
export type DeleteActorImageMutationResult = Apollo.MutationResult<DeleteActorImageMutation>;
export type DeleteActorImageMutationOptions = Apollo.BaseMutationOptions<
  DeleteActorImageMutation,
  DeleteActorImageMutationVariables
>;
export const GetTeamManageDocument = gql`
  query GetTeamManage($slug: String!) {
    team(where: { actor: { slug: { _eq: $slug } } }) {
      __typename
      id
      createdAt
      type
      membershipFees
      membershipDuration
      actor {
        __typename
        id
        createdAt
        email
        name
        slug
        website
        actorImages {
          __typename
          id
          createdAt
          type
          image {
            __typename
            id
            url
          }
        }
        bio
        status
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      directorsCategoryName
      managersCategoryName
      membersCategoryName
      joinForm {
        __typename
        id
        schema
        name
      }
      parent {
        __typename
        id
        type
        actor {
          __typename
          id
          createdAt
          email
          name
          slug
          website
          actorImages {
            __typename
            id
            createdAt
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
      poles {
        __typename
        id
        createdAt
        name
        description
      }
      roles {
        __typename
        id
        createdAt
        category
        type
        name
        permissions
      }
      teamMembers {
        __typename
        id
        createdAt
        startDate
        endDate
        teamMemberRoles {
          role {
            __typename
            id
            createdAt
            category
            type
            name
            permissions
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              email
              name
              bio
              slug
              status
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  url
                }
              }
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
      }
      projects {
        __typename
        id
        createdAt
        color
        description
        name
        slug
        team {
          __typename
          id
          createdAt
          type
          actor {
            __typename
            id
            createdAt
            email
            name
            slug
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
        }
        eventOrganizes {
          __typename
          id
          createdAt
          project {
            __typename
            id
            createdAt
            name
            slug
            color
            isPrivate
          }
          event {
            __typename
            id
            createdAt
            start
            end
            name
            slug
            description
            location {
              __typename
              id
              type
              createdAt
              onlineLink
              locationDetails
              address {
                __typename
                id
                createdAt
                latitude
                longitude
                category
                name
                streetNumber
                street
                zip
                city
                state
                country
              }
            }
            state
            price
            pointsAwardedForAttendance
            banner {
              __typename
              id
              createdAt
              url
              size
              type
              name
            }
            isPrivate
            eventTags {
              tag {
                __typename
                id
                createdAt
                slug
                name
                color
              }
            }
            eventOrganizes {
              __typename
              id
              team {
                __typename
                id
                createdAt
                type
                actor {
                  __typename
                  id
                  createdAt
                  email
                  name
                  slug
                  website
                  actorImages {
                    __typename
                    id
                    createdAt
                    type
                    image {
                      __typename
                      id
                      createdAt
                      url
                      size
                      type
                    }
                  }
                  bio
                  status
                  actorTags {
                    tag {
                      __typename
                      id
                      createdAt
                      slug
                      name
                      color
                    }
                  }
                  socials(where: { deletedAt: { _isNull: true } }) {
                    __typename
                    id
                    pseudo
                    url
                    type
                    order
                  }
                }
                directorsCategoryName
                managersCategoryName
                membersCategoryName
                joinForm {
                  __typename
                  id
                  createdAt
                  schema
                  name
                  type
                }
                teamMembersAggregate {
                  aggregate {
                    count
                  }
                }
                poles {
                  __typename
                  id
                  createdAt
                  name
                  description
                }
              }
              project {
                __typename
                id
                createdAt
                name
                slug
                color
                isPrivate
              }
              eventSupervisors {
                user {
                  __typename
                  id
                  createdAt
                  firstName
                  lastName
                  individual {
                    __typename
                    id
                    createdAt
                    actor {
                      __typename
                      id
                      createdAt
                      email
                      name
                      slug
                      website
                      actorImages {
                        __typename
                        id
                        createdAt
                        type
                        image {
                          __typename
                          id
                          createdAt
                          url
                          size
                          type
                        }
                      }
                      bio
                      status
                      actorTags {
                        tag {
                          __typename
                          id
                          createdAt
                          slug
                          name
                          color
                        }
                      }
                      socials(where: { deletedAt: { _isNull: true } }) {
                        __typename
                        id
                        pseudo
                        url
                        type
                        order
                      }
                    }
                  }
                }
              }
            }
            eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
              aggregate {
                count
              }
            }
            eventJoins(where: { state: { _eq: "Approved" } }, limit: 3) {
              __typename
              id
              createdAt
              state
              isPresent
              joinedBy {
                __typename
                id
                createdAt
                firstName
                lastName
                individual {
                  __typename
                  id
                  createdAt
                  actor {
                    __typename
                    id
                    createdAt
                    email
                    name
                    slug
                    website
                    actorImages {
                      __typename
                      id
                      createdAt
                      type
                      image {
                        __typename
                        id
                        createdAt
                        url
                        size
                        type
                      }
                    }
                    bio
                    status
                    actorTags {
                      tag {
                        __typename
                        id
                        createdAt
                        slug
                        name
                        color
                      }
                    }
                    socials(where: { deletedAt: { _isNull: true } }) {
                      __typename
                      id
                      pseudo
                      url
                      type
                      order
                    }
                  }
                }
              }
            }
          }
        }
        banner {
          __typename
          id
          createdAt
          url
          size
          type
          name
        }
        projectSupervisors {
          teamMember {
            __typename
            id
            createdAt
            startDate
            endDate
            teamMemberRoles {
              role {
                __typename
                id
                createdAt
                category
                type
                name
                permissions
              }
            }
            user {
              __typename
              id
              createdAt
              firstName
              lastName
              individual {
                __typename
                id
                createdAt
                actor {
                  __typename
                  id
                  createdAt
                  email
                  name
                  slug
                  website
                  actorImages {
                    __typename
                    id
                    createdAt
                    type
                    image {
                      __typename
                      id
                      createdAt
                      url
                      size
                      type
                    }
                  }
                  bio
                  status
                  actorTags {
                    tag {
                      __typename
                      id
                      createdAt
                      slug
                      name
                      color
                    }
                  }
                  socials(where: { deletedAt: { _isNull: true } }) {
                    __typename
                    id
                    pseudo
                    url
                    type
                    order
                  }
                }
              }
            }
          }
        }
        projectTags {
          tag {
            __typename
            id
            createdAt
            slug
            name
            color
          }
        }
        isPrivate
      }
      membershipDuration
      membershipFees
      isJoinFormActive
      accounts {
        __typename
        id
        createdAt
        financesAggregate {
          aggregate {
            sum {
              amount
            }
          }
        }
        bank {
          __typename
          id
          createdAt
          legalUnitLocation {
            __typename
            id
            createdAt
            locationType
            legalName
            actor {
              __typename
              id
              slug
              email
              website
              name
              actorImages {
                __typename
                id
                type
                image {
                  __typename
                  id
                  url
                }
              }
            }
            legalUnit {
              __typename
              id
              createdAt
              type
              legalName
              actor {
                __typename
                id
                slug
                email
                website
                name
                actorImages {
                  __typename
                  id
                  type
                  image {
                    __typename
                    id
                    url
                  }
                }
              }
            }
            location {
              __typename
              id
              createdAt
              address {
                __typename
                id
                createdAt
                latitude
                longitude
                category
                name
                streetNumber
                street
                zip
                city
                state
                country
              }
              type
              locationDetails
              onlineLink
            }
          }
          bicSwift
          iban
        }
        name
        team {
          __typename
          id
          createdAt
          type
          actor {
            __typename
            id
            createdAt
            email
            name
            slug
            website
            actorImages {
              __typename
              id
              createdAt
              type
              image {
                __typename
                id
                createdAt
                url
                size
                type
              }
            }
          }
        }
        type
        children {
          __typename
          id
          createdAt
          financesAggregate {
            aggregate {
              sum {
                amount
              }
            }
          }
          name
          type
          bank {
            __typename
            id
            createdAt
            legalUnitLocation {
              __typename
              id
              createdAt
              locationType
              legalName
              actor {
                website
                name
              }
              legalUnit {
                __typename
                id
                createdAt
                type
                legalName
                actor {
                  __typename
                  id
                  createdAt
                  website
                  name
                }
              }
              location {
                __typename
                id
                createdAt
                address {
                  __typename
                  id
                  createdAt
                  latitude
                  longitude
                  category
                  name
                  streetNumber
                  street
                  zip
                  city
                  state
                  country
                }
                type
                locationDetails
                onlineLink
              }
            }
            bicSwift
            iban
          }
          team {
            __typename
            id
            createdAt
            type
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
            }
          }
        }
        parent {
          __typename
          id
          createdAt
          name
          type
          financesAggregate {
            aggregate {
              sum {
                amount
              }
            }
          }
          bank {
            __typename
            id
            createdAt
            legalUnitLocation {
              __typename
              id
              createdAt
              locationType
              legalName
              actor {
                website
                name
              }
              legalUnit {
                __typename
                id
                type
                legalName
                actor {
                  __typename
                  id
                  createdAt
                  website
                  name
                }
              }
              location {
                __typename
                id
                type
                createdAt
                onlineLink
                locationDetails
                address {
                  __typename
                  id
                  latitude
                  longitude
                  category
                  name
                  streetNumber
                  street
                  zip
                  city
                  state
                  country
                }
              }
            }
            bicSwift
            iban
          }
          team {
            __typename
            id
            createdAt
            type
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                type
                image {
                  __typename
                  id
                  url
                }
              }
            }
          }
        }
      }
      teamHistories(
        where: { eventType: { _in: ["OkampusStart", "ExtraordinaryAssembly", "RegularAssembly", "Restart"] } }
      ) {
        __typename
        id
        createdAt
        eventDate
      }
      teams {
        __typename
        id
        createdAt
        type
        actor {
          __typename
          id
          createdAt
          email
          name
          slug
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetTeamManageQuery__
 *
 * To run a query within a React component, call `useGetTeamManageQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTeamManageQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTeamManageQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetTeamManageQuery(
  baseOptions: Apollo.QueryHookOptions<GetTeamManageQuery, GetTeamManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTeamManageQuery, GetTeamManageQueryVariables>(GetTeamManageDocument, options);
}
export function useGetTeamManageLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTeamManageQuery, GetTeamManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTeamManageQuery, GetTeamManageQueryVariables>(GetTeamManageDocument, options);
}
export type GetTeamManageQueryHookResult = ReturnType<typeof useGetTeamManageQuery>;
export type GetTeamManageLazyQueryHookResult = ReturnType<typeof useGetTeamManageLazyQuery>;
export type GetTeamManageQueryResult = Apollo.QueryResult<GetTeamManageQuery, GetTeamManageQueryVariables>;
export const InsertActorImageDocument = gql`
  mutation InsertActorImage($object: ActorImageInsertInput!) {
    insertActorImageOne(object: $object) {
      __typename
      id
      createdAt
      type
      image {
        __typename
        id
        url
      }
      actor {
        __typename
        id
        email
        name
        slug
        website
      }
    }
  }
`;
export type InsertActorImageMutationFn = Apollo.MutationFunction<
  InsertActorImageMutation,
  InsertActorImageMutationVariables
>;

/**
 * __useInsertActorImageMutation__
 *
 * To run a mutation, you first call `useInsertActorImageMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertActorImageMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertActorImageMutation, { data, loading, error }] = useInsertActorImageMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertActorImageMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertActorImageMutation, InsertActorImageMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertActorImageMutation, InsertActorImageMutationVariables>(
    InsertActorImageDocument,
    options,
  );
}
export type InsertActorImageMutationHookResult = ReturnType<typeof useInsertActorImageMutation>;
export type InsertActorImageMutationResult = Apollo.MutationResult<InsertActorImageMutation>;
export type InsertActorImageMutationOptions = Apollo.BaseMutationOptions<
  InsertActorImageMutation,
  InsertActorImageMutationVariables
>;
export const UpdateActorDocument = gql`
  mutation UpdateActor($id: bigint!, $update: ActorSetInput!) {
    updateActorByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      slug
      bio
      name
      status
      email
      website
      actorImages {
        __typename
        id
        type
        image {
          __typename
          id
          url
        }
      }
      socials(where: { deletedAt: { _isNull: true } }) {
        __typename
        id
        pseudo
        url
        type
        order
      }
    }
  }
`;
export type UpdateActorMutationFn = Apollo.MutationFunction<UpdateActorMutation, UpdateActorMutationVariables>;

/**
 * __useUpdateActorMutation__
 *
 * To run a mutation, you first call `useUpdateActorMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateActorMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateActorMutation, { data, loading, error }] = useUpdateActorMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateActorMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateActorMutation, UpdateActorMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateActorMutation, UpdateActorMutationVariables>(UpdateActorDocument, options);
}
export type UpdateActorMutationHookResult = ReturnType<typeof useUpdateActorMutation>;
export type UpdateActorMutationResult = Apollo.MutationResult<UpdateActorMutation>;
export type UpdateActorMutationOptions = Apollo.BaseMutationOptions<UpdateActorMutation, UpdateActorMutationVariables>;
export const UpdateTeamDocument = gql`
  mutation UpdateTeam($id: bigint!, $update: TeamSetInput!) {
    updateTeamByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      createdAt
      type
      membershipFees
      membershipDuration
      actor {
        __typename
        id
        slug
        bio
        name
        status
        email
        website
        actorImages {
          __typename
          id
          type
          image {
            __typename
            id
            url
          }
        }
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      directorsCategoryName
      managersCategoryName
      membersCategoryName
      joinForm {
        __typename
        id
        createdAt
        schema
        name
        type
      }
      poles {
        __typename
        id
        createdAt
        name
        description
      }
      roles {
        __typename
        id
        createdAt
        category
        type
        name
        permissions
      }
      teamMembers {
        __typename
        id
        createdAt
        startDate
        endDate
        teamMemberRoles {
          role {
            __typename
            id
            createdAt
            category
            type
            name
            permissions
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
              bio
              status
              actorTags {
                tag {
                  __typename
                  id
                  createdAt
                  slug
                  name
                  color
                }
              }
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
      }
    }
  }
`;
export type UpdateTeamMutationFn = Apollo.MutationFunction<UpdateTeamMutation, UpdateTeamMutationVariables>;

/**
 * __useUpdateTeamMutation__
 *
 * To run a mutation, you first call `useUpdateTeamMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateTeamMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateTeamMutation, { data, loading, error }] = useUpdateTeamMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateTeamMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateTeamMutation, UpdateTeamMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateTeamMutation, UpdateTeamMutationVariables>(UpdateTeamDocument, options);
}
export type UpdateTeamMutationHookResult = ReturnType<typeof useUpdateTeamMutation>;
export type UpdateTeamMutationResult = Apollo.MutationResult<UpdateTeamMutation>;
export type UpdateTeamMutationOptions = Apollo.BaseMutationOptions<UpdateTeamMutation, UpdateTeamMutationVariables>;
export const InsertAccountDocument = gql`
  mutation InsertAccount($object: AccountInsertInput!) {
    insertAccountOne(object: $object) {
      __typename
      id
    }
  }
`;
export type InsertAccountMutationFn = Apollo.MutationFunction<InsertAccountMutation, InsertAccountMutationVariables>;

/**
 * __useInsertAccountMutation__
 *
 * To run a mutation, you first call `useInsertAccountMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertAccountMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertAccountMutation, { data, loading, error }] = useInsertAccountMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertAccountMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertAccountMutation, InsertAccountMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertAccountMutation, InsertAccountMutationVariables>(InsertAccountDocument, options);
}
export type InsertAccountMutationHookResult = ReturnType<typeof useInsertAccountMutation>;
export type InsertAccountMutationResult = Apollo.MutationResult<InsertAccountMutation>;
export type InsertAccountMutationOptions = Apollo.BaseMutationOptions<
  InsertAccountMutation,
  InsertAccountMutationVariables
>;
export const InsertBankDocument = gql`
  mutation InsertBank($object: BankInsertInput!) {
    insertBankOne(object: $object) {
      __typename
      id
    }
  }
`;
export type InsertBankMutationFn = Apollo.MutationFunction<InsertBankMutation, InsertBankMutationVariables>;

/**
 * __useInsertBankMutation__
 *
 * To run a mutation, you first call `useInsertBankMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertBankMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertBankMutation, { data, loading, error }] = useInsertBankMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertBankMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertBankMutation, InsertBankMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertBankMutation, InsertBankMutationVariables>(InsertBankDocument, options);
}
export type InsertBankMutationHookResult = ReturnType<typeof useInsertBankMutation>;
export type InsertBankMutationResult = Apollo.MutationResult<InsertBankMutation>;
export type InsertBankMutationOptions = Apollo.BaseMutationOptions<InsertBankMutation, InsertBankMutationVariables>;
export const GetEventOrganizesDocument = gql`
  query GetEventOrganizes($where: EventOrganizeBoolExp, $orderBy: [EventOrganizeOrderBy!], $limit: Int, $offset: Int) {
    eventOrganize(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      event {
        __typename
        id
        name
        state
        start
        end
        slug
        banner {
          __typename
          id
          url
        }
        eventApprovals {
          __typename
          id
          createdAt
          isApproved
          message
          eventApprovalStep {
            __typename
            id
            createdAt
            name
            description
            order
            nextSteps {
              __typename
              id
              createdAt
              name
              description
              order
            }
            previousStep {
              __typename
              id
              createdAt
              name
              description
              order
            }
          }
          createdBy {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                }
              }
            }
            user {
              __typename
              id
              createdAt
              firstName
              lastName
              individual {
                __typename
                id
                createdAt
                actor {
                  __typename
                  id
                  createdAt
                  email
                  name
                  slug
                  website
                  actorImages {
                    __typename
                    id
                    createdAt
                    type
                    image {
                      __typename
                      id
                      createdAt
                      url
                      size
                      type
                    }
                  }
                }
              }
            }
          }
        }
        eventApprovalSubmission {
          __typename
          id
          createdAt
          form {
            __typename
            id
            createdAt
            schema
            name
            type
          }
          submission
        }
        nextEventApprovalStep {
          __typename
          id
          createdAt
          name
          description
          order
          nextSteps {
            __typename
            id
            createdAt
            name
            description
            order
          }
          previousStep {
            __typename
            id
            createdAt
            name
            description
            order
          }
        }
      }
      eventSupervisors {
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
              bio
              status
              actorTags {
                tag {
                  __typename
                  id
                  createdAt
                  slug
                  name
                  color
                }
              }
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
      }
      team {
        __typename
        id
        type
        actor {
          __typename
          id
          name
          slug
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
        joinForm {
          __typename
          id
          schema
          name
        }
      }
      project {
        __typename
        id
        createdAt
        name
        slug
        color
        isPrivate
      }
    }
    event {
      __typename
      id
      createdAt
      slug
      start
      end
      name
      state
      price
      pointsAwardedForAttendance
      isPrivate
      description
      location {
        __typename
        id
        type
        onlineLink
        locationDetails
        address {
          __typename
          id
          name
          latitude
          longitude
          category
          streetNumber
          street
          zip
          city
          state
          country
        }
      }
      banner {
        __typename
        id
        url
        type
      }
      eventTags {
        tag {
          __typename
          id
          createdAt
          slug
          name
          color
        }
      }
      eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
        aggregate {
          count
        }
      }
      eventJoins(where: { state: { _eq: "Approved" } }, limit: 12) {
        __typename
        id
        createdAt
        state
        isPresent
        joinedBy {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
              bio
              status
              actorTags {
                tag {
                  __typename
                  id
                  createdAt
                  slug
                  name
                  color
                }
              }
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
        formSubmission {
          __typename
          id
          createdAt
          form {
            __typename
            id
            createdAt
            schema
            name
            type
          }
          submission
        }
        processedBy {
          __typename
          id
          createdAt
          actor {
            __typename
            id
            createdAt
            email
            name
            slug
            website
            actorImages {
              __typename
              id
              createdAt
              type
              image {
                __typename
                id
                createdAt
                url
                size
                type
              }
            }
            bio
            status
            actorTags {
              tag {
                __typename
                id
                createdAt
                slug
                name
                color
              }
            }
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
        }
        processedAt
        participationProcessedVia
        participationProcessedAt
      }
      joinForm {
        __typename
        id
        createdAt
        schema
        name
        type
      }
    }
  }
`;

/**
 * __useGetEventOrganizesQuery__
 *
 * To run a query within a React component, call `useGetEventOrganizesQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetEventOrganizesQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetEventOrganizesQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetEventOrganizesQuery(
  baseOptions?: Apollo.QueryHookOptions<GetEventOrganizesQuery, GetEventOrganizesQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetEventOrganizesQuery, GetEventOrganizesQueryVariables>(GetEventOrganizesDocument, options);
}
export function useGetEventOrganizesLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetEventOrganizesQuery, GetEventOrganizesQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetEventOrganizesQuery, GetEventOrganizesQueryVariables>(
    GetEventOrganizesDocument,
    options,
  );
}
export type GetEventOrganizesQueryHookResult = ReturnType<typeof useGetEventOrganizesQuery>;
export type GetEventOrganizesLazyQueryHookResult = ReturnType<typeof useGetEventOrganizesLazyQuery>;
export type GetEventOrganizesQueryResult = Apollo.QueryResult<GetEventOrganizesQuery, GetEventOrganizesQueryVariables>;
export const GetFinancesDocument = gql`
  query GetFinances($where: FinanceBoolExp, $orderBy: [FinanceOrderBy!], $limit: Int, $offset: Int) {
    finance(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      createdAt
      amount
      category
      method
      payedAt
      payedBy {
        __typename
        id
        name
        slug
        email
        website
        actorImages {
          __typename
          id
          type
          image {
            __typename
            id
            url
          }
        }
        team {
          __typename
          id
          actor {
            __typename
            id
            slug
          }
        }
        individual {
          __typename
          id
          user {
            __typename
            id
            individual {
              __typename
              id
              actor {
                __typename
                id
                slug
              }
            }
          }
        }
      }
      receivedBy {
        __typename
        id
        name
        slug
        email
        website
        actorImages {
          __typename
          id
          type
          image {
            __typename
            id
            url
          }
        }
        team {
          __typename
          id
          actor {
            __typename
            id
            slug
          }
        }
        individual {
          __typename
          id
          user {
            __typename
            id
            individual {
              __typename
              id
              actor {
                __typename
                id
                slug
              }
            }
          }
        }
      }
      initiatedBy {
        __typename
        id
        actor {
          __typename
          id
          name
          slug
          email
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
      createdBy {
        __typename
        id
        actor {
          __typename
          id
          name
          slug
          email
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
        user {
          __typename
          id
          individual {
            __typename
            id
            actor {
              __typename
              id
              slug
            }
          }
        }
      }
      event {
        __typename
        id
        slug
        name
      }
      project {
        __typename
        id
        slug
        name
      }
      financeAttachments {
        attachment {
          __typename
          id
          name
          size
          type
          url
        }
      }
    }
  }
`;

/**
 * __useGetFinancesQuery__
 *
 * To run a query within a React component, call `useGetFinancesQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetFinancesQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetFinancesQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetFinancesQuery(
  baseOptions?: Apollo.QueryHookOptions<GetFinancesQuery, GetFinancesQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetFinancesQuery, GetFinancesQueryVariables>(GetFinancesDocument, options);
}
export function useGetFinancesLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetFinancesQuery, GetFinancesQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetFinancesQuery, GetFinancesQueryVariables>(GetFinancesDocument, options);
}
export type GetFinancesQueryHookResult = ReturnType<typeof useGetFinancesQuery>;
export type GetFinancesLazyQueryHookResult = ReturnType<typeof useGetFinancesLazyQuery>;
export type GetFinancesQueryResult = Apollo.QueryResult<GetFinancesQuery, GetFinancesQueryVariables>;
export const GetTenantManageDocument = gql`
  query GetTenantManage($domain: String!) {
    tenant(where: { domain: { _eq: $domain } }) {
      __typename
      id
      domain
      pointName
      eventValidationForm {
        __typename
        id
        name
        schema
        type
      }
      eventApprovalSteps {
        __typename
        id
        name
        order
      }
      adminTeam {
        __typename
        id
        actor {
          __typename
          id
          slug
          name
          bio
          email
          website
          status
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetTenantManageQuery__
 *
 * To run a query within a React component, call `useGetTenantManageQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTenantManageQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTenantManageQuery({
 *   variables: {
 *      domain: // value for 'domain'
 *   },
 * });
 */
export function useGetTenantManageQuery(
  baseOptions: Apollo.QueryHookOptions<GetTenantManageQuery, GetTenantManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTenantManageQuery, GetTenantManageQueryVariables>(GetTenantManageDocument, options);
}
export function useGetTenantManageLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTenantManageQuery, GetTenantManageQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTenantManageQuery, GetTenantManageQueryVariables>(GetTenantManageDocument, options);
}
export type GetTenantManageQueryHookResult = ReturnType<typeof useGetTenantManageQuery>;
export type GetTenantManageLazyQueryHookResult = ReturnType<typeof useGetTenantManageLazyQuery>;
export type GetTenantManageQueryResult = Apollo.QueryResult<GetTenantManageQuery, GetTenantManageQueryVariables>;
export const GetTeamDashboardDocument = gql`
  query GetTeamDashboard {
    team(where: { type: { _in: ["Association", "Club"] } }, orderBy: { actor: { name: ASC } }) {
      __typename
      id
      createdAt
      type
      directorsCategoryName
      managersCategoryName
      membersCategoryName
      documents {
        __typename
        id
        name
        type
        file {
          __typename
          id
          name
          size
          type
          url
        }
      }
      actor {
        __typename
        id
        createdAt
        email
        name
        slug
        website
        actorImages {
          __typename
          id
          createdAt
          type
          image {
            __typename
            id
            url
          }
        }
        bio
        status
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      joinForm {
        __typename
        id
        schema
        name
      }
      teamMembersAggregate {
        aggregate {
          count
        }
      }
      poles {
        __typename
        id
        createdAt
        name
        description
      }
      roles {
        __typename
        id
        createdAt
        category
        type
        name
        permissions
      }
      teamMembers(
        where: { teamMemberRoles: { role: { category: { _eq: "Directors" } } }, endDate: { _isNull: true } }
      ) {
        __typename
        id
        createdAt
        startDate
        endDate
        teamMemberRoles {
          role {
            __typename
            id
            createdAt
            category
            type
            name
            permissions
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              email
              name
              bio
              slug
              status
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  url
                }
              }
            }
          }
        }
      }
      membershipDuration
      membershipFees
      isJoinFormActive
      accounts {
        __typename
        id
        createdAt
        financesAggregate {
          aggregate {
            sum {
              amount
            }
          }
        }
        bank {
          __typename
          id
          createdAt
          legalUnitLocation {
            __typename
            id
            createdAt
            locationType
            legalName
            actor {
              __typename
              id
              slug
              email
              website
              name
              actorImages {
                __typename
                id
                type
                image {
                  __typename
                  id
                  url
                }
              }
            }
            legalUnit {
              __typename
              id
              createdAt
              type
              legalName
              actor {
                __typename
                id
                slug
                email
                website
                name
                actorImages {
                  __typename
                  id
                  type
                  image {
                    __typename
                    id
                    url
                  }
                }
              }
            }
            location {
              __typename
              id
              createdAt
              address {
                __typename
                id
                createdAt
                latitude
                longitude
                category
                name
                streetNumber
                street
                zip
                city
                state
                country
              }
              type
              locationDetails
              onlineLink
            }
          }
          bicSwift
          iban
        }
        name
        team {
          __typename
          id
          createdAt
          type
          actor {
            __typename
            id
            createdAt
            email
            name
            slug
            website
            actorImages {
              __typename
              id
              createdAt
              type
              image {
                __typename
                id
                createdAt
                url
                size
                type
              }
            }
          }
        }
        type
        children {
          __typename
          id
          createdAt
          financesAggregate {
            aggregate {
              sum {
                amount
              }
            }
          }
          name
          type
          bank {
            __typename
            id
            createdAt
            legalUnitLocation {
              __typename
              id
              createdAt
              locationType
              legalName
              actor {
                website
                name
              }
              legalUnit {
                __typename
                id
                createdAt
                type
                legalName
                actor {
                  __typename
                  id
                  createdAt
                  website
                  name
                }
              }
              location {
                __typename
                id
                createdAt
                address {
                  __typename
                  id
                  createdAt
                  latitude
                  longitude
                  category
                  name
                  streetNumber
                  street
                  zip
                  city
                  state
                  country
                }
                type
                locationDetails
                onlineLink
              }
            }
            bicSwift
            iban
          }
          team {
            __typename
            id
            createdAt
            type
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
            }
          }
        }
        parent {
          __typename
          id
          createdAt
          financesAggregate {
            aggregate {
              sum {
                amount
              }
            }
          }
          bank {
            __typename
            id
            createdAt
            legalUnitLocation {
              __typename
              id
              createdAt
              locationType
              legalName
              actor {
                website
                name
              }
              legalUnit {
                __typename
                id
                type
                legalName
                actor {
                  __typename
                  id
                  createdAt
                  website
                  name
                }
              }
              location {
                __typename
                id
                type
                createdAt
                onlineLink
                locationDetails
                address {
                  __typename
                  id
                  latitude
                  longitude
                  category
                  name
                  streetNumber
                  street
                  zip
                  city
                  state
                  country
                }
              }
            }
            bicSwift
            iban
          }
          name
          team {
            __typename
            id
            createdAt
            type
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                type
                image {
                  __typename
                  id
                  url
                }
              }
            }
          }
          type
        }
      }
      teamHistories(
        where: { eventType: { _in: ["OkampusStart", "ExtraordinaryAssembly", "RegularAssembly", "Restart"] } }
      ) {
        __typename
        id
        createdAt
        eventDate
      }
      teams {
        __typename
        id
        createdAt
        type
        actor {
          __typename
          id
          createdAt
          email
          name
          slug
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetTeamDashboardQuery__
 *
 * To run a query within a React component, call `useGetTeamDashboardQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTeamDashboardQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTeamDashboardQuery({
 *   variables: {
 *   },
 * });
 */
export function useGetTeamDashboardQuery(
  baseOptions?: Apollo.QueryHookOptions<GetTeamDashboardQuery, GetTeamDashboardQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTeamDashboardQuery, GetTeamDashboardQueryVariables>(GetTeamDashboardDocument, options);
}
export function useGetTeamDashboardLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTeamDashboardQuery, GetTeamDashboardQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTeamDashboardQuery, GetTeamDashboardQueryVariables>(GetTeamDashboardDocument, options);
}
export type GetTeamDashboardQueryHookResult = ReturnType<typeof useGetTeamDashboardQuery>;
export type GetTeamDashboardLazyQueryHookResult = ReturnType<typeof useGetTeamDashboardLazyQuery>;
export type GetTeamDashboardQueryResult = Apollo.QueryResult<GetTeamDashboardQuery, GetTeamDashboardQueryVariables>;
export const GetTenantUsersWithPointsDocument = gql`
  query GetTenantUsersWithPoints {
    user(
      where: {
        _or: [
          { actions: { pointsProcessedAt: { _isNull: false } } }
          { eventJoins: { participationProcessedAt: { _isNull: false } } }
          { missionJoins: { pointsProcessedAt: { _isNull: false } } }
        ]
      }
    ) {
      __typename
      id
      createdAt
      firstName
      lastName
      individual {
        __typename
        id
        actor {
          __typename
          id
          slug
          bio
          name
          email
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
      actions(where: { pointsProcessedAt: { _isNull: false } }) {
        __typename
        id
        points
        pointsProcessedAt
      }
      eventJoins(where: { participationProcessedAt: { _isNull: false } }) {
        __typename
        id
        processedAt
        event {
          __typename
          id
          slug
          pointsAwardedForAttendance
        }
      }
      missionJoins(where: { pointsProcessedAt: { _isNull: false } }) {
        __typename
        id
        points
        pointsProcessedAt
      }
    }
  }
`;

/**
 * __useGetTenantUsersWithPointsQuery__
 *
 * To run a query within a React component, call `useGetTenantUsersWithPointsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTenantUsersWithPointsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTenantUsersWithPointsQuery({
 *   variables: {
 *   },
 * });
 */
export function useGetTenantUsersWithPointsQuery(
  baseOptions?: Apollo.QueryHookOptions<GetTenantUsersWithPointsQuery, GetTenantUsersWithPointsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTenantUsersWithPointsQuery, GetTenantUsersWithPointsQueryVariables>(
    GetTenantUsersWithPointsDocument,
    options,
  );
}
export function useGetTenantUsersWithPointsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTenantUsersWithPointsQuery, GetTenantUsersWithPointsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTenantUsersWithPointsQuery, GetTenantUsersWithPointsQueryVariables>(
    GetTenantUsersWithPointsDocument,
    options,
  );
}
export type GetTenantUsersWithPointsQueryHookResult = ReturnType<typeof useGetTenantUsersWithPointsQuery>;
export type GetTenantUsersWithPointsLazyQueryHookResult = ReturnType<typeof useGetTenantUsersWithPointsLazyQuery>;
export type GetTenantUsersWithPointsQueryResult = Apollo.QueryResult<
  GetTenantUsersWithPointsQuery,
  GetTenantUsersWithPointsQueryVariables
>;
export const GetEventsValidationDocument = gql`
  query GetEventsValidation($where: EventBoolExp, $orderBy: [EventOrderBy!], $limit: Int, $offset: Int) {
    event(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      createdAt
      slug
      start
      end
      name
      state
      price
      pointsAwardedForAttendance
      isPrivate
      description
      location {
        __typename
        id
        type
        onlineLink
        locationDetails
        address {
          __typename
          id
          name
          latitude
          longitude
          category
          streetNumber
          street
          zip
          city
          state
          country
        }
      }
      banner {
        __typename
        id
        url
        type
      }
      nextEventApprovalStep {
        __typename
        id
        createdAt
        name
        description
        order
        nextSteps {
          __typename
          id
          createdAt
          name
          description
          order
        }
        previousStep {
          __typename
          id
          createdAt
          name
          description
          order
        }
      }
      eventApprovalSubmission {
        __typename
        id
        createdAt
        submission
        form {
          __typename
          id
          createdAt
          schema
          name
          type
        }
      }
      eventApprovals {
        __typename
        id
        createdAt
        isApproved
        message
        eventApprovalStep {
          __typename
          id
          createdAt
          name
          description
          order
          nextSteps {
            __typename
            id
            createdAt
            name
            description
            order
          }
          previousStep {
            __typename
            id
            createdAt
            name
            description
            order
          }
        }
        createdBy {
          __typename
          id
          createdAt
          actor {
            __typename
            id
            createdAt
            email
            name
            slug
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                createdAt
                url
              }
            }
          }
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            individual {
              __typename
              id
              createdAt
              actor {
                __typename
                id
                createdAt
                email
                name
                slug
                website
                actorImages {
                  __typename
                  id
                  createdAt
                  type
                  image {
                    __typename
                    id
                    createdAt
                    url
                    size
                    type
                  }
                }
              }
            }
          }
        }
      }
      eventTags {
        tag {
          __typename
          id
          createdAt
          slug
          name
          color
        }
      }
      eventOrganizes {
        __typename
        id
        eventSupervisors {
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            individual {
              __typename
              id
              createdAt
              actor {
                __typename
                id
                createdAt
                email
                name
                slug
                website
                actorImages {
                  __typename
                  id
                  createdAt
                  type
                  image {
                    __typename
                    id
                    createdAt
                    url
                    size
                    type
                  }
                }
                bio
                status
                actorTags {
                  tag {
                    __typename
                    id
                    createdAt
                    slug
                    name
                    color
                  }
                }
                socials(where: { deletedAt: { _isNull: true } }) {
                  __typename
                  id
                  pseudo
                  url
                  type
                  order
                }
              }
            }
          }
        }
        team {
          __typename
          id
          type
          actor {
            __typename
            id
            slug
            name
            email
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
          joinForm {
            __typename
            id
            schema
            name
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
      }
      eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
        aggregate {
          count
        }
      }
      eventJoins(where: { state: { _eq: "Approved" } }, limit: 12) {
        __typename
        id
        createdAt
        state
        isPresent
        joinedBy {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
              bio
              status
              actorTags {
                tag {
                  __typename
                  id
                  createdAt
                  slug
                  name
                  color
                }
              }
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
        formSubmission {
          __typename
          id
          createdAt
          form {
            __typename
            id
            createdAt
            schema
            name
            type
          }
          submission
        }
        processedBy {
          __typename
          id
          createdAt
          actor {
            __typename
            id
            createdAt
            email
            name
            slug
            website
            actorImages {
              __typename
              id
              createdAt
              type
              image {
                __typename
                id
                createdAt
                url
                size
                type
              }
            }
            bio
            status
            actorTags {
              tag {
                __typename
                id
                createdAt
                slug
                name
                color
              }
            }
            socials(where: { deletedAt: { _isNull: true } }) {
              __typename
              id
              pseudo
              url
              type
              order
            }
          }
        }
        processedAt
        participationProcessedVia
        participationProcessedAt
      }
      joinForm {
        __typename
        id
        createdAt
        schema
        name
        type
      }
    }
  }
`;

/**
 * __useGetEventsValidationQuery__
 *
 * To run a query within a React component, call `useGetEventsValidationQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetEventsValidationQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetEventsValidationQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetEventsValidationQuery(
  baseOptions?: Apollo.QueryHookOptions<GetEventsValidationQuery, GetEventsValidationQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetEventsValidationQuery, GetEventsValidationQueryVariables>(
    GetEventsValidationDocument,
    options,
  );
}
export function useGetEventsValidationLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetEventsValidationQuery, GetEventsValidationQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetEventsValidationQuery, GetEventsValidationQueryVariables>(
    GetEventsValidationDocument,
    options,
  );
}
export type GetEventsValidationQueryHookResult = ReturnType<typeof useGetEventsValidationQuery>;
export type GetEventsValidationLazyQueryHookResult = ReturnType<typeof useGetEventsValidationLazyQuery>;
export type GetEventsValidationQueryResult = Apollo.QueryResult<
  GetEventsValidationQuery,
  GetEventsValidationQueryVariables
>;
export const GetProjectDocument = gql`
  query GetProject($slug: String!) {
    project(where: { slug: { _eq: $slug } }, limit: 1) {
      __typename
      id
      createdAt
      slug
      start
      end
      name
      isPrivate
      banner {
        __typename
        id
        url
        type
      }
      team {
        __typename
        id
        type
        actor {
          __typename
          id
          slug
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
      eventOrganizes {
        __typename
        id
        event {
          __typename
          id
          slug
          name
        }
        eventSupervisors {
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            individual {
              __typename
              id
              createdAt
              actor {
                __typename
                id
                createdAt
                email
                name
                slug
                website
                actorImages {
                  __typename
                  id
                  createdAt
                  type
                  image {
                    __typename
                    id
                    createdAt
                    url
                    size
                    type
                  }
                }
                bio
                status
                actorTags {
                  tag {
                    __typename
                    id
                    createdAt
                    slug
                    name
                    color
                  }
                }
                socials(where: { deletedAt: { _isNull: true } }) {
                  __typename
                  id
                  pseudo
                  url
                  type
                  order
                }
              }
            }
          }
        }
        team {
          __typename
          id
          type
          actor {
            __typename
            id
            name
            slug
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
          joinForm {
            __typename
            id
            schema
            name
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
      }
    }
  }
`;

/**
 * __useGetProjectQuery__
 *
 * To run a query within a React component, call `useGetProjectQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetProjectQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetProjectQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetProjectQuery(baseOptions: Apollo.QueryHookOptions<GetProjectQuery, GetProjectQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetProjectQuery, GetProjectQueryVariables>(GetProjectDocument, options);
}
export function useGetProjectLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetProjectQuery, GetProjectQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetProjectQuery, GetProjectQueryVariables>(GetProjectDocument, options);
}
export type GetProjectQueryHookResult = ReturnType<typeof useGetProjectQuery>;
export type GetProjectLazyQueryHookResult = ReturnType<typeof useGetProjectLazyQuery>;
export type GetProjectQueryResult = Apollo.QueryResult<GetProjectQuery, GetProjectQueryVariables>;
export const GetTeamDocument = gql`
  query GetTeam($slug: String!) {
    team(where: { actor: { slug: { _eq: $slug } } }, limit: 1) {
      __typename
      id
      createdAt
      type
      directorsCategoryName
      managersCategoryName
      membersCategoryName
      membershipFees
      membershipDuration
      actor {
        __typename
        id
        slug
        bio
        name
        status
        email
        website
        actorImages {
          __typename
          id
          type
          image {
            __typename
            id
            url
          }
        }
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      joinForm {
        __typename
        id
        createdAt
        schema
        name
        type
      }
      parent {
        __typename
        id
        type
        actor {
          __typename
          id
          createdAt
          email
          name
          slug
          website
          actorImages {
            __typename
            id
            createdAt
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
      poles {
        __typename
        id
        createdAt
        name
        description
      }
      roles {
        __typename
        id
        createdAt
        category
        type
        name
        permissions
      }
      teamMembers {
        __typename
        id
        createdAt
        startDate
        endDate
        teamMemberRoles {
          role {
            __typename
            id
            createdAt
            category
            type
            name
            permissions
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
              bio
              status
              actorTags {
                tag {
                  __typename
                  id
                  createdAt
                  slug
                  name
                  color
                }
              }
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetTeamQuery__
 *
 * To run a query within a React component, call `useGetTeamQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTeamQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTeamQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetTeamQuery(baseOptions: Apollo.QueryHookOptions<GetTeamQuery, GetTeamQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTeamQuery, GetTeamQueryVariables>(GetTeamDocument, options);
}
export function useGetTeamLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetTeamQuery, GetTeamQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTeamQuery, GetTeamQueryVariables>(GetTeamDocument, options);
}
export type GetTeamQueryHookResult = ReturnType<typeof useGetTeamQuery>;
export type GetTeamLazyQueryHookResult = ReturnType<typeof useGetTeamLazyQuery>;
export type GetTeamQueryResult = Apollo.QueryResult<GetTeamQuery, GetTeamQueryVariables>;
export const InsertTeamJoinDocument = gql`
  mutation InsertTeamJoin($object: TeamJoinInsertInput!) {
    insertTeamJoinOne(object: $object) {
      __typename
      id
    }
  }
`;
export type InsertTeamJoinMutationFn = Apollo.MutationFunction<InsertTeamJoinMutation, InsertTeamJoinMutationVariables>;

/**
 * __useInsertTeamJoinMutation__
 *
 * To run a mutation, you first call `useInsertTeamJoinMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertTeamJoinMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertTeamJoinMutation, { data, loading, error }] = useInsertTeamJoinMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertTeamJoinMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertTeamJoinMutation, InsertTeamJoinMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertTeamJoinMutation, InsertTeamJoinMutationVariables>(InsertTeamJoinDocument, options);
}
export type InsertTeamJoinMutationHookResult = ReturnType<typeof useInsertTeamJoinMutation>;
export type InsertTeamJoinMutationResult = Apollo.MutationResult<InsertTeamJoinMutation>;
export type InsertTeamJoinMutationOptions = Apollo.BaseMutationOptions<
  InsertTeamJoinMutation,
  InsertTeamJoinMutationVariables
>;
export const GetTeamsDocument = gql`
  query GetTeams($where: TeamBoolExp, $orderBy: [TeamOrderBy!], $limit: Int, $offset: Int) {
    team(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      createdAt
      type
      membershipFees
      membershipDuration
      actor {
        __typename
        id
        slug
        status
        bio
        name
        email
        website
        actorImages {
          __typename
          id
          type
          image {
            __typename
            id
            url
          }
        }
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      directorsCategoryName
      managersCategoryName
      membersCategoryName
      joinForm {
        __typename
        id
        createdAt
        schema
        name
        type
      }
      parent {
        __typename
        id
        type
        actor {
          __typename
          id
          createdAt
          email
          name
          slug
          website
          actorImages {
            __typename
            id
            createdAt
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
      poles {
        __typename
        id
        createdAt
        name
        description
      }
      roles {
        __typename
        id
        createdAt
        category
        type
        name
        permissions
      }
      teamMembersAggregate {
        aggregate {
          count
        }
      }
      teamMembers {
        __typename
        id
        createdAt
        startDate
        endDate
        teamMemberRoles {
          role {
            __typename
            id
            createdAt
            category
            type
            name
            permissions
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
              bio
              status
              actorTags {
                tag {
                  __typename
                  id
                  createdAt
                  slug
                  name
                  color
                }
              }
              socials(where: { deletedAt: { _isNull: true } }) {
                __typename
                id
                pseudo
                url
                type
                order
              }
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetTeamsQuery__
 *
 * To run a query within a React component, call `useGetTeamsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTeamsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTeamsQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetTeamsQuery(baseOptions?: Apollo.QueryHookOptions<GetTeamsQuery, GetTeamsQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTeamsQuery, GetTeamsQueryVariables>(GetTeamsDocument, options);
}
export function useGetTeamsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetTeamsQuery, GetTeamsQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTeamsQuery, GetTeamsQueryVariables>(GetTeamsDocument, options);
}
export type GetTeamsQueryHookResult = ReturnType<typeof useGetTeamsQuery>;
export type GetTeamsLazyQueryHookResult = ReturnType<typeof useGetTeamsLazyQuery>;
export type GetTeamsQueryResult = Apollo.QueryResult<GetTeamsQuery, GetTeamsQueryVariables>;
export const GetCategoriesDocument = gql`
  query GetCategories($where: TagBoolExp, $orderBy: [TagOrderBy!], $limit: Int, $offset: Int) {
    tag(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      id
      name
      slug
      color
      image {
        id
        url
      }
    }
  }
`;

/**
 * __useGetCategoriesQuery__
 *
 * To run a query within a React component, call `useGetCategoriesQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetCategoriesQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetCategoriesQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetCategoriesQuery(
  baseOptions?: Apollo.QueryHookOptions<GetCategoriesQuery, GetCategoriesQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetCategoriesQuery, GetCategoriesQueryVariables>(GetCategoriesDocument, options);
}
export function useGetCategoriesLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetCategoriesQuery, GetCategoriesQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetCategoriesQuery, GetCategoriesQueryVariables>(GetCategoriesDocument, options);
}
export type GetCategoriesQueryHookResult = ReturnType<typeof useGetCategoriesQuery>;
export type GetCategoriesLazyQueryHookResult = ReturnType<typeof useGetCategoriesLazyQuery>;
export type GetCategoriesQueryResult = Apollo.QueryResult<GetCategoriesQuery, GetCategoriesQueryVariables>;
export const GetUserDocument = gql`
  query GetUser($slug: String!) {
    user(where: { individual: { actor: { slug: { _eq: $slug } } } }, limit: 1) {
      __typename
      id
      createdAt
      firstName
      lastName
      individual {
        __typename
        id
        actor {
          __typename
          id
          slug
          status
          bio
          name
          email
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
          socials(where: { deletedAt: { _isNull: true } }) {
            __typename
            id
            pseudo
            url
            type
            order
          }
        }
      }
      teamMembers(where: { endDate: { _isNull: true } }) {
        __typename
        id
        team {
          __typename
          id
          type
          actor {
            __typename
            id
            slug
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetUserQuery__
 *
 * To run a query within a React component, call `useGetUserQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetUserQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetUserQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetUserQuery(baseOptions: Apollo.QueryHookOptions<GetUserQuery, GetUserQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetUserQuery, GetUserQueryVariables>(GetUserDocument, options);
}
export function useGetUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetUserQuery, GetUserQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetUserQuery, GetUserQueryVariables>(GetUserDocument, options);
}
export type GetUserQueryHookResult = ReturnType<typeof useGetUserQuery>;
export type GetUserLazyQueryHookResult = ReturnType<typeof useGetUserLazyQuery>;
export type GetUserQueryResult = Apollo.QueryResult<GetUserQuery, GetUserQueryVariables>;
export const GetUsersDocument = gql`
  query GetUsers($where: UserBoolExp, $orderBy: [UserOrderBy!], $limit: Int, $offset: Int) {
    user(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      createdAt
      firstName
      lastName
      individual {
        __typename
        id
        actor {
          __typename
          id
          slug
          name
          email
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
      teamMembers(where: { endDate: { _isNull: true } }) {
        __typename
        id
        team {
          __typename
          id
          type
          actor {
            __typename
            id
            slug
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetUsersQuery__
 *
 * To run a query within a React component, call `useGetUsersQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetUsersQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetUsersQuery(baseOptions?: Apollo.QueryHookOptions<GetUsersQuery, GetUsersQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetUsersQuery, GetUsersQueryVariables>(GetUsersDocument, options);
}
export function useGetUsersLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetUsersQuery, GetUsersQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetUsersQuery, GetUsersQueryVariables>(GetUsersDocument, options);
}
export type GetUsersQueryHookResult = ReturnType<typeof useGetUsersQuery>;
export type GetUsersLazyQueryHookResult = ReturnType<typeof useGetUsersLazyQuery>;
export type GetUsersQueryResult = Apollo.QueryResult<GetUsersQuery, GetUsersQueryVariables>;
export const GetTenantOidcInfoDocument = gql`
  query GetTenantOidcInfo {
    tenant {
      __typename
      id
      isOidcEnabled
      oidcName
      domain
      adminTeam {
        __typename
        id
        actor {
          __typename
          id
          name
          slug
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetTenantOidcInfoQuery__
 *
 * To run a query within a React component, call `useGetTenantOidcInfoQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTenantOidcInfoQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTenantOidcInfoQuery({
 *   variables: {
 *   },
 * });
 */
export function useGetTenantOidcInfoQuery(
  baseOptions?: Apollo.QueryHookOptions<GetTenantOidcInfoQuery, GetTenantOidcInfoQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTenantOidcInfoQuery, GetTenantOidcInfoQueryVariables>(GetTenantOidcInfoDocument, options);
}
export function useGetTenantOidcInfoLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTenantOidcInfoQuery, GetTenantOidcInfoQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTenantOidcInfoQuery, GetTenantOidcInfoQueryVariables>(
    GetTenantOidcInfoDocument,
    options,
  );
}
export type GetTenantOidcInfoQueryHookResult = ReturnType<typeof useGetTenantOidcInfoQuery>;
export type GetTenantOidcInfoLazyQueryHookResult = ReturnType<typeof useGetTenantOidcInfoLazyQuery>;
export type GetTenantOidcInfoQueryResult = Apollo.QueryResult<GetTenantOidcInfoQuery, GetTenantOidcInfoQueryVariables>;
export const UserLoginDocument = gql`
  mutation UserLogin($dto: LoginInput!) {
    login(dto: $dto) {
      __typename
      canManageTenant
      user {
        __typename
        id
        individual {
          __typename
          id
          actor {
            __typename
            id
            slug
          }
        }
        tenant {
          __typename
          id
          domain
        }
      }
    }
  }
`;
export type UserLoginMutationFn = Apollo.MutationFunction<UserLoginMutation, UserLoginMutationVariables>;

/**
 * __useUserLoginMutation__
 *
 * To run a mutation, you first call `useUserLoginMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUserLoginMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [userLoginMutation, { data, loading, error }] = useUserLoginMutation({
 *   variables: {
 *      dto: // value for 'dto'
 *   },
 * });
 */
export function useUserLoginMutation(
  baseOptions?: Apollo.MutationHookOptions<UserLoginMutation, UserLoginMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UserLoginMutation, UserLoginMutationVariables>(UserLoginDocument, options);
}
export type UserLoginMutationHookResult = ReturnType<typeof useUserLoginMutation>;
export type UserLoginMutationResult = Apollo.MutationResult<UserLoginMutation>;
export type UserLoginMutationOptions = Apollo.BaseMutationOptions<UserLoginMutation, UserLoginMutationVariables>;
export const GetProjectsSelectDocument = gql`
  query GetProjectsSelect($slug: String!) {
    project(where: { team: { actor: { slug: { _eq: $slug } } } }) {
      __typename
      id
      createdAt
      slug
      start
      end
      name
      isPrivate
      banner {
        __typename
        id
        url
        type
      }
      eventOrganizes {
        __typename
        id
        event {
          __typename
          id
          name
          slug
          banner {
            __typename
            id
            url
          }
        }
      }
    }
  }
`;

/**
 * __useGetProjectsSelectQuery__
 *
 * To run a query within a React component, call `useGetProjectsSelectQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetProjectsSelectQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetProjectsSelectQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useGetProjectsSelectQuery(
  baseOptions: Apollo.QueryHookOptions<GetProjectsSelectQuery, GetProjectsSelectQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetProjectsSelectQuery, GetProjectsSelectQueryVariables>(GetProjectsSelectDocument, options);
}
export function useGetProjectsSelectLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetProjectsSelectQuery, GetProjectsSelectQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetProjectsSelectQuery, GetProjectsSelectQueryVariables>(
    GetProjectsSelectDocument,
    options,
  );
}
export type GetProjectsSelectQueryHookResult = ReturnType<typeof useGetProjectsSelectQuery>;
export type GetProjectsSelectLazyQueryHookResult = ReturnType<typeof useGetProjectsSelectLazyQuery>;
export type GetProjectsSelectQueryResult = Apollo.QueryResult<GetProjectsSelectQuery, GetProjectsSelectQueryVariables>;
export const InsertEventDocument = gql`
  mutation InsertEvent($object: EventInsertInput!) {
    insertEventOne(object: $object) {
      __typename
      id
      createdAt
      slug
      start
      end
      name
      state
      price
      pointsAwardedForAttendance
      isPrivate
      description
      location {
        __typename
        id
        type
        onlineLink
        locationDetails
        address {
          __typename
          id
          name
          latitude
          longitude
          category
          streetNumber
          street
          zip
          city
          state
          country
        }
      }
      banner {
        __typename
        id
        url
        type
      }
      eventTags {
        tag {
          __typename
          id
          createdAt
          slug
          name
          color
        }
      }
      eventOrganizes {
        __typename
        id
        eventSupervisors {
          user {
            __typename
            id
            createdAt
            firstName
            lastName
            individual {
              __typename
              id
              createdAt
              actor {
                __typename
                id
                createdAt
                email
                name
                slug
                website
                actorImages {
                  __typename
                  id
                  type
                  image {
                    __typename
                    id
                    url
                  }
                }
                bio
                status
                actorTags {
                  tag {
                    __typename
                    id
                    createdAt
                    slug
                    name
                    color
                  }
                }
                socials(where: { deletedAt: { _isNull: true } }) {
                  __typename
                  id
                  pseudo
                  url
                  type
                  order
                }
              }
            }
          }
        }
        team {
          __typename
          id
          type
          actor {
            __typename
            id
            name
            slug
            email
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
          joinForm {
            __typename
            id
            schema
            name
          }
        }
        project {
          __typename
          id
          createdAt
          name
          slug
          color
          isPrivate
        }
      }
      eventJoinsAggregate(where: { state: { _eq: "Approved" } }) {
        aggregate {
          count
        }
      }
      eventJoins(where: { state: { _eq: "Approved" } }, limit: 12) {
        __typename
        id
        createdAt
        state
        isPresent
        processedAt
        participationProcessedVia
        participationProcessedAt
        processedBy {
          __typename
          id
          createdAt
          actor {
            __typename
            id
            slug
            bio
            name
            email
            status
            website
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
        }
        joinedBy {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              slug
              bio
              name
              email
              website
              status
              actorImages {
                __typename
                id
                type
                image {
                  __typename
                  id
                  url
                }
              }
            }
          }
        }
      }
      joinForm {
        __typename
        id
        createdAt
        schema
        name
        type
      }
    }
  }
`;
export type InsertEventMutationFn = Apollo.MutationFunction<InsertEventMutation, InsertEventMutationVariables>;

/**
 * __useInsertEventMutation__
 *
 * To run a mutation, you first call `useInsertEventMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertEventMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertEventMutation, { data, loading, error }] = useInsertEventMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertEventMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertEventMutation, InsertEventMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertEventMutation, InsertEventMutationVariables>(InsertEventDocument, options);
}
export type InsertEventMutationHookResult = ReturnType<typeof useInsertEventMutation>;
export type InsertEventMutationResult = Apollo.MutationResult<InsertEventMutation>;
export type InsertEventMutationOptions = Apollo.BaseMutationOptions<InsertEventMutation, InsertEventMutationVariables>;
export const InsertFinanceDocument = gql`
  mutation InsertFinance($object: FinanceInsertInput!) {
    insertFinanceOne(object: $object) {
      __typename
      id
      createdAt
      amount
      category
      method
      payedAt
      payedBy {
        __typename
        id
        name
        slug
        email
        website
        actorImages {
          __typename
          id
          type
          image {
            __typename
            id
            url
          }
        }
        team {
          __typename
          id
          actor {
            __typename
            id
            slug
          }
        }
        individual {
          __typename
          id
          actor {
            __typename
            id
            slug
          }
        }
      }
      receivedBy {
        __typename
        id
        name
        slug
        email
        website
        actorImages {
          __typename
          id
          type
          image {
            __typename
            id
            url
          }
        }
        team {
          __typename
          id
          actor {
            __typename
            id
            slug
          }
        }
        individual {
          __typename
          id
          user {
            __typename
            id
            individual {
              __typename
              id
              actor {
                __typename
                id
                slug
              }
            }
          }
          actor {
            __typename
            id
            slug
          }
        }
      }
      initiatedBy {
        __typename
        id
        actor {
          __typename
          id
          name
          slug
          email
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
      createdBy {
        __typename
        id
        actor {
          __typename
          id
          name
          slug
          email
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
        user {
          __typename
          id
          individual {
            __typename
            id
            actor {
              __typename
              id
              slug
            }
          }
        }
      }
      event {
        __typename
        id
        slug
        name
      }
      project {
        __typename
        id
        slug
        name
      }
      financeAttachments {
        attachment {
          __typename
          id
          name
          size
          type
          url
        }
      }
    }
  }
`;
export type InsertFinanceMutationFn = Apollo.MutationFunction<InsertFinanceMutation, InsertFinanceMutationVariables>;

/**
 * __useInsertFinanceMutation__
 *
 * To run a mutation, you first call `useInsertFinanceMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertFinanceMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertFinanceMutation, { data, loading, error }] = useInsertFinanceMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertFinanceMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertFinanceMutation, InsertFinanceMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertFinanceMutation, InsertFinanceMutationVariables>(InsertFinanceDocument, options);
}
export type InsertFinanceMutationHookResult = ReturnType<typeof useInsertFinanceMutation>;
export type InsertFinanceMutationResult = Apollo.MutationResult<InsertFinanceMutation>;
export type InsertFinanceMutationOptions = Apollo.BaseMutationOptions<
  InsertFinanceMutation,
  InsertFinanceMutationVariables
>;
export const ProcessReceiptDocument = gql`
  query ProcessReceipt($key: String!) {
    processReceipt(key: $key) {
      __typename
      address
      amount
      date
      phone
      vendorName
      lineItems {
        __typename
        name
        quantity
        price
      }
    }
  }
`;

/**
 * __useProcessReceiptQuery__
 *
 * To run a query within a React component, call `useProcessReceiptQuery` and pass it any options that fit your needs.
 * When your component renders, `useProcessReceiptQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useProcessReceiptQuery({
 *   variables: {
 *      key: // value for 'key'
 *   },
 * });
 */
export function useProcessReceiptQuery(
  baseOptions: Apollo.QueryHookOptions<ProcessReceiptQuery, ProcessReceiptQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<ProcessReceiptQuery, ProcessReceiptQueryVariables>(ProcessReceiptDocument, options);
}
export function useProcessReceiptLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<ProcessReceiptQuery, ProcessReceiptQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<ProcessReceiptQuery, ProcessReceiptQueryVariables>(ProcessReceiptDocument, options);
}
export type ProcessReceiptQueryHookResult = ReturnType<typeof useProcessReceiptQuery>;
export type ProcessReceiptLazyQueryHookResult = ReturnType<typeof useProcessReceiptLazyQuery>;
export type ProcessReceiptQueryResult = Apollo.QueryResult<ProcessReceiptQuery, ProcessReceiptQueryVariables>;
export const LogoutDocument = gql`
  mutation Logout {
    logout
  }
`;
export type LogoutMutationFn = Apollo.MutationFunction<LogoutMutation, LogoutMutationVariables>;

/**
 * __useLogoutMutation__
 *
 * To run a mutation, you first call `useLogoutMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useLogoutMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [logoutMutation, { data, loading, error }] = useLogoutMutation({
 *   variables: {
 *   },
 * });
 */
export function useLogoutMutation(baseOptions?: Apollo.MutationHookOptions<LogoutMutation, LogoutMutationVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument, options);
}
export type LogoutMutationHookResult = ReturnType<typeof useLogoutMutation>;
export type LogoutMutationResult = Apollo.MutationResult<LogoutMutation>;
export type LogoutMutationOptions = Apollo.BaseMutationOptions<LogoutMutation, LogoutMutationVariables>;
export const GetFinanceLogsDocument = gql`
  query GetFinanceLogs($id: bigint!) {
    financeLogs(id: $id) {
      __typename
      id
      createdAt
      context
      diff
      note
      entityId
      entityName
      eventType
      createdBy {
        __typename
        id
        createdAt
        actor {
          __typename
          id
          createdAt
          email
          name
          slug
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              createdAt
              url
            }
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetFinanceLogsQuery__
 *
 * To run a query within a React component, call `useGetFinanceLogsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetFinanceLogsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetFinanceLogsQuery({
 *   variables: {
 *      id: // value for 'id'
 *   },
 * });
 */
export function useGetFinanceLogsQuery(
  baseOptions: Apollo.QueryHookOptions<GetFinanceLogsQuery, GetFinanceLogsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetFinanceLogsQuery, GetFinanceLogsQueryVariables>(GetFinanceLogsDocument, options);
}
export function useGetFinanceLogsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetFinanceLogsQuery, GetFinanceLogsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetFinanceLogsQuery, GetFinanceLogsQueryVariables>(GetFinanceLogsDocument, options);
}
export type GetFinanceLogsQueryHookResult = ReturnType<typeof useGetFinanceLogsQuery>;
export type GetFinanceLogsLazyQueryHookResult = ReturnType<typeof useGetFinanceLogsLazyQuery>;
export type GetFinanceLogsQueryResult = Apollo.QueryResult<GetFinanceLogsQuery, GetFinanceLogsQueryVariables>;
export const UpdateFinanceDocument = gql`
  mutation UpdateFinance($id: bigint!, $update: FinanceSetInput!) {
    updateFinanceByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      createdAt
      amount
      category
      method
      payedAt
      payedBy {
        __typename
        id
        name
        slug
        email
        website
        actorImages {
          __typename
          id
          type
          image {
            __typename
            id
            url
          }
        }
        team {
          __typename
          id
          actor {
            __typename
            id
            slug
          }
        }
        individual {
          __typename
          id
          actor {
            __typename
            id
            slug
          }
        }
      }
      receivedBy {
        __typename
        id
        name
        slug
        email
        website
        actorImages {
          __typename
          id
          type
          image {
            __typename
            id
            url
          }
        }
        team {
          __typename
          id
          actor {
            __typename
            id
            slug
          }
        }
        individual {
          __typename
          id
          user {
            __typename
            id
            individual {
              __typename
              id
              actor {
                __typename
                id
                slug
              }
            }
          }
        }
      }
      initiatedBy {
        __typename
        id
        actor {
          __typename
          id
          name
          slug
          email
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
      createdBy {
        __typename
        id
        actor {
          __typename
          id
          name
          slug
          email
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
        user {
          __typename
          id
          individual {
            __typename
            id
            actor {
              __typename
              id
              slug
            }
          }
        }
      }
      event {
        __typename
        id
        slug
        name
      }
      project {
        __typename
        id
        slug
        name
      }
      financeAttachments {
        attachment {
          __typename
          id
          name
          size
          type
          url
        }
      }
    }
  }
`;
export type UpdateFinanceMutationFn = Apollo.MutationFunction<UpdateFinanceMutation, UpdateFinanceMutationVariables>;

/**
 * __useUpdateFinanceMutation__
 *
 * To run a mutation, you first call `useUpdateFinanceMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateFinanceMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateFinanceMutation, { data, loading, error }] = useUpdateFinanceMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateFinanceMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateFinanceMutation, UpdateFinanceMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateFinanceMutation, UpdateFinanceMutationVariables>(UpdateFinanceDocument, options);
}
export type UpdateFinanceMutationHookResult = ReturnType<typeof useUpdateFinanceMutation>;
export type UpdateFinanceMutationResult = Apollo.MutationResult<UpdateFinanceMutation>;
export type UpdateFinanceMutationOptions = Apollo.BaseMutationOptions<
  UpdateFinanceMutation,
  UpdateFinanceMutationVariables
>;
export const GetEventLogsDocument = gql`
  query GetEventLogs($id: bigint!) {
    eventLogs(id: $id) {
      __typename
      id
      createdAt
      context
      diff
      note
      entityId
      entityName
      eventType
      createdBy {
        __typename
        id
        createdAt
        actor {
          __typename
          id
          createdAt
          email
          name
          slug
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              createdAt
              url
            }
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetEventLogsQuery__
 *
 * To run a query within a React component, call `useGetEventLogsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetEventLogsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetEventLogsQuery({
 *   variables: {
 *      id: // value for 'id'
 *   },
 * });
 */
export function useGetEventLogsQuery(
  baseOptions: Apollo.QueryHookOptions<GetEventLogsQuery, GetEventLogsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetEventLogsQuery, GetEventLogsQueryVariables>(GetEventLogsDocument, options);
}
export function useGetEventLogsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetEventLogsQuery, GetEventLogsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetEventLogsQuery, GetEventLogsQueryVariables>(GetEventLogsDocument, options);
}
export type GetEventLogsQueryHookResult = ReturnType<typeof useGetEventLogsQuery>;
export type GetEventLogsLazyQueryHookResult = ReturnType<typeof useGetEventLogsLazyQuery>;
export type GetEventLogsQueryResult = Apollo.QueryResult<GetEventLogsQuery, GetEventLogsQueryVariables>;
export const GetTeamLogsDocument = gql`
  query GetTeamLogs($id: bigint!) {
    teamLogs(id: $id) {
      __typename
      id
      createdAt
      context
      diff
      note
      entityId
      entityName
      eventType
      createdBy {
        __typename
        id
        createdAt
        actor {
          __typename
          id
          createdAt
          email
          name
          slug
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              createdAt
              url
            }
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetTeamLogsQuery__
 *
 * To run a query within a React component, call `useGetTeamLogsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTeamLogsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTeamLogsQuery({
 *   variables: {
 *      id: // value for 'id'
 *   },
 * });
 */
export function useGetTeamLogsQuery(baseOptions: Apollo.QueryHookOptions<GetTeamLogsQuery, GetTeamLogsQueryVariables>) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTeamLogsQuery, GetTeamLogsQueryVariables>(GetTeamLogsDocument, options);
}
export function useGetTeamLogsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTeamLogsQuery, GetTeamLogsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTeamLogsQuery, GetTeamLogsQueryVariables>(GetTeamLogsDocument, options);
}
export type GetTeamLogsQueryHookResult = ReturnType<typeof useGetTeamLogsQuery>;
export type GetTeamLogsLazyQueryHookResult = ReturnType<typeof useGetTeamLogsLazyQuery>;
export type GetTeamLogsQueryResult = Apollo.QueryResult<GetTeamLogsQuery, GetTeamLogsQueryVariables>;
export const GetTenantLogsDocument = gql`
  query GetTenantLogs($id: bigint!) {
    tenantLogs(id: $id) {
      __typename
      id
      createdAt
      context
      diff
      note
      entityId
      entityName
      eventType
      createdBy {
        __typename
        id
        createdAt
        actor {
          __typename
          id
          createdAt
          email
          name
          slug
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              createdAt
              url
            }
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              email
              name
              slug
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetTenantLogsQuery__
 *
 * To run a query within a React component, call `useGetTenantLogsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTenantLogsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTenantLogsQuery({
 *   variables: {
 *      id: // value for 'id'
 *   },
 * });
 */
export function useGetTenantLogsQuery(
  baseOptions: Apollo.QueryHookOptions<GetTenantLogsQuery, GetTenantLogsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTenantLogsQuery, GetTenantLogsQueryVariables>(GetTenantLogsDocument, options);
}
export function useGetTenantLogsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTenantLogsQuery, GetTenantLogsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTenantLogsQuery, GetTenantLogsQueryVariables>(GetTenantLogsDocument, options);
}
export type GetTenantLogsQueryHookResult = ReturnType<typeof useGetTenantLogsQuery>;
export type GetTenantLogsLazyQueryHookResult = ReturnType<typeof useGetTenantLogsLazyQuery>;
export type GetTenantLogsQueryResult = Apollo.QueryResult<GetTenantLogsQuery, GetTenantLogsQueryVariables>;
export const InsertEventApprovalDocument = gql`
  mutation InsertEventApproval($object: EventApprovalInsertInput!) {
    insertEventApprovalOne(object: $object) {
      __typename
      id
      createdAt
      isApproved
      message
      eventApprovalStep {
        __typename
        id
        createdAt
        name
        description
        order
        nextSteps {
          __typename
          id
          createdAt
          name
          description
          order
        }
        previousStep {
          __typename
          id
          createdAt
          name
          description
          order
        }
      }
      createdBy {
        __typename
        id
        createdAt
        actor {
          __typename
          id
          createdAt
          email
          name
          slug
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              createdAt
              url
            }
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              slug
            }
          }
        }
      }
    }
  }
`;
export type InsertEventApprovalMutationFn = Apollo.MutationFunction<
  InsertEventApprovalMutation,
  InsertEventApprovalMutationVariables
>;

/**
 * __useInsertEventApprovalMutation__
 *
 * To run a mutation, you first call `useInsertEventApprovalMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertEventApprovalMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertEventApprovalMutation, { data, loading, error }] = useInsertEventApprovalMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertEventApprovalMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertEventApprovalMutation, InsertEventApprovalMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertEventApprovalMutation, InsertEventApprovalMutationVariables>(
    InsertEventApprovalDocument,
    options,
  );
}
export type InsertEventApprovalMutationHookResult = ReturnType<typeof useInsertEventApprovalMutation>;
export type InsertEventApprovalMutationResult = Apollo.MutationResult<InsertEventApprovalMutation>;
export type InsertEventApprovalMutationOptions = Apollo.BaseMutationOptions<
  InsertEventApprovalMutation,
  InsertEventApprovalMutationVariables
>;
export const InsertSingleUploadDocument = gql`
  mutation InsertSingleUpload($file: Upload!, $bucket: String!, $entityId: String!, $entityName: String!) {
    singleUpload(file: $file, bucket: $bucket, entityId: $entityId, entityName: $entityName) {
      id
      name
      url
      createdAt
    }
  }
`;
export type InsertSingleUploadMutationFn = Apollo.MutationFunction<
  InsertSingleUploadMutation,
  InsertSingleUploadMutationVariables
>;

/**
 * __useInsertSingleUploadMutation__
 *
 * To run a mutation, you first call `useInsertSingleUploadMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertSingleUploadMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertSingleUploadMutation, { data, loading, error }] = useInsertSingleUploadMutation({
 *   variables: {
 *      file: // value for 'file'
 *      bucket: // value for 'bucket'
 *      entityId: // value for 'entityId'
 *      entityName: // value for 'entityName'
 *   },
 * });
 */
export function useInsertSingleUploadMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertSingleUploadMutation, InsertSingleUploadMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertSingleUploadMutation, InsertSingleUploadMutationVariables>(
    InsertSingleUploadDocument,
    options,
  );
}
export type InsertSingleUploadMutationHookResult = ReturnType<typeof useInsertSingleUploadMutation>;
export type InsertSingleUploadMutationResult = Apollo.MutationResult<InsertSingleUploadMutation>;
export type InsertSingleUploadMutationOptions = Apollo.BaseMutationOptions<
  InsertSingleUploadMutation,
  InsertSingleUploadMutationVariables
>;
export const GetLegalUnitLocationsDocument = gql`
  query GetLegalUnitLocations(
    $where: LegalUnitLocationBoolExp
    $orderBy: [LegalUnitLocationOrderBy!]
    $limit: Int
    $offset: Int
  ) {
    legalUnitLocation(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      legalName
      actor {
        __typename
        id
        slug
        name
        email
        website
        actorImages {
          __typename
          id
          type
          image {
            __typename
            id
            url
          }
        }
      }
      location {
        __typename
        id
        type
        onlineLink
        locationDetails
        address {
          __typename
          id
          name
          latitude
          longitude
          category
          streetNumber
          street
          zip
          city
          state
          country
        }
      }
    }
  }
`;

/**
 * __useGetLegalUnitLocationsQuery__
 *
 * To run a query within a React component, call `useGetLegalUnitLocationsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetLegalUnitLocationsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetLegalUnitLocationsQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetLegalUnitLocationsQuery(
  baseOptions?: Apollo.QueryHookOptions<GetLegalUnitLocationsQuery, GetLegalUnitLocationsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetLegalUnitLocationsQuery, GetLegalUnitLocationsQueryVariables>(
    GetLegalUnitLocationsDocument,
    options,
  );
}
export function useGetLegalUnitLocationsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetLegalUnitLocationsQuery, GetLegalUnitLocationsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetLegalUnitLocationsQuery, GetLegalUnitLocationsQueryVariables>(
    GetLegalUnitLocationsDocument,
    options,
  );
}
export type GetLegalUnitLocationsQueryHookResult = ReturnType<typeof useGetLegalUnitLocationsQuery>;
export type GetLegalUnitLocationsLazyQueryHookResult = ReturnType<typeof useGetLegalUnitLocationsLazyQuery>;
export type GetLegalUnitLocationsQueryResult = Apollo.QueryResult<
  GetLegalUnitLocationsQuery,
  GetLegalUnitLocationsQueryVariables
>;
export const GetLegalUnitsDocument = gql`
  query GetLegalUnits($where: LegalUnitBoolExp, $orderBy: [LegalUnitOrderBy!], $limit: Int, $offset: Int) {
    legalUnit(where: $where, orderBy: $orderBy, limit: $limit, offset: $offset) {
      __typename
      id
      createdAt
      type
      legalName
      actor {
        __typename
        id
        slug
        name
        email
        website
        actorImages {
          __typename
          id
          type
          image {
            __typename
            id
            url
          }
        }
      }
    }
  }
`;

/**
 * __useGetLegalUnitsQuery__
 *
 * To run a query within a React component, call `useGetLegalUnitsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetLegalUnitsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetLegalUnitsQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      limit: // value for 'limit'
 *      offset: // value for 'offset'
 *   },
 * });
 */
export function useGetLegalUnitsQuery(
  baseOptions?: Apollo.QueryHookOptions<GetLegalUnitsQuery, GetLegalUnitsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetLegalUnitsQuery, GetLegalUnitsQueryVariables>(GetLegalUnitsDocument, options);
}
export function useGetLegalUnitsLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetLegalUnitsQuery, GetLegalUnitsQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetLegalUnitsQuery, GetLegalUnitsQueryVariables>(GetLegalUnitsDocument, options);
}
export type GetLegalUnitsQueryHookResult = ReturnType<typeof useGetLegalUnitsQuery>;
export type GetLegalUnitsLazyQueryHookResult = ReturnType<typeof useGetLegalUnitsLazyQuery>;
export type GetLegalUnitsQueryResult = Apollo.QueryResult<GetLegalUnitsQuery, GetLegalUnitsQueryVariables>;
export const InsertLegalUnitDocument = gql`
  mutation InsertLegalUnit($object: LegalUnitInsertInput!) {
    insertLegalUnitOne(object: $object) {
      __typename
      id
      createdAt
      type
      legalName
      actor {
        __typename
        id
        slug
        name
        email
        website
        actorImages {
          __typename
          id
          type
          image {
            __typename
            id
            url
          }
        }
      }
    }
  }
`;
export type InsertLegalUnitMutationFn = Apollo.MutationFunction<
  InsertLegalUnitMutation,
  InsertLegalUnitMutationVariables
>;

/**
 * __useInsertLegalUnitMutation__
 *
 * To run a mutation, you first call `useInsertLegalUnitMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertLegalUnitMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertLegalUnitMutation, { data, loading, error }] = useInsertLegalUnitMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertLegalUnitMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertLegalUnitMutation, InsertLegalUnitMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertLegalUnitMutation, InsertLegalUnitMutationVariables>(
    InsertLegalUnitDocument,
    options,
  );
}
export type InsertLegalUnitMutationHookResult = ReturnType<typeof useInsertLegalUnitMutation>;
export type InsertLegalUnitMutationResult = Apollo.MutationResult<InsertLegalUnitMutation>;
export type InsertLegalUnitMutationOptions = Apollo.BaseMutationOptions<
  InsertLegalUnitMutation,
  InsertLegalUnitMutationVariables
>;
export const InsertLegalUnitLocationDocument = gql`
  mutation InsertLegalUnitLocation($object: LegalUnitLocationInsertInput!) {
    insertLegalUnitLocationOne(object: $object) {
      __typename
      id
      legalName
      actor {
        __typename
        id
        slug
        name
        email
        website
        actorImages {
          __typename
          id
          type
          image {
            __typename
            id
            url
          }
        }
      }
      location {
        __typename
        id
        type
        onlineLink
        locationDetails
        address {
          __typename
          id
          name
          latitude
          longitude
          category
          streetNumber
          street
          zip
          city
          state
          country
        }
      }
    }
  }
`;
export type InsertLegalUnitLocationMutationFn = Apollo.MutationFunction<
  InsertLegalUnitLocationMutation,
  InsertLegalUnitLocationMutationVariables
>;

/**
 * __useInsertLegalUnitLocationMutation__
 *
 * To run a mutation, you first call `useInsertLegalUnitLocationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInsertLegalUnitLocationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [insertLegalUnitLocationMutation, { data, loading, error }] = useInsertLegalUnitLocationMutation({
 *   variables: {
 *      object: // value for 'object'
 *   },
 * });
 */
export function useInsertLegalUnitLocationMutation(
  baseOptions?: Apollo.MutationHookOptions<InsertLegalUnitLocationMutation, InsertLegalUnitLocationMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<InsertLegalUnitLocationMutation, InsertLegalUnitLocationMutationVariables>(
    InsertLegalUnitLocationDocument,
    options,
  );
}
export type InsertLegalUnitLocationMutationHookResult = ReturnType<typeof useInsertLegalUnitLocationMutation>;
export type InsertLegalUnitLocationMutationResult = Apollo.MutationResult<InsertLegalUnitLocationMutation>;
export type InsertLegalUnitLocationMutationOptions = Apollo.BaseMutationOptions<
  InsertLegalUnitLocationMutation,
  InsertLegalUnitLocationMutationVariables
>;
export const SearchLocationDocument = gql`
  query SearchLocation($query: String!) {
    searchLocation(query: $query) {
      __typename
      geoapifyId
      name
      category
      latitude
      longitude
      street
      streetNumber
      city
      zip
      state
      country
    }
  }
`;

/**
 * __useSearchLocationQuery__
 *
 * To run a query within a React component, call `useSearchLocationQuery` and pass it any options that fit your needs.
 * When your component renders, `useSearchLocationQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useSearchLocationQuery({
 *   variables: {
 *      query: // value for 'query'
 *   },
 * });
 */
export function useSearchLocationQuery(
  baseOptions: Apollo.QueryHookOptions<SearchLocationQuery, SearchLocationQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<SearchLocationQuery, SearchLocationQueryVariables>(SearchLocationDocument, options);
}
export function useSearchLocationLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<SearchLocationQuery, SearchLocationQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<SearchLocationQuery, SearchLocationQueryVariables>(SearchLocationDocument, options);
}
export type SearchLocationQueryHookResult = ReturnType<typeof useSearchLocationQuery>;
export type SearchLocationLazyQueryHookResult = ReturnType<typeof useSearchLocationLazyQuery>;
export type SearchLocationQueryResult = Apollo.QueryResult<SearchLocationQuery, SearchLocationQueryVariables>;
export const GetTeamPopoverDocument = gql`
  query GetTeamPopover($id: bigint!) {
    team(where: { id: { _eq: $id } }, limit: 1) {
      __typename
      id
      createdAt
      type
      membershipFees
      membershipDuration
      actor {
        __typename
        id
        slug
        bio
        name
        status
        email
        website
        actorImages {
          __typename
          id
          type
          image {
            __typename
            id
            url
          }
        }
        socials(where: { deletedAt: { _isNull: true } }) {
          __typename
          id
          pseudo
          url
          type
          order
        }
      }
      directorsCategoryName
      managersCategoryName
      membersCategoryName
      joinForm {
        __typename
        id
        createdAt
        schema
        name
        type
      }
      poles {
        __typename
        id
        createdAt
        name
        description
      }
      roles {
        __typename
        id
        createdAt
        category
        type
        name
        permissions
      }
      teamMembers {
        __typename
        id
        createdAt
        startDate
        endDate
        teamMemberRoles {
          role {
            __typename
            id
            createdAt
            category
            type
            name
            permissions
          }
        }
        user {
          __typename
          id
          createdAt
          firstName
          lastName
          individual {
            __typename
            id
            createdAt
            actor {
              __typename
              id
              createdAt
              bio
              email
              name
              slug
              status
              website
              actorImages {
                __typename
                id
                createdAt
                type
                image {
                  __typename
                  id
                  createdAt
                  url
                  size
                  type
                }
              }
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetTeamPopoverQuery__
 *
 * To run a query within a React component, call `useGetTeamPopoverQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTeamPopoverQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTeamPopoverQuery({
 *   variables: {
 *      id: // value for 'id'
 *   },
 * });
 */
export function useGetTeamPopoverQuery(
  baseOptions: Apollo.QueryHookOptions<GetTeamPopoverQuery, GetTeamPopoverQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetTeamPopoverQuery, GetTeamPopoverQueryVariables>(GetTeamPopoverDocument, options);
}
export function useGetTeamPopoverLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetTeamPopoverQuery, GetTeamPopoverQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetTeamPopoverQuery, GetTeamPopoverQueryVariables>(GetTeamPopoverDocument, options);
}
export type GetTeamPopoverQueryHookResult = ReturnType<typeof useGetTeamPopoverQuery>;
export type GetTeamPopoverLazyQueryHookResult = ReturnType<typeof useGetTeamPopoverLazyQuery>;
export type GetTeamPopoverQueryResult = Apollo.QueryResult<GetTeamPopoverQuery, GetTeamPopoverQueryVariables>;
export const GetUserPopoverDocument = gql`
  query GetUserPopover($id: bigint!) {
    user(where: { id: { _eq: $id } }, limit: 1) {
      __typename
      id
      createdAt
      firstName
      lastName
      individual {
        __typename
        id
        actor {
          __typename
          id
          slug
          bio
          name
          email
          website
          actorImages {
            __typename
            id
            type
            image {
              __typename
              id
              url
            }
          }
        }
      }
      teamMembers(where: { endDate: { _isNull: true } }) {
        __typename
        id
        team {
          __typename
          id
          type
          actor {
            __typename
            id
            slug
            actorImages {
              __typename
              id
              type
              image {
                __typename
                id
                url
              }
            }
          }
        }
      }
    }
  }
`;

/**
 * __useGetUserPopoverQuery__
 *
 * To run a query within a React component, call `useGetUserPopoverQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetUserPopoverQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetUserPopoverQuery({
 *   variables: {
 *      id: // value for 'id'
 *   },
 * });
 */
export function useGetUserPopoverQuery(
  baseOptions: Apollo.QueryHookOptions<GetUserPopoverQuery, GetUserPopoverQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useQuery<GetUserPopoverQuery, GetUserPopoverQueryVariables>(GetUserPopoverDocument, options);
}
export function useGetUserPopoverLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<GetUserPopoverQuery, GetUserPopoverQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useLazyQuery<GetUserPopoverQuery, GetUserPopoverQueryVariables>(GetUserPopoverDocument, options);
}
export type GetUserPopoverQueryHookResult = ReturnType<typeof useGetUserPopoverQuery>;
export type GetUserPopoverLazyQueryHookResult = ReturnType<typeof useGetUserPopoverLazyQuery>;
export type GetUserPopoverQueryResult = Apollo.QueryResult<GetUserPopoverQuery, GetUserPopoverQueryVariables>;
export const UpdateFormDocument = gql`
  mutation UpdateForm($id: bigint!, $update: FormSetInput!) {
    updateFormByPk(pkColumns: { id: $id }, _set: $update) {
      __typename
      id
      createdAt
      schema
      name
      type
    }
  }
`;
export type UpdateFormMutationFn = Apollo.MutationFunction<UpdateFormMutation, UpdateFormMutationVariables>;

/**
 * __useUpdateFormMutation__
 *
 * To run a mutation, you first call `useUpdateFormMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateFormMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateFormMutation, { data, loading, error }] = useUpdateFormMutation({
 *   variables: {
 *      id: // value for 'id'
 *      update: // value for 'update'
 *   },
 * });
 */
export function useUpdateFormMutation(
  baseOptions?: Apollo.MutationHookOptions<UpdateFormMutation, UpdateFormMutationVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<UpdateFormMutation, UpdateFormMutationVariables>(UpdateFormDocument, options);
}
export type UpdateFormMutationHookResult = ReturnType<typeof useUpdateFormMutation>;
export type UpdateFormMutationResult = Apollo.MutationResult<UpdateFormMutation>;
export type UpdateFormMutationOptions = Apollo.BaseMutationOptions<UpdateFormMutation, UpdateFormMutationVariables>;
