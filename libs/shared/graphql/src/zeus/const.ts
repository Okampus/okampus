/* eslint-disable */

export const AllTypesProps: Record<string, any> = {
  _text: `scalar._text` as const,
  _textComparisonExp: {
    _eq: '_text',
    _gt: '_text',
    _gte: '_text',
    _in: '_text',
    _lt: '_text',
    _lte: '_text',
    _neq: '_text',
    _nin: '_text',
  },
  Action: {
    eventJoins: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventJoinsAggregate: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
  },
  ActionAggregateBoolExp: {
    count: 'actionAggregateBoolExpCount',
  },
  actionAggregateBoolExpCount: {
    arguments: 'ActionSelectColumn',
    filter: 'ActionBoolExp',
    predicate: 'IntComparisonExp',
  },
  ActionAggregateFields: {
    count: {
      columns: 'ActionSelectColumn',
    },
  },
  ActionAggregateOrderBy: {
    avg: 'ActionAvgOrderBy',
    count: 'OrderBy',
    max: 'ActionMaxOrderBy',
    min: 'ActionMinOrderBy',
    stddev: 'ActionStddevOrderBy',
    stddevPop: 'ActionStddevPopOrderBy',
    stddevSamp: 'ActionStddevSampOrderBy',
    sum: 'ActionSumOrderBy',
    varPop: 'ActionVarPopOrderBy',
    varSamp: 'ActionVarSampOrderBy',
    variance: 'ActionVarianceOrderBy',
  },
  ActionArrRelInsertInput: {
    data: 'ActionInsertInput',
    onConflict: 'ActionOnConflict',
  },
  ActionAvgOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    eventJoinId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    score: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    validatedById: 'OrderBy',
  },
  ActionBoolExp: {
    _and: 'ActionBoolExp',
    _not: 'ActionBoolExp',
    _or: 'ActionBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    description: 'StringComparisonExp',
    event: 'EventBoolExp',
    eventId: 'BigintComparisonExp',
    eventJoin: 'EventJoinBoolExp',
    eventJoinId: 'BigintComparisonExp',
    eventJoins: 'EventJoinBoolExp',
    eventJoinsAggregate: 'EventJoinAggregateBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    name: 'StringComparisonExp',
    project: 'ProjectBoolExp',
    projectId: 'BigintComparisonExp',
    score: 'IntComparisonExp',
    state: 'StringComparisonExp',
    team: 'TeamBoolExp',
    teamId: 'BigintComparisonExp',
    teamMember: 'TeamMemberBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    userId: 'BigintComparisonExp',
    userInfo: 'UserInfoBoolExp',
    validatedById: 'BigintComparisonExp',
  },
  ActionConstraint: 'enum' as const,
  ActionIncInput: {
    createdById: 'bigint',
    eventId: 'bigint',
    eventJoinId: 'bigint',
    id: 'bigint',
    projectId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
    validatedById: 'bigint',
  },
  ActionInsertInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    event: 'EventObjRelInsertInput',
    eventId: 'bigint',
    eventJoin: 'EventJoinObjRelInsertInput',
    eventJoinId: 'bigint',
    eventJoins: 'EventJoinArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    project: 'ProjectObjRelInsertInput',
    projectId: 'bigint',
    team: 'TeamObjRelInsertInput',
    teamId: 'bigint',
    teamMember: 'TeamMemberObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    userId: 'bigint',
    userInfo: 'UserInfoObjRelInsertInput',
    validatedById: 'bigint',
  },
  ActionMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    eventId: 'OrderBy',
    eventJoinId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    projectId: 'OrderBy',
    score: 'OrderBy',
    state: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    validatedById: 'OrderBy',
  },
  ActionMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    eventId: 'OrderBy',
    eventJoinId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    projectId: 'OrderBy',
    score: 'OrderBy',
    state: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    validatedById: 'OrderBy',
  },
  ActionObjRelInsertInput: {
    data: 'ActionInsertInput',
    onConflict: 'ActionOnConflict',
  },
  ActionOnConflict: {
    constraint: 'ActionConstraint',
    updateColumns: 'ActionUpdateColumn',
    where: 'ActionBoolExp',
  },
  ActionOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    event: 'EventOrderBy',
    eventId: 'OrderBy',
    eventJoin: 'EventJoinOrderBy',
    eventJoinId: 'OrderBy',
    eventJoinsAggregate: 'EventJoinAggregateOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    name: 'OrderBy',
    project: 'ProjectOrderBy',
    projectId: 'OrderBy',
    score: 'OrderBy',
    state: 'OrderBy',
    team: 'TeamOrderBy',
    teamId: 'OrderBy',
    teamMember: 'TeamMemberOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    userInfo: 'UserInfoOrderBy',
    validatedById: 'OrderBy',
  },
  ActionPkColumnsInput: {
    id: 'bigint',
  },
  ActionSelectColumn: 'enum' as const,
  ActionSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    eventJoinId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    projectId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
    validatedById: 'bigint',
  },
  ActionStddevOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    eventJoinId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    score: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    validatedById: 'OrderBy',
  },
  ActionStddevPopOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    eventJoinId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    score: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    validatedById: 'OrderBy',
  },
  ActionStddevSampOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    eventJoinId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    score: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    validatedById: 'OrderBy',
  },
  ActionStreamCursorInput: {
    initialValue: 'ActionStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ActionStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    eventJoinId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    projectId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
    validatedById: 'bigint',
  },
  ActionSumOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    eventJoinId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    score: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    validatedById: 'OrderBy',
  },
  ActionUpdateColumn: 'enum' as const,
  ActionUpdates: {
    _inc: 'ActionIncInput',
    _set: 'ActionSetInput',
    where: 'ActionBoolExp',
  },
  ActionVarianceOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    eventJoinId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    score: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    validatedById: 'OrderBy',
  },
  ActionVarPopOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    eventJoinId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    score: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    validatedById: 'OrderBy',
  },
  ActionVarSampOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    eventJoinId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    score: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    validatedById: 'OrderBy',
  },
  Actor: {
    actorAddresses: {
      distinctOn: 'ActorAddressSelectColumn',
      orderBy: 'ActorAddressOrderBy',
      where: 'ActorAddressBoolExp',
    },
    actorAddressesAggregate: {
      distinctOn: 'ActorAddressSelectColumn',
      orderBy: 'ActorAddressOrderBy',
      where: 'ActorAddressBoolExp',
    },
    actorBankInfos: {
      distinctOn: 'ActorBankInfoSelectColumn',
      orderBy: 'ActorBankInfoOrderBy',
      where: 'ActorBankInfoBoolExp',
    },
    actorBankInfosAggregate: {
      distinctOn: 'ActorBankInfoSelectColumn',
      orderBy: 'ActorBankInfoOrderBy',
      where: 'ActorBankInfoBoolExp',
    },
    actorFinances: {
      distinctOn: 'ActorFinanceSelectColumn',
      orderBy: 'ActorFinanceOrderBy',
      where: 'ActorFinanceBoolExp',
    },
    actorFinancesAggregate: {
      distinctOn: 'ActorFinanceSelectColumn',
      orderBy: 'ActorFinanceOrderBy',
      where: 'ActorFinanceBoolExp',
    },
    actorImages: {
      distinctOn: 'ActorImageSelectColumn',
      orderBy: 'ActorImageOrderBy',
      where: 'ActorImageBoolExp',
    },
    actorImagesAggregate: {
      distinctOn: 'ActorImageSelectColumn',
      orderBy: 'ActorImageOrderBy',
      where: 'ActorImageBoolExp',
    },
    actorTags: {
      distinctOn: 'ActorTagsSelectColumn',
      orderBy: 'ActorTagsOrderBy',
      where: 'ActorTagsBoolExp',
    },
    actorTagsAggregate: {
      distinctOn: 'ActorTagsSelectColumn',
      orderBy: 'ActorTagsOrderBy',
      where: 'ActorTagsBoolExp',
    },
    botInfos: {
      distinctOn: 'BotInfoSelectColumn',
      orderBy: 'BotInfoOrderBy',
      where: 'BotInfoBoolExp',
    },
    botInfosAggregate: {
      distinctOn: 'BotInfoSelectColumn',
      orderBy: 'BotInfoOrderBy',
      where: 'BotInfoBoolExp',
    },
    favorites: {
      distinctOn: 'FavoriteSelectColumn',
      orderBy: 'FavoriteOrderBy',
      where: 'FavoriteBoolExp',
    },
    favoritesAggregate: {
      distinctOn: 'FavoriteSelectColumn',
      orderBy: 'FavoriteOrderBy',
      where: 'FavoriteBoolExp',
    },
    reports: {
      distinctOn: 'ReportSelectColumn',
      orderBy: 'ReportOrderBy',
      where: 'ReportBoolExp',
    },
    reportsAggregate: {
      distinctOn: 'ReportSelectColumn',
      orderBy: 'ReportOrderBy',
      where: 'ReportBoolExp',
    },
    shortcuts: {
      distinctOn: 'ShortcutSelectColumn',
      orderBy: 'ShortcutOrderBy',
      where: 'ShortcutBoolExp',
    },
    shortcutsAggregate: {
      distinctOn: 'ShortcutSelectColumn',
      orderBy: 'ShortcutOrderBy',
      where: 'ShortcutBoolExp',
    },
    socials: {
      distinctOn: 'SocialSelectColumn',
      orderBy: 'SocialOrderBy',
      where: 'SocialBoolExp',
    },
    socialsAggregate: {
      distinctOn: 'SocialSelectColumn',
      orderBy: 'SocialOrderBy',
      where: 'SocialBoolExp',
    },
  },
  ActorAddress: {
    actorBankInfos: {
      distinctOn: 'ActorBankInfoSelectColumn',
      orderBy: 'ActorBankInfoOrderBy',
      where: 'ActorBankInfoBoolExp',
    },
    actorBankInfosAggregate: {
      distinctOn: 'ActorBankInfoSelectColumn',
      orderBy: 'ActorBankInfoOrderBy',
      where: 'ActorBankInfoBoolExp',
    },
    actorFinances: {
      distinctOn: 'ActorFinanceSelectColumn',
      orderBy: 'ActorFinanceOrderBy',
      where: 'ActorFinanceBoolExp',
    },
    actorFinancesAggregate: {
      distinctOn: 'ActorFinanceSelectColumn',
      orderBy: 'ActorFinanceOrderBy',
      where: 'ActorFinanceBoolExp',
    },
    events: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    eventsAggregate: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
  },
  ActorAddressAggregateBoolExp: {
    bool_and: 'actorAddressAggregateBoolExpBool_and',
    bool_or: 'actorAddressAggregateBoolExpBool_or',
    count: 'actorAddressAggregateBoolExpCount',
  },
  actorAddressAggregateBoolExpBool_and: {
    arguments: 'ActorAddressSelectColumnActorAddressAggregateBoolExpBool_andArgumentsColumns',
    filter: 'ActorAddressBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  actorAddressAggregateBoolExpBool_or: {
    arguments: 'ActorAddressSelectColumnActorAddressAggregateBoolExpBool_orArgumentsColumns',
    filter: 'ActorAddressBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  actorAddressAggregateBoolExpCount: {
    arguments: 'ActorAddressSelectColumn',
    filter: 'ActorAddressBoolExp',
    predicate: 'IntComparisonExp',
  },
  ActorAddressAggregateFields: {
    count: {
      columns: 'ActorAddressSelectColumn',
    },
  },
  ActorAddressAggregateOrderBy: {
    avg: 'ActorAddressAvgOrderBy',
    count: 'OrderBy',
    max: 'ActorAddressMaxOrderBy',
    min: 'ActorAddressMinOrderBy',
    stddev: 'ActorAddressStddevOrderBy',
    stddevPop: 'ActorAddressStddevPopOrderBy',
    stddevSamp: 'ActorAddressStddevSampOrderBy',
    sum: 'ActorAddressSumOrderBy',
    varPop: 'ActorAddressVarPopOrderBy',
    varSamp: 'ActorAddressVarSampOrderBy',
    variance: 'ActorAddressVarianceOrderBy',
  },
  ActorAddressArrRelInsertInput: {
    data: 'ActorAddressInsertInput',
    onConflict: 'ActorAddressOnConflict',
  },
  ActorAddressAvgOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    latitude: 'OrderBy',
    longitude: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorAddressBoolExp: {
    _and: 'ActorAddressBoolExp',
    _not: 'ActorAddressBoolExp',
    _or: 'ActorAddressBoolExp',
    actor: 'ActorBoolExp',
    actorBankInfos: 'ActorBankInfoBoolExp',
    actorBankInfosAggregate: 'ActorBankInfoAggregateBoolExp',
    actorFinances: 'ActorFinanceBoolExp',
    actorFinancesAggregate: 'ActorFinanceAggregateBoolExp',
    actorId: 'BigintComparisonExp',
    city: 'StringComparisonExp',
    country: 'StringComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    events: 'EventBoolExp',
    eventsAggregate: 'EventAggregateBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    imageId: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    latitude: 'FloatComparisonExp',
    longitude: 'FloatComparisonExp',
    name: 'StringComparisonExp',
    public: 'BooleanComparisonExp',
    state: 'StringComparisonExp',
    street: 'StringComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    upload: 'UploadBoolExp',
    zip: 'StringComparisonExp',
  },
  ActorAddressConstraint: 'enum' as const,
  ActorAddressIncInput: {
    actorId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    imageId: 'bigint',
    tenantId: 'bigint',
  },
  ActorAddressInsertInput: {
    actor: 'ActorObjRelInsertInput',
    actorBankInfos: 'ActorBankInfoArrRelInsertInput',
    actorFinances: 'ActorFinanceArrRelInsertInput',
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    events: 'EventArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    upload: 'UploadObjRelInsertInput',
  },
  ActorAddressMaxOrderBy: {
    actorId: 'OrderBy',
    city: 'OrderBy',
    country: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    latitude: 'OrderBy',
    longitude: 'OrderBy',
    name: 'OrderBy',
    state: 'OrderBy',
    street: 'OrderBy',
    tenantId: 'OrderBy',
    zip: 'OrderBy',
  },
  ActorAddressMinOrderBy: {
    actorId: 'OrderBy',
    city: 'OrderBy',
    country: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    latitude: 'OrderBy',
    longitude: 'OrderBy',
    name: 'OrderBy',
    state: 'OrderBy',
    street: 'OrderBy',
    tenantId: 'OrderBy',
    zip: 'OrderBy',
  },
  ActorAddressObjRelInsertInput: {
    data: 'ActorAddressInsertInput',
    onConflict: 'ActorAddressOnConflict',
  },
  ActorAddressOnConflict: {
    constraint: 'ActorAddressConstraint',
    updateColumns: 'ActorAddressUpdateColumn',
    where: 'ActorAddressBoolExp',
  },
  ActorAddressOrderBy: {
    actor: 'ActorOrderBy',
    actorBankInfosAggregate: 'ActorBankInfoAggregateOrderBy',
    actorFinancesAggregate: 'ActorFinanceAggregateOrderBy',
    actorId: 'OrderBy',
    city: 'OrderBy',
    country: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    eventsAggregate: 'EventAggregateOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    individual: 'IndividualOrderBy',
    latitude: 'OrderBy',
    longitude: 'OrderBy',
    name: 'OrderBy',
    public: 'OrderBy',
    state: 'OrderBy',
    street: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    upload: 'UploadOrderBy',
    zip: 'OrderBy',
  },
  ActorAddressPkColumnsInput: {
    id: 'bigint',
  },
  ActorAddressSelectColumn: 'enum' as const,
  ActorAddressSelectColumnActorAddressAggregateBoolExpBool_andArgumentsColumns: 'enum' as const,
  ActorAddressSelectColumnActorAddressAggregateBoolExpBool_orArgumentsColumns: 'enum' as const,
  ActorAddressSetInput: {
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    tenantId: 'bigint',
  },
  ActorAddressStddevOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    latitude: 'OrderBy',
    longitude: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorAddressStddevPopOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    latitude: 'OrderBy',
    longitude: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorAddressStddevSampOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    latitude: 'OrderBy',
    longitude: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorAddressStreamCursorInput: {
    initialValue: 'ActorAddressStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ActorAddressStreamCursorValueInput: {
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    tenantId: 'bigint',
  },
  ActorAddressSumOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    latitude: 'OrderBy',
    longitude: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorAddressUpdateColumn: 'enum' as const,
  ActorAddressUpdates: {
    _inc: 'ActorAddressIncInput',
    _set: 'ActorAddressSetInput',
    where: 'ActorAddressBoolExp',
  },
  ActorAddressVarianceOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    latitude: 'OrderBy',
    longitude: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorAddressVarPopOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    latitude: 'OrderBy',
    longitude: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorAddressVarSampOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    latitude: 'OrderBy',
    longitude: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorAggregateBoolExp: {
    count: 'actorAggregateBoolExpCount',
  },
  actorAggregateBoolExpCount: {
    arguments: 'ActorSelectColumn',
    filter: 'ActorBoolExp',
    predicate: 'IntComparisonExp',
  },
  ActorAggregateFields: {
    count: {
      columns: 'ActorSelectColumn',
    },
  },
  ActorAggregateOrderBy: {
    avg: 'ActorAvgOrderBy',
    count: 'OrderBy',
    max: 'ActorMaxOrderBy',
    min: 'ActorMinOrderBy',
    stddev: 'ActorStddevOrderBy',
    stddevPop: 'ActorStddevPopOrderBy',
    stddevSamp: 'ActorStddevSampOrderBy',
    sum: 'ActorSumOrderBy',
    varPop: 'ActorVarPopOrderBy',
    varSamp: 'ActorVarSampOrderBy',
    variance: 'ActorVarianceOrderBy',
  },
  ActorArrRelInsertInput: {
    data: 'ActorInsertInput',
    onConflict: 'ActorOnConflict',
  },
  ActorAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    individualId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorBankInfo: {
    expenses: {
      distinctOn: 'ExpenseSelectColumn',
      orderBy: 'ExpenseOrderBy',
      where: 'ExpenseBoolExp',
    },
    expensesAggregate: {
      distinctOn: 'ExpenseSelectColumn',
      orderBy: 'ExpenseOrderBy',
      where: 'ExpenseBoolExp',
    },
  },
  ActorBankInfoAggregateBoolExp: {
    count: 'actorBankInfoAggregateBoolExpCount',
  },
  actorBankInfoAggregateBoolExpCount: {
    arguments: 'ActorBankInfoSelectColumn',
    filter: 'ActorBankInfoBoolExp',
    predicate: 'IntComparisonExp',
  },
  ActorBankInfoAggregateFields: {
    count: {
      columns: 'ActorBankInfoSelectColumn',
    },
  },
  ActorBankInfoAggregateOrderBy: {
    avg: 'ActorBankInfoAvgOrderBy',
    count: 'OrderBy',
    max: 'ActorBankInfoMaxOrderBy',
    min: 'ActorBankInfoMinOrderBy',
    stddev: 'ActorBankInfoStddevOrderBy',
    stddevPop: 'ActorBankInfoStddevPopOrderBy',
    stddevSamp: 'ActorBankInfoStddevSampOrderBy',
    sum: 'ActorBankInfoSumOrderBy',
    varPop: 'ActorBankInfoVarPopOrderBy',
    varSamp: 'ActorBankInfoVarSampOrderBy',
    variance: 'ActorBankInfoVarianceOrderBy',
  },
  ActorBankInfoArrRelInsertInput: {
    data: 'ActorBankInfoInsertInput',
    onConflict: 'ActorBankInfoOnConflict',
  },
  ActorBankInfoAvgOrderBy: {
    actorId: 'OrderBy',
    bankLocationId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorBankInfoBoolExp: {
    _and: 'ActorBankInfoBoolExp',
    _not: 'ActorBankInfoBoolExp',
    _or: 'ActorBankInfoBoolExp',
    accountCode: 'StringComparisonExp',
    actor: 'ActorBoolExp',
    actorAddress: 'ActorAddressBoolExp',
    actorId: 'BigintComparisonExp',
    agencyCode: 'StringComparisonExp',
    bankCode: 'StringComparisonExp',
    bankCodeBic: 'StringComparisonExp',
    bankLocationId: 'BigintComparisonExp',
    checksum: 'StringComparisonExp',
    country: 'StringComparisonExp',
    countryCode: 'StringComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    expenses: 'ExpenseBoolExp',
    expensesAggregate: 'ExpenseAggregateBoolExp',
    fullAcount: 'StringComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    holderName: 'StringComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  ActorBankInfoConstraint: 'enum' as const,
  ActorBankInfoIncInput: {
    actorId: 'bigint',
    bankLocationId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ActorBankInfoInsertInput: {
    actor: 'ActorObjRelInsertInput',
    actorAddress: 'ActorAddressObjRelInsertInput',
    actorId: 'bigint',
    bankLocationId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expenses: 'ExpenseArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  ActorBankInfoMaxOrderBy: {
    accountCode: 'OrderBy',
    actorId: 'OrderBy',
    agencyCode: 'OrderBy',
    bankCode: 'OrderBy',
    bankCodeBic: 'OrderBy',
    bankLocationId: 'OrderBy',
    checksum: 'OrderBy',
    country: 'OrderBy',
    countryCode: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    fullAcount: 'OrderBy',
    hiddenAt: 'OrderBy',
    holderName: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorBankInfoMinOrderBy: {
    accountCode: 'OrderBy',
    actorId: 'OrderBy',
    agencyCode: 'OrderBy',
    bankCode: 'OrderBy',
    bankCodeBic: 'OrderBy',
    bankLocationId: 'OrderBy',
    checksum: 'OrderBy',
    country: 'OrderBy',
    countryCode: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    fullAcount: 'OrderBy',
    hiddenAt: 'OrderBy',
    holderName: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorBankInfoObjRelInsertInput: {
    data: 'ActorBankInfoInsertInput',
    onConflict: 'ActorBankInfoOnConflict',
  },
  ActorBankInfoOnConflict: {
    constraint: 'ActorBankInfoConstraint',
    updateColumns: 'ActorBankInfoUpdateColumn',
    where: 'ActorBankInfoBoolExp',
  },
  ActorBankInfoOrderBy: {
    accountCode: 'OrderBy',
    actor: 'ActorOrderBy',
    actorAddress: 'ActorAddressOrderBy',
    actorId: 'OrderBy',
    agencyCode: 'OrderBy',
    bankCode: 'OrderBy',
    bankCodeBic: 'OrderBy',
    bankLocationId: 'OrderBy',
    checksum: 'OrderBy',
    country: 'OrderBy',
    countryCode: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    expensesAggregate: 'ExpenseAggregateOrderBy',
    fullAcount: 'OrderBy',
    hiddenAt: 'OrderBy',
    holderName: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  ActorBankInfoPkColumnsInput: {
    id: 'bigint',
  },
  ActorBankInfoSelectColumn: 'enum' as const,
  ActorBankInfoSetInput: {
    actorId: 'bigint',
    bankLocationId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ActorBankInfoStddevOrderBy: {
    actorId: 'OrderBy',
    bankLocationId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorBankInfoStddevPopOrderBy: {
    actorId: 'OrderBy',
    bankLocationId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorBankInfoStddevSampOrderBy: {
    actorId: 'OrderBy',
    bankLocationId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorBankInfoStreamCursorInput: {
    initialValue: 'ActorBankInfoStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ActorBankInfoStreamCursorValueInput: {
    actorId: 'bigint',
    bankLocationId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ActorBankInfoSumOrderBy: {
    actorId: 'OrderBy',
    bankLocationId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorBankInfoUpdateColumn: 'enum' as const,
  ActorBankInfoUpdates: {
    _inc: 'ActorBankInfoIncInput',
    _set: 'ActorBankInfoSetInput',
    where: 'ActorBankInfoBoolExp',
  },
  ActorBankInfoVarianceOrderBy: {
    actorId: 'OrderBy',
    bankLocationId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorBankInfoVarPopOrderBy: {
    actorId: 'OrderBy',
    bankLocationId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorBankInfoVarSampOrderBy: {
    actorId: 'OrderBy',
    bankLocationId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorBoolExp: {
    _and: 'ActorBoolExp',
    _not: 'ActorBoolExp',
    _or: 'ActorBoolExp',
    actorAddresses: 'ActorAddressBoolExp',
    actorAddressesAggregate: 'ActorAddressAggregateBoolExp',
    actorBankInfos: 'ActorBankInfoBoolExp',
    actorBankInfosAggregate: 'ActorBankInfoAggregateBoolExp',
    actorFinances: 'ActorFinanceBoolExp',
    actorFinancesAggregate: 'ActorFinanceAggregateBoolExp',
    actorImages: 'ActorImageBoolExp',
    actorImagesAggregate: 'ActorImageAggregateBoolExp',
    actorTags: 'ActorTagsBoolExp',
    actorTagsAggregate: 'ActorTagsAggregateBoolExp',
    bio: 'StringComparisonExp',
    botInfos: 'BotInfoBoolExp',
    botInfosAggregate: 'BotInfoAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    favorites: 'FavoriteBoolExp',
    favoritesAggregate: 'FavoriteAggregateBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    ical: 'StringComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    individualByIndividualId: 'IndividualBoolExp',
    individualId: 'BigintComparisonExp',
    name: 'StringComparisonExp',
    primaryEmail: 'StringComparisonExp',
    reports: 'ReportBoolExp',
    reportsAggregate: 'ReportAggregateBoolExp',
    shortcuts: 'ShortcutBoolExp',
    shortcutsAggregate: 'ShortcutAggregateBoolExp',
    slug: 'StringComparisonExp',
    socials: 'SocialBoolExp',
    socialsAggregate: 'SocialAggregateBoolExp',
    team: 'TeamBoolExp',
    teamId: 'BigintComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  ActorConstraint: 'enum' as const,
  ActorFinance: {
    actorFinanceReceipts: {
      distinctOn: 'ActorFinanceReceiptsSelectColumn',
      orderBy: 'ActorFinanceReceiptsOrderBy',
      where: 'ActorFinanceReceiptsBoolExp',
    },
    actorFinanceReceiptsAggregate: {
      distinctOn: 'ActorFinanceReceiptsSelectColumn',
      orderBy: 'ActorFinanceReceiptsOrderBy',
      where: 'ActorFinanceReceiptsBoolExp',
    },
  },
  ActorFinanceAggregateBoolExp: {
    count: 'actorFinanceAggregateBoolExpCount',
  },
  actorFinanceAggregateBoolExpCount: {
    arguments: 'ActorFinanceSelectColumn',
    filter: 'ActorFinanceBoolExp',
    predicate: 'IntComparisonExp',
  },
  ActorFinanceAggregateFields: {
    count: {
      columns: 'ActorFinanceSelectColumn',
    },
  },
  ActorFinanceAggregateOrderBy: {
    avg: 'ActorFinanceAvgOrderBy',
    count: 'OrderBy',
    max: 'ActorFinanceMaxOrderBy',
    min: 'ActorFinanceMinOrderBy',
    stddev: 'ActorFinanceStddevOrderBy',
    stddevPop: 'ActorFinanceStddevPopOrderBy',
    stddevSamp: 'ActorFinanceStddevSampOrderBy',
    sum: 'ActorFinanceSumOrderBy',
    varPop: 'ActorFinanceVarPopOrderBy',
    varSamp: 'ActorFinanceVarSampOrderBy',
    variance: 'ActorFinanceVarianceOrderBy',
  },
  ActorFinanceArrRelInsertInput: {
    data: 'ActorFinanceInsertInput',
    onConflict: 'ActorFinanceOnConflict',
  },
  ActorFinanceAvgOrderBy: {
    amount: 'OrderBy',
    createdById: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    locationId: 'OrderBy',
    payedById: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorFinanceBoolExp: {
    _and: 'ActorFinanceBoolExp',
    _not: 'ActorFinanceBoolExp',
    _or: 'ActorFinanceBoolExp',
    actor: 'ActorBoolExp',
    actorAddress: 'ActorAddressBoolExp',
    actorFinanceReceipts: 'ActorFinanceReceiptsBoolExp',
    actorFinanceReceiptsAggregate: 'ActorFinanceReceiptsAggregateBoolExp',
    amount: 'FloatComparisonExp',
    category: 'StringComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    description: 'StringComparisonExp',
    expense: 'ExpenseBoolExp',
    expenseId: 'BigintComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    locationId: 'BigintComparisonExp',
    name: 'StringComparisonExp',
    payedAt: 'TimestamptzComparisonExp',
    payedById: 'BigintComparisonExp',
    teamFinance: 'TeamFinanceBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  ActorFinanceConstraint: 'enum' as const,
  ActorFinanceIncInput: {
    createdById: 'bigint',
    expenseId: 'bigint',
    id: 'bigint',
    locationId: 'bigint',
    payedById: 'bigint',
    tenantId: 'bigint',
  },
  ActorFinanceInsertInput: {
    actor: 'ActorObjRelInsertInput',
    actorAddress: 'ActorAddressObjRelInsertInput',
    actorFinanceReceipts: 'ActorFinanceReceiptsArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expense: 'ExpenseObjRelInsertInput',
    expenseId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    locationId: 'bigint',
    payedAt: 'timestamptz',
    payedById: 'bigint',
    teamFinance: 'TeamFinanceObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  ActorFinanceMaxOrderBy: {
    amount: 'OrderBy',
    category: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    expenseId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    locationId: 'OrderBy',
    name: 'OrderBy',
    payedAt: 'OrderBy',
    payedById: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorFinanceMinOrderBy: {
    amount: 'OrderBy',
    category: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    expenseId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    locationId: 'OrderBy',
    name: 'OrderBy',
    payedAt: 'OrderBy',
    payedById: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorFinanceObjRelInsertInput: {
    data: 'ActorFinanceInsertInput',
    onConflict: 'ActorFinanceOnConflict',
  },
  ActorFinanceOnConflict: {
    constraint: 'ActorFinanceConstraint',
    updateColumns: 'ActorFinanceUpdateColumn',
    where: 'ActorFinanceBoolExp',
  },
  ActorFinanceOrderBy: {
    actor: 'ActorOrderBy',
    actorAddress: 'ActorAddressOrderBy',
    actorFinanceReceiptsAggregate: 'ActorFinanceReceiptsAggregateOrderBy',
    amount: 'OrderBy',
    category: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    expense: 'ExpenseOrderBy',
    expenseId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    locationId: 'OrderBy',
    name: 'OrderBy',
    payedAt: 'OrderBy',
    payedById: 'OrderBy',
    teamFinance: 'TeamFinanceOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  ActorFinancePkColumnsInput: {
    id: 'bigint',
  },
  ActorFinanceReceiptsAggregateBoolExp: {
    count: 'actorFinanceReceiptsAggregateBoolExpCount',
  },
  actorFinanceReceiptsAggregateBoolExpCount: {
    arguments: 'ActorFinanceReceiptsSelectColumn',
    filter: 'ActorFinanceReceiptsBoolExp',
    predicate: 'IntComparisonExp',
  },
  ActorFinanceReceiptsAggregateFields: {
    count: {
      columns: 'ActorFinanceReceiptsSelectColumn',
    },
  },
  ActorFinanceReceiptsAggregateOrderBy: {
    avg: 'ActorFinanceReceiptsAvgOrderBy',
    count: 'OrderBy',
    max: 'ActorFinanceReceiptsMaxOrderBy',
    min: 'ActorFinanceReceiptsMinOrderBy',
    stddev: 'ActorFinanceReceiptsStddevOrderBy',
    stddevPop: 'ActorFinanceReceiptsStddevPopOrderBy',
    stddevSamp: 'ActorFinanceReceiptsStddevSampOrderBy',
    sum: 'ActorFinanceReceiptsSumOrderBy',
    varPop: 'ActorFinanceReceiptsVarPopOrderBy',
    varSamp: 'ActorFinanceReceiptsVarSampOrderBy',
    variance: 'ActorFinanceReceiptsVarianceOrderBy',
  },
  ActorFinanceReceiptsArrRelInsertInput: {
    data: 'ActorFinanceReceiptsInsertInput',
    onConflict: 'ActorFinanceReceiptsOnConflict',
  },
  ActorFinanceReceiptsAvgOrderBy: {
    actorFinanceId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ActorFinanceReceiptsBoolExp: {
    _and: 'ActorFinanceReceiptsBoolExp',
    _not: 'ActorFinanceReceiptsBoolExp',
    _or: 'ActorFinanceReceiptsBoolExp',
    actorFinance: 'ActorFinanceBoolExp',
    actorFinanceId: 'BigintComparisonExp',
    upload: 'UploadBoolExp',
    uploadId: 'BigintComparisonExp',
  },
  ActorFinanceReceiptsConstraint: 'enum' as const,
  ActorFinanceReceiptsIncInput: {
    actorFinanceId: 'bigint',
    uploadId: 'bigint',
  },
  ActorFinanceReceiptsInsertInput: {
    actorFinance: 'ActorFinanceObjRelInsertInput',
    actorFinanceId: 'bigint',
    upload: 'UploadObjRelInsertInput',
    uploadId: 'bigint',
  },
  ActorFinanceReceiptsMaxOrderBy: {
    actorFinanceId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ActorFinanceReceiptsMinOrderBy: {
    actorFinanceId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ActorFinanceReceiptsOnConflict: {
    constraint: 'ActorFinanceReceiptsConstraint',
    updateColumns: 'ActorFinanceReceiptsUpdateColumn',
    where: 'ActorFinanceReceiptsBoolExp',
  },
  ActorFinanceReceiptsOrderBy: {
    actorFinance: 'ActorFinanceOrderBy',
    actorFinanceId: 'OrderBy',
    upload: 'UploadOrderBy',
    uploadId: 'OrderBy',
  },
  ActorFinanceReceiptsPkColumnsInput: {
    actorFinanceId: 'bigint',
    uploadId: 'bigint',
  },
  ActorFinanceReceiptsSelectColumn: 'enum' as const,
  ActorFinanceReceiptsSetInput: {
    actorFinanceId: 'bigint',
    uploadId: 'bigint',
  },
  ActorFinanceReceiptsStddevOrderBy: {
    actorFinanceId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ActorFinanceReceiptsStddevPopOrderBy: {
    actorFinanceId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ActorFinanceReceiptsStddevSampOrderBy: {
    actorFinanceId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ActorFinanceReceiptsStreamCursorInput: {
    initialValue: 'ActorFinanceReceiptsStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ActorFinanceReceiptsStreamCursorValueInput: {
    actorFinanceId: 'bigint',
    uploadId: 'bigint',
  },
  ActorFinanceReceiptsSumOrderBy: {
    actorFinanceId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ActorFinanceReceiptsUpdateColumn: 'enum' as const,
  ActorFinanceReceiptsUpdates: {
    _inc: 'ActorFinanceReceiptsIncInput',
    _set: 'ActorFinanceReceiptsSetInput',
    where: 'ActorFinanceReceiptsBoolExp',
  },
  ActorFinanceReceiptsVarianceOrderBy: {
    actorFinanceId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ActorFinanceReceiptsVarPopOrderBy: {
    actorFinanceId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ActorFinanceReceiptsVarSampOrderBy: {
    actorFinanceId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ActorFinanceSelectColumn: 'enum' as const,
  ActorFinanceSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expenseId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    locationId: 'bigint',
    payedAt: 'timestamptz',
    payedById: 'bigint',
    tenantId: 'bigint',
  },
  ActorFinanceStddevOrderBy: {
    amount: 'OrderBy',
    createdById: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    locationId: 'OrderBy',
    payedById: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorFinanceStddevPopOrderBy: {
    amount: 'OrderBy',
    createdById: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    locationId: 'OrderBy',
    payedById: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorFinanceStddevSampOrderBy: {
    amount: 'OrderBy',
    createdById: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    locationId: 'OrderBy',
    payedById: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorFinanceStreamCursorInput: {
    initialValue: 'ActorFinanceStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ActorFinanceStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expenseId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    locationId: 'bigint',
    payedAt: 'timestamptz',
    payedById: 'bigint',
    tenantId: 'bigint',
  },
  ActorFinanceSumOrderBy: {
    amount: 'OrderBy',
    createdById: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    locationId: 'OrderBy',
    payedById: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorFinanceUpdateColumn: 'enum' as const,
  ActorFinanceUpdates: {
    _inc: 'ActorFinanceIncInput',
    _set: 'ActorFinanceSetInput',
    where: 'ActorFinanceBoolExp',
  },
  ActorFinanceVarianceOrderBy: {
    amount: 'OrderBy',
    createdById: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    locationId: 'OrderBy',
    payedById: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorFinanceVarPopOrderBy: {
    amount: 'OrderBy',
    createdById: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    locationId: 'OrderBy',
    payedById: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorFinanceVarSampOrderBy: {
    amount: 'OrderBy',
    createdById: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    locationId: 'OrderBy',
    payedById: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorImageAggregateBoolExp: {
    count: 'actorImageAggregateBoolExpCount',
  },
  actorImageAggregateBoolExpCount: {
    arguments: 'ActorImageSelectColumn',
    filter: 'ActorImageBoolExp',
    predicate: 'IntComparisonExp',
  },
  ActorImageAggregateFields: {
    count: {
      columns: 'ActorImageSelectColumn',
    },
  },
  ActorImageAggregateOrderBy: {
    avg: 'ActorImageAvgOrderBy',
    count: 'OrderBy',
    max: 'ActorImageMaxOrderBy',
    min: 'ActorImageMinOrderBy',
    stddev: 'ActorImageStddevOrderBy',
    stddevPop: 'ActorImageStddevPopOrderBy',
    stddevSamp: 'ActorImageStddevSampOrderBy',
    sum: 'ActorImageSumOrderBy',
    varPop: 'ActorImageVarPopOrderBy',
    varSamp: 'ActorImageVarSampOrderBy',
    variance: 'ActorImageVarianceOrderBy',
  },
  ActorImageArrRelInsertInput: {
    data: 'ActorImageInsertInput',
    onConflict: 'ActorImageOnConflict',
  },
  ActorImageAvgOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorImageBoolExp: {
    _and: 'ActorImageBoolExp',
    _not: 'ActorImageBoolExp',
    _or: 'ActorImageBoolExp',
    actor: 'ActorBoolExp',
    actorId: 'BigintComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    imageId: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    lastActiveDate: 'TimestamptzComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
    upload: 'UploadBoolExp',
  },
  ActorImageConstraint: 'enum' as const,
  ActorImageIncInput: {
    actorId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    imageId: 'bigint',
    tenantId: 'bigint',
  },
  ActorImageInsertInput: {
    actor: 'ActorObjRelInsertInput',
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    lastActiveDate: 'timestamptz',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    upload: 'UploadObjRelInsertInput',
  },
  ActorImageMaxOrderBy: {
    actorId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    lastActiveDate: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  ActorImageMinOrderBy: {
    actorId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    lastActiveDate: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  ActorImageObjRelInsertInput: {
    data: 'ActorImageInsertInput',
    onConflict: 'ActorImageOnConflict',
  },
  ActorImageOnConflict: {
    constraint: 'ActorImageConstraint',
    updateColumns: 'ActorImageUpdateColumn',
    where: 'ActorImageBoolExp',
  },
  ActorImageOrderBy: {
    actor: 'ActorOrderBy',
    actorId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    individual: 'IndividualOrderBy',
    lastActiveDate: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    upload: 'UploadOrderBy',
  },
  ActorImagePkColumnsInput: {
    id: 'bigint',
  },
  ActorImageSelectColumn: 'enum' as const,
  ActorImageSetInput: {
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
  },
  ActorImageStddevOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorImageStddevPopOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorImageStddevSampOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorImageStreamCursorInput: {
    initialValue: 'ActorImageStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ActorImageStreamCursorValueInput: {
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
  },
  ActorImageSumOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorImageUpdateColumn: 'enum' as const,
  ActorImageUpdates: {
    _inc: 'ActorImageIncInput',
    _set: 'ActorImageSetInput',
    where: 'ActorImageBoolExp',
  },
  ActorImageVarianceOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorImageVarPopOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorImageVarSampOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    individualId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  ActorInsertInput: {
    actorAddresses: 'ActorAddressArrRelInsertInput',
    actorBankInfos: 'ActorBankInfoArrRelInsertInput',
    actorFinances: 'ActorFinanceArrRelInsertInput',
    actorImages: 'ActorImageArrRelInsertInput',
    actorTags: 'ActorTagsArrRelInsertInput',
    botInfos: 'BotInfoArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    favorites: 'FavoriteArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    individualByIndividualId: 'IndividualObjRelInsertInput',
    individualId: 'bigint',
    reports: 'ReportArrRelInsertInput',
    shortcuts: 'ShortcutArrRelInsertInput',
    socials: 'SocialArrRelInsertInput',
    team: 'TeamObjRelInsertInput',
    teamId: 'bigint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  ActorMaxOrderBy: {
    bio: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    ical: 'OrderBy',
    id: 'OrderBy',
    individualId: 'OrderBy',
    name: 'OrderBy',
    primaryEmail: 'OrderBy',
    slug: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorMinOrderBy: {
    bio: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    ical: 'OrderBy',
    id: 'OrderBy',
    individualId: 'OrderBy',
    name: 'OrderBy',
    primaryEmail: 'OrderBy',
    slug: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorObjRelInsertInput: {
    data: 'ActorInsertInput',
    onConflict: 'ActorOnConflict',
  },
  ActorOnConflict: {
    constraint: 'ActorConstraint',
    updateColumns: 'ActorUpdateColumn',
    where: 'ActorBoolExp',
  },
  ActorOrderBy: {
    actorAddressesAggregate: 'ActorAddressAggregateOrderBy',
    actorBankInfosAggregate: 'ActorBankInfoAggregateOrderBy',
    actorFinancesAggregate: 'ActorFinanceAggregateOrderBy',
    actorImagesAggregate: 'ActorImageAggregateOrderBy',
    actorTagsAggregate: 'ActorTagsAggregateOrderBy',
    bio: 'OrderBy',
    botInfosAggregate: 'BotInfoAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    favoritesAggregate: 'FavoriteAggregateOrderBy',
    hiddenAt: 'OrderBy',
    ical: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    individualByIndividualId: 'IndividualOrderBy',
    individualId: 'OrderBy',
    name: 'OrderBy',
    primaryEmail: 'OrderBy',
    reportsAggregate: 'ReportAggregateOrderBy',
    shortcutsAggregate: 'ShortcutAggregateOrderBy',
    slug: 'OrderBy',
    socialsAggregate: 'SocialAggregateOrderBy',
    team: 'TeamOrderBy',
    teamId: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  ActorPkColumnsInput: {
    id: 'bigint',
  },
  ActorSelectColumn: 'enum' as const,
  ActorSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individualId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  ActorStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    individualId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    individualId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    individualId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorStreamCursorInput: {
    initialValue: 'ActorStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ActorStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individualId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  ActorSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    individualId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorTagsAggregateBoolExp: {
    count: 'actorTagsAggregateBoolExpCount',
  },
  actorTagsAggregateBoolExpCount: {
    arguments: 'ActorTagsSelectColumn',
    filter: 'ActorTagsBoolExp',
    predicate: 'IntComparisonExp',
  },
  ActorTagsAggregateFields: {
    count: {
      columns: 'ActorTagsSelectColumn',
    },
  },
  ActorTagsAggregateOrderBy: {
    avg: 'ActorTagsAvgOrderBy',
    count: 'OrderBy',
    max: 'ActorTagsMaxOrderBy',
    min: 'ActorTagsMinOrderBy',
    stddev: 'ActorTagsStddevOrderBy',
    stddevPop: 'ActorTagsStddevPopOrderBy',
    stddevSamp: 'ActorTagsStddevSampOrderBy',
    sum: 'ActorTagsSumOrderBy',
    varPop: 'ActorTagsVarPopOrderBy',
    varSamp: 'ActorTagsVarSampOrderBy',
    variance: 'ActorTagsVarianceOrderBy',
  },
  ActorTagsArrRelInsertInput: {
    data: 'ActorTagsInsertInput',
    onConflict: 'ActorTagsOnConflict',
  },
  ActorTagsAvgOrderBy: {
    actorId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ActorTagsBoolExp: {
    _and: 'ActorTagsBoolExp',
    _not: 'ActorTagsBoolExp',
    _or: 'ActorTagsBoolExp',
    actor: 'ActorBoolExp',
    actorId: 'BigintComparisonExp',
    tag: 'TagBoolExp',
    tagId: 'BigintComparisonExp',
  },
  ActorTagsConstraint: 'enum' as const,
  ActorTagsIncInput: {
    actorId: 'bigint',
    tagId: 'bigint',
  },
  ActorTagsInsertInput: {
    actor: 'ActorObjRelInsertInput',
    actorId: 'bigint',
    tag: 'TagObjRelInsertInput',
    tagId: 'bigint',
  },
  ActorTagsMaxOrderBy: {
    actorId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ActorTagsMinOrderBy: {
    actorId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ActorTagsOnConflict: {
    constraint: 'ActorTagsConstraint',
    updateColumns: 'ActorTagsUpdateColumn',
    where: 'ActorTagsBoolExp',
  },
  ActorTagsOrderBy: {
    actor: 'ActorOrderBy',
    actorId: 'OrderBy',
    tag: 'TagOrderBy',
    tagId: 'OrderBy',
  },
  ActorTagsPkColumnsInput: {
    actorId: 'bigint',
    tagId: 'bigint',
  },
  ActorTagsSelectColumn: 'enum' as const,
  ActorTagsSetInput: {
    actorId: 'bigint',
    tagId: 'bigint',
  },
  ActorTagsStddevOrderBy: {
    actorId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ActorTagsStddevPopOrderBy: {
    actorId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ActorTagsStddevSampOrderBy: {
    actorId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ActorTagsStreamCursorInput: {
    initialValue: 'ActorTagsStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ActorTagsStreamCursorValueInput: {
    actorId: 'bigint',
    tagId: 'bigint',
  },
  ActorTagsSumOrderBy: {
    actorId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ActorTagsUpdateColumn: 'enum' as const,
  ActorTagsUpdates: {
    _inc: 'ActorTagsIncInput',
    _set: 'ActorTagsSetInput',
    where: 'ActorTagsBoolExp',
  },
  ActorTagsVarianceOrderBy: {
    actorId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ActorTagsVarPopOrderBy: {
    actorId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ActorTagsVarSampOrderBy: {
    actorId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ActorUpdateColumn: 'enum' as const,
  ActorUpdates: {
    _inc: 'ActorIncInput',
    _set: 'ActorSetInput',
    where: 'ActorBoolExp',
  },
  ActorVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    individualId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    individualId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ActorVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    individualId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  bigint: `scalar.bigint` as const,
  BigintComparisonExp: {
    _eq: 'bigint',
    _gt: 'bigint',
    _gte: 'bigint',
    _in: 'bigint',
    _lt: 'bigint',
    _lte: 'bigint',
    _neq: 'bigint',
    _nin: 'bigint',
  },
  BooleanComparisonExp: {},
  BotInfoAggregateBoolExp: {
    count: 'botInfoAggregateBoolExpCount',
  },
  botInfoAggregateBoolExpCount: {
    arguments: 'BotInfoSelectColumn',
    filter: 'BotInfoBoolExp',
    predicate: 'IntComparisonExp',
  },
  BotInfoAggregateFields: {
    count: {
      columns: 'BotInfoSelectColumn',
    },
  },
  BotInfoAggregateOrderBy: {
    avg: 'BotInfoAvgOrderBy',
    count: 'OrderBy',
    max: 'BotInfoMaxOrderBy',
    min: 'BotInfoMinOrderBy',
    stddev: 'BotInfoStddevOrderBy',
    stddevPop: 'BotInfoStddevPopOrderBy',
    stddevSamp: 'BotInfoStddevSampOrderBy',
    sum: 'BotInfoSumOrderBy',
    varPop: 'BotInfoVarPopOrderBy',
    varSamp: 'BotInfoVarSampOrderBy',
    variance: 'BotInfoVarianceOrderBy',
  },
  BotInfoArrRelInsertInput: {
    data: 'BotInfoInsertInput',
    onConflict: 'BotInfoOnConflict',
  },
  BotInfoAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    ownerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  BotInfoBoolExp: {
    _and: 'BotInfoBoolExp',
    _not: 'BotInfoBoolExp',
    _or: 'BotInfoBoolExp',
    actor: 'ActorBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    individualById: 'IndividualBoolExp',
    ownerId: 'BigintComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  BotInfoConstraint: 'enum' as const,
  BotInfoIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    ownerId: 'bigint',
    tenantId: 'bigint',
  },
  BotInfoInsertInput: {
    actor: 'ActorObjRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    individualById: 'IndividualObjRelInsertInput',
    ownerId: 'bigint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  BotInfoMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    ownerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  BotInfoMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    ownerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  BotInfoObjRelInsertInput: {
    data: 'BotInfoInsertInput',
    onConflict: 'BotInfoOnConflict',
  },
  BotInfoOnConflict: {
    constraint: 'BotInfoConstraint',
    updateColumns: 'BotInfoUpdateColumn',
    where: 'BotInfoBoolExp',
  },
  BotInfoOrderBy: {
    actor: 'ActorOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    individualById: 'IndividualOrderBy',
    ownerId: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  BotInfoPkColumnsInput: {
    id: 'bigint',
  },
  BotInfoSelectColumn: 'enum' as const,
  BotInfoSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    ownerId: 'bigint',
    tenantId: 'bigint',
  },
  BotInfoStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    ownerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  BotInfoStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    ownerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  BotInfoStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    ownerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  BotInfoStreamCursorInput: {
    initialValue: 'BotInfoStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  BotInfoStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    ownerId: 'bigint',
    tenantId: 'bigint',
  },
  BotInfoSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    ownerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  BotInfoUpdateColumn: 'enum' as const,
  BotInfoUpdates: {
    _inc: 'BotInfoIncInput',
    _set: 'BotInfoSetInput',
    where: 'BotInfoBoolExp',
  },
  BotInfoVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    ownerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  BotInfoVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    ownerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  BotInfoVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    ownerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  Canteen: {
    canteenFoods: {
      distinctOn: 'CanteenFoodSelectColumn',
      orderBy: 'CanteenFoodOrderBy',
      where: 'CanteenFoodBoolExp',
    },
    canteenFoodsAggregate: {
      distinctOn: 'CanteenFoodSelectColumn',
      orderBy: 'CanteenFoodOrderBy',
      where: 'CanteenFoodBoolExp',
    },
    canteenMenus: {
      distinctOn: 'CanteenMenuSelectColumn',
      orderBy: 'CanteenMenuOrderBy',
      where: 'CanteenMenuBoolExp',
    },
    canteenMenusAggregate: {
      distinctOn: 'CanteenMenuSelectColumn',
      orderBy: 'CanteenMenuOrderBy',
      where: 'CanteenMenuBoolExp',
    },
  },
  CanteenAggregateBoolExp: {
    count: 'canteenAggregateBoolExpCount',
  },
  canteenAggregateBoolExpCount: {
    arguments: 'CanteenSelectColumn',
    filter: 'CanteenBoolExp',
    predicate: 'IntComparisonExp',
  },
  CanteenAggregateFields: {
    count: {
      columns: 'CanteenSelectColumn',
    },
  },
  CanteenAggregateOrderBy: {
    avg: 'CanteenAvgOrderBy',
    count: 'OrderBy',
    max: 'CanteenMaxOrderBy',
    min: 'CanteenMinOrderBy',
    stddev: 'CanteenStddevOrderBy',
    stddevPop: 'CanteenStddevPopOrderBy',
    stddevSamp: 'CanteenStddevSampOrderBy',
    sum: 'CanteenSumOrderBy',
    varPop: 'CanteenVarPopOrderBy',
    varSamp: 'CanteenVarSampOrderBy',
    variance: 'CanteenVarianceOrderBy',
  },
  CanteenArrRelInsertInput: {
    data: 'CanteenInsertInput',
    onConflict: 'CanteenOnConflict',
  },
  CanteenAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenBoolExp: {
    _and: 'CanteenBoolExp',
    _not: 'CanteenBoolExp',
    _or: 'CanteenBoolExp',
    canteenFoods: 'CanteenFoodBoolExp',
    canteenFoodsAggregate: 'CanteenFoodAggregateBoolExp',
    canteenMenus: 'CanteenMenuBoolExp',
    canteenMenusAggregate: 'CanteenMenuAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    description: 'StringComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    team: 'TeamBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  CanteenConstraint: 'enum' as const,
  CanteenFoodAggregateBoolExp: {
    count: 'canteenFoodAggregateBoolExpCount',
  },
  canteenFoodAggregateBoolExpCount: {
    arguments: 'CanteenFoodSelectColumn',
    filter: 'CanteenFoodBoolExp',
    predicate: 'IntComparisonExp',
  },
  CanteenFoodAggregateFields: {
    count: {
      columns: 'CanteenFoodSelectColumn',
    },
  },
  CanteenFoodAggregateOrderBy: {
    avg: 'CanteenFoodAvgOrderBy',
    count: 'OrderBy',
    max: 'CanteenFoodMaxOrderBy',
    min: 'CanteenFoodMinOrderBy',
    stddev: 'CanteenFoodStddevOrderBy',
    stddevPop: 'CanteenFoodStddevPopOrderBy',
    stddevSamp: 'CanteenFoodStddevSampOrderBy',
    sum: 'CanteenFoodSumOrderBy',
    varPop: 'CanteenFoodVarPopOrderBy',
    varSamp: 'CanteenFoodVarSampOrderBy',
    variance: 'CanteenFoodVarianceOrderBy',
  },
  CanteenFoodArrRelInsertInput: {
    data: 'CanteenFoodInsertInput',
    onConflict: 'CanteenFoodOnConflict',
  },
  CanteenFoodAvgOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenFoodBoolExp: {
    _and: 'CanteenFoodBoolExp',
    _not: 'CanteenFoodBoolExp',
    _or: 'CanteenFoodBoolExp',
    canteen: 'CanteenBoolExp',
    canteenId: 'BigintComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  CanteenFoodConstraint: 'enum' as const,
  CanteenFoodIncInput: {
    canteenId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenFoodInsertInput: {
    canteen: 'CanteenObjRelInsertInput',
    canteenId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  CanteenFoodMaxOrderBy: {
    canteenId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenFoodMinOrderBy: {
    canteenId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenFoodOnConflict: {
    constraint: 'CanteenFoodConstraint',
    updateColumns: 'CanteenFoodUpdateColumn',
    where: 'CanteenFoodBoolExp',
  },
  CanteenFoodOrderBy: {
    canteen: 'CanteenOrderBy',
    canteenId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  CanteenFoodPkColumnsInput: {
    id: 'bigint',
  },
  CanteenFoodSelectColumn: 'enum' as const,
  CanteenFoodSetInput: {
    canteenId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenFoodStddevOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenFoodStddevPopOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenFoodStddevSampOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenFoodStreamCursorInput: {
    initialValue: 'CanteenFoodStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  CanteenFoodStreamCursorValueInput: {
    canteenId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenFoodSumOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenFoodUpdateColumn: 'enum' as const,
  CanteenFoodUpdates: {
    _inc: 'CanteenFoodIncInput',
    _set: 'CanteenFoodSetInput',
    where: 'CanteenFoodBoolExp',
  },
  CanteenFoodVarianceOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenFoodVarPopOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenFoodVarSampOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenInsertInput: {
    canteenFoods: 'CanteenFoodArrRelInsertInput',
    canteenMenus: 'CanteenMenuArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    team: 'TeamObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  CanteenMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenMenuAggregateBoolExp: {
    count: 'canteenMenuAggregateBoolExpCount',
  },
  canteenMenuAggregateBoolExpCount: {
    arguments: 'CanteenMenuSelectColumn',
    filter: 'CanteenMenuBoolExp',
    predicate: 'IntComparisonExp',
  },
  CanteenMenuAggregateFields: {
    count: {
      columns: 'CanteenMenuSelectColumn',
    },
  },
  CanteenMenuAggregateOrderBy: {
    avg: 'CanteenMenuAvgOrderBy',
    count: 'OrderBy',
    max: 'CanteenMenuMaxOrderBy',
    min: 'CanteenMenuMinOrderBy',
    stddev: 'CanteenMenuStddevOrderBy',
    stddevPop: 'CanteenMenuStddevPopOrderBy',
    stddevSamp: 'CanteenMenuStddevSampOrderBy',
    sum: 'CanteenMenuSumOrderBy',
    varPop: 'CanteenMenuVarPopOrderBy',
    varSamp: 'CanteenMenuVarSampOrderBy',
    variance: 'CanteenMenuVarianceOrderBy',
  },
  CanteenMenuArrRelInsertInput: {
    data: 'CanteenMenuInsertInput',
    onConflict: 'CanteenMenuOnConflict',
  },
  CanteenMenuAvgOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenMenuBoolExp: {
    _and: 'CanteenMenuBoolExp',
    _not: 'CanteenMenuBoolExp',
    _or: 'CanteenMenuBoolExp',
    canteen: 'CanteenBoolExp',
    canteenId: 'BigintComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  CanteenMenuConstraint: 'enum' as const,
  CanteenMenuIncInput: {
    canteenId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenMenuInsertInput: {
    canteen: 'CanteenObjRelInsertInput',
    canteenId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  CanteenMenuMaxOrderBy: {
    canteenId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenMenuMinOrderBy: {
    canteenId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenMenuOnConflict: {
    constraint: 'CanteenMenuConstraint',
    updateColumns: 'CanteenMenuUpdateColumn',
    where: 'CanteenMenuBoolExp',
  },
  CanteenMenuOrderBy: {
    canteen: 'CanteenOrderBy',
    canteenId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  CanteenMenuPkColumnsInput: {
    id: 'bigint',
  },
  CanteenMenuSelectColumn: 'enum' as const,
  CanteenMenuSetInput: {
    canteenId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenMenuStddevOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenMenuStddevPopOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenMenuStddevSampOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenMenuStreamCursorInput: {
    initialValue: 'CanteenMenuStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  CanteenMenuStreamCursorValueInput: {
    canteenId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenMenuSumOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenMenuUpdateColumn: 'enum' as const,
  CanteenMenuUpdates: {
    _inc: 'CanteenMenuIncInput',
    _set: 'CanteenMenuSetInput',
    where: 'CanteenMenuBoolExp',
  },
  CanteenMenuVarianceOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenMenuVarPopOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenMenuVarSampOrderBy: {
    canteenId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenObjRelInsertInput: {
    data: 'CanteenInsertInput',
    onConflict: 'CanteenOnConflict',
  },
  CanteenOnConflict: {
    constraint: 'CanteenConstraint',
    updateColumns: 'CanteenUpdateColumn',
    where: 'CanteenBoolExp',
  },
  CanteenOrderBy: {
    canteenFoodsAggregate: 'CanteenFoodAggregateOrderBy',
    canteenMenusAggregate: 'CanteenMenuAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    team: 'TeamOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  CanteenPkColumnsInput: {
    id: 'bigint',
  },
  CanteenSelectColumn: 'enum' as const,
  CanteenSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenStreamCursorInput: {
    initialValue: 'CanteenStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  CanteenStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenUpdateColumn: 'enum' as const,
  CanteenUpdates: {
    _inc: 'CanteenIncInput',
    _set: 'CanteenSetInput',
    where: 'CanteenBoolExp',
  },
  CanteenVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CanteenVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ChangeRoleAggregateBoolExp: {
    count: 'changeRoleAggregateBoolExpCount',
  },
  changeRoleAggregateBoolExpCount: {
    arguments: 'ChangeRoleSelectColumn',
    filter: 'ChangeRoleBoolExp',
    predicate: 'IntComparisonExp',
  },
  ChangeRoleAggregateFields: {
    count: {
      columns: 'ChangeRoleSelectColumn',
    },
  },
  ChangeRoleAggregateOrderBy: {
    avg: 'ChangeRoleAvgOrderBy',
    count: 'OrderBy',
    max: 'ChangeRoleMaxOrderBy',
    min: 'ChangeRoleMinOrderBy',
    stddev: 'ChangeRoleStddevOrderBy',
    stddevPop: 'ChangeRoleStddevPopOrderBy',
    stddevSamp: 'ChangeRoleStddevSampOrderBy',
    sum: 'ChangeRoleSumOrderBy',
    varPop: 'ChangeRoleVarPopOrderBy',
    varSamp: 'ChangeRoleVarSampOrderBy',
    variance: 'ChangeRoleVarianceOrderBy',
  },
  ChangeRoleArrRelInsertInput: {
    data: 'ChangeRoleInsertInput',
    onConflict: 'ChangeRoleOnConflict',
  },
  ChangeRoleAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedPoleId: 'OrderBy',
    receivedRoleId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ChangeRoleBoolExp: {
    _and: 'ChangeRoleBoolExp',
    _not: 'ChangeRoleBoolExp',
    _or: 'ChangeRoleBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    note: 'StringComparisonExp',
    pole: 'PoleBoolExp',
    receivedPoleId: 'BigintComparisonExp',
    receivedRoleId: 'BigintComparisonExp',
    role: 'RoleBoolExp',
    team: 'TeamBoolExp',
    teamId: 'BigintComparisonExp',
    teamJoin: 'TeamJoinBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    userId: 'BigintComparisonExp',
    userInfo: 'UserInfoBoolExp',
  },
  ChangeRoleConstraint: 'enum' as const,
  ChangeRoleIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    receivedPoleId: 'bigint',
    receivedRoleId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ChangeRoleInsertInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    pole: 'PoleObjRelInsertInput',
    receivedPoleId: 'bigint',
    receivedRoleId: 'bigint',
    role: 'RoleObjRelInsertInput',
    team: 'TeamObjRelInsertInput',
    teamId: 'bigint',
    teamJoin: 'TeamJoinObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    userId: 'bigint',
    userInfo: 'UserInfoObjRelInsertInput',
  },
  ChangeRoleMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    note: 'OrderBy',
    receivedPoleId: 'OrderBy',
    receivedRoleId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ChangeRoleMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    note: 'OrderBy',
    receivedPoleId: 'OrderBy',
    receivedRoleId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ChangeRoleObjRelInsertInput: {
    data: 'ChangeRoleInsertInput',
    onConflict: 'ChangeRoleOnConflict',
  },
  ChangeRoleOnConflict: {
    constraint: 'ChangeRoleConstraint',
    updateColumns: 'ChangeRoleUpdateColumn',
    where: 'ChangeRoleBoolExp',
  },
  ChangeRoleOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    note: 'OrderBy',
    pole: 'PoleOrderBy',
    receivedPoleId: 'OrderBy',
    receivedRoleId: 'OrderBy',
    role: 'RoleOrderBy',
    team: 'TeamOrderBy',
    teamId: 'OrderBy',
    teamJoin: 'TeamJoinOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    userInfo: 'UserInfoOrderBy',
  },
  ChangeRolePkColumnsInput: {
    id: 'bigint',
  },
  ChangeRoleSelectColumn: 'enum' as const,
  ChangeRoleSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    receivedPoleId: 'bigint',
    receivedRoleId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ChangeRoleStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedPoleId: 'OrderBy',
    receivedRoleId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ChangeRoleStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedPoleId: 'OrderBy',
    receivedRoleId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ChangeRoleStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedPoleId: 'OrderBy',
    receivedRoleId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ChangeRoleStreamCursorInput: {
    initialValue: 'ChangeRoleStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ChangeRoleStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    receivedPoleId: 'bigint',
    receivedRoleId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ChangeRoleSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedPoleId: 'OrderBy',
    receivedRoleId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ChangeRoleUpdateColumn: 'enum' as const,
  ChangeRoleUpdates: {
    _inc: 'ChangeRoleIncInput',
    _set: 'ChangeRoleSetInput',
    where: 'ChangeRoleBoolExp',
  },
  ChangeRoleVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedPoleId: 'OrderBy',
    receivedRoleId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ChangeRoleVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedPoleId: 'OrderBy',
    receivedRoleId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ChangeRoleVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedPoleId: 'OrderBy',
    receivedRoleId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ClassGroup: {
    classGroupTeachers: {
      distinctOn: 'ClassGroupTeacherSelectColumn',
      orderBy: 'ClassGroupTeacherOrderBy',
      where: 'ClassGroupTeacherBoolExp',
    },
    classGroupTeachersAggregate: {
      distinctOn: 'ClassGroupTeacherSelectColumn',
      orderBy: 'ClassGroupTeacherOrderBy',
      where: 'ClassGroupTeacherBoolExp',
    },
    subjectClasses: {
      distinctOn: 'SubjectClassesSelectColumn',
      orderBy: 'SubjectClassesOrderBy',
      where: 'SubjectClassesBoolExp',
    },
    subjectClassesAggregate: {
      distinctOn: 'SubjectClassesSelectColumn',
      orderBy: 'SubjectClassesOrderBy',
      where: 'SubjectClassesBoolExp',
    },
  },
  ClassGroupAggregateBoolExp: {
    count: 'classGroupAggregateBoolExpCount',
  },
  classGroupAggregateBoolExpCount: {
    arguments: 'ClassGroupSelectColumn',
    filter: 'ClassGroupBoolExp',
    predicate: 'IntComparisonExp',
  },
  ClassGroupAggregateFields: {
    count: {
      columns: 'ClassGroupSelectColumn',
    },
  },
  ClassGroupAggregateOrderBy: {
    avg: 'ClassGroupAvgOrderBy',
    count: 'OrderBy',
    max: 'ClassGroupMaxOrderBy',
    min: 'ClassGroupMinOrderBy',
    stddev: 'ClassGroupStddevOrderBy',
    stddevPop: 'ClassGroupStddevPopOrderBy',
    stddevSamp: 'ClassGroupStddevSampOrderBy',
    sum: 'ClassGroupSumOrderBy',
    varPop: 'ClassGroupVarPopOrderBy',
    varSamp: 'ClassGroupVarSampOrderBy',
    variance: 'ClassGroupVarianceOrderBy',
  },
  ClassGroupArrRelInsertInput: {
    data: 'ClassGroupInsertInput',
    onConflict: 'ClassGroupOnConflict',
  },
  ClassGroupAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ClassGroupBoolExp: {
    _and: 'ClassGroupBoolExp',
    _not: 'ClassGroupBoolExp',
    _or: 'ClassGroupBoolExp',
    classGroupTeachers: 'ClassGroupTeacherBoolExp',
    classGroupTeachersAggregate: 'ClassGroupTeacherAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    description: 'StringComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    subjectClasses: 'SubjectClassesBoolExp',
    subjectClassesAggregate: 'SubjectClassesAggregateBoolExp',
    team: 'TeamBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
  },
  ClassGroupConstraint: 'enum' as const,
  ClassGroupIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ClassGroupInsertInput: {
    classGroupTeachers: 'ClassGroupTeacherArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    subjectClasses: 'SubjectClassesArrRelInsertInput',
    team: 'TeamObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  ClassGroupMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  ClassGroupMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  ClassGroupObjRelInsertInput: {
    data: 'ClassGroupInsertInput',
    onConflict: 'ClassGroupOnConflict',
  },
  ClassGroupOnConflict: {
    constraint: 'ClassGroupConstraint',
    updateColumns: 'ClassGroupUpdateColumn',
    where: 'ClassGroupBoolExp',
  },
  ClassGroupOrderBy: {
    classGroupTeachersAggregate: 'ClassGroupTeacherAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    subjectClassesAggregate: 'SubjectClassesAggregateOrderBy',
    team: 'TeamOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  ClassGroupPkColumnsInput: {
    id: 'bigint',
  },
  ClassGroupSelectColumn: 'enum' as const,
  ClassGroupSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ClassGroupStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ClassGroupStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ClassGroupStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ClassGroupStreamCursorInput: {
    initialValue: 'ClassGroupStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ClassGroupStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ClassGroupSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ClassGroupTeacher: {
    classGroupTeacherSubjects: {
      distinctOn: 'ClassGroupTeacherSubjectSelectColumn',
      orderBy: 'ClassGroupTeacherSubjectOrderBy',
      where: 'ClassGroupTeacherSubjectBoolExp',
    },
    classGroupTeacherSubjectsAggregate: {
      distinctOn: 'ClassGroupTeacherSubjectSelectColumn',
      orderBy: 'ClassGroupTeacherSubjectOrderBy',
      where: 'ClassGroupTeacherSubjectBoolExp',
    },
  },
  ClassGroupTeacherAggregateBoolExp: {
    count: 'classGroupTeacherAggregateBoolExpCount',
  },
  classGroupTeacherAggregateBoolExpCount: {
    arguments: 'ClassGroupTeacherSelectColumn',
    filter: 'ClassGroupTeacherBoolExp',
    predicate: 'IntComparisonExp',
  },
  ClassGroupTeacherAggregateFields: {
    count: {
      columns: 'ClassGroupTeacherSelectColumn',
    },
  },
  ClassGroupTeacherAggregateOrderBy: {
    avg: 'ClassGroupTeacherAvgOrderBy',
    count: 'OrderBy',
    max: 'ClassGroupTeacherMaxOrderBy',
    min: 'ClassGroupTeacherMinOrderBy',
    stddev: 'ClassGroupTeacherStddevOrderBy',
    stddevPop: 'ClassGroupTeacherStddevPopOrderBy',
    stddevSamp: 'ClassGroupTeacherStddevSampOrderBy',
    sum: 'ClassGroupTeacherSumOrderBy',
    varPop: 'ClassGroupTeacherVarPopOrderBy',
    varSamp: 'ClassGroupTeacherVarSampOrderBy',
    variance: 'ClassGroupTeacherVarianceOrderBy',
  },
  ClassGroupTeacherArrRelInsertInput: {
    data: 'ClassGroupTeacherInsertInput',
    onConflict: 'ClassGroupTeacherOnConflict',
  },
  ClassGroupTeacherAvgOrderBy: {
    classGroupId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ClassGroupTeacherBoolExp: {
    _and: 'ClassGroupTeacherBoolExp',
    _not: 'ClassGroupTeacherBoolExp',
    _or: 'ClassGroupTeacherBoolExp',
    classGroup: 'ClassGroupBoolExp',
    classGroupId: 'BigintComparisonExp',
    classGroupTeacherSubjects: 'ClassGroupTeacherSubjectBoolExp',
    classGroupTeacherSubjectsAggregate: 'ClassGroupTeacherSubjectAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    endDate: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    startDate: 'TimestamptzComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    userId: 'BigintComparisonExp',
    userInfo: 'UserInfoBoolExp',
  },
  ClassGroupTeacherConstraint: 'enum' as const,
  ClassGroupTeacherIncInput: {
    classGroupId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ClassGroupTeacherInsertInput: {
    classGroup: 'ClassGroupObjRelInsertInput',
    classGroupId: 'bigint',
    classGroupTeacherSubjects: 'ClassGroupTeacherSubjectArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    endDate: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    startDate: 'timestamptz',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    userId: 'bigint',
    userInfo: 'UserInfoObjRelInsertInput',
  },
  ClassGroupTeacherMaxOrderBy: {
    classGroupId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    endDate: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    startDate: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ClassGroupTeacherMinOrderBy: {
    classGroupId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    endDate: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    startDate: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ClassGroupTeacherObjRelInsertInput: {
    data: 'ClassGroupTeacherInsertInput',
    onConflict: 'ClassGroupTeacherOnConflict',
  },
  ClassGroupTeacherOnConflict: {
    constraint: 'ClassGroupTeacherConstraint',
    updateColumns: 'ClassGroupTeacherUpdateColumn',
    where: 'ClassGroupTeacherBoolExp',
  },
  ClassGroupTeacherOrderBy: {
    classGroup: 'ClassGroupOrderBy',
    classGroupId: 'OrderBy',
    classGroupTeacherSubjectsAggregate: 'ClassGroupTeacherSubjectAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    endDate: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    startDate: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    userInfo: 'UserInfoOrderBy',
  },
  ClassGroupTeacherPkColumnsInput: {
    id: 'bigint',
  },
  ClassGroupTeacherSelectColumn: 'enum' as const,
  ClassGroupTeacherSetInput: {
    classGroupId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    endDate: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    startDate: 'timestamptz',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ClassGroupTeacherStddevOrderBy: {
    classGroupId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ClassGroupTeacherStddevPopOrderBy: {
    classGroupId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ClassGroupTeacherStddevSampOrderBy: {
    classGroupId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ClassGroupTeacherStreamCursorInput: {
    initialValue: 'ClassGroupTeacherStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ClassGroupTeacherStreamCursorValueInput: {
    classGroupId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    endDate: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    startDate: 'timestamptz',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ClassGroupTeacherSubjectAggregateBoolExp: {
    count: 'classGroupTeacherSubjectAggregateBoolExpCount',
  },
  classGroupTeacherSubjectAggregateBoolExpCount: {
    arguments: 'ClassGroupTeacherSubjectSelectColumn',
    filter: 'ClassGroupTeacherSubjectBoolExp',
    predicate: 'IntComparisonExp',
  },
  ClassGroupTeacherSubjectAggregateFields: {
    count: {
      columns: 'ClassGroupTeacherSubjectSelectColumn',
    },
  },
  ClassGroupTeacherSubjectAggregateOrderBy: {
    avg: 'ClassGroupTeacherSubjectAvgOrderBy',
    count: 'OrderBy',
    max: 'ClassGroupTeacherSubjectMaxOrderBy',
    min: 'ClassGroupTeacherSubjectMinOrderBy',
    stddev: 'ClassGroupTeacherSubjectStddevOrderBy',
    stddevPop: 'ClassGroupTeacherSubjectStddevPopOrderBy',
    stddevSamp: 'ClassGroupTeacherSubjectStddevSampOrderBy',
    sum: 'ClassGroupTeacherSubjectSumOrderBy',
    varPop: 'ClassGroupTeacherSubjectVarPopOrderBy',
    varSamp: 'ClassGroupTeacherSubjectVarSampOrderBy',
    variance: 'ClassGroupTeacherSubjectVarianceOrderBy',
  },
  ClassGroupTeacherSubjectArrRelInsertInput: {
    data: 'ClassGroupTeacherSubjectInsertInput',
    onConflict: 'ClassGroupTeacherSubjectOnConflict',
  },
  ClassGroupTeacherSubjectAvgOrderBy: {
    classGroupTeacherId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  ClassGroupTeacherSubjectBoolExp: {
    _and: 'ClassGroupTeacherSubjectBoolExp',
    _not: 'ClassGroupTeacherSubjectBoolExp',
    _or: 'ClassGroupTeacherSubjectBoolExp',
    classGroupTeacher: 'ClassGroupTeacherBoolExp',
    classGroupTeacherId: 'BigintComparisonExp',
    subject: 'SubjectBoolExp',
    subjectId: 'BigintComparisonExp',
  },
  ClassGroupTeacherSubjectConstraint: 'enum' as const,
  ClassGroupTeacherSubjectIncInput: {
    classGroupTeacherId: 'bigint',
    subjectId: 'bigint',
  },
  ClassGroupTeacherSubjectInsertInput: {
    classGroupTeacher: 'ClassGroupTeacherObjRelInsertInput',
    classGroupTeacherId: 'bigint',
    subject: 'SubjectObjRelInsertInput',
    subjectId: 'bigint',
  },
  ClassGroupTeacherSubjectMaxOrderBy: {
    classGroupTeacherId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  ClassGroupTeacherSubjectMinOrderBy: {
    classGroupTeacherId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  ClassGroupTeacherSubjectOnConflict: {
    constraint: 'ClassGroupTeacherSubjectConstraint',
    updateColumns: 'ClassGroupTeacherSubjectUpdateColumn',
    where: 'ClassGroupTeacherSubjectBoolExp',
  },
  ClassGroupTeacherSubjectOrderBy: {
    classGroupTeacher: 'ClassGroupTeacherOrderBy',
    classGroupTeacherId: 'OrderBy',
    subject: 'SubjectOrderBy',
    subjectId: 'OrderBy',
  },
  ClassGroupTeacherSubjectPkColumnsInput: {
    classGroupTeacherId: 'bigint',
    subjectId: 'bigint',
  },
  ClassGroupTeacherSubjectSelectColumn: 'enum' as const,
  ClassGroupTeacherSubjectSetInput: {
    classGroupTeacherId: 'bigint',
    subjectId: 'bigint',
  },
  ClassGroupTeacherSubjectStddevOrderBy: {
    classGroupTeacherId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  ClassGroupTeacherSubjectStddevPopOrderBy: {
    classGroupTeacherId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  ClassGroupTeacherSubjectStddevSampOrderBy: {
    classGroupTeacherId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  ClassGroupTeacherSubjectStreamCursorInput: {
    initialValue: 'ClassGroupTeacherSubjectStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ClassGroupTeacherSubjectStreamCursorValueInput: {
    classGroupTeacherId: 'bigint',
    subjectId: 'bigint',
  },
  ClassGroupTeacherSubjectSumOrderBy: {
    classGroupTeacherId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  ClassGroupTeacherSubjectUpdateColumn: 'enum' as const,
  ClassGroupTeacherSubjectUpdates: {
    _inc: 'ClassGroupTeacherSubjectIncInput',
    _set: 'ClassGroupTeacherSubjectSetInput',
    where: 'ClassGroupTeacherSubjectBoolExp',
  },
  ClassGroupTeacherSubjectVarianceOrderBy: {
    classGroupTeacherId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  ClassGroupTeacherSubjectVarPopOrderBy: {
    classGroupTeacherId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  ClassGroupTeacherSubjectVarSampOrderBy: {
    classGroupTeacherId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  ClassGroupTeacherSumOrderBy: {
    classGroupId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ClassGroupTeacherUpdateColumn: 'enum' as const,
  ClassGroupTeacherUpdates: {
    _inc: 'ClassGroupTeacherIncInput',
    _set: 'ClassGroupTeacherSetInput',
    where: 'ClassGroupTeacherBoolExp',
  },
  ClassGroupTeacherVarianceOrderBy: {
    classGroupId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ClassGroupTeacherVarPopOrderBy: {
    classGroupId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ClassGroupTeacherVarSampOrderBy: {
    classGroupId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ClassGroupUpdateColumn: 'enum' as const,
  ClassGroupUpdates: {
    _inc: 'ClassGroupIncInput',
    _set: 'ClassGroupSetInput',
    where: 'ClassGroupBoolExp',
  },
  ClassGroupVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ClassGroupVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ClassGroupVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CohortAggregateBoolExp: {
    count: 'cohortAggregateBoolExpCount',
  },
  cohortAggregateBoolExpCount: {
    arguments: 'CohortSelectColumn',
    filter: 'CohortBoolExp',
    predicate: 'IntComparisonExp',
  },
  CohortAggregateFields: {
    count: {
      columns: 'CohortSelectColumn',
    },
  },
  CohortAggregateOrderBy: {
    avg: 'CohortAvgOrderBy',
    count: 'OrderBy',
    max: 'CohortMaxOrderBy',
    min: 'CohortMinOrderBy',
    stddev: 'CohortStddevOrderBy',
    stddevPop: 'CohortStddevPopOrderBy',
    stddevSamp: 'CohortStddevSampOrderBy',
    sum: 'CohortSumOrderBy',
    varPop: 'CohortVarPopOrderBy',
    varSamp: 'CohortVarSampOrderBy',
    variance: 'CohortVarianceOrderBy',
  },
  CohortArrRelInsertInput: {
    data: 'CohortInsertInput',
    onConflict: 'CohortOnConflict',
  },
  CohortAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    year: 'OrderBy',
  },
  CohortBoolExp: {
    _and: 'CohortBoolExp',
    _not: 'CohortBoolExp',
    _or: 'CohortBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    team: 'TeamBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    year: 'SmallintComparisonExp',
  },
  CohortConstraint: 'enum' as const,
  CohortIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
    year: 'smallint',
  },
  CohortInsertInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    team: 'TeamObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    year: 'smallint',
  },
  CohortMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    year: 'OrderBy',
  },
  CohortMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    year: 'OrderBy',
  },
  CohortObjRelInsertInput: {
    data: 'CohortInsertInput',
    onConflict: 'CohortOnConflict',
  },
  CohortOnConflict: {
    constraint: 'CohortConstraint',
    updateColumns: 'CohortUpdateColumn',
    where: 'CohortBoolExp',
  },
  CohortOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    team: 'TeamOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    year: 'OrderBy',
  },
  CohortPkColumnsInput: {
    id: 'bigint',
  },
  CohortSelectColumn: 'enum' as const,
  CohortSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
    year: 'smallint',
  },
  CohortStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    year: 'OrderBy',
  },
  CohortStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    year: 'OrderBy',
  },
  CohortStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    year: 'OrderBy',
  },
  CohortStreamCursorInput: {
    initialValue: 'CohortStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  CohortStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
    year: 'smallint',
  },
  CohortSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    year: 'OrderBy',
  },
  CohortUpdateColumn: 'enum' as const,
  CohortUpdates: {
    _inc: 'CohortIncInput',
    _set: 'CohortSetInput',
    where: 'CohortBoolExp',
  },
  CohortVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    year: 'OrderBy',
  },
  CohortVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    year: 'OrderBy',
  },
  CohortVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    year: 'OrderBy',
  },
  Content: {
    contentAttachments: {
      distinctOn: 'ContentAttachmentsSelectColumn',
      orderBy: 'ContentAttachmentsOrderBy',
      where: 'ContentAttachmentsBoolExp',
    },
    contentAttachmentsAggregate: {
      distinctOn: 'ContentAttachmentsSelectColumn',
      orderBy: 'ContentAttachmentsOrderBy',
      where: 'ContentAttachmentsBoolExp',
    },
    contentEdits: {
      distinctOn: 'ContentEditSelectColumn',
      orderBy: 'ContentEditOrderBy',
      where: 'ContentEditBoolExp',
    },
    contentEditsAggregate: {
      distinctOn: 'ContentEditSelectColumn',
      orderBy: 'ContentEditOrderBy',
      where: 'ContentEditBoolExp',
    },
    contentRepresentingTeams: {
      distinctOn: 'ContentRepresentingTeamsSelectColumn',
      orderBy: 'ContentRepresentingTeamsOrderBy',
      where: 'ContentRepresentingTeamsBoolExp',
    },
    contentRepresentingTeamsAggregate: {
      distinctOn: 'ContentRepresentingTeamsSelectColumn',
      orderBy: 'ContentRepresentingTeamsOrderBy',
      where: 'ContentRepresentingTeamsBoolExp',
    },
    contents: {
      distinctOn: 'ContentSelectColumn',
      orderBy: 'ContentOrderBy',
      where: 'ContentBoolExp',
    },
    contentsAggregate: {
      distinctOn: 'ContentSelectColumn',
      orderBy: 'ContentOrderBy',
      where: 'ContentBoolExp',
    },
    favorites: {
      distinctOn: 'FavoriteSelectColumn',
      orderBy: 'FavoriteOrderBy',
      where: 'FavoriteBoolExp',
    },
    favoritesAggregate: {
      distinctOn: 'FavoriteSelectColumn',
      orderBy: 'FavoriteOrderBy',
      where: 'FavoriteBoolExp',
    },
    reactions: {
      distinctOn: 'ReactionSelectColumn',
      orderBy: 'ReactionOrderBy',
      where: 'ReactionBoolExp',
    },
    reactionsAggregate: {
      distinctOn: 'ReactionSelectColumn',
      orderBy: 'ReactionOrderBy',
      where: 'ReactionBoolExp',
    },
    reports: {
      distinctOn: 'ReportSelectColumn',
      orderBy: 'ReportOrderBy',
      where: 'ReportBoolExp',
    },
    reportsAggregate: {
      distinctOn: 'ReportSelectColumn',
      orderBy: 'ReportOrderBy',
      where: 'ReportBoolExp',
    },
    validations: {
      distinctOn: 'ValidationSelectColumn',
      orderBy: 'ValidationOrderBy',
      where: 'ValidationBoolExp',
    },
    validationsAggregate: {
      distinctOn: 'ValidationSelectColumn',
      orderBy: 'ValidationOrderBy',
      where: 'ValidationBoolExp',
    },
    votes: {
      distinctOn: 'VoteSelectColumn',
      orderBy: 'VoteOrderBy',
      where: 'VoteBoolExp',
    },
    votesAggregate: {
      distinctOn: 'VoteSelectColumn',
      orderBy: 'VoteOrderBy',
      where: 'VoteBoolExp',
    },
  },
  ContentAggregateBoolExp: {
    bool_and: 'contentAggregateBoolExpBool_and',
    bool_or: 'contentAggregateBoolExpBool_or',
    count: 'contentAggregateBoolExpCount',
  },
  contentAggregateBoolExpBool_and: {
    arguments: 'ContentSelectColumnContentAggregateBoolExpBool_andArgumentsColumns',
    filter: 'ContentBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  contentAggregateBoolExpBool_or: {
    arguments: 'ContentSelectColumnContentAggregateBoolExpBool_orArgumentsColumns',
    filter: 'ContentBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  contentAggregateBoolExpCount: {
    arguments: 'ContentSelectColumn',
    filter: 'ContentBoolExp',
    predicate: 'IntComparisonExp',
  },
  ContentAggregateFields: {
    count: {
      columns: 'ContentSelectColumn',
    },
  },
  ContentAggregateOrderBy: {
    avg: 'ContentAvgOrderBy',
    count: 'OrderBy',
    max: 'ContentMaxOrderBy',
    min: 'ContentMinOrderBy',
    stddev: 'ContentStddevOrderBy',
    stddevPop: 'ContentStddevPopOrderBy',
    stddevSamp: 'ContentStddevSampOrderBy',
    sum: 'ContentSumOrderBy',
    varPop: 'ContentVarPopOrderBy',
    varSamp: 'ContentVarSampOrderBy',
    variance: 'ContentVarianceOrderBy',
  },
  ContentArrRelInsertInput: {
    data: 'ContentInsertInput',
    onConflict: 'ContentOnConflict',
  },
  ContentAttachmentsAggregateBoolExp: {
    count: 'contentAttachmentsAggregateBoolExpCount',
  },
  contentAttachmentsAggregateBoolExpCount: {
    arguments: 'ContentAttachmentsSelectColumn',
    filter: 'ContentAttachmentsBoolExp',
    predicate: 'IntComparisonExp',
  },
  ContentAttachmentsAggregateFields: {
    count: {
      columns: 'ContentAttachmentsSelectColumn',
    },
  },
  ContentAttachmentsAggregateOrderBy: {
    avg: 'ContentAttachmentsAvgOrderBy',
    count: 'OrderBy',
    max: 'ContentAttachmentsMaxOrderBy',
    min: 'ContentAttachmentsMinOrderBy',
    stddev: 'ContentAttachmentsStddevOrderBy',
    stddevPop: 'ContentAttachmentsStddevPopOrderBy',
    stddevSamp: 'ContentAttachmentsStddevSampOrderBy',
    sum: 'ContentAttachmentsSumOrderBy',
    varPop: 'ContentAttachmentsVarPopOrderBy',
    varSamp: 'ContentAttachmentsVarSampOrderBy',
    variance: 'ContentAttachmentsVarianceOrderBy',
  },
  ContentAttachmentsArrRelInsertInput: {
    data: 'ContentAttachmentsInsertInput',
    onConflict: 'ContentAttachmentsOnConflict',
  },
  ContentAttachmentsAvgOrderBy: {
    contentId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ContentAttachmentsBoolExp: {
    _and: 'ContentAttachmentsBoolExp',
    _not: 'ContentAttachmentsBoolExp',
    _or: 'ContentAttachmentsBoolExp',
    content: 'ContentBoolExp',
    contentId: 'BigintComparisonExp',
    upload: 'UploadBoolExp',
    uploadId: 'BigintComparisonExp',
  },
  ContentAttachmentsConstraint: 'enum' as const,
  ContentAttachmentsIncInput: {
    contentId: 'bigint',
    uploadId: 'bigint',
  },
  ContentAttachmentsInsertInput: {
    content: 'ContentObjRelInsertInput',
    contentId: 'bigint',
    upload: 'UploadObjRelInsertInput',
    uploadId: 'bigint',
  },
  ContentAttachmentsMaxOrderBy: {
    contentId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ContentAttachmentsMinOrderBy: {
    contentId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ContentAttachmentsOnConflict: {
    constraint: 'ContentAttachmentsConstraint',
    updateColumns: 'ContentAttachmentsUpdateColumn',
    where: 'ContentAttachmentsBoolExp',
  },
  ContentAttachmentsOrderBy: {
    content: 'ContentOrderBy',
    contentId: 'OrderBy',
    upload: 'UploadOrderBy',
    uploadId: 'OrderBy',
  },
  ContentAttachmentsPkColumnsInput: {
    contentId: 'bigint',
    uploadId: 'bigint',
  },
  ContentAttachmentsSelectColumn: 'enum' as const,
  ContentAttachmentsSetInput: {
    contentId: 'bigint',
    uploadId: 'bigint',
  },
  ContentAttachmentsStddevOrderBy: {
    contentId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ContentAttachmentsStddevPopOrderBy: {
    contentId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ContentAttachmentsStddevSampOrderBy: {
    contentId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ContentAttachmentsStreamCursorInput: {
    initialValue: 'ContentAttachmentsStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ContentAttachmentsStreamCursorValueInput: {
    contentId: 'bigint',
    uploadId: 'bigint',
  },
  ContentAttachmentsSumOrderBy: {
    contentId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ContentAttachmentsUpdateColumn: 'enum' as const,
  ContentAttachmentsUpdates: {
    _inc: 'ContentAttachmentsIncInput',
    _set: 'ContentAttachmentsSetInput',
    where: 'ContentAttachmentsBoolExp',
  },
  ContentAttachmentsVarianceOrderBy: {
    contentId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ContentAttachmentsVarPopOrderBy: {
    contentId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ContentAttachmentsVarSampOrderBy: {
    contentId: 'OrderBy',
    uploadId: 'OrderBy',
  },
  ContentAvgOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentBoolExp: {
    _and: 'ContentBoolExp',
    _not: 'ContentBoolExp',
    _or: 'ContentBoolExp',
    content: 'ContentBoolExp',
    contentAttachments: 'ContentAttachmentsBoolExp',
    contentAttachmentsAggregate: 'ContentAttachmentsAggregateBoolExp',
    contentEdits: 'ContentEditBoolExp',
    contentEditsAggregate: 'ContentEditAggregateBoolExp',
    contentMaster: 'ContentMasterBoolExp',
    contentRepresentingTeams: 'ContentRepresentingTeamsBoolExp',
    contentRepresentingTeamsAggregate: 'ContentRepresentingTeamsAggregateBoolExp',
    contents: 'ContentBoolExp',
    contentsAggregate: 'ContentAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    event: 'EventBoolExp',
    eventId: 'BigintComparisonExp',
    favorites: 'FavoriteBoolExp',
    favoritesAggregate: 'FavoriteAggregateBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    isAnonymous: 'BooleanComparisonExp',
    parentId: 'BigintComparisonExp',
    reactions: 'ReactionBoolExp',
    reactionsAggregate: 'ReactionAggregateBoolExp',
    reports: 'ReportBoolExp',
    reportsAggregate: 'ReportAggregateBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    text: 'StringComparisonExp',
    validations: 'ValidationBoolExp',
    validationsAggregate: 'ValidationAggregateBoolExp',
    votes: 'VoteBoolExp',
    votesAggregate: 'VoteAggregateBoolExp',
  },
  ContentConstraint: 'enum' as const,
  ContentEdit: {
    addedDiff: {},
  },
  ContentEditAggregateBoolExp: {
    count: 'contentEditAggregateBoolExpCount',
  },
  contentEditAggregateBoolExpCount: {
    arguments: 'ContentEditSelectColumn',
    filter: 'ContentEditBoolExp',
    predicate: 'IntComparisonExp',
  },
  ContentEditAggregateFields: {
    count: {
      columns: 'ContentEditSelectColumn',
    },
  },
  ContentEditAggregateOrderBy: {
    avg: 'ContentEditAvgOrderBy',
    count: 'OrderBy',
    max: 'ContentEditMaxOrderBy',
    min: 'ContentEditMinOrderBy',
    stddev: 'ContentEditStddevOrderBy',
    stddevPop: 'ContentEditStddevPopOrderBy',
    stddevSamp: 'ContentEditStddevSampOrderBy',
    sum: 'ContentEditSumOrderBy',
    varPop: 'ContentEditVarPopOrderBy',
    varSamp: 'ContentEditVarSampOrderBy',
    variance: 'ContentEditVarianceOrderBy',
  },
  ContentEditAppendInput: {
    addedDiff: 'jsonb',
  },
  ContentEditArrRelInsertInput: {
    data: 'ContentEditInsertInput',
    onConflict: 'ContentEditOnConflict',
  },
  ContentEditAvgOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentEditBoolExp: {
    _and: 'ContentEditBoolExp',
    _not: 'ContentEditBoolExp',
    _or: 'ContentEditBoolExp',
    addedDiff: 'JsonbComparisonExp',
    content: 'ContentBoolExp',
    contentId: 'BigintComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    newVersion: 'StringComparisonExp',
    note: 'StringComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  ContentEditConstraint: 'enum' as const,
  ContentEditDeleteAtPathInput: {},
  ContentEditDeleteElemInput: {},
  ContentEditDeleteKeyInput: {},
  ContentEditIncInput: {
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ContentEditInsertInput: {
    addedDiff: 'jsonb',
    content: 'ContentObjRelInsertInput',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  ContentEditMaxOrderBy: {
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    newVersion: 'OrderBy',
    note: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentEditMinOrderBy: {
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    newVersion: 'OrderBy',
    note: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentEditOnConflict: {
    constraint: 'ContentEditConstraint',
    updateColumns: 'ContentEditUpdateColumn',
    where: 'ContentEditBoolExp',
  },
  ContentEditOrderBy: {
    addedDiff: 'OrderBy',
    content: 'ContentOrderBy',
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    newVersion: 'OrderBy',
    note: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  ContentEditPkColumnsInput: {
    id: 'bigint',
  },
  ContentEditPrependInput: {
    addedDiff: 'jsonb',
  },
  ContentEditSelectColumn: 'enum' as const,
  ContentEditSetInput: {
    addedDiff: 'jsonb',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ContentEditStddevOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentEditStddevPopOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentEditStddevSampOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentEditStreamCursorInput: {
    initialValue: 'ContentEditStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ContentEditStreamCursorValueInput: {
    addedDiff: 'jsonb',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ContentEditSumOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentEditUpdateColumn: 'enum' as const,
  ContentEditUpdates: {
    _append: 'ContentEditAppendInput',
    _deleteAtPath: 'ContentEditDeleteAtPathInput',
    _deleteElem: 'ContentEditDeleteElemInput',
    _deleteKey: 'ContentEditDeleteKeyInput',
    _inc: 'ContentEditIncInput',
    _prepend: 'ContentEditPrependInput',
    _set: 'ContentEditSetInput',
    where: 'ContentEditBoolExp',
  },
  ContentEditVarianceOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentEditVarPopOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentEditVarSampOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentIncInput: {
    createdById: 'bigint',
    eventId: 'bigint',
    id: 'bigint',
    parentId: 'bigint',
    tenantId: 'bigint',
  },
  ContentInsertInput: {
    content: 'ContentObjRelInsertInput',
    contentAttachments: 'ContentAttachmentsArrRelInsertInput',
    contentEdits: 'ContentEditArrRelInsertInput',
    contentMaster: 'ContentMasterObjRelInsertInput',
    contentRepresentingTeams: 'ContentRepresentingTeamsArrRelInsertInput',
    contents: 'ContentArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    event: 'EventObjRelInsertInput',
    eventId: 'bigint',
    favorites: 'FavoriteArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    parentId: 'bigint',
    reactions: 'ReactionArrRelInsertInput',
    reports: 'ReportArrRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    validations: 'ValidationArrRelInsertInput',
    votes: 'VoteArrRelInsertInput',
  },
  ContentMaster: {
    contentMasterContributors: {
      distinctOn: 'ContentMasterContributorsSelectColumn',
      orderBy: 'ContentMasterContributorsOrderBy',
      where: 'ContentMasterContributorsBoolExp',
    },
    contentMasterContributorsAggregate: {
      distinctOn: 'ContentMasterContributorsSelectColumn',
      orderBy: 'ContentMasterContributorsOrderBy',
      where: 'ContentMasterContributorsBoolExp',
    },
    contentMasterTags: {
      distinctOn: 'ContentMasterTagsSelectColumn',
      orderBy: 'ContentMasterTagsOrderBy',
      where: 'ContentMasterTagsBoolExp',
    },
    contentMasterTagsAggregate: {
      distinctOn: 'ContentMasterTagsSelectColumn',
      orderBy: 'ContentMasterTagsOrderBy',
      where: 'ContentMasterTagsBoolExp',
    },
  },
  ContentMasterAggregateBoolExp: {
    count: 'contentMasterAggregateBoolExpCount',
  },
  contentMasterAggregateBoolExpCount: {
    arguments: 'ContentMasterSelectColumn',
    filter: 'ContentMasterBoolExp',
    predicate: 'IntComparisonExp',
  },
  ContentMasterAggregateFields: {
    count: {
      columns: 'ContentMasterSelectColumn',
    },
  },
  ContentMasterAggregateOrderBy: {
    avg: 'ContentMasterAvgOrderBy',
    count: 'OrderBy',
    max: 'ContentMasterMaxOrderBy',
    min: 'ContentMasterMinOrderBy',
    stddev: 'ContentMasterStddevOrderBy',
    stddevPop: 'ContentMasterStddevPopOrderBy',
    stddevSamp: 'ContentMasterStddevSampOrderBy',
    sum: 'ContentMasterSumOrderBy',
    varPop: 'ContentMasterVarPopOrderBy',
    varSamp: 'ContentMasterVarSampOrderBy',
    variance: 'ContentMasterVarianceOrderBy',
  },
  ContentMasterArrRelInsertInput: {
    data: 'ContentMasterInsertInput',
    onConflict: 'ContentMasterOnConflict',
  },
  ContentMasterAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    rootContentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentMasterBoolExp: {
    _and: 'ContentMasterBoolExp',
    _not: 'ContentMasterBoolExp',
    _or: 'ContentMasterBoolExp',
    content: 'ContentBoolExp',
    contentMasterContributors: 'ContentMasterContributorsBoolExp',
    contentMasterContributorsAggregate: 'ContentMasterContributorsAggregateBoolExp',
    contentMasterTags: 'ContentMasterTagsBoolExp',
    contentMasterTagsAggregate: 'ContentMasterTagsAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    event: 'EventBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    issue: 'IssueBoolExp',
    name: 'StringComparisonExp',
    rootContentId: 'BigintComparisonExp',
    slug: 'StringComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
  },
  ContentMasterConstraint: 'enum' as const,
  ContentMasterContributorsAggregateBoolExp: {
    count: 'contentMasterContributorsAggregateBoolExpCount',
  },
  contentMasterContributorsAggregateBoolExpCount: {
    arguments: 'ContentMasterContributorsSelectColumn',
    filter: 'ContentMasterContributorsBoolExp',
    predicate: 'IntComparisonExp',
  },
  ContentMasterContributorsAggregateFields: {
    count: {
      columns: 'ContentMasterContributorsSelectColumn',
    },
  },
  ContentMasterContributorsAggregateOrderBy: {
    avg: 'ContentMasterContributorsAvgOrderBy',
    count: 'OrderBy',
    max: 'ContentMasterContributorsMaxOrderBy',
    min: 'ContentMasterContributorsMinOrderBy',
    stddev: 'ContentMasterContributorsStddevOrderBy',
    stddevPop: 'ContentMasterContributorsStddevPopOrderBy',
    stddevSamp: 'ContentMasterContributorsStddevSampOrderBy',
    sum: 'ContentMasterContributorsSumOrderBy',
    varPop: 'ContentMasterContributorsVarPopOrderBy',
    varSamp: 'ContentMasterContributorsVarSampOrderBy',
    variance: 'ContentMasterContributorsVarianceOrderBy',
  },
  ContentMasterContributorsArrRelInsertInput: {
    data: 'ContentMasterContributorsInsertInput',
    onConflict: 'ContentMasterContributorsOnConflict',
  },
  ContentMasterContributorsAvgOrderBy: {
    contentMasterId: 'OrderBy',
    individualId: 'OrderBy',
  },
  ContentMasterContributorsBoolExp: {
    _and: 'ContentMasterContributorsBoolExp',
    _not: 'ContentMasterContributorsBoolExp',
    _or: 'ContentMasterContributorsBoolExp',
    contentMaster: 'ContentMasterBoolExp',
    contentMasterId: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    individualId: 'BigintComparisonExp',
  },
  ContentMasterContributorsConstraint: 'enum' as const,
  ContentMasterContributorsIncInput: {
    contentMasterId: 'bigint',
    individualId: 'bigint',
  },
  ContentMasterContributorsInsertInput: {
    contentMaster: 'ContentMasterObjRelInsertInput',
    contentMasterId: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    individualId: 'bigint',
  },
  ContentMasterContributorsMaxOrderBy: {
    contentMasterId: 'OrderBy',
    individualId: 'OrderBy',
  },
  ContentMasterContributorsMinOrderBy: {
    contentMasterId: 'OrderBy',
    individualId: 'OrderBy',
  },
  ContentMasterContributorsOnConflict: {
    constraint: 'ContentMasterContributorsConstraint',
    updateColumns: 'ContentMasterContributorsUpdateColumn',
    where: 'ContentMasterContributorsBoolExp',
  },
  ContentMasterContributorsOrderBy: {
    contentMaster: 'ContentMasterOrderBy',
    contentMasterId: 'OrderBy',
    individual: 'IndividualOrderBy',
    individualId: 'OrderBy',
  },
  ContentMasterContributorsPkColumnsInput: {
    contentMasterId: 'bigint',
    individualId: 'bigint',
  },
  ContentMasterContributorsSelectColumn: 'enum' as const,
  ContentMasterContributorsSetInput: {
    contentMasterId: 'bigint',
    individualId: 'bigint',
  },
  ContentMasterContributorsStddevOrderBy: {
    contentMasterId: 'OrderBy',
    individualId: 'OrderBy',
  },
  ContentMasterContributorsStddevPopOrderBy: {
    contentMasterId: 'OrderBy',
    individualId: 'OrderBy',
  },
  ContentMasterContributorsStddevSampOrderBy: {
    contentMasterId: 'OrderBy',
    individualId: 'OrderBy',
  },
  ContentMasterContributorsStreamCursorInput: {
    initialValue: 'ContentMasterContributorsStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ContentMasterContributorsStreamCursorValueInput: {
    contentMasterId: 'bigint',
    individualId: 'bigint',
  },
  ContentMasterContributorsSumOrderBy: {
    contentMasterId: 'OrderBy',
    individualId: 'OrderBy',
  },
  ContentMasterContributorsUpdateColumn: 'enum' as const,
  ContentMasterContributorsUpdates: {
    _inc: 'ContentMasterContributorsIncInput',
    _set: 'ContentMasterContributorsSetInput',
    where: 'ContentMasterContributorsBoolExp',
  },
  ContentMasterContributorsVarianceOrderBy: {
    contentMasterId: 'OrderBy',
    individualId: 'OrderBy',
  },
  ContentMasterContributorsVarPopOrderBy: {
    contentMasterId: 'OrderBy',
    individualId: 'OrderBy',
  },
  ContentMasterContributorsVarSampOrderBy: {
    contentMasterId: 'OrderBy',
    individualId: 'OrderBy',
  },
  ContentMasterIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    rootContentId: 'bigint',
    tenantId: 'bigint',
  },
  ContentMasterInsertInput: {
    content: 'ContentObjRelInsertInput',
    contentMasterContributors: 'ContentMasterContributorsArrRelInsertInput',
    contentMasterTags: 'ContentMasterTagsArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    event: 'EventObjRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    issue: 'IssueObjRelInsertInput',
    rootContentId: 'bigint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  ContentMasterMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    rootContentId: 'OrderBy',
    slug: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  ContentMasterMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    rootContentId: 'OrderBy',
    slug: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  ContentMasterObjRelInsertInput: {
    data: 'ContentMasterInsertInput',
    onConflict: 'ContentMasterOnConflict',
  },
  ContentMasterOnConflict: {
    constraint: 'ContentMasterConstraint',
    updateColumns: 'ContentMasterUpdateColumn',
    where: 'ContentMasterBoolExp',
  },
  ContentMasterOrderBy: {
    content: 'ContentOrderBy',
    contentMasterContributorsAggregate: 'ContentMasterContributorsAggregateOrderBy',
    contentMasterTagsAggregate: 'ContentMasterTagsAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    event: 'EventOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    issue: 'IssueOrderBy',
    name: 'OrderBy',
    rootContentId: 'OrderBy',
    slug: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  ContentMasterPkColumnsInput: {
    id: 'bigint',
  },
  ContentMasterSelectColumn: 'enum' as const,
  ContentMasterSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    rootContentId: 'bigint',
    tenantId: 'bigint',
  },
  ContentMasterStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    rootContentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentMasterStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    rootContentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentMasterStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    rootContentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentMasterStreamCursorInput: {
    initialValue: 'ContentMasterStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ContentMasterStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    rootContentId: 'bigint',
    tenantId: 'bigint',
  },
  ContentMasterSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    rootContentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentMasterTagsAggregateBoolExp: {
    count: 'contentMasterTagsAggregateBoolExpCount',
  },
  contentMasterTagsAggregateBoolExpCount: {
    arguments: 'ContentMasterTagsSelectColumn',
    filter: 'ContentMasterTagsBoolExp',
    predicate: 'IntComparisonExp',
  },
  ContentMasterTagsAggregateFields: {
    count: {
      columns: 'ContentMasterTagsSelectColumn',
    },
  },
  ContentMasterTagsAggregateOrderBy: {
    avg: 'ContentMasterTagsAvgOrderBy',
    count: 'OrderBy',
    max: 'ContentMasterTagsMaxOrderBy',
    min: 'ContentMasterTagsMinOrderBy',
    stddev: 'ContentMasterTagsStddevOrderBy',
    stddevPop: 'ContentMasterTagsStddevPopOrderBy',
    stddevSamp: 'ContentMasterTagsStddevSampOrderBy',
    sum: 'ContentMasterTagsSumOrderBy',
    varPop: 'ContentMasterTagsVarPopOrderBy',
    varSamp: 'ContentMasterTagsVarSampOrderBy',
    variance: 'ContentMasterTagsVarianceOrderBy',
  },
  ContentMasterTagsArrRelInsertInput: {
    data: 'ContentMasterTagsInsertInput',
    onConflict: 'ContentMasterTagsOnConflict',
  },
  ContentMasterTagsAvgOrderBy: {
    contentMasterId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ContentMasterTagsBoolExp: {
    _and: 'ContentMasterTagsBoolExp',
    _not: 'ContentMasterTagsBoolExp',
    _or: 'ContentMasterTagsBoolExp',
    contentMaster: 'ContentMasterBoolExp',
    contentMasterId: 'BigintComparisonExp',
    tag: 'TagBoolExp',
    tagId: 'BigintComparisonExp',
  },
  ContentMasterTagsConstraint: 'enum' as const,
  ContentMasterTagsIncInput: {
    contentMasterId: 'bigint',
    tagId: 'bigint',
  },
  ContentMasterTagsInsertInput: {
    contentMaster: 'ContentMasterObjRelInsertInput',
    contentMasterId: 'bigint',
    tag: 'TagObjRelInsertInput',
    tagId: 'bigint',
  },
  ContentMasterTagsMaxOrderBy: {
    contentMasterId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ContentMasterTagsMinOrderBy: {
    contentMasterId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ContentMasterTagsOnConflict: {
    constraint: 'ContentMasterTagsConstraint',
    updateColumns: 'ContentMasterTagsUpdateColumn',
    where: 'ContentMasterTagsBoolExp',
  },
  ContentMasterTagsOrderBy: {
    contentMaster: 'ContentMasterOrderBy',
    contentMasterId: 'OrderBy',
    tag: 'TagOrderBy',
    tagId: 'OrderBy',
  },
  ContentMasterTagsPkColumnsInput: {
    contentMasterId: 'bigint',
    tagId: 'bigint',
  },
  ContentMasterTagsSelectColumn: 'enum' as const,
  ContentMasterTagsSetInput: {
    contentMasterId: 'bigint',
    tagId: 'bigint',
  },
  ContentMasterTagsStddevOrderBy: {
    contentMasterId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ContentMasterTagsStddevPopOrderBy: {
    contentMasterId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ContentMasterTagsStddevSampOrderBy: {
    contentMasterId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ContentMasterTagsStreamCursorInput: {
    initialValue: 'ContentMasterTagsStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ContentMasterTagsStreamCursorValueInput: {
    contentMasterId: 'bigint',
    tagId: 'bigint',
  },
  ContentMasterTagsSumOrderBy: {
    contentMasterId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ContentMasterTagsUpdateColumn: 'enum' as const,
  ContentMasterTagsUpdates: {
    _inc: 'ContentMasterTagsIncInput',
    _set: 'ContentMasterTagsSetInput',
    where: 'ContentMasterTagsBoolExp',
  },
  ContentMasterTagsVarianceOrderBy: {
    contentMasterId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ContentMasterTagsVarPopOrderBy: {
    contentMasterId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ContentMasterTagsVarSampOrderBy: {
    contentMasterId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ContentMasterUpdateColumn: 'enum' as const,
  ContentMasterUpdates: {
    _inc: 'ContentMasterIncInput',
    _set: 'ContentMasterSetInput',
    where: 'ContentMasterBoolExp',
  },
  ContentMasterVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    rootContentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentMasterVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    rootContentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentMasterVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    rootContentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    eventId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
    text: 'OrderBy',
  },
  ContentMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    eventId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
    text: 'OrderBy',
  },
  ContentObjRelInsertInput: {
    data: 'ContentInsertInput',
    onConflict: 'ContentOnConflict',
  },
  ContentOnConflict: {
    constraint: 'ContentConstraint',
    updateColumns: 'ContentUpdateColumn',
    where: 'ContentBoolExp',
  },
  ContentOrderBy: {
    content: 'ContentOrderBy',
    contentAttachmentsAggregate: 'ContentAttachmentsAggregateOrderBy',
    contentEditsAggregate: 'ContentEditAggregateOrderBy',
    contentMaster: 'ContentMasterOrderBy',
    contentRepresentingTeamsAggregate: 'ContentRepresentingTeamsAggregateOrderBy',
    contentsAggregate: 'ContentAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    event: 'EventOrderBy',
    eventId: 'OrderBy',
    favoritesAggregate: 'FavoriteAggregateOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    isAnonymous: 'OrderBy',
    parentId: 'OrderBy',
    reactionsAggregate: 'ReactionAggregateOrderBy',
    reportsAggregate: 'ReportAggregateOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    text: 'OrderBy',
    validationsAggregate: 'ValidationAggregateOrderBy',
    votesAggregate: 'VoteAggregateOrderBy',
  },
  ContentPkColumnsInput: {
    id: 'bigint',
  },
  ContentRepresentingTeamsAggregateBoolExp: {
    count: 'contentRepresentingTeamsAggregateBoolExpCount',
  },
  contentRepresentingTeamsAggregateBoolExpCount: {
    arguments: 'ContentRepresentingTeamsSelectColumn',
    filter: 'ContentRepresentingTeamsBoolExp',
    predicate: 'IntComparisonExp',
  },
  ContentRepresentingTeamsAggregateFields: {
    count: {
      columns: 'ContentRepresentingTeamsSelectColumn',
    },
  },
  ContentRepresentingTeamsAggregateOrderBy: {
    avg: 'ContentRepresentingTeamsAvgOrderBy',
    count: 'OrderBy',
    max: 'ContentRepresentingTeamsMaxOrderBy',
    min: 'ContentRepresentingTeamsMinOrderBy',
    stddev: 'ContentRepresentingTeamsStddevOrderBy',
    stddevPop: 'ContentRepresentingTeamsStddevPopOrderBy',
    stddevSamp: 'ContentRepresentingTeamsStddevSampOrderBy',
    sum: 'ContentRepresentingTeamsSumOrderBy',
    varPop: 'ContentRepresentingTeamsVarPopOrderBy',
    varSamp: 'ContentRepresentingTeamsVarSampOrderBy',
    variance: 'ContentRepresentingTeamsVarianceOrderBy',
  },
  ContentRepresentingTeamsArrRelInsertInput: {
    data: 'ContentRepresentingTeamsInsertInput',
    onConflict: 'ContentRepresentingTeamsOnConflict',
  },
  ContentRepresentingTeamsAvgOrderBy: {
    contentId: 'OrderBy',
    teamId: 'OrderBy',
  },
  ContentRepresentingTeamsBoolExp: {
    _and: 'ContentRepresentingTeamsBoolExp',
    _not: 'ContentRepresentingTeamsBoolExp',
    _or: 'ContentRepresentingTeamsBoolExp',
    content: 'ContentBoolExp',
    contentId: 'BigintComparisonExp',
    team: 'TeamBoolExp',
    teamId: 'BigintComparisonExp',
  },
  ContentRepresentingTeamsConstraint: 'enum' as const,
  ContentRepresentingTeamsIncInput: {
    contentId: 'bigint',
    teamId: 'bigint',
  },
  ContentRepresentingTeamsInsertInput: {
    content: 'ContentObjRelInsertInput',
    contentId: 'bigint',
    team: 'TeamObjRelInsertInput',
    teamId: 'bigint',
  },
  ContentRepresentingTeamsMaxOrderBy: {
    contentId: 'OrderBy',
    teamId: 'OrderBy',
  },
  ContentRepresentingTeamsMinOrderBy: {
    contentId: 'OrderBy',
    teamId: 'OrderBy',
  },
  ContentRepresentingTeamsOnConflict: {
    constraint: 'ContentRepresentingTeamsConstraint',
    updateColumns: 'ContentRepresentingTeamsUpdateColumn',
    where: 'ContentRepresentingTeamsBoolExp',
  },
  ContentRepresentingTeamsOrderBy: {
    content: 'ContentOrderBy',
    contentId: 'OrderBy',
    team: 'TeamOrderBy',
    teamId: 'OrderBy',
  },
  ContentRepresentingTeamsPkColumnsInput: {
    contentId: 'bigint',
    teamId: 'bigint',
  },
  ContentRepresentingTeamsSelectColumn: 'enum' as const,
  ContentRepresentingTeamsSetInput: {
    contentId: 'bigint',
    teamId: 'bigint',
  },
  ContentRepresentingTeamsStddevOrderBy: {
    contentId: 'OrderBy',
    teamId: 'OrderBy',
  },
  ContentRepresentingTeamsStddevPopOrderBy: {
    contentId: 'OrderBy',
    teamId: 'OrderBy',
  },
  ContentRepresentingTeamsStddevSampOrderBy: {
    contentId: 'OrderBy',
    teamId: 'OrderBy',
  },
  ContentRepresentingTeamsStreamCursorInput: {
    initialValue: 'ContentRepresentingTeamsStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ContentRepresentingTeamsStreamCursorValueInput: {
    contentId: 'bigint',
    teamId: 'bigint',
  },
  ContentRepresentingTeamsSumOrderBy: {
    contentId: 'OrderBy',
    teamId: 'OrderBy',
  },
  ContentRepresentingTeamsUpdateColumn: 'enum' as const,
  ContentRepresentingTeamsUpdates: {
    _inc: 'ContentRepresentingTeamsIncInput',
    _set: 'ContentRepresentingTeamsSetInput',
    where: 'ContentRepresentingTeamsBoolExp',
  },
  ContentRepresentingTeamsVarianceOrderBy: {
    contentId: 'OrderBy',
    teamId: 'OrderBy',
  },
  ContentRepresentingTeamsVarPopOrderBy: {
    contentId: 'OrderBy',
    teamId: 'OrderBy',
  },
  ContentRepresentingTeamsVarSampOrderBy: {
    contentId: 'OrderBy',
    teamId: 'OrderBy',
  },
  ContentSelectColumn: 'enum' as const,
  ContentSelectColumnContentAggregateBoolExpBool_andArgumentsColumns: 'enum' as const,
  ContentSelectColumnContentAggregateBoolExpBool_orArgumentsColumns: 'enum' as const,
  ContentSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    parentId: 'bigint',
    tenantId: 'bigint',
  },
  ContentStddevOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentStddevPopOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentStddevSampOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentStreamCursorInput: {
    initialValue: 'ContentStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ContentStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    parentId: 'bigint',
    tenantId: 'bigint',
  },
  ContentSumOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentUpdateColumn: 'enum' as const,
  ContentUpdates: {
    _inc: 'ContentIncInput',
    _set: 'ContentSetInput',
    where: 'ContentBoolExp',
  },
  ContentVarianceOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentVarPopOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ContentVarSampOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  CursorOrdering: 'enum' as const,
  Document: {
    documentEdits: {
      distinctOn: 'DocumentEditSelectColumn',
      orderBy: 'DocumentEditOrderBy',
      where: 'DocumentEditBoolExp',
    },
    documentEditsAggregate: {
      distinctOn: 'DocumentEditSelectColumn',
      orderBy: 'DocumentEditOrderBy',
      where: 'DocumentEditBoolExp',
    },
  },
  DocumentAggregateBoolExp: {
    count: 'documentAggregateBoolExpCount',
  },
  documentAggregateBoolExpCount: {
    arguments: 'DocumentSelectColumn',
    filter: 'DocumentBoolExp',
    predicate: 'IntComparisonExp',
  },
  DocumentAggregateFields: {
    count: {
      columns: 'DocumentSelectColumn',
    },
  },
  DocumentAggregateOrderBy: {
    avg: 'DocumentAvgOrderBy',
    count: 'OrderBy',
    max: 'DocumentMaxOrderBy',
    min: 'DocumentMinOrderBy',
    stddev: 'DocumentStddevOrderBy',
    stddevPop: 'DocumentStddevPopOrderBy',
    stddevSamp: 'DocumentStddevSampOrderBy',
    sum: 'DocumentSumOrderBy',
    varPop: 'DocumentVarPopOrderBy',
    varSamp: 'DocumentVarSampOrderBy',
    variance: 'DocumentVarianceOrderBy',
  },
  DocumentArrRelInsertInput: {
    data: 'DocumentInsertInput',
    onConflict: 'DocumentOnConflict',
  },
  DocumentAvgOrderBy: {
    createdById: 'OrderBy',
    fileId: 'OrderBy',
    id: 'OrderBy',
    subjectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentBoolExp: {
    _and: 'DocumentBoolExp',
    _not: 'DocumentBoolExp',
    _or: 'DocumentBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    description: 'StringComparisonExp',
    documentEdits: 'DocumentEditBoolExp',
    documentEditsAggregate: 'DocumentEditAggregateBoolExp',
    fileId: 'BigintComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    name: 'StringComparisonExp',
    subject: 'SubjectBoolExp',
    subjectId: 'BigintComparisonExp',
    team: 'TeamBoolExp',
    teamId: 'BigintComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
    upload: 'UploadBoolExp',
    yearVersion: 'SmallintComparisonExp',
  },
  DocumentConstraint: 'enum' as const,
  DocumentEditAggregateBoolExp: {
    count: 'documentEditAggregateBoolExpCount',
  },
  documentEditAggregateBoolExpCount: {
    arguments: 'DocumentEditSelectColumn',
    filter: 'DocumentEditBoolExp',
    predicate: 'IntComparisonExp',
  },
  DocumentEditAggregateFields: {
    count: {
      columns: 'DocumentEditSelectColumn',
    },
  },
  DocumentEditAggregateOrderBy: {
    avg: 'DocumentEditAvgOrderBy',
    count: 'OrderBy',
    max: 'DocumentEditMaxOrderBy',
    min: 'DocumentEditMinOrderBy',
    stddev: 'DocumentEditStddevOrderBy',
    stddevPop: 'DocumentEditStddevPopOrderBy',
    stddevSamp: 'DocumentEditStddevSampOrderBy',
    sum: 'DocumentEditSumOrderBy',
    varPop: 'DocumentEditVarPopOrderBy',
    varSamp: 'DocumentEditVarSampOrderBy',
    variance: 'DocumentEditVarianceOrderBy',
  },
  DocumentEditArrRelInsertInput: {
    data: 'DocumentEditInsertInput',
    onConflict: 'DocumentEditOnConflict',
  },
  DocumentEditAvgOrderBy: {
    createdById: 'OrderBy',
    documentId: 'OrderBy',
    id: 'OrderBy',
    newVersionId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentEditBoolExp: {
    _and: 'DocumentEditBoolExp',
    _not: 'DocumentEditBoolExp',
    _or: 'DocumentEditBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    document: 'DocumentBoolExp',
    documentId: 'BigintComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    newVersionId: 'BigintComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
    upload: 'UploadBoolExp',
    yearVersion: 'SmallintComparisonExp',
  },
  DocumentEditConstraint: 'enum' as const,
  DocumentEditIncInput: {
    createdById: 'bigint',
    documentId: 'bigint',
    id: 'bigint',
    newVersionId: 'bigint',
    tenantId: 'bigint',
    yearVersion: 'smallint',
  },
  DocumentEditInsertInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    document: 'DocumentObjRelInsertInput',
    documentId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    newVersionId: 'bigint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    upload: 'UploadObjRelInsertInput',
    yearVersion: 'smallint',
  },
  DocumentEditMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    documentId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    newVersionId: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentEditMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    documentId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    newVersionId: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentEditOnConflict: {
    constraint: 'DocumentEditConstraint',
    updateColumns: 'DocumentEditUpdateColumn',
    where: 'DocumentEditBoolExp',
  },
  DocumentEditOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    document: 'DocumentOrderBy',
    documentId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    newVersionId: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    upload: 'UploadOrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentEditPkColumnsInput: {
    id: 'bigint',
  },
  DocumentEditSelectColumn: 'enum' as const,
  DocumentEditSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    documentId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    newVersionId: 'bigint',
    tenantId: 'bigint',
    yearVersion: 'smallint',
  },
  DocumentEditStddevOrderBy: {
    createdById: 'OrderBy',
    documentId: 'OrderBy',
    id: 'OrderBy',
    newVersionId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentEditStddevPopOrderBy: {
    createdById: 'OrderBy',
    documentId: 'OrderBy',
    id: 'OrderBy',
    newVersionId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentEditStddevSampOrderBy: {
    createdById: 'OrderBy',
    documentId: 'OrderBy',
    id: 'OrderBy',
    newVersionId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentEditStreamCursorInput: {
    initialValue: 'DocumentEditStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  DocumentEditStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    documentId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    newVersionId: 'bigint',
    tenantId: 'bigint',
    yearVersion: 'smallint',
  },
  DocumentEditSumOrderBy: {
    createdById: 'OrderBy',
    documentId: 'OrderBy',
    id: 'OrderBy',
    newVersionId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentEditUpdateColumn: 'enum' as const,
  DocumentEditUpdates: {
    _inc: 'DocumentEditIncInput',
    _set: 'DocumentEditSetInput',
    where: 'DocumentEditBoolExp',
  },
  DocumentEditVarianceOrderBy: {
    createdById: 'OrderBy',
    documentId: 'OrderBy',
    id: 'OrderBy',
    newVersionId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentEditVarPopOrderBy: {
    createdById: 'OrderBy',
    documentId: 'OrderBy',
    id: 'OrderBy',
    newVersionId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentEditVarSampOrderBy: {
    createdById: 'OrderBy',
    documentId: 'OrderBy',
    id: 'OrderBy',
    newVersionId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentIncInput: {
    createdById: 'bigint',
    fileId: 'bigint',
    id: 'bigint',
    subjectId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    yearVersion: 'smallint',
  },
  DocumentInsertInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    documentEdits: 'DocumentEditArrRelInsertInput',
    fileId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    subject: 'SubjectObjRelInsertInput',
    subjectId: 'bigint',
    team: 'TeamObjRelInsertInput',
    teamId: 'bigint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    upload: 'UploadObjRelInsertInput',
    yearVersion: 'smallint',
  },
  DocumentMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    fileId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    subjectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    fileId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    subjectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentObjRelInsertInput: {
    data: 'DocumentInsertInput',
    onConflict: 'DocumentOnConflict',
  },
  DocumentOnConflict: {
    constraint: 'DocumentConstraint',
    updateColumns: 'DocumentUpdateColumn',
    where: 'DocumentBoolExp',
  },
  DocumentOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    documentEditsAggregate: 'DocumentEditAggregateOrderBy',
    fileId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    name: 'OrderBy',
    subject: 'SubjectOrderBy',
    subjectId: 'OrderBy',
    team: 'TeamOrderBy',
    teamId: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    upload: 'UploadOrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentPkColumnsInput: {
    id: 'bigint',
  },
  DocumentSelectColumn: 'enum' as const,
  DocumentSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    fileId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    subjectId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    yearVersion: 'smallint',
  },
  DocumentStddevOrderBy: {
    createdById: 'OrderBy',
    fileId: 'OrderBy',
    id: 'OrderBy',
    subjectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentStddevPopOrderBy: {
    createdById: 'OrderBy',
    fileId: 'OrderBy',
    id: 'OrderBy',
    subjectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentStddevSampOrderBy: {
    createdById: 'OrderBy',
    fileId: 'OrderBy',
    id: 'OrderBy',
    subjectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentStreamCursorInput: {
    initialValue: 'DocumentStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  DocumentStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    fileId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    subjectId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    yearVersion: 'smallint',
  },
  DocumentSumOrderBy: {
    createdById: 'OrderBy',
    fileId: 'OrderBy',
    id: 'OrderBy',
    subjectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentUpdateColumn: 'enum' as const,
  DocumentUpdates: {
    _inc: 'DocumentIncInput',
    _set: 'DocumentSetInput',
    where: 'DocumentBoolExp',
  },
  DocumentVarianceOrderBy: {
    createdById: 'OrderBy',
    fileId: 'OrderBy',
    id: 'OrderBy',
    subjectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentVarPopOrderBy: {
    createdById: 'OrderBy',
    fileId: 'OrderBy',
    id: 'OrderBy',
    subjectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  DocumentVarSampOrderBy: {
    createdById: 'OrderBy',
    fileId: 'OrderBy',
    id: 'OrderBy',
    subjectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    yearVersion: 'OrderBy',
  },
  Event: {
    actions: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    actionsAggregate: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    contents: {
      distinctOn: 'ContentSelectColumn',
      orderBy: 'ContentOrderBy',
      where: 'ContentBoolExp',
    },
    contentsAggregate: {
      distinctOn: 'ContentSelectColumn',
      orderBy: 'ContentOrderBy',
      where: 'ContentBoolExp',
    },
    eventApprovals: {
      distinctOn: 'EventApprovalSelectColumn',
      orderBy: 'EventApprovalOrderBy',
      where: 'EventApprovalBoolExp',
    },
    eventApprovalsAggregate: {
      distinctOn: 'EventApprovalSelectColumn',
      orderBy: 'EventApprovalOrderBy',
      where: 'EventApprovalBoolExp',
    },
    eventJoins: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventJoinsAggregate: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventOrganisingTeams: {
      distinctOn: 'EventOrganisingTeamsSelectColumn',
      orderBy: 'EventOrganisingTeamsOrderBy',
      where: 'EventOrganisingTeamsBoolExp',
    },
    eventOrganisingTeamsAggregate: {
      distinctOn: 'EventOrganisingTeamsSelectColumn',
      orderBy: 'EventOrganisingTeamsOrderBy',
      where: 'EventOrganisingTeamsBoolExp',
    },
    eventRoles: {
      distinctOn: 'EventRoleSelectColumn',
      orderBy: 'EventRoleOrderBy',
      where: 'EventRoleBoolExp',
    },
    eventRolesAggregate: {
      distinctOn: 'EventRoleSelectColumn',
      orderBy: 'EventRoleOrderBy',
      where: 'EventRoleBoolExp',
    },
    eventTags: {
      distinctOn: 'EventTagsSelectColumn',
      orderBy: 'EventTagsOrderBy',
      where: 'EventTagsBoolExp',
    },
    eventTagsAggregate: {
      distinctOn: 'EventTagsSelectColumn',
      orderBy: 'EventTagsOrderBy',
      where: 'EventTagsBoolExp',
    },
    eventTeams: {
      distinctOn: 'EventTeamsSelectColumn',
      orderBy: 'EventTeamsOrderBy',
      where: 'EventTeamsBoolExp',
    },
    eventTeamsAggregate: {
      distinctOn: 'EventTeamsSelectColumn',
      orderBy: 'EventTeamsOrderBy',
      where: 'EventTeamsBoolExp',
    },
    events: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    eventsAggregate: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    meta: {},
    teamEvents: {
      distinctOn: 'TeamEventsSelectColumn',
      orderBy: 'TeamEventsOrderBy',
      where: 'TeamEventsBoolExp',
    },
    teamEventsAggregate: {
      distinctOn: 'TeamEventsSelectColumn',
      orderBy: 'TeamEventsOrderBy',
      where: 'TeamEventsBoolExp',
    },
    teamFinances: {
      distinctOn: 'TeamFinanceSelectColumn',
      orderBy: 'TeamFinanceOrderBy',
      where: 'TeamFinanceBoolExp',
    },
    teamFinancesAggregate: {
      distinctOn: 'TeamFinanceSelectColumn',
      orderBy: 'TeamFinanceOrderBy',
      where: 'TeamFinanceBoolExp',
    },
  },
  EventAggregateBoolExp: {
    bool_and: 'eventAggregateBoolExpBool_and',
    bool_or: 'eventAggregateBoolExpBool_or',
    count: 'eventAggregateBoolExpCount',
  },
  eventAggregateBoolExpBool_and: {
    arguments: 'EventSelectColumnEventAggregateBoolExpBool_andArgumentsColumns',
    filter: 'EventBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  eventAggregateBoolExpBool_or: {
    arguments: 'EventSelectColumnEventAggregateBoolExpBool_orArgumentsColumns',
    filter: 'EventBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  eventAggregateBoolExpCount: {
    arguments: 'EventSelectColumn',
    filter: 'EventBoolExp',
    predicate: 'IntComparisonExp',
  },
  EventAggregateFields: {
    count: {
      columns: 'EventSelectColumn',
    },
  },
  EventAggregateOrderBy: {
    avg: 'EventAvgOrderBy',
    count: 'OrderBy',
    max: 'EventMaxOrderBy',
    min: 'EventMinOrderBy',
    stddev: 'EventStddevOrderBy',
    stddevPop: 'EventStddevPopOrderBy',
    stddevSamp: 'EventStddevSampOrderBy',
    sum: 'EventSumOrderBy',
    varPop: 'EventVarPopOrderBy',
    varSamp: 'EventVarSampOrderBy',
    variance: 'EventVarianceOrderBy',
  },
  EventAppendInput: {
    meta: 'jsonb',
  },
  EventApprovalAggregateBoolExp: {
    bool_and: 'eventApprovalAggregateBoolExpBool_and',
    bool_or: 'eventApprovalAggregateBoolExpBool_or',
    count: 'eventApprovalAggregateBoolExpCount',
  },
  eventApprovalAggregateBoolExpBool_and: {
    arguments: 'EventApprovalSelectColumnEventApprovalAggregateBoolExpBool_andArgumentsColumns',
    filter: 'EventApprovalBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  eventApprovalAggregateBoolExpBool_or: {
    arguments: 'EventApprovalSelectColumnEventApprovalAggregateBoolExpBool_orArgumentsColumns',
    filter: 'EventApprovalBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  eventApprovalAggregateBoolExpCount: {
    arguments: 'EventApprovalSelectColumn',
    filter: 'EventApprovalBoolExp',
    predicate: 'IntComparisonExp',
  },
  EventApprovalAggregateFields: {
    count: {
      columns: 'EventApprovalSelectColumn',
    },
  },
  EventApprovalAggregateOrderBy: {
    avg: 'EventApprovalAvgOrderBy',
    count: 'OrderBy',
    max: 'EventApprovalMaxOrderBy',
    min: 'EventApprovalMinOrderBy',
    stddev: 'EventApprovalStddevOrderBy',
    stddevPop: 'EventApprovalStddevPopOrderBy',
    stddevSamp: 'EventApprovalStddevSampOrderBy',
    sum: 'EventApprovalSumOrderBy',
    varPop: 'EventApprovalVarPopOrderBy',
    varSamp: 'EventApprovalVarSampOrderBy',
    variance: 'EventApprovalVarianceOrderBy',
  },
  EventApprovalArrRelInsertInput: {
    data: 'EventApprovalInsertInput',
    onConflict: 'EventApprovalOnConflict',
  },
  EventApprovalAvgOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    stepId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalBoolExp: {
    _and: 'EventApprovalBoolExp',
    _not: 'EventApprovalBoolExp',
    _or: 'EventApprovalBoolExp',
    approved: 'BooleanComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    event: 'EventBoolExp',
    eventApprovalStep: 'EventApprovalStepBoolExp',
    eventId: 'BigintComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    message: 'StringComparisonExp',
    stepId: 'BigintComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  EventApprovalConstraint: 'enum' as const,
  EventApprovalIncInput: {
    createdById: 'bigint',
    eventId: 'bigint',
    id: 'bigint',
    stepId: 'bigint',
    tenantId: 'bigint',
  },
  EventApprovalInsertInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    event: 'EventObjRelInsertInput',
    eventApprovalStep: 'EventApprovalStepObjRelInsertInput',
    eventId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    stepId: 'bigint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  EventApprovalMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    eventId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    message: 'OrderBy',
    stepId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    eventId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    message: 'OrderBy',
    stepId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalOnConflict: {
    constraint: 'EventApprovalConstraint',
    updateColumns: 'EventApprovalUpdateColumn',
    where: 'EventApprovalBoolExp',
  },
  EventApprovalOrderBy: {
    approved: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    event: 'EventOrderBy',
    eventApprovalStep: 'EventApprovalStepOrderBy',
    eventId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    message: 'OrderBy',
    stepId: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalPkColumnsInput: {
    id: 'bigint',
  },
  EventApprovalSelectColumn: 'enum' as const,
  EventApprovalSelectColumnEventApprovalAggregateBoolExpBool_andArgumentsColumns: 'enum' as const,
  EventApprovalSelectColumnEventApprovalAggregateBoolExpBool_orArgumentsColumns: 'enum' as const,
  EventApprovalSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    stepId: 'bigint',
    tenantId: 'bigint',
  },
  EventApprovalStddevOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    stepId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalStddevPopOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    stepId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalStddevSampOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    stepId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalStep: {
    eventApprovalStepNotifiees: {
      distinctOn: 'EventApprovalStepNotifieesSelectColumn',
      orderBy: 'EventApprovalStepNotifieesOrderBy',
      where: 'EventApprovalStepNotifieesBoolExp',
    },
    eventApprovalStepNotifieesAggregate: {
      distinctOn: 'EventApprovalStepNotifieesSelectColumn',
      orderBy: 'EventApprovalStepNotifieesOrderBy',
      where: 'EventApprovalStepNotifieesBoolExp',
    },
    eventApprovalStepValidators: {
      distinctOn: 'EventApprovalStepValidatorsSelectColumn',
      orderBy: 'EventApprovalStepValidatorsOrderBy',
      where: 'EventApprovalStepValidatorsBoolExp',
    },
    eventApprovalStepValidatorsAggregate: {
      distinctOn: 'EventApprovalStepValidatorsSelectColumn',
      orderBy: 'EventApprovalStepValidatorsOrderBy',
      where: 'EventApprovalStepValidatorsBoolExp',
    },
    eventApprovals: {
      distinctOn: 'EventApprovalSelectColumn',
      orderBy: 'EventApprovalOrderBy',
      where: 'EventApprovalBoolExp',
    },
    eventApprovalsAggregate: {
      distinctOn: 'EventApprovalSelectColumn',
      orderBy: 'EventApprovalOrderBy',
      where: 'EventApprovalBoolExp',
    },
    events: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    eventsAggregate: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
  },
  EventApprovalStepAggregateBoolExp: {
    count: 'eventApprovalStepAggregateBoolExpCount',
  },
  eventApprovalStepAggregateBoolExpCount: {
    arguments: 'EventApprovalStepSelectColumn',
    filter: 'EventApprovalStepBoolExp',
    predicate: 'IntComparisonExp',
  },
  EventApprovalStepAggregateFields: {
    count: {
      columns: 'EventApprovalStepSelectColumn',
    },
  },
  EventApprovalStepAggregateOrderBy: {
    avg: 'EventApprovalStepAvgOrderBy',
    count: 'OrderBy',
    max: 'EventApprovalStepMaxOrderBy',
    min: 'EventApprovalStepMinOrderBy',
    stddev: 'EventApprovalStepStddevOrderBy',
    stddevPop: 'EventApprovalStepStddevPopOrderBy',
    stddevSamp: 'EventApprovalStepStddevSampOrderBy',
    sum: 'EventApprovalStepSumOrderBy',
    varPop: 'EventApprovalStepVarPopOrderBy',
    varSamp: 'EventApprovalStepVarSampOrderBy',
    variance: 'EventApprovalStepVarianceOrderBy',
  },
  EventApprovalStepArrRelInsertInput: {
    data: 'EventApprovalStepInsertInput',
    onConflict: 'EventApprovalStepOnConflict',
  },
  EventApprovalStepAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    stepOrder: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalStepBoolExp: {
    _and: 'EventApprovalStepBoolExp',
    _not: 'EventApprovalStepBoolExp',
    _or: 'EventApprovalStepBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    eventApprovalStepNotifiees: 'EventApprovalStepNotifieesBoolExp',
    eventApprovalStepNotifieesAggregate: 'EventApprovalStepNotifieesAggregateBoolExp',
    eventApprovalStepValidators: 'EventApprovalStepValidatorsBoolExp',
    eventApprovalStepValidatorsAggregate: 'EventApprovalStepValidatorsAggregateBoolExp',
    eventApprovals: 'EventApprovalBoolExp',
    eventApprovalsAggregate: 'EventApprovalAggregateBoolExp',
    events: 'EventBoolExp',
    eventsAggregate: 'EventAggregateBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    name: 'StringComparisonExp',
    stepOrder: 'IntComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  EventApprovalStepConstraint: 'enum' as const,
  EventApprovalStepIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  EventApprovalStepInsertInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventApprovalStepNotifiees: 'EventApprovalStepNotifieesArrRelInsertInput',
    eventApprovalStepValidators: 'EventApprovalStepValidatorsArrRelInsertInput',
    eventApprovals: 'EventApprovalArrRelInsertInput',
    events: 'EventArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  EventApprovalStepMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    stepOrder: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalStepMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    stepOrder: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalStepNotifieesAggregateBoolExp: {
    count: 'eventApprovalStepNotifieesAggregateBoolExpCount',
  },
  eventApprovalStepNotifieesAggregateBoolExpCount: {
    arguments: 'EventApprovalStepNotifieesSelectColumn',
    filter: 'EventApprovalStepNotifieesBoolExp',
    predicate: 'IntComparisonExp',
  },
  EventApprovalStepNotifieesAggregateFields: {
    count: {
      columns: 'EventApprovalStepNotifieesSelectColumn',
    },
  },
  EventApprovalStepNotifieesAggregateOrderBy: {
    avg: 'EventApprovalStepNotifieesAvgOrderBy',
    count: 'OrderBy',
    max: 'EventApprovalStepNotifieesMaxOrderBy',
    min: 'EventApprovalStepNotifieesMinOrderBy',
    stddev: 'EventApprovalStepNotifieesStddevOrderBy',
    stddevPop: 'EventApprovalStepNotifieesStddevPopOrderBy',
    stddevSamp: 'EventApprovalStepNotifieesStddevSampOrderBy',
    sum: 'EventApprovalStepNotifieesSumOrderBy',
    varPop: 'EventApprovalStepNotifieesVarPopOrderBy',
    varSamp: 'EventApprovalStepNotifieesVarSampOrderBy',
    variance: 'EventApprovalStepNotifieesVarianceOrderBy',
  },
  EventApprovalStepNotifieesArrRelInsertInput: {
    data: 'EventApprovalStepNotifieesInsertInput',
    onConflict: 'EventApprovalStepNotifieesOnConflict',
  },
  EventApprovalStepNotifieesAvgOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepNotifieesBoolExp: {
    _and: 'EventApprovalStepNotifieesBoolExp',
    _not: 'EventApprovalStepNotifieesBoolExp',
    _or: 'EventApprovalStepNotifieesBoolExp',
    eventApprovalStep: 'EventApprovalStepBoolExp',
    eventApprovalStepId: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    individualId: 'BigintComparisonExp',
  },
  EventApprovalStepNotifieesConstraint: 'enum' as const,
  EventApprovalStepNotifieesIncInput: {
    eventApprovalStepId: 'bigint',
    individualId: 'bigint',
  },
  EventApprovalStepNotifieesInsertInput: {
    eventApprovalStep: 'EventApprovalStepObjRelInsertInput',
    eventApprovalStepId: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    individualId: 'bigint',
  },
  EventApprovalStepNotifieesMaxOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepNotifieesMinOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepNotifieesOnConflict: {
    constraint: 'EventApprovalStepNotifieesConstraint',
    updateColumns: 'EventApprovalStepNotifieesUpdateColumn',
    where: 'EventApprovalStepNotifieesBoolExp',
  },
  EventApprovalStepNotifieesOrderBy: {
    eventApprovalStep: 'EventApprovalStepOrderBy',
    eventApprovalStepId: 'OrderBy',
    individual: 'IndividualOrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepNotifieesPkColumnsInput: {
    eventApprovalStepId: 'bigint',
    individualId: 'bigint',
  },
  EventApprovalStepNotifieesSelectColumn: 'enum' as const,
  EventApprovalStepNotifieesSetInput: {
    eventApprovalStepId: 'bigint',
    individualId: 'bigint',
  },
  EventApprovalStepNotifieesStddevOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepNotifieesStddevPopOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepNotifieesStddevSampOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepNotifieesStreamCursorInput: {
    initialValue: 'EventApprovalStepNotifieesStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  EventApprovalStepNotifieesStreamCursorValueInput: {
    eventApprovalStepId: 'bigint',
    individualId: 'bigint',
  },
  EventApprovalStepNotifieesSumOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepNotifieesUpdateColumn: 'enum' as const,
  EventApprovalStepNotifieesUpdates: {
    _inc: 'EventApprovalStepNotifieesIncInput',
    _set: 'EventApprovalStepNotifieesSetInput',
    where: 'EventApprovalStepNotifieesBoolExp',
  },
  EventApprovalStepNotifieesVarianceOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepNotifieesVarPopOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepNotifieesVarSampOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepObjRelInsertInput: {
    data: 'EventApprovalStepInsertInput',
    onConflict: 'EventApprovalStepOnConflict',
  },
  EventApprovalStepOnConflict: {
    constraint: 'EventApprovalStepConstraint',
    updateColumns: 'EventApprovalStepUpdateColumn',
    where: 'EventApprovalStepBoolExp',
  },
  EventApprovalStepOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    eventApprovalStepNotifieesAggregate: 'EventApprovalStepNotifieesAggregateOrderBy',
    eventApprovalStepValidatorsAggregate: 'EventApprovalStepValidatorsAggregateOrderBy',
    eventApprovalsAggregate: 'EventApprovalAggregateOrderBy',
    eventsAggregate: 'EventAggregateOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    name: 'OrderBy',
    stepOrder: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalStepPkColumnsInput: {
    id: 'bigint',
  },
  EventApprovalStepSelectColumn: 'enum' as const,
  EventApprovalStepSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  EventApprovalStepStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    stepOrder: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalStepStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    stepOrder: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalStepStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    stepOrder: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalStepStreamCursorInput: {
    initialValue: 'EventApprovalStepStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  EventApprovalStepStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  EventApprovalStepSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    stepOrder: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalStepUpdateColumn: 'enum' as const,
  EventApprovalStepUpdates: {
    _inc: 'EventApprovalStepIncInput',
    _set: 'EventApprovalStepSetInput',
    where: 'EventApprovalStepBoolExp',
  },
  EventApprovalStepValidatorsAggregateBoolExp: {
    count: 'eventApprovalStepValidatorsAggregateBoolExpCount',
  },
  eventApprovalStepValidatorsAggregateBoolExpCount: {
    arguments: 'EventApprovalStepValidatorsSelectColumn',
    filter: 'EventApprovalStepValidatorsBoolExp',
    predicate: 'IntComparisonExp',
  },
  EventApprovalStepValidatorsAggregateFields: {
    count: {
      columns: 'EventApprovalStepValidatorsSelectColumn',
    },
  },
  EventApprovalStepValidatorsAggregateOrderBy: {
    avg: 'EventApprovalStepValidatorsAvgOrderBy',
    count: 'OrderBy',
    max: 'EventApprovalStepValidatorsMaxOrderBy',
    min: 'EventApprovalStepValidatorsMinOrderBy',
    stddev: 'EventApprovalStepValidatorsStddevOrderBy',
    stddevPop: 'EventApprovalStepValidatorsStddevPopOrderBy',
    stddevSamp: 'EventApprovalStepValidatorsStddevSampOrderBy',
    sum: 'EventApprovalStepValidatorsSumOrderBy',
    varPop: 'EventApprovalStepValidatorsVarPopOrderBy',
    varSamp: 'EventApprovalStepValidatorsVarSampOrderBy',
    variance: 'EventApprovalStepValidatorsVarianceOrderBy',
  },
  EventApprovalStepValidatorsArrRelInsertInput: {
    data: 'EventApprovalStepValidatorsInsertInput',
    onConflict: 'EventApprovalStepValidatorsOnConflict',
  },
  EventApprovalStepValidatorsAvgOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepValidatorsBoolExp: {
    _and: 'EventApprovalStepValidatorsBoolExp',
    _not: 'EventApprovalStepValidatorsBoolExp',
    _or: 'EventApprovalStepValidatorsBoolExp',
    eventApprovalStep: 'EventApprovalStepBoolExp',
    eventApprovalStepId: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    individualId: 'BigintComparisonExp',
  },
  EventApprovalStepValidatorsConstraint: 'enum' as const,
  EventApprovalStepValidatorsIncInput: {
    eventApprovalStepId: 'bigint',
    individualId: 'bigint',
  },
  EventApprovalStepValidatorsInsertInput: {
    eventApprovalStep: 'EventApprovalStepObjRelInsertInput',
    eventApprovalStepId: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    individualId: 'bigint',
  },
  EventApprovalStepValidatorsMaxOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepValidatorsMinOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepValidatorsOnConflict: {
    constraint: 'EventApprovalStepValidatorsConstraint',
    updateColumns: 'EventApprovalStepValidatorsUpdateColumn',
    where: 'EventApprovalStepValidatorsBoolExp',
  },
  EventApprovalStepValidatorsOrderBy: {
    eventApprovalStep: 'EventApprovalStepOrderBy',
    eventApprovalStepId: 'OrderBy',
    individual: 'IndividualOrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepValidatorsPkColumnsInput: {
    eventApprovalStepId: 'bigint',
    individualId: 'bigint',
  },
  EventApprovalStepValidatorsSelectColumn: 'enum' as const,
  EventApprovalStepValidatorsSetInput: {
    eventApprovalStepId: 'bigint',
    individualId: 'bigint',
  },
  EventApprovalStepValidatorsStddevOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepValidatorsStddevPopOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepValidatorsStddevSampOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepValidatorsStreamCursorInput: {
    initialValue: 'EventApprovalStepValidatorsStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  EventApprovalStepValidatorsStreamCursorValueInput: {
    eventApprovalStepId: 'bigint',
    individualId: 'bigint',
  },
  EventApprovalStepValidatorsSumOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepValidatorsUpdateColumn: 'enum' as const,
  EventApprovalStepValidatorsUpdates: {
    _inc: 'EventApprovalStepValidatorsIncInput',
    _set: 'EventApprovalStepValidatorsSetInput',
    where: 'EventApprovalStepValidatorsBoolExp',
  },
  EventApprovalStepValidatorsVarianceOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepValidatorsVarPopOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepValidatorsVarSampOrderBy: {
    eventApprovalStepId: 'OrderBy',
    individualId: 'OrderBy',
  },
  EventApprovalStepVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    stepOrder: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalStepVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    stepOrder: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalStepVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    stepOrder: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalStreamCursorInput: {
    initialValue: 'EventApprovalStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  EventApprovalStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    stepId: 'bigint',
    tenantId: 'bigint',
  },
  EventApprovalSumOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    stepId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalUpdateColumn: 'enum' as const,
  EventApprovalUpdates: {
    _inc: 'EventApprovalIncInput',
    _set: 'EventApprovalSetInput',
    where: 'EventApprovalBoolExp',
  },
  EventApprovalVarianceOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    stepId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalVarPopOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    stepId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventApprovalVarSampOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    stepId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventArrRelInsertInput: {
    data: 'EventInsertInput',
    onConflict: 'EventOnConflict',
  },
  EventAvgOrderBy: {
    approvalSubmissionId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    joinFormId: 'OrderBy',
    lastEventApprovalStepId: 'OrderBy',
    locationId: 'OrderBy',
    price: 'OrderBy',
    projectId: 'OrderBy',
    regularEventId: 'OrderBy',
    supervisorId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventBoolExp: {
    _and: 'EventBoolExp',
    _not: 'EventBoolExp',
    _or: 'EventBoolExp',
    actions: 'ActionBoolExp',
    actionsAggregate: 'ActionAggregateBoolExp',
    actorAddress: 'ActorAddressBoolExp',
    approvalSubmissionId: 'BigintComparisonExp',
    autoAcceptJoins: 'BooleanComparisonExp',
    contentId: 'BigintComparisonExp',
    contentMaster: 'ContentMasterBoolExp',
    contents: 'ContentBoolExp',
    contentsAggregate: 'ContentAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    end: 'TimestamptzComparisonExp',
    event: 'EventBoolExp',
    eventApprovalStep: 'EventApprovalStepBoolExp',
    eventApprovals: 'EventApprovalBoolExp',
    eventApprovalsAggregate: 'EventApprovalAggregateBoolExp',
    eventJoins: 'EventJoinBoolExp',
    eventJoinsAggregate: 'EventJoinAggregateBoolExp',
    eventOrganisingTeams: 'EventOrganisingTeamsBoolExp',
    eventOrganisingTeamsAggregate: 'EventOrganisingTeamsAggregateBoolExp',
    eventRoles: 'EventRoleBoolExp',
    eventRolesAggregate: 'EventRoleAggregateBoolExp',
    eventTags: 'EventTagsBoolExp',
    eventTagsAggregate: 'EventTagsAggregateBoolExp',
    eventTeams: 'EventTeamsBoolExp',
    eventTeamsAggregate: 'EventTeamsAggregateBoolExp',
    events: 'EventBoolExp',
    eventsAggregate: 'EventAggregateBoolExp',
    form: 'FormBoolExp',
    formSubmission: 'FormSubmissionBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    imageId: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    isPrivate: 'BooleanComparisonExp',
    joinFormId: 'BigintComparisonExp',
    lastEventApprovalStepId: 'BigintComparisonExp',
    locationId: 'BigintComparisonExp',
    meta: 'JsonbComparisonExp',
    price: 'FloatComparisonExp',
    project: 'ProjectBoolExp',
    projectId: 'BigintComparisonExp',
    regularEventId: 'BigintComparisonExp',
    regularEventInterval: 'StringComparisonExp',
    slug: 'StringComparisonExp',
    start: 'TimestamptzComparisonExp',
    state: 'StringComparisonExp',
    supervisorId: 'BigintComparisonExp',
    teamEvents: 'TeamEventsBoolExp',
    teamEventsAggregate: 'TeamEventsAggregateBoolExp',
    teamFinances: 'TeamFinanceBoolExp',
    teamFinancesAggregate: 'TeamFinanceAggregateBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    upload: 'UploadBoolExp',
    userInfo: 'UserInfoBoolExp',
  },
  EventChangeRoleAggregateBoolExp: {
    count: 'eventChangeRoleAggregateBoolExpCount',
  },
  eventChangeRoleAggregateBoolExpCount: {
    arguments: 'EventChangeRoleSelectColumn',
    filter: 'EventChangeRoleBoolExp',
    predicate: 'IntComparisonExp',
  },
  EventChangeRoleAggregateFields: {
    count: {
      columns: 'EventChangeRoleSelectColumn',
    },
  },
  EventChangeRoleAggregateOrderBy: {
    avg: 'EventChangeRoleAvgOrderBy',
    count: 'OrderBy',
    max: 'EventChangeRoleMaxOrderBy',
    min: 'EventChangeRoleMinOrderBy',
    stddev: 'EventChangeRoleStddevOrderBy',
    stddevPop: 'EventChangeRoleStddevPopOrderBy',
    stddevSamp: 'EventChangeRoleStddevSampOrderBy',
    sum: 'EventChangeRoleSumOrderBy',
    varPop: 'EventChangeRoleVarPopOrderBy',
    varSamp: 'EventChangeRoleVarSampOrderBy',
    variance: 'EventChangeRoleVarianceOrderBy',
  },
  EventChangeRoleArrRelInsertInput: {
    data: 'EventChangeRoleInsertInput',
    onConflict: 'EventChangeRoleOnConflict',
  },
  EventChangeRoleAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedRoleId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventChangeRoleBoolExp: {
    _and: 'EventChangeRoleBoolExp',
    _not: 'EventChangeRoleBoolExp',
    _or: 'EventChangeRoleBoolExp',
    accepted: 'StringComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    eventJoin: 'EventJoinBoolExp',
    eventRole: 'EventRoleBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    note: 'StringComparisonExp',
    receivedRoleId: 'BigintComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  EventChangeRoleConstraint: 'enum' as const,
  EventChangeRoleIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    receivedRoleId: 'bigint',
    tenantId: 'bigint',
  },
  EventChangeRoleInsertInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventJoin: 'EventJoinObjRelInsertInput',
    eventRole: 'EventRoleObjRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    receivedRoleId: 'bigint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  EventChangeRoleMaxOrderBy: {
    accepted: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    note: 'OrderBy',
    receivedRoleId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventChangeRoleMinOrderBy: {
    accepted: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    note: 'OrderBy',
    receivedRoleId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventChangeRoleObjRelInsertInput: {
    data: 'EventChangeRoleInsertInput',
    onConflict: 'EventChangeRoleOnConflict',
  },
  EventChangeRoleOnConflict: {
    constraint: 'EventChangeRoleConstraint',
    updateColumns: 'EventChangeRoleUpdateColumn',
    where: 'EventChangeRoleBoolExp',
  },
  EventChangeRoleOrderBy: {
    accepted: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    eventJoin: 'EventJoinOrderBy',
    eventRole: 'EventRoleOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    note: 'OrderBy',
    receivedRoleId: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  EventChangeRolePkColumnsInput: {
    id: 'bigint',
  },
  EventChangeRoleSelectColumn: 'enum' as const,
  EventChangeRoleSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    receivedRoleId: 'bigint',
    tenantId: 'bigint',
  },
  EventChangeRoleStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedRoleId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventChangeRoleStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedRoleId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventChangeRoleStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedRoleId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventChangeRoleStreamCursorInput: {
    initialValue: 'EventChangeRoleStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  EventChangeRoleStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    receivedRoleId: 'bigint',
    tenantId: 'bigint',
  },
  EventChangeRoleSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedRoleId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventChangeRoleUpdateColumn: 'enum' as const,
  EventChangeRoleUpdates: {
    _inc: 'EventChangeRoleIncInput',
    _set: 'EventChangeRoleSetInput',
    where: 'EventChangeRoleBoolExp',
  },
  EventChangeRoleVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedRoleId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventChangeRoleVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedRoleId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventChangeRoleVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    receivedRoleId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventConstraint: 'enum' as const,
  EventDeleteAtPathInput: {},
  EventDeleteElemInput: {},
  EventDeleteKeyInput: {},
  EventIncInput: {
    approvalSubmissionId: 'bigint',
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    imageId: 'bigint',
    joinFormId: 'bigint',
    lastEventApprovalStepId: 'bigint',
    locationId: 'bigint',
    projectId: 'bigint',
    regularEventId: 'bigint',
    supervisorId: 'bigint',
    tenantId: 'bigint',
  },
  EventInsertInput: {
    actions: 'ActionArrRelInsertInput',
    actorAddress: 'ActorAddressObjRelInsertInput',
    approvalSubmissionId: 'bigint',
    contentId: 'bigint',
    contentMaster: 'ContentMasterObjRelInsertInput',
    contents: 'ContentArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    end: 'timestamptz',
    event: 'EventObjRelInsertInput',
    eventApprovalStep: 'EventApprovalStepObjRelInsertInput',
    eventApprovals: 'EventApprovalArrRelInsertInput',
    eventJoins: 'EventJoinArrRelInsertInput',
    eventOrganisingTeams: 'EventOrganisingTeamsArrRelInsertInput',
    eventRoles: 'EventRoleArrRelInsertInput',
    eventTags: 'EventTagsArrRelInsertInput',
    eventTeams: 'EventTeamsArrRelInsertInput',
    events: 'EventArrRelInsertInput',
    form: 'FormObjRelInsertInput',
    formSubmission: 'FormSubmissionObjRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    joinFormId: 'bigint',
    lastEventApprovalStepId: 'bigint',
    locationId: 'bigint',
    meta: 'jsonb',
    project: 'ProjectObjRelInsertInput',
    projectId: 'bigint',
    regularEventId: 'bigint',
    start: 'timestamptz',
    supervisorId: 'bigint',
    teamEvents: 'TeamEventsArrRelInsertInput',
    teamFinances: 'TeamFinanceArrRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    upload: 'UploadObjRelInsertInput',
    userInfo: 'UserInfoObjRelInsertInput',
  },
  EventJoin: {
    actions: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    actionsAggregate: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
  },
  EventJoinAggregateBoolExp: {
    bool_and: 'eventJoinAggregateBoolExpBool_and',
    bool_or: 'eventJoinAggregateBoolExpBool_or',
    count: 'eventJoinAggregateBoolExpCount',
  },
  eventJoinAggregateBoolExpBool_and: {
    arguments: 'EventJoinSelectColumnEventJoinAggregateBoolExpBool_andArgumentsColumns',
    filter: 'EventJoinBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  eventJoinAggregateBoolExpBool_or: {
    arguments: 'EventJoinSelectColumnEventJoinAggregateBoolExpBool_orArgumentsColumns',
    filter: 'EventJoinBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  eventJoinAggregateBoolExpCount: {
    arguments: 'EventJoinSelectColumn',
    filter: 'EventJoinBoolExp',
    predicate: 'IntComparisonExp',
  },
  EventJoinAggregateFields: {
    count: {
      columns: 'EventJoinSelectColumn',
    },
  },
  EventJoinAggregateOrderBy: {
    avg: 'EventJoinAvgOrderBy',
    count: 'OrderBy',
    max: 'EventJoinMaxOrderBy',
    min: 'EventJoinMinOrderBy',
    stddev: 'EventJoinStddevOrderBy',
    stddevPop: 'EventJoinStddevPopOrderBy',
    stddevSamp: 'EventJoinStddevSampOrderBy',
    sum: 'EventJoinSumOrderBy',
    varPop: 'EventJoinVarPopOrderBy',
    varSamp: 'EventJoinVarSampOrderBy',
    variance: 'EventJoinVarianceOrderBy',
  },
  EventJoinArrRelInsertInput: {
    data: 'EventJoinInsertInput',
    onConflict: 'EventJoinOnConflict',
  },
  EventJoinAvgOrderBy: {
    actionId: 'OrderBy',
    createdById: 'OrderBy',
    eventChangeRoleId: 'OrderBy',
    eventId: 'OrderBy',
    eventRoleId: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventJoinBoolExp: {
    _and: 'EventJoinBoolExp',
    _not: 'EventJoinBoolExp',
    _or: 'EventJoinBoolExp',
    action: 'ActionBoolExp',
    actionId: 'BigintComparisonExp',
    actions: 'ActionBoolExp',
    actionsAggregate: 'ActionAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    event: 'EventBoolExp',
    eventChangeRole: 'EventChangeRoleBoolExp',
    eventChangeRoleId: 'BigintComparisonExp',
    eventId: 'BigintComparisonExp',
    eventRole: 'EventRoleBoolExp',
    eventRoleId: 'BigintComparisonExp',
    formSubmission: 'FormSubmissionBoolExp',
    formSubmissionId: 'BigintComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    joinerId: 'BigintComparisonExp',
    participated: 'BooleanComparisonExp',
    presenceStatus: 'StringComparisonExp',
    state: 'StringComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    userInfo: 'UserInfoBoolExp',
  },
  EventJoinConstraint: 'enum' as const,
  EventJoinIncInput: {
    actionId: 'bigint',
    createdById: 'bigint',
    eventChangeRoleId: 'bigint',
    eventId: 'bigint',
    eventRoleId: 'bigint',
    formSubmissionId: 'bigint',
    id: 'bigint',
    joinerId: 'bigint',
    tenantId: 'bigint',
  },
  EventJoinInsertInput: {
    action: 'ActionObjRelInsertInput',
    actionId: 'bigint',
    actions: 'ActionArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    event: 'EventObjRelInsertInput',
    eventChangeRole: 'EventChangeRoleObjRelInsertInput',
    eventChangeRoleId: 'bigint',
    eventId: 'bigint',
    eventRole: 'EventRoleObjRelInsertInput',
    eventRoleId: 'bigint',
    formSubmission: 'FormSubmissionObjRelInsertInput',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    joinerId: 'bigint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    userInfo: 'UserInfoObjRelInsertInput',
  },
  EventJoinMaxOrderBy: {
    actionId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    eventChangeRoleId: 'OrderBy',
    eventId: 'OrderBy',
    eventRoleId: 'OrderBy',
    formSubmissionId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    presenceStatus: 'OrderBy',
    state: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventJoinMinOrderBy: {
    actionId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    eventChangeRoleId: 'OrderBy',
    eventId: 'OrderBy',
    eventRoleId: 'OrderBy',
    formSubmissionId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    presenceStatus: 'OrderBy',
    state: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventJoinObjRelInsertInput: {
    data: 'EventJoinInsertInput',
    onConflict: 'EventJoinOnConflict',
  },
  EventJoinOnConflict: {
    constraint: 'EventJoinConstraint',
    updateColumns: 'EventJoinUpdateColumn',
    where: 'EventJoinBoolExp',
  },
  EventJoinOrderBy: {
    action: 'ActionOrderBy',
    actionId: 'OrderBy',
    actionsAggregate: 'ActionAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    event: 'EventOrderBy',
    eventChangeRole: 'EventChangeRoleOrderBy',
    eventChangeRoleId: 'OrderBy',
    eventId: 'OrderBy',
    eventRole: 'EventRoleOrderBy',
    eventRoleId: 'OrderBy',
    formSubmission: 'FormSubmissionOrderBy',
    formSubmissionId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    joinerId: 'OrderBy',
    participated: 'OrderBy',
    presenceStatus: 'OrderBy',
    state: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    userInfo: 'UserInfoOrderBy',
  },
  EventJoinPkColumnsInput: {
    id: 'bigint',
  },
  EventJoinSelectColumn: 'enum' as const,
  EventJoinSelectColumnEventJoinAggregateBoolExpBool_andArgumentsColumns: 'enum' as const,
  EventJoinSelectColumnEventJoinAggregateBoolExpBool_orArgumentsColumns: 'enum' as const,
  EventJoinSetInput: {
    actionId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventChangeRoleId: 'bigint',
    eventId: 'bigint',
    eventRoleId: 'bigint',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    joinerId: 'bigint',
    tenantId: 'bigint',
  },
  EventJoinStddevOrderBy: {
    actionId: 'OrderBy',
    createdById: 'OrderBy',
    eventChangeRoleId: 'OrderBy',
    eventId: 'OrderBy',
    eventRoleId: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventJoinStddevPopOrderBy: {
    actionId: 'OrderBy',
    createdById: 'OrderBy',
    eventChangeRoleId: 'OrderBy',
    eventId: 'OrderBy',
    eventRoleId: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventJoinStddevSampOrderBy: {
    actionId: 'OrderBy',
    createdById: 'OrderBy',
    eventChangeRoleId: 'OrderBy',
    eventId: 'OrderBy',
    eventRoleId: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventJoinStreamCursorInput: {
    initialValue: 'EventJoinStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  EventJoinStreamCursorValueInput: {
    actionId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventChangeRoleId: 'bigint',
    eventId: 'bigint',
    eventRoleId: 'bigint',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    joinerId: 'bigint',
    tenantId: 'bigint',
  },
  EventJoinSumOrderBy: {
    actionId: 'OrderBy',
    createdById: 'OrderBy',
    eventChangeRoleId: 'OrderBy',
    eventId: 'OrderBy',
    eventRoleId: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventJoinUpdateColumn: 'enum' as const,
  EventJoinUpdates: {
    _inc: 'EventJoinIncInput',
    _set: 'EventJoinSetInput',
    where: 'EventJoinBoolExp',
  },
  EventJoinVarianceOrderBy: {
    actionId: 'OrderBy',
    createdById: 'OrderBy',
    eventChangeRoleId: 'OrderBy',
    eventId: 'OrderBy',
    eventRoleId: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventJoinVarPopOrderBy: {
    actionId: 'OrderBy',
    createdById: 'OrderBy',
    eventChangeRoleId: 'OrderBy',
    eventId: 'OrderBy',
    eventRoleId: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventJoinVarSampOrderBy: {
    actionId: 'OrderBy',
    createdById: 'OrderBy',
    eventChangeRoleId: 'OrderBy',
    eventId: 'OrderBy',
    eventRoleId: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventMaxOrderBy: {
    approvalSubmissionId: 'OrderBy',
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    end: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    joinFormId: 'OrderBy',
    lastEventApprovalStepId: 'OrderBy',
    locationId: 'OrderBy',
    price: 'OrderBy',
    projectId: 'OrderBy',
    regularEventId: 'OrderBy',
    regularEventInterval: 'OrderBy',
    slug: 'OrderBy',
    start: 'OrderBy',
    state: 'OrderBy',
    supervisorId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventMinOrderBy: {
    approvalSubmissionId: 'OrderBy',
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    end: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    joinFormId: 'OrderBy',
    lastEventApprovalStepId: 'OrderBy',
    locationId: 'OrderBy',
    price: 'OrderBy',
    projectId: 'OrderBy',
    regularEventId: 'OrderBy',
    regularEventInterval: 'OrderBy',
    slug: 'OrderBy',
    start: 'OrderBy',
    state: 'OrderBy',
    supervisorId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventObjRelInsertInput: {
    data: 'EventInsertInput',
    onConflict: 'EventOnConflict',
  },
  EventOnConflict: {
    constraint: 'EventConstraint',
    updateColumns: 'EventUpdateColumn',
    where: 'EventBoolExp',
  },
  EventOrderBy: {
    actionsAggregate: 'ActionAggregateOrderBy',
    actorAddress: 'ActorAddressOrderBy',
    approvalSubmissionId: 'OrderBy',
    autoAcceptJoins: 'OrderBy',
    contentId: 'OrderBy',
    contentMaster: 'ContentMasterOrderBy',
    contentsAggregate: 'ContentAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    end: 'OrderBy',
    event: 'EventOrderBy',
    eventApprovalStep: 'EventApprovalStepOrderBy',
    eventApprovalsAggregate: 'EventApprovalAggregateOrderBy',
    eventJoinsAggregate: 'EventJoinAggregateOrderBy',
    eventOrganisingTeamsAggregate: 'EventOrganisingTeamsAggregateOrderBy',
    eventRolesAggregate: 'EventRoleAggregateOrderBy',
    eventTagsAggregate: 'EventTagsAggregateOrderBy',
    eventTeamsAggregate: 'EventTeamsAggregateOrderBy',
    eventsAggregate: 'EventAggregateOrderBy',
    form: 'FormOrderBy',
    formSubmission: 'FormSubmissionOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    individual: 'IndividualOrderBy',
    isPrivate: 'OrderBy',
    joinFormId: 'OrderBy',
    lastEventApprovalStepId: 'OrderBy',
    locationId: 'OrderBy',
    meta: 'OrderBy',
    price: 'OrderBy',
    project: 'ProjectOrderBy',
    projectId: 'OrderBy',
    regularEventId: 'OrderBy',
    regularEventInterval: 'OrderBy',
    slug: 'OrderBy',
    start: 'OrderBy',
    state: 'OrderBy',
    supervisorId: 'OrderBy',
    teamEventsAggregate: 'TeamEventsAggregateOrderBy',
    teamFinancesAggregate: 'TeamFinanceAggregateOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    upload: 'UploadOrderBy',
    userInfo: 'UserInfoOrderBy',
  },
  EventOrganisingTeamsAggregateBoolExp: {
    count: 'eventOrganisingTeamsAggregateBoolExpCount',
  },
  eventOrganisingTeamsAggregateBoolExpCount: {
    arguments: 'EventOrganisingTeamsSelectColumn',
    filter: 'EventOrganisingTeamsBoolExp',
    predicate: 'IntComparisonExp',
  },
  EventOrganisingTeamsAggregateFields: {
    count: {
      columns: 'EventOrganisingTeamsSelectColumn',
    },
  },
  EventOrganisingTeamsAggregateOrderBy: {
    avg: 'EventOrganisingTeamsAvgOrderBy',
    count: 'OrderBy',
    max: 'EventOrganisingTeamsMaxOrderBy',
    min: 'EventOrganisingTeamsMinOrderBy',
    stddev: 'EventOrganisingTeamsStddevOrderBy',
    stddevPop: 'EventOrganisingTeamsStddevPopOrderBy',
    stddevSamp: 'EventOrganisingTeamsStddevSampOrderBy',
    sum: 'EventOrganisingTeamsSumOrderBy',
    varPop: 'EventOrganisingTeamsVarPopOrderBy',
    varSamp: 'EventOrganisingTeamsVarSampOrderBy',
    variance: 'EventOrganisingTeamsVarianceOrderBy',
  },
  EventOrganisingTeamsArrRelInsertInput: {
    data: 'EventOrganisingTeamsInsertInput',
    onConflict: 'EventOrganisingTeamsOnConflict',
  },
  EventOrganisingTeamsAvgOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventOrganisingTeamsBoolExp: {
    _and: 'EventOrganisingTeamsBoolExp',
    _not: 'EventOrganisingTeamsBoolExp',
    _or: 'EventOrganisingTeamsBoolExp',
    event: 'EventBoolExp',
    eventId: 'BigintComparisonExp',
    team: 'TeamBoolExp',
    teamId: 'BigintComparisonExp',
  },
  EventOrganisingTeamsConstraint: 'enum' as const,
  EventOrganisingTeamsIncInput: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  EventOrganisingTeamsInsertInput: {
    event: 'EventObjRelInsertInput',
    eventId: 'bigint',
    team: 'TeamObjRelInsertInput',
    teamId: 'bigint',
  },
  EventOrganisingTeamsMaxOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventOrganisingTeamsMinOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventOrganisingTeamsOnConflict: {
    constraint: 'EventOrganisingTeamsConstraint',
    updateColumns: 'EventOrganisingTeamsUpdateColumn',
    where: 'EventOrganisingTeamsBoolExp',
  },
  EventOrganisingTeamsOrderBy: {
    event: 'EventOrderBy',
    eventId: 'OrderBy',
    team: 'TeamOrderBy',
    teamId: 'OrderBy',
  },
  EventOrganisingTeamsPkColumnsInput: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  EventOrganisingTeamsSelectColumn: 'enum' as const,
  EventOrganisingTeamsSetInput: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  EventOrganisingTeamsStddevOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventOrganisingTeamsStddevPopOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventOrganisingTeamsStddevSampOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventOrganisingTeamsStreamCursorInput: {
    initialValue: 'EventOrganisingTeamsStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  EventOrganisingTeamsStreamCursorValueInput: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  EventOrganisingTeamsSumOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventOrganisingTeamsUpdateColumn: 'enum' as const,
  EventOrganisingTeamsUpdates: {
    _inc: 'EventOrganisingTeamsIncInput',
    _set: 'EventOrganisingTeamsSetInput',
    where: 'EventOrganisingTeamsBoolExp',
  },
  EventOrganisingTeamsVarianceOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventOrganisingTeamsVarPopOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventOrganisingTeamsVarSampOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventPkColumnsInput: {
    id: 'bigint',
  },
  EventPrependInput: {
    meta: 'jsonb',
  },
  EventRole: {
    eventChangeRoles: {
      distinctOn: 'EventChangeRoleSelectColumn',
      orderBy: 'EventChangeRoleOrderBy',
      where: 'EventChangeRoleBoolExp',
    },
    eventChangeRolesAggregate: {
      distinctOn: 'EventChangeRoleSelectColumn',
      orderBy: 'EventChangeRoleOrderBy',
      where: 'EventChangeRoleBoolExp',
    },
    eventJoins: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventJoinsAggregate: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
  },
  EventRoleAggregateBoolExp: {
    bool_and: 'eventRoleAggregateBoolExpBool_and',
    bool_or: 'eventRoleAggregateBoolExpBool_or',
    count: 'eventRoleAggregateBoolExpCount',
  },
  eventRoleAggregateBoolExpBool_and: {
    arguments: 'EventRoleSelectColumnEventRoleAggregateBoolExpBool_andArgumentsColumns',
    filter: 'EventRoleBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  eventRoleAggregateBoolExpBool_or: {
    arguments: 'EventRoleSelectColumnEventRoleAggregateBoolExpBool_orArgumentsColumns',
    filter: 'EventRoleBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  eventRoleAggregateBoolExpCount: {
    arguments: 'EventRoleSelectColumn',
    filter: 'EventRoleBoolExp',
    predicate: 'IntComparisonExp',
  },
  EventRoleAggregateFields: {
    count: {
      columns: 'EventRoleSelectColumn',
    },
  },
  EventRoleAggregateOrderBy: {
    avg: 'EventRoleAvgOrderBy',
    count: 'OrderBy',
    max: 'EventRoleMaxOrderBy',
    min: 'EventRoleMinOrderBy',
    stddev: 'EventRoleStddevOrderBy',
    stddevPop: 'EventRoleStddevPopOrderBy',
    stddevSamp: 'EventRoleStddevSampOrderBy',
    sum: 'EventRoleSumOrderBy',
    varPop: 'EventRoleVarPopOrderBy',
    varSamp: 'EventRoleVarSampOrderBy',
    variance: 'EventRoleVarianceOrderBy',
  },
  EventRoleArrRelInsertInput: {
    data: 'EventRoleInsertInput',
    onConflict: 'EventRoleOnConflict',
  },
  EventRoleAvgOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    projectRoleId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  EventRoleBoolExp: {
    _and: 'EventRoleBoolExp',
    _not: 'EventRoleBoolExp',
    _or: 'EventRoleBoolExp',
    autoAccept: 'BooleanComparisonExp',
    color: 'StringComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    description: 'StringComparisonExp',
    event: 'EventBoolExp',
    eventChangeRoles: 'EventChangeRoleBoolExp',
    eventChangeRolesAggregate: 'EventChangeRoleAggregateBoolExp',
    eventId: 'BigintComparisonExp',
    eventJoins: 'EventJoinBoolExp',
    eventJoinsAggregate: 'EventJoinAggregateBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    name: 'StringComparisonExp',
    projectRole: 'ProjectRoleBoolExp',
    projectRoleId: 'BigintComparisonExp',
    required: 'BooleanComparisonExp',
    rewardMaximum: 'SmallintComparisonExp',
    rewardMinimum: 'SmallintComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    userId: 'BigintComparisonExp',
    userInfo: 'UserInfoBoolExp',
  },
  EventRoleConstraint: 'enum' as const,
  EventRoleIncInput: {
    createdById: 'bigint',
    eventId: 'bigint',
    id: 'bigint',
    projectRoleId: 'bigint',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  EventRoleInsertInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    event: 'EventObjRelInsertInput',
    eventChangeRoles: 'EventChangeRoleArrRelInsertInput',
    eventId: 'bigint',
    eventJoins: 'EventJoinArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    projectRole: 'ProjectRoleObjRelInsertInput',
    projectRoleId: 'bigint',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    userId: 'bigint',
    userInfo: 'UserInfoObjRelInsertInput',
  },
  EventRoleMaxOrderBy: {
    color: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    eventId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    projectRoleId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  EventRoleMinOrderBy: {
    color: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    eventId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    projectRoleId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  EventRoleObjRelInsertInput: {
    data: 'EventRoleInsertInput',
    onConflict: 'EventRoleOnConflict',
  },
  EventRoleOnConflict: {
    constraint: 'EventRoleConstraint',
    updateColumns: 'EventRoleUpdateColumn',
    where: 'EventRoleBoolExp',
  },
  EventRoleOrderBy: {
    autoAccept: 'OrderBy',
    color: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    event: 'EventOrderBy',
    eventChangeRolesAggregate: 'EventChangeRoleAggregateOrderBy',
    eventId: 'OrderBy',
    eventJoinsAggregate: 'EventJoinAggregateOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    name: 'OrderBy',
    projectRole: 'ProjectRoleOrderBy',
    projectRoleId: 'OrderBy',
    required: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    userInfo: 'UserInfoOrderBy',
  },
  EventRolePkColumnsInput: {
    id: 'bigint',
  },
  EventRoleSelectColumn: 'enum' as const,
  EventRoleSelectColumnEventRoleAggregateBoolExpBool_andArgumentsColumns: 'enum' as const,
  EventRoleSelectColumnEventRoleAggregateBoolExpBool_orArgumentsColumns: 'enum' as const,
  EventRoleSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    projectRoleId: 'bigint',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  EventRoleStddevOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    projectRoleId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  EventRoleStddevPopOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    projectRoleId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  EventRoleStddevSampOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    projectRoleId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  EventRoleStreamCursorInput: {
    initialValue: 'EventRoleStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  EventRoleStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    projectRoleId: 'bigint',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  EventRoleSumOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    projectRoleId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  EventRoleUpdateColumn: 'enum' as const,
  EventRoleUpdates: {
    _inc: 'EventRoleIncInput',
    _set: 'EventRoleSetInput',
    where: 'EventRoleBoolExp',
  },
  EventRoleVarianceOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    projectRoleId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  EventRoleVarPopOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    projectRoleId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  EventRoleVarSampOrderBy: {
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    id: 'OrderBy',
    projectRoleId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  EventSelectColumn: 'enum' as const,
  EventSelectColumnEventAggregateBoolExpBool_andArgumentsColumns: 'enum' as const,
  EventSelectColumnEventAggregateBoolExpBool_orArgumentsColumns: 'enum' as const,
  EventSetInput: {
    approvalSubmissionId: 'bigint',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    end: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    joinFormId: 'bigint',
    lastEventApprovalStepId: 'bigint',
    locationId: 'bigint',
    meta: 'jsonb',
    projectId: 'bigint',
    regularEventId: 'bigint',
    start: 'timestamptz',
    supervisorId: 'bigint',
    tenantId: 'bigint',
  },
  EventStddevOrderBy: {
    approvalSubmissionId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    joinFormId: 'OrderBy',
    lastEventApprovalStepId: 'OrderBy',
    locationId: 'OrderBy',
    price: 'OrderBy',
    projectId: 'OrderBy',
    regularEventId: 'OrderBy',
    supervisorId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventStddevPopOrderBy: {
    approvalSubmissionId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    joinFormId: 'OrderBy',
    lastEventApprovalStepId: 'OrderBy',
    locationId: 'OrderBy',
    price: 'OrderBy',
    projectId: 'OrderBy',
    regularEventId: 'OrderBy',
    supervisorId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventStddevSampOrderBy: {
    approvalSubmissionId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    joinFormId: 'OrderBy',
    lastEventApprovalStepId: 'OrderBy',
    locationId: 'OrderBy',
    price: 'OrderBy',
    projectId: 'OrderBy',
    regularEventId: 'OrderBy',
    supervisorId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventStreamCursorInput: {
    initialValue: 'EventStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  EventStreamCursorValueInput: {
    approvalSubmissionId: 'bigint',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    end: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    joinFormId: 'bigint',
    lastEventApprovalStepId: 'bigint',
    locationId: 'bigint',
    meta: 'jsonb',
    projectId: 'bigint',
    regularEventId: 'bigint',
    start: 'timestamptz',
    supervisorId: 'bigint',
    tenantId: 'bigint',
  },
  EventSumOrderBy: {
    approvalSubmissionId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    joinFormId: 'OrderBy',
    lastEventApprovalStepId: 'OrderBy',
    locationId: 'OrderBy',
    price: 'OrderBy',
    projectId: 'OrderBy',
    regularEventId: 'OrderBy',
    supervisorId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventTagsAggregateBoolExp: {
    count: 'eventTagsAggregateBoolExpCount',
  },
  eventTagsAggregateBoolExpCount: {
    arguments: 'EventTagsSelectColumn',
    filter: 'EventTagsBoolExp',
    predicate: 'IntComparisonExp',
  },
  EventTagsAggregateFields: {
    count: {
      columns: 'EventTagsSelectColumn',
    },
  },
  EventTagsAggregateOrderBy: {
    avg: 'EventTagsAvgOrderBy',
    count: 'OrderBy',
    max: 'EventTagsMaxOrderBy',
    min: 'EventTagsMinOrderBy',
    stddev: 'EventTagsStddevOrderBy',
    stddevPop: 'EventTagsStddevPopOrderBy',
    stddevSamp: 'EventTagsStddevSampOrderBy',
    sum: 'EventTagsSumOrderBy',
    varPop: 'EventTagsVarPopOrderBy',
    varSamp: 'EventTagsVarSampOrderBy',
    variance: 'EventTagsVarianceOrderBy',
  },
  EventTagsArrRelInsertInput: {
    data: 'EventTagsInsertInput',
    onConflict: 'EventTagsOnConflict',
  },
  EventTagsAvgOrderBy: {
    eventId: 'OrderBy',
    tagId: 'OrderBy',
  },
  EventTagsBoolExp: {
    _and: 'EventTagsBoolExp',
    _not: 'EventTagsBoolExp',
    _or: 'EventTagsBoolExp',
    event: 'EventBoolExp',
    eventId: 'BigintComparisonExp',
    tag: 'TagBoolExp',
    tagId: 'BigintComparisonExp',
  },
  EventTagsConstraint: 'enum' as const,
  EventTagsIncInput: {
    eventId: 'bigint',
    tagId: 'bigint',
  },
  EventTagsInsertInput: {
    event: 'EventObjRelInsertInput',
    eventId: 'bigint',
    tag: 'TagObjRelInsertInput',
    tagId: 'bigint',
  },
  EventTagsMaxOrderBy: {
    eventId: 'OrderBy',
    tagId: 'OrderBy',
  },
  EventTagsMinOrderBy: {
    eventId: 'OrderBy',
    tagId: 'OrderBy',
  },
  EventTagsOnConflict: {
    constraint: 'EventTagsConstraint',
    updateColumns: 'EventTagsUpdateColumn',
    where: 'EventTagsBoolExp',
  },
  EventTagsOrderBy: {
    event: 'EventOrderBy',
    eventId: 'OrderBy',
    tag: 'TagOrderBy',
    tagId: 'OrderBy',
  },
  EventTagsPkColumnsInput: {
    eventId: 'bigint',
    tagId: 'bigint',
  },
  EventTagsSelectColumn: 'enum' as const,
  EventTagsSetInput: {
    eventId: 'bigint',
    tagId: 'bigint',
  },
  EventTagsStddevOrderBy: {
    eventId: 'OrderBy',
    tagId: 'OrderBy',
  },
  EventTagsStddevPopOrderBy: {
    eventId: 'OrderBy',
    tagId: 'OrderBy',
  },
  EventTagsStddevSampOrderBy: {
    eventId: 'OrderBy',
    tagId: 'OrderBy',
  },
  EventTagsStreamCursorInput: {
    initialValue: 'EventTagsStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  EventTagsStreamCursorValueInput: {
    eventId: 'bigint',
    tagId: 'bigint',
  },
  EventTagsSumOrderBy: {
    eventId: 'OrderBy',
    tagId: 'OrderBy',
  },
  EventTagsUpdateColumn: 'enum' as const,
  EventTagsUpdates: {
    _inc: 'EventTagsIncInput',
    _set: 'EventTagsSetInput',
    where: 'EventTagsBoolExp',
  },
  EventTagsVarianceOrderBy: {
    eventId: 'OrderBy',
    tagId: 'OrderBy',
  },
  EventTagsVarPopOrderBy: {
    eventId: 'OrderBy',
    tagId: 'OrderBy',
  },
  EventTagsVarSampOrderBy: {
    eventId: 'OrderBy',
    tagId: 'OrderBy',
  },
  EventTeamsAggregateBoolExp: {
    count: 'eventTeamsAggregateBoolExpCount',
  },
  eventTeamsAggregateBoolExpCount: {
    arguments: 'EventTeamsSelectColumn',
    filter: 'EventTeamsBoolExp',
    predicate: 'IntComparisonExp',
  },
  EventTeamsAggregateFields: {
    count: {
      columns: 'EventTeamsSelectColumn',
    },
  },
  EventTeamsAggregateOrderBy: {
    avg: 'EventTeamsAvgOrderBy',
    count: 'OrderBy',
    max: 'EventTeamsMaxOrderBy',
    min: 'EventTeamsMinOrderBy',
    stddev: 'EventTeamsStddevOrderBy',
    stddevPop: 'EventTeamsStddevPopOrderBy',
    stddevSamp: 'EventTeamsStddevSampOrderBy',
    sum: 'EventTeamsSumOrderBy',
    varPop: 'EventTeamsVarPopOrderBy',
    varSamp: 'EventTeamsVarSampOrderBy',
    variance: 'EventTeamsVarianceOrderBy',
  },
  EventTeamsArrRelInsertInput: {
    data: 'EventTeamsInsertInput',
    onConflict: 'EventTeamsOnConflict',
  },
  EventTeamsAvgOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventTeamsBoolExp: {
    _and: 'EventTeamsBoolExp',
    _not: 'EventTeamsBoolExp',
    _or: 'EventTeamsBoolExp',
    event: 'EventBoolExp',
    eventId: 'BigintComparisonExp',
    team: 'TeamBoolExp',
    teamId: 'BigintComparisonExp',
  },
  EventTeamsConstraint: 'enum' as const,
  EventTeamsIncInput: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  EventTeamsInsertInput: {
    event: 'EventObjRelInsertInput',
    eventId: 'bigint',
    team: 'TeamObjRelInsertInput',
    teamId: 'bigint',
  },
  EventTeamsMaxOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventTeamsMinOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventTeamsOnConflict: {
    constraint: 'EventTeamsConstraint',
    updateColumns: 'EventTeamsUpdateColumn',
    where: 'EventTeamsBoolExp',
  },
  EventTeamsOrderBy: {
    event: 'EventOrderBy',
    eventId: 'OrderBy',
    team: 'TeamOrderBy',
    teamId: 'OrderBy',
  },
  EventTeamsPkColumnsInput: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  EventTeamsSelectColumn: 'enum' as const,
  EventTeamsSetInput: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  EventTeamsStddevOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventTeamsStddevPopOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventTeamsStddevSampOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventTeamsStreamCursorInput: {
    initialValue: 'EventTeamsStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  EventTeamsStreamCursorValueInput: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  EventTeamsSumOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventTeamsUpdateColumn: 'enum' as const,
  EventTeamsUpdates: {
    _inc: 'EventTeamsIncInput',
    _set: 'EventTeamsSetInput',
    where: 'EventTeamsBoolExp',
  },
  EventTeamsVarianceOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventTeamsVarPopOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventTeamsVarSampOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  EventUpdateColumn: 'enum' as const,
  EventUpdates: {
    _append: 'EventAppendInput',
    _deleteAtPath: 'EventDeleteAtPathInput',
    _deleteElem: 'EventDeleteElemInput',
    _deleteKey: 'EventDeleteKeyInput',
    _inc: 'EventIncInput',
    _prepend: 'EventPrependInput',
    _set: 'EventSetInput',
    where: 'EventBoolExp',
  },
  EventVarianceOrderBy: {
    approvalSubmissionId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    joinFormId: 'OrderBy',
    lastEventApprovalStepId: 'OrderBy',
    locationId: 'OrderBy',
    price: 'OrderBy',
    projectId: 'OrderBy',
    regularEventId: 'OrderBy',
    supervisorId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventVarPopOrderBy: {
    approvalSubmissionId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    joinFormId: 'OrderBy',
    lastEventApprovalStepId: 'OrderBy',
    locationId: 'OrderBy',
    price: 'OrderBy',
    projectId: 'OrderBy',
    regularEventId: 'OrderBy',
    supervisorId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  EventVarSampOrderBy: {
    approvalSubmissionId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    joinFormId: 'OrderBy',
    lastEventApprovalStepId: 'OrderBy',
    locationId: 'OrderBy',
    price: 'OrderBy',
    projectId: 'OrderBy',
    regularEventId: 'OrderBy',
    supervisorId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  Expense: {
    actorFinances: {
      distinctOn: 'ActorFinanceSelectColumn',
      orderBy: 'ActorFinanceOrderBy',
      where: 'ActorFinanceBoolExp',
    },
    actorFinancesAggregate: {
      distinctOn: 'ActorFinanceSelectColumn',
      orderBy: 'ActorFinanceOrderBy',
      where: 'ActorFinanceBoolExp',
    },
  },
  ExpenseAggregateBoolExp: {
    count: 'expenseAggregateBoolExpCount',
  },
  expenseAggregateBoolExpCount: {
    arguments: 'ExpenseSelectColumn',
    filter: 'ExpenseBoolExp',
    predicate: 'IntComparisonExp',
  },
  ExpenseAggregateFields: {
    count: {
      columns: 'ExpenseSelectColumn',
    },
  },
  ExpenseAggregateOrderBy: {
    avg: 'ExpenseAvgOrderBy',
    count: 'OrderBy',
    max: 'ExpenseMaxOrderBy',
    min: 'ExpenseMinOrderBy',
    stddev: 'ExpenseStddevOrderBy',
    stddevPop: 'ExpenseStddevPopOrderBy',
    stddevSamp: 'ExpenseStddevSampOrderBy',
    sum: 'ExpenseSumOrderBy',
    varPop: 'ExpenseVarPopOrderBy',
    varSamp: 'ExpenseVarSampOrderBy',
    variance: 'ExpenseVarianceOrderBy',
  },
  ExpenseArrRelInsertInput: {
    data: 'ExpenseInsertInput',
    onConflict: 'ExpenseOnConflict',
  },
  ExpenseAvgOrderBy: {
    bankInfoId: 'OrderBy',
    createdById: 'OrderBy',
    expenseReportId: 'OrderBy',
    id: 'OrderBy',
    issueId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ExpenseBoolExp: {
    _and: 'ExpenseBoolExp',
    _not: 'ExpenseBoolExp',
    _or: 'ExpenseBoolExp',
    actorBankInfo: 'ActorBankInfoBoolExp',
    actorFinances: 'ActorFinanceBoolExp',
    actorFinancesAggregate: 'ActorFinanceAggregateBoolExp',
    bankInfoId: 'BigintComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    description: 'StringComparisonExp',
    expenseReportId: 'BigintComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    issue: 'IssueBoolExp',
    issueId: 'BigintComparisonExp',
    state: 'StringComparisonExp',
    teamFinance: 'TeamFinanceBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    upload: 'UploadBoolExp',
  },
  ExpenseConstraint: 'enum' as const,
  ExpenseIncInput: {
    bankInfoId: 'bigint',
    createdById: 'bigint',
    expenseReportId: 'bigint',
    id: 'bigint',
    issueId: 'bigint',
    tenantId: 'bigint',
  },
  ExpenseInsertInput: {
    actorBankInfo: 'ActorBankInfoObjRelInsertInput',
    actorFinances: 'ActorFinanceArrRelInsertInput',
    bankInfoId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expenseReportId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    issue: 'IssueObjRelInsertInput',
    issueId: 'bigint',
    teamFinance: 'TeamFinanceObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    upload: 'UploadObjRelInsertInput',
  },
  ExpenseMaxOrderBy: {
    bankInfoId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    expenseReportId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    issueId: 'OrderBy',
    state: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ExpenseMinOrderBy: {
    bankInfoId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    expenseReportId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    issueId: 'OrderBy',
    state: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ExpenseObjRelInsertInput: {
    data: 'ExpenseInsertInput',
    onConflict: 'ExpenseOnConflict',
  },
  ExpenseOnConflict: {
    constraint: 'ExpenseConstraint',
    updateColumns: 'ExpenseUpdateColumn',
    where: 'ExpenseBoolExp',
  },
  ExpenseOrderBy: {
    actorBankInfo: 'ActorBankInfoOrderBy',
    actorFinancesAggregate: 'ActorFinanceAggregateOrderBy',
    bankInfoId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    expenseReportId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    issue: 'IssueOrderBy',
    issueId: 'OrderBy',
    state: 'OrderBy',
    teamFinance: 'TeamFinanceOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    upload: 'UploadOrderBy',
  },
  ExpensePkColumnsInput: {
    id: 'bigint',
  },
  ExpenseSelectColumn: 'enum' as const,
  ExpenseSetInput: {
    bankInfoId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expenseReportId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    issueId: 'bigint',
    tenantId: 'bigint',
  },
  ExpenseStddevOrderBy: {
    bankInfoId: 'OrderBy',
    createdById: 'OrderBy',
    expenseReportId: 'OrderBy',
    id: 'OrderBy',
    issueId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ExpenseStddevPopOrderBy: {
    bankInfoId: 'OrderBy',
    createdById: 'OrderBy',
    expenseReportId: 'OrderBy',
    id: 'OrderBy',
    issueId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ExpenseStddevSampOrderBy: {
    bankInfoId: 'OrderBy',
    createdById: 'OrderBy',
    expenseReportId: 'OrderBy',
    id: 'OrderBy',
    issueId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ExpenseStreamCursorInput: {
    initialValue: 'ExpenseStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ExpenseStreamCursorValueInput: {
    bankInfoId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expenseReportId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    issueId: 'bigint',
    tenantId: 'bigint',
  },
  ExpenseSumOrderBy: {
    bankInfoId: 'OrderBy',
    createdById: 'OrderBy',
    expenseReportId: 'OrderBy',
    id: 'OrderBy',
    issueId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ExpenseUpdateColumn: 'enum' as const,
  ExpenseUpdates: {
    _inc: 'ExpenseIncInput',
    _set: 'ExpenseSetInput',
    where: 'ExpenseBoolExp',
  },
  ExpenseVarianceOrderBy: {
    bankInfoId: 'OrderBy',
    createdById: 'OrderBy',
    expenseReportId: 'OrderBy',
    id: 'OrderBy',
    issueId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ExpenseVarPopOrderBy: {
    bankInfoId: 'OrderBy',
    createdById: 'OrderBy',
    expenseReportId: 'OrderBy',
    id: 'OrderBy',
    issueId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ExpenseVarSampOrderBy: {
    bankInfoId: 'OrderBy',
    createdById: 'OrderBy',
    expenseReportId: 'OrderBy',
    id: 'OrderBy',
    issueId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FavoriteAggregateBoolExp: {
    count: 'favoriteAggregateBoolExpCount',
  },
  favoriteAggregateBoolExpCount: {
    arguments: 'FavoriteSelectColumn',
    filter: 'FavoriteBoolExp',
    predicate: 'IntComparisonExp',
  },
  FavoriteAggregateFields: {
    count: {
      columns: 'FavoriteSelectColumn',
    },
  },
  FavoriteAggregateOrderBy: {
    avg: 'FavoriteAvgOrderBy',
    count: 'OrderBy',
    max: 'FavoriteMaxOrderBy',
    min: 'FavoriteMinOrderBy',
    stddev: 'FavoriteStddevOrderBy',
    stddevPop: 'FavoriteStddevPopOrderBy',
    stddevSamp: 'FavoriteStddevSampOrderBy',
    sum: 'FavoriteSumOrderBy',
    varPop: 'FavoriteVarPopOrderBy',
    varSamp: 'FavoriteVarSampOrderBy',
    variance: 'FavoriteVarianceOrderBy',
  },
  FavoriteArrRelInsertInput: {
    data: 'FavoriteInsertInput',
    onConflict: 'FavoriteOnConflict',
  },
  FavoriteAvgOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FavoriteBoolExp: {
    _and: 'FavoriteBoolExp',
    _not: 'FavoriteBoolExp',
    _or: 'FavoriteBoolExp',
    actor: 'ActorBoolExp',
    actorId: 'BigintComparisonExp',
    content: 'ContentBoolExp',
    contentId: 'BigintComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    lastActiveDate: 'TimestamptzComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  FavoriteConstraint: 'enum' as const,
  FavoriteIncInput: {
    actorId: 'bigint',
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FavoriteInsertInput: {
    actor: 'ActorObjRelInsertInput',
    actorId: 'bigint',
    content: 'ContentObjRelInsertInput',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    lastActiveDate: 'timestamptz',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  FavoriteMaxOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    lastActiveDate: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FavoriteMinOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    lastActiveDate: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FavoriteOnConflict: {
    constraint: 'FavoriteConstraint',
    updateColumns: 'FavoriteUpdateColumn',
    where: 'FavoriteBoolExp',
  },
  FavoriteOrderBy: {
    actor: 'ActorOrderBy',
    actorId: 'OrderBy',
    content: 'ContentOrderBy',
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    lastActiveDate: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  FavoritePkColumnsInput: {
    id: 'bigint',
  },
  FavoriteSelectColumn: 'enum' as const,
  FavoriteSetInput: {
    actorId: 'bigint',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
  },
  FavoriteStddevOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FavoriteStddevPopOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FavoriteStddevSampOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FavoriteStreamCursorInput: {
    initialValue: 'FavoriteStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  FavoriteStreamCursorValueInput: {
    actorId: 'bigint',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
  },
  FavoriteSumOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FavoriteUpdateColumn: 'enum' as const,
  FavoriteUpdates: {
    _inc: 'FavoriteIncInput',
    _set: 'FavoriteSetInput',
    where: 'FavoriteBoolExp',
  },
  FavoriteVarianceOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FavoriteVarPopOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FavoriteVarSampOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FloatComparisonExp: {},
  Form: {
    events: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    eventsAggregate: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    formEdits: {
      distinctOn: 'FormEditSelectColumn',
      orderBy: 'FormEditOrderBy',
      where: 'FormEditBoolExp',
    },
    formEditsAggregate: {
      distinctOn: 'FormEditSelectColumn',
      orderBy: 'FormEditOrderBy',
      where: 'FormEditBoolExp',
    },
    schema: {},
  },
  FormAggregateBoolExp: {
    bool_and: 'formAggregateBoolExpBool_and',
    bool_or: 'formAggregateBoolExpBool_or',
    count: 'formAggregateBoolExpCount',
  },
  formAggregateBoolExpBool_and: {
    arguments: 'FormSelectColumnFormAggregateBoolExpBool_andArgumentsColumns',
    filter: 'FormBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  formAggregateBoolExpBool_or: {
    arguments: 'FormSelectColumnFormAggregateBoolExpBool_orArgumentsColumns',
    filter: 'FormBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  formAggregateBoolExpCount: {
    arguments: 'FormSelectColumn',
    filter: 'FormBoolExp',
    predicate: 'IntComparisonExp',
  },
  FormAggregateFields: {
    count: {
      columns: 'FormSelectColumn',
    },
  },
  FormAggregateOrderBy: {
    avg: 'FormAvgOrderBy',
    count: 'OrderBy',
    max: 'FormMaxOrderBy',
    min: 'FormMinOrderBy',
    stddev: 'FormStddevOrderBy',
    stddevPop: 'FormStddevPopOrderBy',
    stddevSamp: 'FormStddevSampOrderBy',
    sum: 'FormSumOrderBy',
    varPop: 'FormVarPopOrderBy',
    varSamp: 'FormVarSampOrderBy',
    variance: 'FormVarianceOrderBy',
  },
  FormAppendInput: {
    schema: 'jsonb',
  },
  FormArrRelInsertInput: {
    data: 'FormInsertInput',
    onConflict: 'FormOnConflict',
  },
  FormAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormBoolExp: {
    _and: 'FormBoolExp',
    _not: 'FormBoolExp',
    _or: 'FormBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    events: 'EventBoolExp',
    eventsAggregate: 'EventAggregateBoolExp',
    formEdits: 'FormEditBoolExp',
    formEditsAggregate: 'FormEditAggregateBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    isAllowingEditingAnswers: 'BooleanComparisonExp',
    isAllowingMultipleAnswers: 'BooleanComparisonExp',
    isEnabled: 'BooleanComparisonExp',
    isRequired: 'BooleanComparisonExp',
    isTemplate: 'BooleanComparisonExp',
    name: 'StringComparisonExp',
    schema: 'JsonbComparisonExp',
    team: 'TeamBoolExp',
    tenant: 'TenantBoolExp',
    tenantById: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
  },
  FormConstraint: 'enum' as const,
  FormDeleteAtPathInput: {},
  FormDeleteElemInput: {},
  FormDeleteKeyInput: {},
  FormEdit: {
    addedDiff: {},
    formSubmissions: {
      distinctOn: 'FormSubmissionSelectColumn',
      orderBy: 'FormSubmissionOrderBy',
      where: 'FormSubmissionBoolExp',
    },
    formSubmissionsAggregate: {
      distinctOn: 'FormSubmissionSelectColumn',
      orderBy: 'FormSubmissionOrderBy',
      where: 'FormSubmissionBoolExp',
    },
    newVersion: {},
  },
  FormEditAggregateBoolExp: {
    count: 'formEditAggregateBoolExpCount',
  },
  formEditAggregateBoolExpCount: {
    arguments: 'FormEditSelectColumn',
    filter: 'FormEditBoolExp',
    predicate: 'IntComparisonExp',
  },
  FormEditAggregateFields: {
    count: {
      columns: 'FormEditSelectColumn',
    },
  },
  FormEditAggregateOrderBy: {
    avg: 'FormEditAvgOrderBy',
    count: 'OrderBy',
    max: 'FormEditMaxOrderBy',
    min: 'FormEditMinOrderBy',
    stddev: 'FormEditStddevOrderBy',
    stddevPop: 'FormEditStddevPopOrderBy',
    stddevSamp: 'FormEditStddevSampOrderBy',
    sum: 'FormEditSumOrderBy',
    varPop: 'FormEditVarPopOrderBy',
    varSamp: 'FormEditVarSampOrderBy',
    variance: 'FormEditVarianceOrderBy',
  },
  FormEditAppendInput: {
    addedDiff: 'jsonb',
    newVersion: 'jsonb',
  },
  FormEditArrRelInsertInput: {
    data: 'FormEditInsertInput',
    onConflict: 'FormEditOnConflict',
  },
  FormEditAvgOrderBy: {
    createdById: 'OrderBy',
    formId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormEditBoolExp: {
    _and: 'FormEditBoolExp',
    _not: 'FormEditBoolExp',
    _or: 'FormEditBoolExp',
    addedDiff: 'JsonbComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    form: 'FormBoolExp',
    formId: 'BigintComparisonExp',
    formSubmissions: 'FormSubmissionBoolExp',
    formSubmissionsAggregate: 'FormSubmissionAggregateBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    newVersion: 'JsonbComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  FormEditConstraint: 'enum' as const,
  FormEditDeleteAtPathInput: {},
  FormEditDeleteElemInput: {},
  FormEditDeleteKeyInput: {},
  FormEditIncInput: {
    createdById: 'bigint',
    formId: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FormEditInsertInput: {
    addedDiff: 'jsonb',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    form: 'FormObjRelInsertInput',
    formId: 'bigint',
    formSubmissions: 'FormSubmissionArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    newVersion: 'jsonb',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  FormEditMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    formId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormEditMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    formId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormEditObjRelInsertInput: {
    data: 'FormEditInsertInput',
    onConflict: 'FormEditOnConflict',
  },
  FormEditOnConflict: {
    constraint: 'FormEditConstraint',
    updateColumns: 'FormEditUpdateColumn',
    where: 'FormEditBoolExp',
  },
  FormEditOrderBy: {
    addedDiff: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    form: 'FormOrderBy',
    formId: 'OrderBy',
    formSubmissionsAggregate: 'FormSubmissionAggregateOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    newVersion: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  FormEditPkColumnsInput: {
    id: 'bigint',
  },
  FormEditPrependInput: {
    addedDiff: 'jsonb',
    newVersion: 'jsonb',
  },
  FormEditSelectColumn: 'enum' as const,
  FormEditSetInput: {
    addedDiff: 'jsonb',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    newVersion: 'jsonb',
    tenantId: 'bigint',
  },
  FormEditStddevOrderBy: {
    createdById: 'OrderBy',
    formId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormEditStddevPopOrderBy: {
    createdById: 'OrderBy',
    formId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormEditStddevSampOrderBy: {
    createdById: 'OrderBy',
    formId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormEditStreamCursorInput: {
    initialValue: 'FormEditStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  FormEditStreamCursorValueInput: {
    addedDiff: 'jsonb',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    newVersion: 'jsonb',
    tenantId: 'bigint',
  },
  FormEditSumOrderBy: {
    createdById: 'OrderBy',
    formId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormEditUpdateColumn: 'enum' as const,
  FormEditUpdates: {
    _append: 'FormEditAppendInput',
    _deleteAtPath: 'FormEditDeleteAtPathInput',
    _deleteElem: 'FormEditDeleteElemInput',
    _deleteKey: 'FormEditDeleteKeyInput',
    _inc: 'FormEditIncInput',
    _prepend: 'FormEditPrependInput',
    _set: 'FormEditSetInput',
    where: 'FormEditBoolExp',
  },
  FormEditVarianceOrderBy: {
    createdById: 'OrderBy',
    formId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormEditVarPopOrderBy: {
    createdById: 'OrderBy',
    formId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormEditVarSampOrderBy: {
    createdById: 'OrderBy',
    formId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FormInsertInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    events: 'EventArrRelInsertInput',
    formEdits: 'FormEditArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    schema: 'jsonb',
    team: 'TeamObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantById: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  FormMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  FormMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  FormObjRelInsertInput: {
    data: 'FormInsertInput',
    onConflict: 'FormOnConflict',
  },
  FormOnConflict: {
    constraint: 'FormConstraint',
    updateColumns: 'FormUpdateColumn',
    where: 'FormBoolExp',
  },
  FormOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    eventsAggregate: 'EventAggregateOrderBy',
    formEditsAggregate: 'FormEditAggregateOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    isAllowingEditingAnswers: 'OrderBy',
    isAllowingMultipleAnswers: 'OrderBy',
    isEnabled: 'OrderBy',
    isRequired: 'OrderBy',
    isTemplate: 'OrderBy',
    name: 'OrderBy',
    schema: 'OrderBy',
    team: 'TeamOrderBy',
    tenant: 'TenantOrderBy',
    tenantById: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  FormPkColumnsInput: {
    id: 'bigint',
  },
  FormPrependInput: {
    schema: 'jsonb',
  },
  FormSelectColumn: 'enum' as const,
  FormSelectColumnFormAggregateBoolExpBool_andArgumentsColumns: 'enum' as const,
  FormSelectColumnFormAggregateBoolExpBool_orArgumentsColumns: 'enum' as const,
  FormSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    schema: 'jsonb',
    tenantId: 'bigint',
  },
  FormStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormStreamCursorInput: {
    initialValue: 'FormStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  FormStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    schema: 'jsonb',
    tenantId: 'bigint',
  },
  FormSubmission: {
    eventJoins: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventJoinsAggregate: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    formSubmissionEdits: {
      distinctOn: 'FormSubmissionEditSelectColumn',
      orderBy: 'FormSubmissionEditOrderBy',
      where: 'FormSubmissionEditBoolExp',
    },
    formSubmissionEditsAggregate: {
      distinctOn: 'FormSubmissionEditSelectColumn',
      orderBy: 'FormSubmissionEditOrderBy',
      where: 'FormSubmissionEditBoolExp',
    },
    submission: {},
    teamJoins: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamJoinsAggregate: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
  },
  FormSubmissionAggregateBoolExp: {
    count: 'formSubmissionAggregateBoolExpCount',
  },
  formSubmissionAggregateBoolExpCount: {
    arguments: 'FormSubmissionSelectColumn',
    filter: 'FormSubmissionBoolExp',
    predicate: 'IntComparisonExp',
  },
  FormSubmissionAggregateFields: {
    count: {
      columns: 'FormSubmissionSelectColumn',
    },
  },
  FormSubmissionAggregateOrderBy: {
    avg: 'FormSubmissionAvgOrderBy',
    count: 'OrderBy',
    max: 'FormSubmissionMaxOrderBy',
    min: 'FormSubmissionMinOrderBy',
    stddev: 'FormSubmissionStddevOrderBy',
    stddevPop: 'FormSubmissionStddevPopOrderBy',
    stddevSamp: 'FormSubmissionStddevSampOrderBy',
    sum: 'FormSubmissionSumOrderBy',
    varPop: 'FormSubmissionVarPopOrderBy',
    varSamp: 'FormSubmissionVarSampOrderBy',
    variance: 'FormSubmissionVarianceOrderBy',
  },
  FormSubmissionAppendInput: {
    submission: 'jsonb',
  },
  FormSubmissionArrRelInsertInput: {
    data: 'FormSubmissionInsertInput',
    onConflict: 'FormSubmissionOnConflict',
  },
  FormSubmissionAvgOrderBy: {
    createdById: 'OrderBy',
    formEditId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionBoolExp: {
    _and: 'FormSubmissionBoolExp',
    _not: 'FormSubmissionBoolExp',
    _or: 'FormSubmissionBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    event: 'EventBoolExp',
    eventJoins: 'EventJoinBoolExp',
    eventJoinsAggregate: 'EventJoinAggregateBoolExp',
    formEdit: 'FormEditBoolExp',
    formEditId: 'BigintComparisonExp',
    formSubmissionEdits: 'FormSubmissionEditBoolExp',
    formSubmissionEditsAggregate: 'FormSubmissionEditAggregateBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    submission: 'JsonbComparisonExp',
    teamJoins: 'TeamJoinBoolExp',
    teamJoinsAggregate: 'TeamJoinAggregateBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  FormSubmissionConstraint: 'enum' as const,
  FormSubmissionDeleteAtPathInput: {},
  FormSubmissionDeleteElemInput: {},
  FormSubmissionDeleteKeyInput: {},
  FormSubmissionEdit: {
    addedDiff: {},
    newVersion: {},
  },
  FormSubmissionEditAggregateBoolExp: {
    count: 'formSubmissionEditAggregateBoolExpCount',
  },
  formSubmissionEditAggregateBoolExpCount: {
    arguments: 'FormSubmissionEditSelectColumn',
    filter: 'FormSubmissionEditBoolExp',
    predicate: 'IntComparisonExp',
  },
  FormSubmissionEditAggregateFields: {
    count: {
      columns: 'FormSubmissionEditSelectColumn',
    },
  },
  FormSubmissionEditAggregateOrderBy: {
    avg: 'FormSubmissionEditAvgOrderBy',
    count: 'OrderBy',
    max: 'FormSubmissionEditMaxOrderBy',
    min: 'FormSubmissionEditMinOrderBy',
    stddev: 'FormSubmissionEditStddevOrderBy',
    stddevPop: 'FormSubmissionEditStddevPopOrderBy',
    stddevSamp: 'FormSubmissionEditStddevSampOrderBy',
    sum: 'FormSubmissionEditSumOrderBy',
    varPop: 'FormSubmissionEditVarPopOrderBy',
    varSamp: 'FormSubmissionEditVarSampOrderBy',
    variance: 'FormSubmissionEditVarianceOrderBy',
  },
  FormSubmissionEditAppendInput: {
    addedDiff: 'jsonb',
    newVersion: 'jsonb',
  },
  FormSubmissionEditArrRelInsertInput: {
    data: 'FormSubmissionEditInsertInput',
    onConflict: 'FormSubmissionEditOnConflict',
  },
  FormSubmissionEditAvgOrderBy: {
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionEditBoolExp: {
    _and: 'FormSubmissionEditBoolExp',
    _not: 'FormSubmissionEditBoolExp',
    _or: 'FormSubmissionEditBoolExp',
    addedDiff: 'JsonbComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    formSubmission: 'FormSubmissionBoolExp',
    formSubmissionId: 'BigintComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    newVersion: 'JsonbComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  FormSubmissionEditConstraint: 'enum' as const,
  FormSubmissionEditDeleteAtPathInput: {},
  FormSubmissionEditDeleteElemInput: {},
  FormSubmissionEditDeleteKeyInput: {},
  FormSubmissionEditIncInput: {
    createdById: 'bigint',
    formSubmissionId: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FormSubmissionEditInsertInput: {
    addedDiff: 'jsonb',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formSubmission: 'FormSubmissionObjRelInsertInput',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    newVersion: 'jsonb',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  FormSubmissionEditMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    formSubmissionId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionEditMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    formSubmissionId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionEditOnConflict: {
    constraint: 'FormSubmissionEditConstraint',
    updateColumns: 'FormSubmissionEditUpdateColumn',
    where: 'FormSubmissionEditBoolExp',
  },
  FormSubmissionEditOrderBy: {
    addedDiff: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    formSubmission: 'FormSubmissionOrderBy',
    formSubmissionId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    newVersion: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionEditPkColumnsInput: {
    id: 'bigint',
  },
  FormSubmissionEditPrependInput: {
    addedDiff: 'jsonb',
    newVersion: 'jsonb',
  },
  FormSubmissionEditSelectColumn: 'enum' as const,
  FormSubmissionEditSetInput: {
    addedDiff: 'jsonb',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    newVersion: 'jsonb',
    tenantId: 'bigint',
  },
  FormSubmissionEditStddevOrderBy: {
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionEditStddevPopOrderBy: {
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionEditStddevSampOrderBy: {
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionEditStreamCursorInput: {
    initialValue: 'FormSubmissionEditStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  FormSubmissionEditStreamCursorValueInput: {
    addedDiff: 'jsonb',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    newVersion: 'jsonb',
    tenantId: 'bigint',
  },
  FormSubmissionEditSumOrderBy: {
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionEditUpdateColumn: 'enum' as const,
  FormSubmissionEditUpdates: {
    _append: 'FormSubmissionEditAppendInput',
    _deleteAtPath: 'FormSubmissionEditDeleteAtPathInput',
    _deleteElem: 'FormSubmissionEditDeleteElemInput',
    _deleteKey: 'FormSubmissionEditDeleteKeyInput',
    _inc: 'FormSubmissionEditIncInput',
    _prepend: 'FormSubmissionEditPrependInput',
    _set: 'FormSubmissionEditSetInput',
    where: 'FormSubmissionEditBoolExp',
  },
  FormSubmissionEditVarianceOrderBy: {
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionEditVarPopOrderBy: {
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionEditVarSampOrderBy: {
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionIncInput: {
    createdById: 'bigint',
    formEditId: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FormSubmissionInsertInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    event: 'EventObjRelInsertInput',
    eventJoins: 'EventJoinArrRelInsertInput',
    formEdit: 'FormEditObjRelInsertInput',
    formEditId: 'bigint',
    formSubmissionEdits: 'FormSubmissionEditArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    submission: 'jsonb',
    teamJoins: 'TeamJoinArrRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  FormSubmissionMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    formEditId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    formEditId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionObjRelInsertInput: {
    data: 'FormSubmissionInsertInput',
    onConflict: 'FormSubmissionOnConflict',
  },
  FormSubmissionOnConflict: {
    constraint: 'FormSubmissionConstraint',
    updateColumns: 'FormSubmissionUpdateColumn',
    where: 'FormSubmissionBoolExp',
  },
  FormSubmissionOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    event: 'EventOrderBy',
    eventJoinsAggregate: 'EventJoinAggregateOrderBy',
    formEdit: 'FormEditOrderBy',
    formEditId: 'OrderBy',
    formSubmissionEditsAggregate: 'FormSubmissionEditAggregateOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    submission: 'OrderBy',
    teamJoinsAggregate: 'TeamJoinAggregateOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionPkColumnsInput: {
    id: 'bigint',
  },
  FormSubmissionPrependInput: {
    submission: 'jsonb',
  },
  FormSubmissionSelectColumn: 'enum' as const,
  FormSubmissionSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formEditId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    submission: 'jsonb',
    tenantId: 'bigint',
  },
  FormSubmissionStddevOrderBy: {
    createdById: 'OrderBy',
    formEditId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionStddevPopOrderBy: {
    createdById: 'OrderBy',
    formEditId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionStddevSampOrderBy: {
    createdById: 'OrderBy',
    formEditId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionStreamCursorInput: {
    initialValue: 'FormSubmissionStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  FormSubmissionStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formEditId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    submission: 'jsonb',
    tenantId: 'bigint',
  },
  FormSubmissionSumOrderBy: {
    createdById: 'OrderBy',
    formEditId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionUpdateColumn: 'enum' as const,
  FormSubmissionUpdates: {
    _append: 'FormSubmissionAppendInput',
    _deleteAtPath: 'FormSubmissionDeleteAtPathInput',
    _deleteElem: 'FormSubmissionDeleteElemInput',
    _deleteKey: 'FormSubmissionDeleteKeyInput',
    _inc: 'FormSubmissionIncInput',
    _prepend: 'FormSubmissionPrependInput',
    _set: 'FormSubmissionSetInput',
    where: 'FormSubmissionBoolExp',
  },
  FormSubmissionVarianceOrderBy: {
    createdById: 'OrderBy',
    formEditId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionVarPopOrderBy: {
    createdById: 'OrderBy',
    formEditId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSubmissionVarSampOrderBy: {
    createdById: 'OrderBy',
    formEditId: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormUpdateColumn: 'enum' as const,
  FormUpdates: {
    _append: 'FormAppendInput',
    _deleteAtPath: 'FormDeleteAtPathInput',
    _deleteElem: 'FormDeleteElemInput',
    _deleteKey: 'FormDeleteKeyInput',
    _inc: 'FormIncInput',
    _prepend: 'FormPrependInput',
    _set: 'FormSetInput',
    where: 'FormBoolExp',
  },
  FormVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  FormVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  Individual: {
    actions: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    actionsAggregate: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    actorAddresses: {
      distinctOn: 'ActorAddressSelectColumn',
      orderBy: 'ActorAddressOrderBy',
      where: 'ActorAddressBoolExp',
    },
    actorAddressesAggregate: {
      distinctOn: 'ActorAddressSelectColumn',
      orderBy: 'ActorAddressOrderBy',
      where: 'ActorAddressBoolExp',
    },
    actorBankInfos: {
      distinctOn: 'ActorBankInfoSelectColumn',
      orderBy: 'ActorBankInfoOrderBy',
      where: 'ActorBankInfoBoolExp',
    },
    actorBankInfosAggregate: {
      distinctOn: 'ActorBankInfoSelectColumn',
      orderBy: 'ActorBankInfoOrderBy',
      where: 'ActorBankInfoBoolExp',
    },
    actorFinances: {
      distinctOn: 'ActorFinanceSelectColumn',
      orderBy: 'ActorFinanceOrderBy',
      where: 'ActorFinanceBoolExp',
    },
    actorFinancesAggregate: {
      distinctOn: 'ActorFinanceSelectColumn',
      orderBy: 'ActorFinanceOrderBy',
      where: 'ActorFinanceBoolExp',
    },
    actorImages: {
      distinctOn: 'ActorImageSelectColumn',
      orderBy: 'ActorImageOrderBy',
      where: 'ActorImageBoolExp',
    },
    actorImagesAggregate: {
      distinctOn: 'ActorImageSelectColumn',
      orderBy: 'ActorImageOrderBy',
      where: 'ActorImageBoolExp',
    },
    actors: {
      distinctOn: 'ActorSelectColumn',
      orderBy: 'ActorOrderBy',
      where: 'ActorBoolExp',
    },
    actorsAggregate: {
      distinctOn: 'ActorSelectColumn',
      orderBy: 'ActorOrderBy',
      where: 'ActorBoolExp',
    },
    botInfos: {
      distinctOn: 'BotInfoSelectColumn',
      orderBy: 'BotInfoOrderBy',
      where: 'BotInfoBoolExp',
    },
    botInfosAggregate: {
      distinctOn: 'BotInfoSelectColumn',
      orderBy: 'BotInfoOrderBy',
      where: 'BotInfoBoolExp',
    },
    canteenFoods: {
      distinctOn: 'CanteenFoodSelectColumn',
      orderBy: 'CanteenFoodOrderBy',
      where: 'CanteenFoodBoolExp',
    },
    canteenFoodsAggregate: {
      distinctOn: 'CanteenFoodSelectColumn',
      orderBy: 'CanteenFoodOrderBy',
      where: 'CanteenFoodBoolExp',
    },
    canteenMenus: {
      distinctOn: 'CanteenMenuSelectColumn',
      orderBy: 'CanteenMenuOrderBy',
      where: 'CanteenMenuBoolExp',
    },
    canteenMenusAggregate: {
      distinctOn: 'CanteenMenuSelectColumn',
      orderBy: 'CanteenMenuOrderBy',
      where: 'CanteenMenuBoolExp',
    },
    canteens: {
      distinctOn: 'CanteenSelectColumn',
      orderBy: 'CanteenOrderBy',
      where: 'CanteenBoolExp',
    },
    canteensAggregate: {
      distinctOn: 'CanteenSelectColumn',
      orderBy: 'CanteenOrderBy',
      where: 'CanteenBoolExp',
    },
    changeRoles: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    changeRolesAggregate: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    classGroupTeachers: {
      distinctOn: 'ClassGroupTeacherSelectColumn',
      orderBy: 'ClassGroupTeacherOrderBy',
      where: 'ClassGroupTeacherBoolExp',
    },
    classGroupTeachersAggregate: {
      distinctOn: 'ClassGroupTeacherSelectColumn',
      orderBy: 'ClassGroupTeacherOrderBy',
      where: 'ClassGroupTeacherBoolExp',
    },
    classGroups: {
      distinctOn: 'ClassGroupSelectColumn',
      orderBy: 'ClassGroupOrderBy',
      where: 'ClassGroupBoolExp',
    },
    classGroupsAggregate: {
      distinctOn: 'ClassGroupSelectColumn',
      orderBy: 'ClassGroupOrderBy',
      where: 'ClassGroupBoolExp',
    },
    cohorts: {
      distinctOn: 'CohortSelectColumn',
      orderBy: 'CohortOrderBy',
      where: 'CohortBoolExp',
    },
    cohortsAggregate: {
      distinctOn: 'CohortSelectColumn',
      orderBy: 'CohortOrderBy',
      where: 'CohortBoolExp',
    },
    contentEdits: {
      distinctOn: 'ContentEditSelectColumn',
      orderBy: 'ContentEditOrderBy',
      where: 'ContentEditBoolExp',
    },
    contentEditsAggregate: {
      distinctOn: 'ContentEditSelectColumn',
      orderBy: 'ContentEditOrderBy',
      where: 'ContentEditBoolExp',
    },
    contentMasterContributors: {
      distinctOn: 'ContentMasterContributorsSelectColumn',
      orderBy: 'ContentMasterContributorsOrderBy',
      where: 'ContentMasterContributorsBoolExp',
    },
    contentMasterContributorsAggregate: {
      distinctOn: 'ContentMasterContributorsSelectColumn',
      orderBy: 'ContentMasterContributorsOrderBy',
      where: 'ContentMasterContributorsBoolExp',
    },
    contentMasters: {
      distinctOn: 'ContentMasterSelectColumn',
      orderBy: 'ContentMasterOrderBy',
      where: 'ContentMasterBoolExp',
    },
    contentMastersAggregate: {
      distinctOn: 'ContentMasterSelectColumn',
      orderBy: 'ContentMasterOrderBy',
      where: 'ContentMasterBoolExp',
    },
    contents: {
      distinctOn: 'ContentSelectColumn',
      orderBy: 'ContentOrderBy',
      where: 'ContentBoolExp',
    },
    contentsAggregate: {
      distinctOn: 'ContentSelectColumn',
      orderBy: 'ContentOrderBy',
      where: 'ContentBoolExp',
    },
    documentEdits: {
      distinctOn: 'DocumentEditSelectColumn',
      orderBy: 'DocumentEditOrderBy',
      where: 'DocumentEditBoolExp',
    },
    documentEditsAggregate: {
      distinctOn: 'DocumentEditSelectColumn',
      orderBy: 'DocumentEditOrderBy',
      where: 'DocumentEditBoolExp',
    },
    documents: {
      distinctOn: 'DocumentSelectColumn',
      orderBy: 'DocumentOrderBy',
      where: 'DocumentBoolExp',
    },
    documentsAggregate: {
      distinctOn: 'DocumentSelectColumn',
      orderBy: 'DocumentOrderBy',
      where: 'DocumentBoolExp',
    },
    eventApprovalStepNotifiees: {
      distinctOn: 'EventApprovalStepNotifieesSelectColumn',
      orderBy: 'EventApprovalStepNotifieesOrderBy',
      where: 'EventApprovalStepNotifieesBoolExp',
    },
    eventApprovalStepNotifieesAggregate: {
      distinctOn: 'EventApprovalStepNotifieesSelectColumn',
      orderBy: 'EventApprovalStepNotifieesOrderBy',
      where: 'EventApprovalStepNotifieesBoolExp',
    },
    eventApprovalStepValidators: {
      distinctOn: 'EventApprovalStepValidatorsSelectColumn',
      orderBy: 'EventApprovalStepValidatorsOrderBy',
      where: 'EventApprovalStepValidatorsBoolExp',
    },
    eventApprovalStepValidatorsAggregate: {
      distinctOn: 'EventApprovalStepValidatorsSelectColumn',
      orderBy: 'EventApprovalStepValidatorsOrderBy',
      where: 'EventApprovalStepValidatorsBoolExp',
    },
    eventApprovalSteps: {
      distinctOn: 'EventApprovalStepSelectColumn',
      orderBy: 'EventApprovalStepOrderBy',
      where: 'EventApprovalStepBoolExp',
    },
    eventApprovalStepsAggregate: {
      distinctOn: 'EventApprovalStepSelectColumn',
      orderBy: 'EventApprovalStepOrderBy',
      where: 'EventApprovalStepBoolExp',
    },
    eventApprovals: {
      distinctOn: 'EventApprovalSelectColumn',
      orderBy: 'EventApprovalOrderBy',
      where: 'EventApprovalBoolExp',
    },
    eventApprovalsAggregate: {
      distinctOn: 'EventApprovalSelectColumn',
      orderBy: 'EventApprovalOrderBy',
      where: 'EventApprovalBoolExp',
    },
    eventChangeRoles: {
      distinctOn: 'EventChangeRoleSelectColumn',
      orderBy: 'EventChangeRoleOrderBy',
      where: 'EventChangeRoleBoolExp',
    },
    eventChangeRolesAggregate: {
      distinctOn: 'EventChangeRoleSelectColumn',
      orderBy: 'EventChangeRoleOrderBy',
      where: 'EventChangeRoleBoolExp',
    },
    eventJoins: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventJoinsAggregate: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventRoles: {
      distinctOn: 'EventRoleSelectColumn',
      orderBy: 'EventRoleOrderBy',
      where: 'EventRoleBoolExp',
    },
    eventRolesAggregate: {
      distinctOn: 'EventRoleSelectColumn',
      orderBy: 'EventRoleOrderBy',
      where: 'EventRoleBoolExp',
    },
    events: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    eventsAggregate: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    expenses: {
      distinctOn: 'ExpenseSelectColumn',
      orderBy: 'ExpenseOrderBy',
      where: 'ExpenseBoolExp',
    },
    expensesAggregate: {
      distinctOn: 'ExpenseSelectColumn',
      orderBy: 'ExpenseOrderBy',
      where: 'ExpenseBoolExp',
    },
    favorites: {
      distinctOn: 'FavoriteSelectColumn',
      orderBy: 'FavoriteOrderBy',
      where: 'FavoriteBoolExp',
    },
    favoritesAggregate: {
      distinctOn: 'FavoriteSelectColumn',
      orderBy: 'FavoriteOrderBy',
      where: 'FavoriteBoolExp',
    },
    formEdits: {
      distinctOn: 'FormEditSelectColumn',
      orderBy: 'FormEditOrderBy',
      where: 'FormEditBoolExp',
    },
    formEditsAggregate: {
      distinctOn: 'FormEditSelectColumn',
      orderBy: 'FormEditOrderBy',
      where: 'FormEditBoolExp',
    },
    formSubmissionEdits: {
      distinctOn: 'FormSubmissionEditSelectColumn',
      orderBy: 'FormSubmissionEditOrderBy',
      where: 'FormSubmissionEditBoolExp',
    },
    formSubmissionEditsAggregate: {
      distinctOn: 'FormSubmissionEditSelectColumn',
      orderBy: 'FormSubmissionEditOrderBy',
      where: 'FormSubmissionEditBoolExp',
    },
    formSubmissions: {
      distinctOn: 'FormSubmissionSelectColumn',
      orderBy: 'FormSubmissionOrderBy',
      where: 'FormSubmissionBoolExp',
    },
    formSubmissionsAggregate: {
      distinctOn: 'FormSubmissionSelectColumn',
      orderBy: 'FormSubmissionOrderBy',
      where: 'FormSubmissionBoolExp',
    },
    forms: {
      distinctOn: 'FormSelectColumn',
      orderBy: 'FormOrderBy',
      where: 'FormBoolExp',
    },
    formsAggregate: {
      distinctOn: 'FormSelectColumn',
      orderBy: 'FormOrderBy',
      where: 'FormBoolExp',
    },
    individuals: {
      distinctOn: 'IndividualSelectColumn',
      orderBy: 'IndividualOrderBy',
      where: 'IndividualBoolExp',
    },
    individualsAggregate: {
      distinctOn: 'IndividualSelectColumn',
      orderBy: 'IndividualOrderBy',
      where: 'IndividualBoolExp',
    },
    issues: {
      distinctOn: 'IssueSelectColumn',
      orderBy: 'IssueOrderBy',
      where: 'IssueBoolExp',
    },
    issuesAggregate: {
      distinctOn: 'IssueSelectColumn',
      orderBy: 'IssueOrderBy',
      where: 'IssueBoolExp',
    },
    poles: {
      distinctOn: 'PoleSelectColumn',
      orderBy: 'PoleOrderBy',
      where: 'PoleBoolExp',
    },
    polesAggregate: {
      distinctOn: 'PoleSelectColumn',
      orderBy: 'PoleOrderBy',
      where: 'PoleBoolExp',
    },
    projectRoles: {
      distinctOn: 'ProjectRoleSelectColumn',
      orderBy: 'ProjectRoleOrderBy',
      where: 'ProjectRoleBoolExp',
    },
    projectRolesAggregate: {
      distinctOn: 'ProjectRoleSelectColumn',
      orderBy: 'ProjectRoleOrderBy',
      where: 'ProjectRoleBoolExp',
    },
    projects: {
      distinctOn: 'ProjectSelectColumn',
      orderBy: 'ProjectOrderBy',
      where: 'ProjectBoolExp',
    },
    projectsAggregate: {
      distinctOn: 'ProjectSelectColumn',
      orderBy: 'ProjectOrderBy',
      where: 'ProjectBoolExp',
    },
    reactions: {
      distinctOn: 'ReactionSelectColumn',
      orderBy: 'ReactionOrderBy',
      where: 'ReactionBoolExp',
    },
    reactionsAggregate: {
      distinctOn: 'ReactionSelectColumn',
      orderBy: 'ReactionOrderBy',
      where: 'ReactionBoolExp',
    },
    reports: {
      distinctOn: 'ReportSelectColumn',
      orderBy: 'ReportOrderBy',
      where: 'ReportBoolExp',
    },
    reportsAggregate: {
      distinctOn: 'ReportSelectColumn',
      orderBy: 'ReportOrderBy',
      where: 'ReportBoolExp',
    },
    roles: {
      distinctOn: 'RoleSelectColumn',
      orderBy: 'RoleOrderBy',
      where: 'RoleBoolExp',
    },
    rolesAggregate: {
      distinctOn: 'RoleSelectColumn',
      orderBy: 'RoleOrderBy',
      where: 'RoleBoolExp',
    },
    sessions: {
      distinctOn: 'SessionSelectColumn',
      orderBy: 'SessionOrderBy',
      where: 'SessionBoolExp',
    },
    sessionsAggregate: {
      distinctOn: 'SessionSelectColumn',
      orderBy: 'SessionOrderBy',
      where: 'SessionBoolExp',
    },
    shortcuts: {
      distinctOn: 'ShortcutSelectColumn',
      orderBy: 'ShortcutOrderBy',
      where: 'ShortcutBoolExp',
    },
    shortcutsAggregate: {
      distinctOn: 'ShortcutSelectColumn',
      orderBy: 'ShortcutOrderBy',
      where: 'ShortcutBoolExp',
    },
    socials: {
      distinctOn: 'SocialSelectColumn',
      orderBy: 'SocialOrderBy',
      where: 'SocialBoolExp',
    },
    socialsAggregate: {
      distinctOn: 'SocialSelectColumn',
      orderBy: 'SocialOrderBy',
      where: 'SocialBoolExp',
    },
    subjects: {
      distinctOn: 'SubjectSelectColumn',
      orderBy: 'SubjectOrderBy',
      where: 'SubjectBoolExp',
    },
    subjectsAggregate: {
      distinctOn: 'SubjectSelectColumn',
      orderBy: 'SubjectOrderBy',
      where: 'SubjectBoolExp',
    },
    tags: {
      distinctOn: 'TagSelectColumn',
      orderBy: 'TagOrderBy',
      where: 'TagBoolExp',
    },
    tagsAggregate: {
      distinctOn: 'TagSelectColumn',
      orderBy: 'TagOrderBy',
      where: 'TagBoolExp',
    },
    teamFinances: {
      distinctOn: 'TeamFinanceSelectColumn',
      orderBy: 'TeamFinanceOrderBy',
      where: 'TeamFinanceBoolExp',
    },
    teamFinancesAggregate: {
      distinctOn: 'TeamFinanceSelectColumn',
      orderBy: 'TeamFinanceOrderBy',
      where: 'TeamFinanceBoolExp',
    },
    teamJoins: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamJoinsAggregate: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamMembers: {
      distinctOn: 'TeamMemberSelectColumn',
      orderBy: 'TeamMemberOrderBy',
      where: 'TeamMemberBoolExp',
    },
    teamMembersAggregate: {
      distinctOn: 'TeamMemberSelectColumn',
      orderBy: 'TeamMemberOrderBy',
      where: 'TeamMemberBoolExp',
    },
    teamMetrics: {
      distinctOn: 'TeamMetricSelectColumn',
      orderBy: 'TeamMetricOrderBy',
      where: 'TeamMetricBoolExp',
    },
    teamMetricsAggregate: {
      distinctOn: 'TeamMetricSelectColumn',
      orderBy: 'TeamMetricOrderBy',
      where: 'TeamMetricBoolExp',
    },
    teams: {
      distinctOn: 'TeamSelectColumn',
      orderBy: 'TeamOrderBy',
      where: 'TeamBoolExp',
    },
    teamsAggregate: {
      distinctOn: 'TeamSelectColumn',
      orderBy: 'TeamOrderBy',
      where: 'TeamBoolExp',
    },
    tenants: {
      distinctOn: 'TenantSelectColumn',
      orderBy: 'TenantOrderBy',
      where: 'TenantBoolExp',
    },
    tenantsAggregate: {
      distinctOn: 'TenantSelectColumn',
      orderBy: 'TenantOrderBy',
      where: 'TenantBoolExp',
    },
    uploads: {
      distinctOn: 'UploadSelectColumn',
      orderBy: 'UploadOrderBy',
      where: 'UploadBoolExp',
    },
    uploadsAggregate: {
      distinctOn: 'UploadSelectColumn',
      orderBy: 'UploadOrderBy',
      where: 'UploadBoolExp',
    },
    userInfos: {
      distinctOn: 'UserInfoSelectColumn',
      orderBy: 'UserInfoOrderBy',
      where: 'UserInfoBoolExp',
    },
    userInfosAggregate: {
      distinctOn: 'UserInfoSelectColumn',
      orderBy: 'UserInfoOrderBy',
      where: 'UserInfoBoolExp',
    },
    validations: {
      distinctOn: 'ValidationSelectColumn',
      orderBy: 'ValidationOrderBy',
      where: 'ValidationBoolExp',
    },
    validationsAggregate: {
      distinctOn: 'ValidationSelectColumn',
      orderBy: 'ValidationOrderBy',
      where: 'ValidationBoolExp',
    },
    votes: {
      distinctOn: 'VoteSelectColumn',
      orderBy: 'VoteOrderBy',
      where: 'VoteBoolExp',
    },
    votesAggregate: {
      distinctOn: 'VoteSelectColumn',
      orderBy: 'VoteOrderBy',
      where: 'VoteBoolExp',
    },
  },
  IndividualAggregateBoolExp: {
    count: 'individualAggregateBoolExpCount',
  },
  individualAggregateBoolExpCount: {
    arguments: 'IndividualSelectColumn',
    filter: 'IndividualBoolExp',
    predicate: 'IntComparisonExp',
  },
  IndividualAggregateFields: {
    count: {
      columns: 'IndividualSelectColumn',
    },
  },
  IndividualAggregateOrderBy: {
    avg: 'IndividualAvgOrderBy',
    count: 'OrderBy',
    max: 'IndividualMaxOrderBy',
    min: 'IndividualMinOrderBy',
    stddev: 'IndividualStddevOrderBy',
    stddevPop: 'IndividualStddevPopOrderBy',
    stddevSamp: 'IndividualStddevSampOrderBy',
    sum: 'IndividualSumOrderBy',
    varPop: 'IndividualVarPopOrderBy',
    varSamp: 'IndividualVarSampOrderBy',
    variance: 'IndividualVarianceOrderBy',
  },
  IndividualArrRelInsertInput: {
    data: 'IndividualInsertInput',
    onConflict: 'IndividualOnConflict',
  },
  IndividualAvgOrderBy: {
    botId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  IndividualBoolExp: {
    _and: 'IndividualBoolExp',
    _not: 'IndividualBoolExp',
    _or: 'IndividualBoolExp',
    actions: 'ActionBoolExp',
    actionsAggregate: 'ActionAggregateBoolExp',
    actor: 'ActorBoolExp',
    actorAddresses: 'ActorAddressBoolExp',
    actorAddressesAggregate: 'ActorAddressAggregateBoolExp',
    actorBankInfos: 'ActorBankInfoBoolExp',
    actorBankInfosAggregate: 'ActorBankInfoAggregateBoolExp',
    actorFinances: 'ActorFinanceBoolExp',
    actorFinancesAggregate: 'ActorFinanceAggregateBoolExp',
    actorImages: 'ActorImageBoolExp',
    actorImagesAggregate: 'ActorImageAggregateBoolExp',
    actors: 'ActorBoolExp',
    actorsAggregate: 'ActorAggregateBoolExp',
    botId: 'BigintComparisonExp',
    botInfo: 'BotInfoBoolExp',
    botInfos: 'BotInfoBoolExp',
    botInfosAggregate: 'BotInfoAggregateBoolExp',
    canteenFoods: 'CanteenFoodBoolExp',
    canteenFoodsAggregate: 'CanteenFoodAggregateBoolExp',
    canteenMenus: 'CanteenMenuBoolExp',
    canteenMenusAggregate: 'CanteenMenuAggregateBoolExp',
    canteens: 'CanteenBoolExp',
    canteensAggregate: 'CanteenAggregateBoolExp',
    changeRoles: 'ChangeRoleBoolExp',
    changeRolesAggregate: 'ChangeRoleAggregateBoolExp',
    classGroupTeachers: 'ClassGroupTeacherBoolExp',
    classGroupTeachersAggregate: 'ClassGroupTeacherAggregateBoolExp',
    classGroups: 'ClassGroupBoolExp',
    classGroupsAggregate: 'ClassGroupAggregateBoolExp',
    cohorts: 'CohortBoolExp',
    cohortsAggregate: 'CohortAggregateBoolExp',
    contentEdits: 'ContentEditBoolExp',
    contentEditsAggregate: 'ContentEditAggregateBoolExp',
    contentMasterContributors: 'ContentMasterContributorsBoolExp',
    contentMasterContributorsAggregate: 'ContentMasterContributorsAggregateBoolExp',
    contentMasters: 'ContentMasterBoolExp',
    contentMastersAggregate: 'ContentMasterAggregateBoolExp',
    contents: 'ContentBoolExp',
    contentsAggregate: 'ContentAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    documentEdits: 'DocumentEditBoolExp',
    documentEditsAggregate: 'DocumentEditAggregateBoolExp',
    documents: 'DocumentBoolExp',
    documentsAggregate: 'DocumentAggregateBoolExp',
    eventApprovalStepNotifiees: 'EventApprovalStepNotifieesBoolExp',
    eventApprovalStepNotifieesAggregate: 'EventApprovalStepNotifieesAggregateBoolExp',
    eventApprovalStepValidators: 'EventApprovalStepValidatorsBoolExp',
    eventApprovalStepValidatorsAggregate: 'EventApprovalStepValidatorsAggregateBoolExp',
    eventApprovalSteps: 'EventApprovalStepBoolExp',
    eventApprovalStepsAggregate: 'EventApprovalStepAggregateBoolExp',
    eventApprovals: 'EventApprovalBoolExp',
    eventApprovalsAggregate: 'EventApprovalAggregateBoolExp',
    eventChangeRoles: 'EventChangeRoleBoolExp',
    eventChangeRolesAggregate: 'EventChangeRoleAggregateBoolExp',
    eventJoins: 'EventJoinBoolExp',
    eventJoinsAggregate: 'EventJoinAggregateBoolExp',
    eventRoles: 'EventRoleBoolExp',
    eventRolesAggregate: 'EventRoleAggregateBoolExp',
    events: 'EventBoolExp',
    eventsAggregate: 'EventAggregateBoolExp',
    expenses: 'ExpenseBoolExp',
    expensesAggregate: 'ExpenseAggregateBoolExp',
    favorites: 'FavoriteBoolExp',
    favoritesAggregate: 'FavoriteAggregateBoolExp',
    formEdits: 'FormEditBoolExp',
    formEditsAggregate: 'FormEditAggregateBoolExp',
    formSubmissionEdits: 'FormSubmissionEditBoolExp',
    formSubmissionEditsAggregate: 'FormSubmissionEditAggregateBoolExp',
    formSubmissions: 'FormSubmissionBoolExp',
    formSubmissionsAggregate: 'FormSubmissionAggregateBoolExp',
    forms: 'FormBoolExp',
    formsAggregate: 'FormAggregateBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    individuals: 'IndividualBoolExp',
    individualsAggregate: 'IndividualAggregateBoolExp',
    issues: 'IssueBoolExp',
    issuesAggregate: 'IssueAggregateBoolExp',
    passwordHash: 'StringComparisonExp',
    poles: 'PoleBoolExp',
    polesAggregate: 'PoleAggregateBoolExp',
    projectRoles: 'ProjectRoleBoolExp',
    projectRolesAggregate: 'ProjectRoleAggregateBoolExp',
    projects: 'ProjectBoolExp',
    projectsAggregate: 'ProjectAggregateBoolExp',
    reactions: 'ReactionBoolExp',
    reactionsAggregate: 'ReactionAggregateBoolExp',
    reports: 'ReportBoolExp',
    reportsAggregate: 'ReportAggregateBoolExp',
    roles: 'RoleBoolExp',
    rolesAggregate: 'RoleAggregateBoolExp',
    scopeRole: 'StringComparisonExp',
    sessions: 'SessionBoolExp',
    sessionsAggregate: 'SessionAggregateBoolExp',
    shortcuts: 'ShortcutBoolExp',
    shortcutsAggregate: 'ShortcutAggregateBoolExp',
    socials: 'SocialBoolExp',
    socialsAggregate: 'SocialAggregateBoolExp',
    status: 'StringComparisonExp',
    subjects: 'SubjectBoolExp',
    subjectsAggregate: 'SubjectAggregateBoolExp',
    tags: 'TagBoolExp',
    tagsAggregate: 'TagAggregateBoolExp',
    teamFinances: 'TeamFinanceBoolExp',
    teamFinancesAggregate: 'TeamFinanceAggregateBoolExp',
    teamJoins: 'TeamJoinBoolExp',
    teamJoinsAggregate: 'TeamJoinAggregateBoolExp',
    teamMembers: 'TeamMemberBoolExp',
    teamMembersAggregate: 'TeamMemberAggregateBoolExp',
    teamMetrics: 'TeamMetricBoolExp',
    teamMetricsAggregate: 'TeamMetricAggregateBoolExp',
    teams: 'TeamBoolExp',
    teamsAggregate: 'TeamAggregateBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    tenants: 'TenantBoolExp',
    tenantsAggregate: 'TenantAggregateBoolExp',
    uploads: 'UploadBoolExp',
    uploadsAggregate: 'UploadAggregateBoolExp',
    userId: 'BigintComparisonExp',
    userInfo: 'UserInfoBoolExp',
    userInfos: 'UserInfoBoolExp',
    userInfosAggregate: 'UserInfoAggregateBoolExp',
    validations: 'ValidationBoolExp',
    validationsAggregate: 'ValidationAggregateBoolExp',
    votes: 'VoteBoolExp',
    votesAggregate: 'VoteAggregateBoolExp',
  },
  IndividualConstraint: 'enum' as const,
  IndividualIncInput: {
    botId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  IndividualInsertInput: {
    actions: 'ActionArrRelInsertInput',
    actor: 'ActorObjRelInsertInput',
    actorAddresses: 'ActorAddressArrRelInsertInput',
    actorBankInfos: 'ActorBankInfoArrRelInsertInput',
    actorFinances: 'ActorFinanceArrRelInsertInput',
    actorImages: 'ActorImageArrRelInsertInput',
    actors: 'ActorArrRelInsertInput',
    botId: 'bigint',
    botInfo: 'BotInfoObjRelInsertInput',
    botInfos: 'BotInfoArrRelInsertInput',
    canteenFoods: 'CanteenFoodArrRelInsertInput',
    canteenMenus: 'CanteenMenuArrRelInsertInput',
    canteens: 'CanteenArrRelInsertInput',
    changeRoles: 'ChangeRoleArrRelInsertInput',
    classGroupTeachers: 'ClassGroupTeacherArrRelInsertInput',
    classGroups: 'ClassGroupArrRelInsertInput',
    cohorts: 'CohortArrRelInsertInput',
    contentEdits: 'ContentEditArrRelInsertInput',
    contentMasterContributors: 'ContentMasterContributorsArrRelInsertInput',
    contentMasters: 'ContentMasterArrRelInsertInput',
    contents: 'ContentArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    documentEdits: 'DocumentEditArrRelInsertInput',
    documents: 'DocumentArrRelInsertInput',
    eventApprovalStepNotifiees: 'EventApprovalStepNotifieesArrRelInsertInput',
    eventApprovalStepValidators: 'EventApprovalStepValidatorsArrRelInsertInput',
    eventApprovalSteps: 'EventApprovalStepArrRelInsertInput',
    eventApprovals: 'EventApprovalArrRelInsertInput',
    eventChangeRoles: 'EventChangeRoleArrRelInsertInput',
    eventJoins: 'EventJoinArrRelInsertInput',
    eventRoles: 'EventRoleArrRelInsertInput',
    events: 'EventArrRelInsertInput',
    expenses: 'ExpenseArrRelInsertInput',
    favorites: 'FavoriteArrRelInsertInput',
    formEdits: 'FormEditArrRelInsertInput',
    formSubmissionEdits: 'FormSubmissionEditArrRelInsertInput',
    formSubmissions: 'FormSubmissionArrRelInsertInput',
    forms: 'FormArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    individuals: 'IndividualArrRelInsertInput',
    issues: 'IssueArrRelInsertInput',
    poles: 'PoleArrRelInsertInput',
    projectRoles: 'ProjectRoleArrRelInsertInput',
    projects: 'ProjectArrRelInsertInput',
    reactions: 'ReactionArrRelInsertInput',
    reports: 'ReportArrRelInsertInput',
    roles: 'RoleArrRelInsertInput',
    sessions: 'SessionArrRelInsertInput',
    shortcuts: 'ShortcutArrRelInsertInput',
    socials: 'SocialArrRelInsertInput',
    subjects: 'SubjectArrRelInsertInput',
    tags: 'TagArrRelInsertInput',
    teamFinances: 'TeamFinanceArrRelInsertInput',
    teamJoins: 'TeamJoinArrRelInsertInput',
    teamMembers: 'TeamMemberArrRelInsertInput',
    teamMetrics: 'TeamMetricArrRelInsertInput',
    teams: 'TeamArrRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    tenants: 'TenantArrRelInsertInput',
    uploads: 'UploadArrRelInsertInput',
    userId: 'bigint',
    userInfo: 'UserInfoObjRelInsertInput',
    userInfos: 'UserInfoArrRelInsertInput',
    validations: 'ValidationArrRelInsertInput',
    votes: 'VoteArrRelInsertInput',
  },
  IndividualMaxOrderBy: {
    botId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    passwordHash: 'OrderBy',
    scopeRole: 'OrderBy',
    status: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  IndividualMinOrderBy: {
    botId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    passwordHash: 'OrderBy',
    scopeRole: 'OrderBy',
    status: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  IndividualObjRelInsertInput: {
    data: 'IndividualInsertInput',
    onConflict: 'IndividualOnConflict',
  },
  IndividualOnConflict: {
    constraint: 'IndividualConstraint',
    updateColumns: 'IndividualUpdateColumn',
    where: 'IndividualBoolExp',
  },
  IndividualOrderBy: {
    actionsAggregate: 'ActionAggregateOrderBy',
    actor: 'ActorOrderBy',
    actorAddressesAggregate: 'ActorAddressAggregateOrderBy',
    actorBankInfosAggregate: 'ActorBankInfoAggregateOrderBy',
    actorFinancesAggregate: 'ActorFinanceAggregateOrderBy',
    actorImagesAggregate: 'ActorImageAggregateOrderBy',
    actorsAggregate: 'ActorAggregateOrderBy',
    botId: 'OrderBy',
    botInfo: 'BotInfoOrderBy',
    botInfosAggregate: 'BotInfoAggregateOrderBy',
    canteenFoodsAggregate: 'CanteenFoodAggregateOrderBy',
    canteenMenusAggregate: 'CanteenMenuAggregateOrderBy',
    canteensAggregate: 'CanteenAggregateOrderBy',
    changeRolesAggregate: 'ChangeRoleAggregateOrderBy',
    classGroupTeachersAggregate: 'ClassGroupTeacherAggregateOrderBy',
    classGroupsAggregate: 'ClassGroupAggregateOrderBy',
    cohortsAggregate: 'CohortAggregateOrderBy',
    contentEditsAggregate: 'ContentEditAggregateOrderBy',
    contentMasterContributorsAggregate: 'ContentMasterContributorsAggregateOrderBy',
    contentMastersAggregate: 'ContentMasterAggregateOrderBy',
    contentsAggregate: 'ContentAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    documentEditsAggregate: 'DocumentEditAggregateOrderBy',
    documentsAggregate: 'DocumentAggregateOrderBy',
    eventApprovalStepNotifieesAggregate: 'EventApprovalStepNotifieesAggregateOrderBy',
    eventApprovalStepValidatorsAggregate: 'EventApprovalStepValidatorsAggregateOrderBy',
    eventApprovalStepsAggregate: 'EventApprovalStepAggregateOrderBy',
    eventApprovalsAggregate: 'EventApprovalAggregateOrderBy',
    eventChangeRolesAggregate: 'EventChangeRoleAggregateOrderBy',
    eventJoinsAggregate: 'EventJoinAggregateOrderBy',
    eventRolesAggregate: 'EventRoleAggregateOrderBy',
    eventsAggregate: 'EventAggregateOrderBy',
    expensesAggregate: 'ExpenseAggregateOrderBy',
    favoritesAggregate: 'FavoriteAggregateOrderBy',
    formEditsAggregate: 'FormEditAggregateOrderBy',
    formSubmissionEditsAggregate: 'FormSubmissionEditAggregateOrderBy',
    formSubmissionsAggregate: 'FormSubmissionAggregateOrderBy',
    formsAggregate: 'FormAggregateOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    individualsAggregate: 'IndividualAggregateOrderBy',
    issuesAggregate: 'IssueAggregateOrderBy',
    passwordHash: 'OrderBy',
    polesAggregate: 'PoleAggregateOrderBy',
    projectRolesAggregate: 'ProjectRoleAggregateOrderBy',
    projectsAggregate: 'ProjectAggregateOrderBy',
    reactionsAggregate: 'ReactionAggregateOrderBy',
    reportsAggregate: 'ReportAggregateOrderBy',
    rolesAggregate: 'RoleAggregateOrderBy',
    scopeRole: 'OrderBy',
    sessionsAggregate: 'SessionAggregateOrderBy',
    shortcutsAggregate: 'ShortcutAggregateOrderBy',
    socialsAggregate: 'SocialAggregateOrderBy',
    status: 'OrderBy',
    subjectsAggregate: 'SubjectAggregateOrderBy',
    tagsAggregate: 'TagAggregateOrderBy',
    teamFinancesAggregate: 'TeamFinanceAggregateOrderBy',
    teamJoinsAggregate: 'TeamJoinAggregateOrderBy',
    teamMembersAggregate: 'TeamMemberAggregateOrderBy',
    teamMetricsAggregate: 'TeamMetricAggregateOrderBy',
    teamsAggregate: 'TeamAggregateOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    tenantsAggregate: 'TenantAggregateOrderBy',
    uploadsAggregate: 'UploadAggregateOrderBy',
    userId: 'OrderBy',
    userInfo: 'UserInfoOrderBy',
    userInfosAggregate: 'UserInfoAggregateOrderBy',
    validationsAggregate: 'ValidationAggregateOrderBy',
    votesAggregate: 'VoteAggregateOrderBy',
  },
  IndividualPkColumnsInput: {
    id: 'bigint',
  },
  IndividualSelectColumn: 'enum' as const,
  IndividualSetInput: {
    botId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  IndividualStddevOrderBy: {
    botId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  IndividualStddevPopOrderBy: {
    botId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  IndividualStddevSampOrderBy: {
    botId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  IndividualStreamCursorInput: {
    initialValue: 'IndividualStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  IndividualStreamCursorValueInput: {
    botId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  IndividualSumOrderBy: {
    botId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  IndividualUpdateColumn: 'enum' as const,
  IndividualUpdates: {
    _inc: 'IndividualIncInput',
    _set: 'IndividualSetInput',
    where: 'IndividualBoolExp',
  },
  IndividualVarianceOrderBy: {
    botId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  IndividualVarPopOrderBy: {
    botId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  IndividualVarSampOrderBy: {
    botId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  IntComparisonExp: {},
  Issue: {
    expenses: {
      distinctOn: 'ExpenseSelectColumn',
      orderBy: 'ExpenseOrderBy',
      where: 'ExpenseBoolExp',
    },
    expensesAggregate: {
      distinctOn: 'ExpenseSelectColumn',
      orderBy: 'ExpenseOrderBy',
      where: 'ExpenseBoolExp',
    },
  },
  IssueAggregateBoolExp: {
    count: 'issueAggregateBoolExpCount',
  },
  issueAggregateBoolExpCount: {
    arguments: 'IssueSelectColumn',
    filter: 'IssueBoolExp',
    predicate: 'IntComparisonExp',
  },
  IssueAggregateFields: {
    count: {
      columns: 'IssueSelectColumn',
    },
  },
  IssueAggregateOrderBy: {
    avg: 'IssueAvgOrderBy',
    count: 'OrderBy',
    max: 'IssueMaxOrderBy',
    min: 'IssueMinOrderBy',
    stddev: 'IssueStddevOrderBy',
    stddevPop: 'IssueStddevPopOrderBy',
    stddevSamp: 'IssueStddevSampOrderBy',
    sum: 'IssueSumOrderBy',
    varPop: 'IssueVarPopOrderBy',
    varSamp: 'IssueVarSampOrderBy',
    variance: 'IssueVarianceOrderBy',
  },
  IssueArrRelInsertInput: {
    data: 'IssueInsertInput',
    onConflict: 'IssueOnConflict',
  },
  IssueAvgOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  IssueBoolExp: {
    _and: 'IssueBoolExp',
    _not: 'IssueBoolExp',
    _or: 'IssueBoolExp',
    contentId: 'BigintComparisonExp',
    contentMaster: 'ContentMasterBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    expenses: 'ExpenseBoolExp',
    expensesAggregate: 'ExpenseAggregateBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  IssueConstraint: 'enum' as const,
  IssueIncInput: {
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  IssueInsertInput: {
    contentId: 'bigint',
    contentMaster: 'ContentMasterObjRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expenses: 'ExpenseArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  IssueMaxOrderBy: {
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  IssueMinOrderBy: {
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  IssueObjRelInsertInput: {
    data: 'IssueInsertInput',
    onConflict: 'IssueOnConflict',
  },
  IssueOnConflict: {
    constraint: 'IssueConstraint',
    updateColumns: 'IssueUpdateColumn',
    where: 'IssueBoolExp',
  },
  IssueOrderBy: {
    contentId: 'OrderBy',
    contentMaster: 'ContentMasterOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    expensesAggregate: 'ExpenseAggregateOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  IssuePkColumnsInput: {
    id: 'bigint',
  },
  IssueSelectColumn: 'enum' as const,
  IssueSetInput: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  IssueStddevOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  IssueStddevPopOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  IssueStddevSampOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  IssueStreamCursorInput: {
    initialValue: 'IssueStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  IssueStreamCursorValueInput: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  IssueSumOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  IssueUpdateColumn: 'enum' as const,
  IssueUpdates: {
    _inc: 'IssueIncInput',
    _set: 'IssueSetInput',
    where: 'IssueBoolExp',
  },
  IssueVarianceOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  IssueVarPopOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  IssueVarSampOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  jsonb: `scalar.jsonb` as const,
  JsonbCastExp: {
    String: 'StringComparisonExp',
  },
  JsonbComparisonExp: {
    _cast: 'JsonbCastExp',
    _containedIn: 'jsonb',
    _contains: 'jsonb',
    _eq: 'jsonb',
    _gt: 'jsonb',
    _gte: 'jsonb',
    _in: 'jsonb',
    _lt: 'jsonb',
    _lte: 'jsonb',
    _neq: 'jsonb',
    _nin: 'jsonb',
  },
  MikroOrmMigrationsAggregateFields: {
    count: {
      columns: 'MikroOrmMigrationsSelectColumn',
    },
  },
  MikroOrmMigrationsBoolExp: {
    _and: 'MikroOrmMigrationsBoolExp',
    _not: 'MikroOrmMigrationsBoolExp',
    _or: 'MikroOrmMigrationsBoolExp',
    executedAt: 'TimestamptzComparisonExp',
    id: 'IntComparisonExp',
    name: 'StringComparisonExp',
  },
  MikroOrmMigrationsConstraint: 'enum' as const,
  MikroOrmMigrationsIncInput: {},
  MikroOrmMigrationsInsertInput: {
    executedAt: 'timestamptz',
  },
  MikroOrmMigrationsOnConflict: {
    constraint: 'MikroOrmMigrationsConstraint',
    updateColumns: 'MikroOrmMigrationsUpdateColumn',
    where: 'MikroOrmMigrationsBoolExp',
  },
  MikroOrmMigrationsOrderBy: {
    executedAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
  },
  MikroOrmMigrationsPkColumnsInput: {},
  MikroOrmMigrationsSelectColumn: 'enum' as const,
  MikroOrmMigrationsSetInput: {
    executedAt: 'timestamptz',
  },
  MikroOrmMigrationsStreamCursorInput: {
    initialValue: 'MikroOrmMigrationsStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  MikroOrmMigrationsStreamCursorValueInput: {
    executedAt: 'timestamptz',
  },
  MikroOrmMigrationsUpdateColumn: 'enum' as const,
  MikroOrmMigrationsUpdates: {
    _inc: 'MikroOrmMigrationsIncInput',
    _set: 'MikroOrmMigrationsSetInput',
    where: 'MikroOrmMigrationsBoolExp',
  },
  Mutation: {
    deleteAction: {
      where: 'ActionBoolExp',
    },
    deleteActionByPk: {
      id: 'bigint',
    },
    deleteActor: {
      where: 'ActorBoolExp',
    },
    deleteActorAddress: {
      where: 'ActorAddressBoolExp',
    },
    deleteActorAddressByPk: {
      id: 'bigint',
    },
    deleteActorBankInfo: {
      where: 'ActorBankInfoBoolExp',
    },
    deleteActorBankInfoByPk: {
      id: 'bigint',
    },
    deleteActorByPk: {
      id: 'bigint',
    },
    deleteActorFinance: {
      where: 'ActorFinanceBoolExp',
    },
    deleteActorFinanceByPk: {
      id: 'bigint',
    },
    deleteActorFinanceReceipts: {
      where: 'ActorFinanceReceiptsBoolExp',
    },
    deleteActorFinanceReceiptsByPk: {
      actorFinanceId: 'bigint',
      uploadId: 'bigint',
    },
    deleteActorImage: {
      where: 'ActorImageBoolExp',
    },
    deleteActorImageByPk: {
      id: 'bigint',
    },
    deleteActorTags: {
      where: 'ActorTagsBoolExp',
    },
    deleteActorTagsByPk: {
      actorId: 'bigint',
      tagId: 'bigint',
    },
    deleteBotInfo: {
      where: 'BotInfoBoolExp',
    },
    deleteBotInfoByPk: {
      id: 'bigint',
    },
    deleteCanteen: {
      where: 'CanteenBoolExp',
    },
    deleteCanteenByPk: {
      id: 'bigint',
    },
    deleteCanteenFood: {
      where: 'CanteenFoodBoolExp',
    },
    deleteCanteenFoodByPk: {
      id: 'bigint',
    },
    deleteCanteenMenu: {
      where: 'CanteenMenuBoolExp',
    },
    deleteCanteenMenuByPk: {
      id: 'bigint',
    },
    deleteChangeRole: {
      where: 'ChangeRoleBoolExp',
    },
    deleteChangeRoleByPk: {
      id: 'bigint',
    },
    deleteClassGroup: {
      where: 'ClassGroupBoolExp',
    },
    deleteClassGroupByPk: {
      id: 'bigint',
    },
    deleteClassGroupTeacher: {
      where: 'ClassGroupTeacherBoolExp',
    },
    deleteClassGroupTeacherByPk: {
      id: 'bigint',
    },
    deleteClassGroupTeacherSubject: {
      where: 'ClassGroupTeacherSubjectBoolExp',
    },
    deleteClassGroupTeacherSubjectByPk: {
      classGroupTeacherId: 'bigint',
      subjectId: 'bigint',
    },
    deleteCohort: {
      where: 'CohortBoolExp',
    },
    deleteCohortByPk: {
      id: 'bigint',
    },
    deleteContent: {
      where: 'ContentBoolExp',
    },
    deleteContentAttachments: {
      where: 'ContentAttachmentsBoolExp',
    },
    deleteContentAttachmentsByPk: {
      contentId: 'bigint',
      uploadId: 'bigint',
    },
    deleteContentByPk: {
      id: 'bigint',
    },
    deleteContentEdit: {
      where: 'ContentEditBoolExp',
    },
    deleteContentEditByPk: {
      id: 'bigint',
    },
    deleteContentMaster: {
      where: 'ContentMasterBoolExp',
    },
    deleteContentMasterByPk: {
      id: 'bigint',
    },
    deleteContentMasterContributors: {
      where: 'ContentMasterContributorsBoolExp',
    },
    deleteContentMasterContributorsByPk: {
      contentMasterId: 'bigint',
      individualId: 'bigint',
    },
    deleteContentMasterTags: {
      where: 'ContentMasterTagsBoolExp',
    },
    deleteContentMasterTagsByPk: {
      contentMasterId: 'bigint',
      tagId: 'bigint',
    },
    deleteContentRepresentingTeams: {
      where: 'ContentRepresentingTeamsBoolExp',
    },
    deleteContentRepresentingTeamsByPk: {
      contentId: 'bigint',
      teamId: 'bigint',
    },
    deleteDocument: {
      where: 'DocumentBoolExp',
    },
    deleteDocumentByPk: {
      id: 'bigint',
    },
    deleteDocumentEdit: {
      where: 'DocumentEditBoolExp',
    },
    deleteDocumentEditByPk: {
      id: 'bigint',
    },
    deleteEvent: {
      where: 'EventBoolExp',
    },
    deleteEventApproval: {
      where: 'EventApprovalBoolExp',
    },
    deleteEventApprovalByPk: {
      id: 'bigint',
    },
    deleteEventApprovalStep: {
      where: 'EventApprovalStepBoolExp',
    },
    deleteEventApprovalStepByPk: {
      id: 'bigint',
    },
    deleteEventApprovalStepNotifiees: {
      where: 'EventApprovalStepNotifieesBoolExp',
    },
    deleteEventApprovalStepNotifieesByPk: {
      eventApprovalStepId: 'bigint',
      individualId: 'bigint',
    },
    deleteEventApprovalStepValidators: {
      where: 'EventApprovalStepValidatorsBoolExp',
    },
    deleteEventApprovalStepValidatorsByPk: {
      eventApprovalStepId: 'bigint',
      individualId: 'bigint',
    },
    deleteEventByPk: {
      id: 'bigint',
    },
    deleteEventChangeRole: {
      where: 'EventChangeRoleBoolExp',
    },
    deleteEventChangeRoleByPk: {
      id: 'bigint',
    },
    deleteEventJoin: {
      where: 'EventJoinBoolExp',
    },
    deleteEventJoinByPk: {
      id: 'bigint',
    },
    deleteEventOrganisingTeams: {
      where: 'EventOrganisingTeamsBoolExp',
    },
    deleteEventOrganisingTeamsByPk: {
      eventId: 'bigint',
      teamId: 'bigint',
    },
    deleteEventRole: {
      where: 'EventRoleBoolExp',
    },
    deleteEventRoleByPk: {
      id: 'bigint',
    },
    deleteEventTags: {
      where: 'EventTagsBoolExp',
    },
    deleteEventTagsByPk: {
      eventId: 'bigint',
      tagId: 'bigint',
    },
    deleteEventTeams: {
      where: 'EventTeamsBoolExp',
    },
    deleteEventTeamsByPk: {
      eventId: 'bigint',
      teamId: 'bigint',
    },
    deleteExpense: {
      where: 'ExpenseBoolExp',
    },
    deleteExpenseByPk: {
      id: 'bigint',
    },
    deleteFavorite: {
      where: 'FavoriteBoolExp',
    },
    deleteFavoriteByPk: {
      id: 'bigint',
    },
    deleteForm: {
      where: 'FormBoolExp',
    },
    deleteFormByPk: {
      id: 'bigint',
    },
    deleteFormEdit: {
      where: 'FormEditBoolExp',
    },
    deleteFormEditByPk: {
      id: 'bigint',
    },
    deleteFormSubmission: {
      where: 'FormSubmissionBoolExp',
    },
    deleteFormSubmissionByPk: {
      id: 'bigint',
    },
    deleteFormSubmissionEdit: {
      where: 'FormSubmissionEditBoolExp',
    },
    deleteFormSubmissionEditByPk: {
      id: 'bigint',
    },
    deleteIndividual: {
      where: 'IndividualBoolExp',
    },
    deleteIndividualByPk: {
      id: 'bigint',
    },
    deleteIssue: {
      where: 'IssueBoolExp',
    },
    deleteIssueByPk: {
      id: 'bigint',
    },
    deleteMikroOrmMigrations: {
      where: 'MikroOrmMigrationsBoolExp',
    },
    deleteMikroOrmMigrationsByPk: {},
    deletePole: {
      where: 'PoleBoolExp',
    },
    deletePoleByPk: {
      id: 'bigint',
    },
    deleteProject: {
      where: 'ProjectBoolExp',
    },
    deleteProjectByPk: {
      id: 'bigint',
    },
    deleteProjectRole: {
      where: 'ProjectRoleBoolExp',
    },
    deleteProjectRoleByPk: {
      id: 'bigint',
    },
    deleteProjectSupervisors: {
      where: 'ProjectSupervisorsBoolExp',
    },
    deleteProjectSupervisorsByPk: {
      projectId: 'bigint',
      teamMemberId: 'bigint',
    },
    deleteProjectTags: {
      where: 'ProjectTagsBoolExp',
    },
    deleteProjectTagsByPk: {
      projectId: 'bigint',
      tagId: 'bigint',
    },
    deleteReaction: {
      where: 'ReactionBoolExp',
    },
    deleteReactionByPk: {
      id: 'bigint',
    },
    deleteReport: {
      where: 'ReportBoolExp',
    },
    deleteReportByPk: {
      id: 'bigint',
    },
    deleteRole: {
      where: 'RoleBoolExp',
    },
    deleteRoleByPk: {
      id: 'bigint',
    },
    deleteSession: {
      where: 'SessionBoolExp',
    },
    deleteSessionByPk: {
      id: 'bigint',
    },
    deleteShortcut: {
      where: 'ShortcutBoolExp',
    },
    deleteShortcutByPk: {
      id: 'bigint',
    },
    deleteSocial: {
      where: 'SocialBoolExp',
    },
    deleteSocialByPk: {
      id: 'bigint',
    },
    deleteSubject: {
      where: 'SubjectBoolExp',
    },
    deleteSubjectByPk: {
      id: 'bigint',
    },
    deleteSubjectClasses: {
      where: 'SubjectClassesBoolExp',
    },
    deleteSubjectClassesByPk: {
      classGroupId: 'bigint',
      subjectId: 'bigint',
    },
    deleteTag: {
      where: 'TagBoolExp',
    },
    deleteTagByPk: {
      id: 'bigint',
    },
    deleteTeam: {
      where: 'TeamBoolExp',
    },
    deleteTeamByPk: {
      id: 'bigint',
    },
    deleteTeamCategories: {
      where: 'TeamCategoriesBoolExp',
    },
    deleteTeamCategoriesByPk: {
      tagId: 'bigint',
      teamId: 'bigint',
    },
    deleteTeamEvents: {
      where: 'TeamEventsBoolExp',
    },
    deleteTeamEventsByPk: {
      eventId: 'bigint',
      teamId: 'bigint',
    },
    deleteTeamFinance: {
      where: 'TeamFinanceBoolExp',
    },
    deleteTeamFinanceByPk: {
      id: 'bigint',
    },
    deleteTeamJoin: {
      where: 'TeamJoinBoolExp',
    },
    deleteTeamJoinByPk: {
      id: 'bigint',
    },
    deleteTeamMember: {
      where: 'TeamMemberBoolExp',
    },
    deleteTeamMemberByPk: {
      id: 'bigint',
    },
    deleteTeamMemberRoles: {
      where: 'TeamMemberRolesBoolExp',
    },
    deleteTeamMemberRolesByPk: {
      roleId: 'bigint',
      teamMemberId: 'bigint',
    },
    deleteTeamMetric: {
      where: 'TeamMetricBoolExp',
    },
    deleteTeamMetricByPk: {
      id: 'bigint',
    },
    deleteTenant: {
      where: 'TenantBoolExp',
    },
    deleteTenantByPk: {
      id: 'bigint',
    },
    deleteUpload: {
      where: 'UploadBoolExp',
    },
    deleteUploadByPk: {
      id: 'bigint',
    },
    deleteUserInfo: {
      where: 'UserInfoBoolExp',
    },
    deleteUserInfoByPk: {
      id: 'bigint',
    },
    deleteValidation: {
      where: 'ValidationBoolExp',
    },
    deleteValidationByPk: {
      id: 'bigint',
    },
    deleteVote: {
      where: 'VoteBoolExp',
    },
    deleteVoteByPk: {
      id: 'bigint',
    },
    insertAction: {
      objects: 'ActionInsertInput',
      onConflict: 'ActionOnConflict',
    },
    insertActionOne: {
      object: 'ActionInsertInput',
      onConflict: 'ActionOnConflict',
    },
    insertActor: {
      objects: 'ActorInsertInput',
      onConflict: 'ActorOnConflict',
    },
    insertActorAddress: {
      objects: 'ActorAddressInsertInput',
      onConflict: 'ActorAddressOnConflict',
    },
    insertActorAddressOne: {
      object: 'ActorAddressInsertInput',
      onConflict: 'ActorAddressOnConflict',
    },
    insertActorBankInfo: {
      objects: 'ActorBankInfoInsertInput',
      onConflict: 'ActorBankInfoOnConflict',
    },
    insertActorBankInfoOne: {
      object: 'ActorBankInfoInsertInput',
      onConflict: 'ActorBankInfoOnConflict',
    },
    insertActorFinance: {
      objects: 'ActorFinanceInsertInput',
      onConflict: 'ActorFinanceOnConflict',
    },
    insertActorFinanceOne: {
      object: 'ActorFinanceInsertInput',
      onConflict: 'ActorFinanceOnConflict',
    },
    insertActorFinanceReceipts: {
      objects: 'ActorFinanceReceiptsInsertInput',
      onConflict: 'ActorFinanceReceiptsOnConflict',
    },
    insertActorFinanceReceiptsOne: {
      object: 'ActorFinanceReceiptsInsertInput',
      onConflict: 'ActorFinanceReceiptsOnConflict',
    },
    insertActorImage: {
      objects: 'ActorImageInsertInput',
      onConflict: 'ActorImageOnConflict',
    },
    insertActorImageOne: {
      object: 'ActorImageInsertInput',
      onConflict: 'ActorImageOnConflict',
    },
    insertActorOne: {
      object: 'ActorInsertInput',
      onConflict: 'ActorOnConflict',
    },
    insertActorTags: {
      objects: 'ActorTagsInsertInput',
      onConflict: 'ActorTagsOnConflict',
    },
    insertActorTagsOne: {
      object: 'ActorTagsInsertInput',
      onConflict: 'ActorTagsOnConflict',
    },
    insertBotInfo: {
      objects: 'BotInfoInsertInput',
      onConflict: 'BotInfoOnConflict',
    },
    insertBotInfoOne: {
      object: 'BotInfoInsertInput',
      onConflict: 'BotInfoOnConflict',
    },
    insertCanteen: {
      objects: 'CanteenInsertInput',
      onConflict: 'CanteenOnConflict',
    },
    insertCanteenFood: {
      objects: 'CanteenFoodInsertInput',
      onConflict: 'CanteenFoodOnConflict',
    },
    insertCanteenFoodOne: {
      object: 'CanteenFoodInsertInput',
      onConflict: 'CanteenFoodOnConflict',
    },
    insertCanteenMenu: {
      objects: 'CanteenMenuInsertInput',
      onConflict: 'CanteenMenuOnConflict',
    },
    insertCanteenMenuOne: {
      object: 'CanteenMenuInsertInput',
      onConflict: 'CanteenMenuOnConflict',
    },
    insertCanteenOne: {
      object: 'CanteenInsertInput',
      onConflict: 'CanteenOnConflict',
    },
    insertChangeRole: {
      objects: 'ChangeRoleInsertInput',
      onConflict: 'ChangeRoleOnConflict',
    },
    insertChangeRoleOne: {
      object: 'ChangeRoleInsertInput',
      onConflict: 'ChangeRoleOnConflict',
    },
    insertClassGroup: {
      objects: 'ClassGroupInsertInput',
      onConflict: 'ClassGroupOnConflict',
    },
    insertClassGroupOne: {
      object: 'ClassGroupInsertInput',
      onConflict: 'ClassGroupOnConflict',
    },
    insertClassGroupTeacher: {
      objects: 'ClassGroupTeacherInsertInput',
      onConflict: 'ClassGroupTeacherOnConflict',
    },
    insertClassGroupTeacherOne: {
      object: 'ClassGroupTeacherInsertInput',
      onConflict: 'ClassGroupTeacherOnConflict',
    },
    insertClassGroupTeacherSubject: {
      objects: 'ClassGroupTeacherSubjectInsertInput',
      onConflict: 'ClassGroupTeacherSubjectOnConflict',
    },
    insertClassGroupTeacherSubjectOne: {
      object: 'ClassGroupTeacherSubjectInsertInput',
      onConflict: 'ClassGroupTeacherSubjectOnConflict',
    },
    insertCohort: {
      objects: 'CohortInsertInput',
      onConflict: 'CohortOnConflict',
    },
    insertCohortOne: {
      object: 'CohortInsertInput',
      onConflict: 'CohortOnConflict',
    },
    insertContent: {
      objects: 'ContentInsertInput',
      onConflict: 'ContentOnConflict',
    },
    insertContentAttachments: {
      objects: 'ContentAttachmentsInsertInput',
      onConflict: 'ContentAttachmentsOnConflict',
    },
    insertContentAttachmentsOne: {
      object: 'ContentAttachmentsInsertInput',
      onConflict: 'ContentAttachmentsOnConflict',
    },
    insertContentEdit: {
      objects: 'ContentEditInsertInput',
      onConflict: 'ContentEditOnConflict',
    },
    insertContentEditOne: {
      object: 'ContentEditInsertInput',
      onConflict: 'ContentEditOnConflict',
    },
    insertContentMaster: {
      objects: 'ContentMasterInsertInput',
      onConflict: 'ContentMasterOnConflict',
    },
    insertContentMasterContributors: {
      objects: 'ContentMasterContributorsInsertInput',
      onConflict: 'ContentMasterContributorsOnConflict',
    },
    insertContentMasterContributorsOne: {
      object: 'ContentMasterContributorsInsertInput',
      onConflict: 'ContentMasterContributorsOnConflict',
    },
    insertContentMasterOne: {
      object: 'ContentMasterInsertInput',
      onConflict: 'ContentMasterOnConflict',
    },
    insertContentMasterTags: {
      objects: 'ContentMasterTagsInsertInput',
      onConflict: 'ContentMasterTagsOnConflict',
    },
    insertContentMasterTagsOne: {
      object: 'ContentMasterTagsInsertInput',
      onConflict: 'ContentMasterTagsOnConflict',
    },
    insertContentOne: {
      object: 'ContentInsertInput',
      onConflict: 'ContentOnConflict',
    },
    insertContentRepresentingTeams: {
      objects: 'ContentRepresentingTeamsInsertInput',
      onConflict: 'ContentRepresentingTeamsOnConflict',
    },
    insertContentRepresentingTeamsOne: {
      object: 'ContentRepresentingTeamsInsertInput',
      onConflict: 'ContentRepresentingTeamsOnConflict',
    },
    insertDocument: {
      objects: 'DocumentInsertInput',
      onConflict: 'DocumentOnConflict',
    },
    insertDocumentEdit: {
      objects: 'DocumentEditInsertInput',
      onConflict: 'DocumentEditOnConflict',
    },
    insertDocumentEditOne: {
      object: 'DocumentEditInsertInput',
      onConflict: 'DocumentEditOnConflict',
    },
    insertDocumentOne: {
      object: 'DocumentInsertInput',
      onConflict: 'DocumentOnConflict',
    },
    insertEvent: {
      objects: 'EventInsertInput',
      onConflict: 'EventOnConflict',
    },
    insertEventApproval: {
      objects: 'EventApprovalInsertInput',
      onConflict: 'EventApprovalOnConflict',
    },
    insertEventApprovalOne: {
      object: 'EventApprovalInsertInput',
      onConflict: 'EventApprovalOnConflict',
    },
    insertEventApprovalStep: {
      objects: 'EventApprovalStepInsertInput',
      onConflict: 'EventApprovalStepOnConflict',
    },
    insertEventApprovalStepNotifiees: {
      objects: 'EventApprovalStepNotifieesInsertInput',
      onConflict: 'EventApprovalStepNotifieesOnConflict',
    },
    insertEventApprovalStepNotifieesOne: {
      object: 'EventApprovalStepNotifieesInsertInput',
      onConflict: 'EventApprovalStepNotifieesOnConflict',
    },
    insertEventApprovalStepOne: {
      object: 'EventApprovalStepInsertInput',
      onConflict: 'EventApprovalStepOnConflict',
    },
    insertEventApprovalStepValidators: {
      objects: 'EventApprovalStepValidatorsInsertInput',
      onConflict: 'EventApprovalStepValidatorsOnConflict',
    },
    insertEventApprovalStepValidatorsOne: {
      object: 'EventApprovalStepValidatorsInsertInput',
      onConflict: 'EventApprovalStepValidatorsOnConflict',
    },
    insertEventChangeRole: {
      objects: 'EventChangeRoleInsertInput',
      onConflict: 'EventChangeRoleOnConflict',
    },
    insertEventChangeRoleOne: {
      object: 'EventChangeRoleInsertInput',
      onConflict: 'EventChangeRoleOnConflict',
    },
    insertEventJoin: {
      objects: 'EventJoinInsertInput',
      onConflict: 'EventJoinOnConflict',
    },
    insertEventJoinOne: {
      object: 'EventJoinInsertInput',
      onConflict: 'EventJoinOnConflict',
    },
    insertEventOne: {
      object: 'EventInsertInput',
      onConflict: 'EventOnConflict',
    },
    insertEventOrganisingTeams: {
      objects: 'EventOrganisingTeamsInsertInput',
      onConflict: 'EventOrganisingTeamsOnConflict',
    },
    insertEventOrganisingTeamsOne: {
      object: 'EventOrganisingTeamsInsertInput',
      onConflict: 'EventOrganisingTeamsOnConflict',
    },
    insertEventRole: {
      objects: 'EventRoleInsertInput',
      onConflict: 'EventRoleOnConflict',
    },
    insertEventRoleOne: {
      object: 'EventRoleInsertInput',
      onConflict: 'EventRoleOnConflict',
    },
    insertEventTags: {
      objects: 'EventTagsInsertInput',
      onConflict: 'EventTagsOnConflict',
    },
    insertEventTagsOne: {
      object: 'EventTagsInsertInput',
      onConflict: 'EventTagsOnConflict',
    },
    insertEventTeams: {
      objects: 'EventTeamsInsertInput',
      onConflict: 'EventTeamsOnConflict',
    },
    insertEventTeamsOne: {
      object: 'EventTeamsInsertInput',
      onConflict: 'EventTeamsOnConflict',
    },
    insertExpense: {
      objects: 'ExpenseInsertInput',
      onConflict: 'ExpenseOnConflict',
    },
    insertExpenseOne: {
      object: 'ExpenseInsertInput',
      onConflict: 'ExpenseOnConflict',
    },
    insertFavorite: {
      objects: 'FavoriteInsertInput',
      onConflict: 'FavoriteOnConflict',
    },
    insertFavoriteOne: {
      object: 'FavoriteInsertInput',
      onConflict: 'FavoriteOnConflict',
    },
    insertForm: {
      objects: 'FormInsertInput',
      onConflict: 'FormOnConflict',
    },
    insertFormEdit: {
      objects: 'FormEditInsertInput',
      onConflict: 'FormEditOnConflict',
    },
    insertFormEditOne: {
      object: 'FormEditInsertInput',
      onConflict: 'FormEditOnConflict',
    },
    insertFormOne: {
      object: 'FormInsertInput',
      onConflict: 'FormOnConflict',
    },
    insertFormSubmission: {
      objects: 'FormSubmissionInsertInput',
      onConflict: 'FormSubmissionOnConflict',
    },
    insertFormSubmissionEdit: {
      objects: 'FormSubmissionEditInsertInput',
      onConflict: 'FormSubmissionEditOnConflict',
    },
    insertFormSubmissionEditOne: {
      object: 'FormSubmissionEditInsertInput',
      onConflict: 'FormSubmissionEditOnConflict',
    },
    insertFormSubmissionOne: {
      object: 'FormSubmissionInsertInput',
      onConflict: 'FormSubmissionOnConflict',
    },
    insertIndividual: {
      objects: 'IndividualInsertInput',
      onConflict: 'IndividualOnConflict',
    },
    insertIndividualOne: {
      object: 'IndividualInsertInput',
      onConflict: 'IndividualOnConflict',
    },
    insertIssue: {
      objects: 'IssueInsertInput',
      onConflict: 'IssueOnConflict',
    },
    insertIssueOne: {
      object: 'IssueInsertInput',
      onConflict: 'IssueOnConflict',
    },
    insertMikroOrmMigrations: {
      objects: 'MikroOrmMigrationsInsertInput',
      onConflict: 'MikroOrmMigrationsOnConflict',
    },
    insertMikroOrmMigrationsOne: {
      object: 'MikroOrmMigrationsInsertInput',
      onConflict: 'MikroOrmMigrationsOnConflict',
    },
    insertPole: {
      objects: 'PoleInsertInput',
      onConflict: 'PoleOnConflict',
    },
    insertPoleOne: {
      object: 'PoleInsertInput',
      onConflict: 'PoleOnConflict',
    },
    insertProject: {
      objects: 'ProjectInsertInput',
      onConflict: 'ProjectOnConflict',
    },
    insertProjectOne: {
      object: 'ProjectInsertInput',
      onConflict: 'ProjectOnConflict',
    },
    insertProjectRole: {
      objects: 'ProjectRoleInsertInput',
      onConflict: 'ProjectRoleOnConflict',
    },
    insertProjectRoleOne: {
      object: 'ProjectRoleInsertInput',
      onConflict: 'ProjectRoleOnConflict',
    },
    insertProjectSupervisors: {
      objects: 'ProjectSupervisorsInsertInput',
      onConflict: 'ProjectSupervisorsOnConflict',
    },
    insertProjectSupervisorsOne: {
      object: 'ProjectSupervisorsInsertInput',
      onConflict: 'ProjectSupervisorsOnConflict',
    },
    insertProjectTags: {
      objects: 'ProjectTagsInsertInput',
      onConflict: 'ProjectTagsOnConflict',
    },
    insertProjectTagsOne: {
      object: 'ProjectTagsInsertInput',
      onConflict: 'ProjectTagsOnConflict',
    },
    insertReaction: {
      objects: 'ReactionInsertInput',
      onConflict: 'ReactionOnConflict',
    },
    insertReactionOne: {
      object: 'ReactionInsertInput',
      onConflict: 'ReactionOnConflict',
    },
    insertReport: {
      objects: 'ReportInsertInput',
      onConflict: 'ReportOnConflict',
    },
    insertReportOne: {
      object: 'ReportInsertInput',
      onConflict: 'ReportOnConflict',
    },
    insertRole: {
      objects: 'RoleInsertInput',
      onConflict: 'RoleOnConflict',
    },
    insertRoleOne: {
      object: 'RoleInsertInput',
      onConflict: 'RoleOnConflict',
    },
    insertSession: {
      objects: 'SessionInsertInput',
      onConflict: 'SessionOnConflict',
    },
    insertSessionOne: {
      object: 'SessionInsertInput',
      onConflict: 'SessionOnConflict',
    },
    insertShortcut: {
      objects: 'ShortcutInsertInput',
      onConflict: 'ShortcutOnConflict',
    },
    insertShortcutOne: {
      object: 'ShortcutInsertInput',
      onConflict: 'ShortcutOnConflict',
    },
    insertSocial: {
      objects: 'SocialInsertInput',
      onConflict: 'SocialOnConflict',
    },
    insertSocialOne: {
      object: 'SocialInsertInput',
      onConflict: 'SocialOnConflict',
    },
    insertSubject: {
      objects: 'SubjectInsertInput',
      onConflict: 'SubjectOnConflict',
    },
    insertSubjectClasses: {
      objects: 'SubjectClassesInsertInput',
      onConflict: 'SubjectClassesOnConflict',
    },
    insertSubjectClassesOne: {
      object: 'SubjectClassesInsertInput',
      onConflict: 'SubjectClassesOnConflict',
    },
    insertSubjectOne: {
      object: 'SubjectInsertInput',
      onConflict: 'SubjectOnConflict',
    },
    insertTag: {
      objects: 'TagInsertInput',
      onConflict: 'TagOnConflict',
    },
    insertTagOne: {
      object: 'TagInsertInput',
      onConflict: 'TagOnConflict',
    },
    insertTeam: {
      objects: 'TeamInsertInput',
      onConflict: 'TeamOnConflict',
    },
    insertTeamCategories: {
      objects: 'TeamCategoriesInsertInput',
      onConflict: 'TeamCategoriesOnConflict',
    },
    insertTeamCategoriesOne: {
      object: 'TeamCategoriesInsertInput',
      onConflict: 'TeamCategoriesOnConflict',
    },
    insertTeamEvents: {
      objects: 'TeamEventsInsertInput',
      onConflict: 'TeamEventsOnConflict',
    },
    insertTeamEventsOne: {
      object: 'TeamEventsInsertInput',
      onConflict: 'TeamEventsOnConflict',
    },
    insertTeamFinance: {
      objects: 'TeamFinanceInsertInput',
      onConflict: 'TeamFinanceOnConflict',
    },
    insertTeamFinanceOne: {
      object: 'TeamFinanceInsertInput',
      onConflict: 'TeamFinanceOnConflict',
    },
    insertTeamJoin: {
      objects: 'TeamJoinInsertInput',
      onConflict: 'TeamJoinOnConflict',
    },
    insertTeamJoinOne: {
      object: 'TeamJoinInsertInput',
      onConflict: 'TeamJoinOnConflict',
    },
    insertTeamMember: {
      objects: 'TeamMemberInsertInput',
      onConflict: 'TeamMemberOnConflict',
    },
    insertTeamMemberOne: {
      object: 'TeamMemberInsertInput',
      onConflict: 'TeamMemberOnConflict',
    },
    insertTeamMemberRoles: {
      objects: 'TeamMemberRolesInsertInput',
      onConflict: 'TeamMemberRolesOnConflict',
    },
    insertTeamMemberRolesOne: {
      object: 'TeamMemberRolesInsertInput',
      onConflict: 'TeamMemberRolesOnConflict',
    },
    insertTeamMetric: {
      objects: 'TeamMetricInsertInput',
      onConflict: 'TeamMetricOnConflict',
    },
    insertTeamMetricOne: {
      object: 'TeamMetricInsertInput',
      onConflict: 'TeamMetricOnConflict',
    },
    insertTeamOne: {
      object: 'TeamInsertInput',
      onConflict: 'TeamOnConflict',
    },
    insertTenant: {
      objects: 'TenantInsertInput',
      onConflict: 'TenantOnConflict',
    },
    insertTenantOne: {
      object: 'TenantInsertInput',
      onConflict: 'TenantOnConflict',
    },
    insertUpload: {
      objects: 'UploadInsertInput',
      onConflict: 'UploadOnConflict',
    },
    insertUploadOne: {
      object: 'UploadInsertInput',
      onConflict: 'UploadOnConflict',
    },
    insertUserInfo: {
      objects: 'UserInfoInsertInput',
      onConflict: 'UserInfoOnConflict',
    },
    insertUserInfoOne: {
      object: 'UserInfoInsertInput',
      onConflict: 'UserInfoOnConflict',
    },
    insertValidation: {
      objects: 'ValidationInsertInput',
      onConflict: 'ValidationOnConflict',
    },
    insertValidationOne: {
      object: 'ValidationInsertInput',
      onConflict: 'ValidationOnConflict',
    },
    insertVote: {
      objects: 'VoteInsertInput',
      onConflict: 'VoteOnConflict',
    },
    insertVoteOne: {
      object: 'VoteInsertInput',
      onConflict: 'VoteOnConflict',
    },
    updateAction: {
      _inc: 'ActionIncInput',
      _set: 'ActionSetInput',
      where: 'ActionBoolExp',
    },
    updateActionByPk: {
      _inc: 'ActionIncInput',
      _set: 'ActionSetInput',
      pkColumns: 'ActionPkColumnsInput',
    },
    updateActionMany: {
      updates: 'ActionUpdates',
    },
    updateActor: {
      _inc: 'ActorIncInput',
      _set: 'ActorSetInput',
      where: 'ActorBoolExp',
    },
    updateActorAddress: {
      _inc: 'ActorAddressIncInput',
      _set: 'ActorAddressSetInput',
      where: 'ActorAddressBoolExp',
    },
    updateActorAddressByPk: {
      _inc: 'ActorAddressIncInput',
      _set: 'ActorAddressSetInput',
      pkColumns: 'ActorAddressPkColumnsInput',
    },
    updateActorAddressMany: {
      updates: 'ActorAddressUpdates',
    },
    updateActorBankInfo: {
      _inc: 'ActorBankInfoIncInput',
      _set: 'ActorBankInfoSetInput',
      where: 'ActorBankInfoBoolExp',
    },
    updateActorBankInfoByPk: {
      _inc: 'ActorBankInfoIncInput',
      _set: 'ActorBankInfoSetInput',
      pkColumns: 'ActorBankInfoPkColumnsInput',
    },
    updateActorBankInfoMany: {
      updates: 'ActorBankInfoUpdates',
    },
    updateActorByPk: {
      _inc: 'ActorIncInput',
      _set: 'ActorSetInput',
      pkColumns: 'ActorPkColumnsInput',
    },
    updateActorFinance: {
      _inc: 'ActorFinanceIncInput',
      _set: 'ActorFinanceSetInput',
      where: 'ActorFinanceBoolExp',
    },
    updateActorFinanceByPk: {
      _inc: 'ActorFinanceIncInput',
      _set: 'ActorFinanceSetInput',
      pkColumns: 'ActorFinancePkColumnsInput',
    },
    updateActorFinanceMany: {
      updates: 'ActorFinanceUpdates',
    },
    updateActorFinanceReceipts: {
      _inc: 'ActorFinanceReceiptsIncInput',
      _set: 'ActorFinanceReceiptsSetInput',
      where: 'ActorFinanceReceiptsBoolExp',
    },
    updateActorFinanceReceiptsByPk: {
      _inc: 'ActorFinanceReceiptsIncInput',
      _set: 'ActorFinanceReceiptsSetInput',
      pkColumns: 'ActorFinanceReceiptsPkColumnsInput',
    },
    updateActorFinanceReceiptsMany: {
      updates: 'ActorFinanceReceiptsUpdates',
    },
    updateActorImage: {
      _inc: 'ActorImageIncInput',
      _set: 'ActorImageSetInput',
      where: 'ActorImageBoolExp',
    },
    updateActorImageByPk: {
      _inc: 'ActorImageIncInput',
      _set: 'ActorImageSetInput',
      pkColumns: 'ActorImagePkColumnsInput',
    },
    updateActorImageMany: {
      updates: 'ActorImageUpdates',
    },
    updateActorMany: {
      updates: 'ActorUpdates',
    },
    updateActorTags: {
      _inc: 'ActorTagsIncInput',
      _set: 'ActorTagsSetInput',
      where: 'ActorTagsBoolExp',
    },
    updateActorTagsByPk: {
      _inc: 'ActorTagsIncInput',
      _set: 'ActorTagsSetInput',
      pkColumns: 'ActorTagsPkColumnsInput',
    },
    updateActorTagsMany: {
      updates: 'ActorTagsUpdates',
    },
    updateBotInfo: {
      _inc: 'BotInfoIncInput',
      _set: 'BotInfoSetInput',
      where: 'BotInfoBoolExp',
    },
    updateBotInfoByPk: {
      _inc: 'BotInfoIncInput',
      _set: 'BotInfoSetInput',
      pkColumns: 'BotInfoPkColumnsInput',
    },
    updateBotInfoMany: {
      updates: 'BotInfoUpdates',
    },
    updateCanteen: {
      _inc: 'CanteenIncInput',
      _set: 'CanteenSetInput',
      where: 'CanteenBoolExp',
    },
    updateCanteenByPk: {
      _inc: 'CanteenIncInput',
      _set: 'CanteenSetInput',
      pkColumns: 'CanteenPkColumnsInput',
    },
    updateCanteenFood: {
      _inc: 'CanteenFoodIncInput',
      _set: 'CanteenFoodSetInput',
      where: 'CanteenFoodBoolExp',
    },
    updateCanteenFoodByPk: {
      _inc: 'CanteenFoodIncInput',
      _set: 'CanteenFoodSetInput',
      pkColumns: 'CanteenFoodPkColumnsInput',
    },
    updateCanteenFoodMany: {
      updates: 'CanteenFoodUpdates',
    },
    updateCanteenMany: {
      updates: 'CanteenUpdates',
    },
    updateCanteenMenu: {
      _inc: 'CanteenMenuIncInput',
      _set: 'CanteenMenuSetInput',
      where: 'CanteenMenuBoolExp',
    },
    updateCanteenMenuByPk: {
      _inc: 'CanteenMenuIncInput',
      _set: 'CanteenMenuSetInput',
      pkColumns: 'CanteenMenuPkColumnsInput',
    },
    updateCanteenMenuMany: {
      updates: 'CanteenMenuUpdates',
    },
    updateChangeRole: {
      _inc: 'ChangeRoleIncInput',
      _set: 'ChangeRoleSetInput',
      where: 'ChangeRoleBoolExp',
    },
    updateChangeRoleByPk: {
      _inc: 'ChangeRoleIncInput',
      _set: 'ChangeRoleSetInput',
      pkColumns: 'ChangeRolePkColumnsInput',
    },
    updateChangeRoleMany: {
      updates: 'ChangeRoleUpdates',
    },
    updateClassGroup: {
      _inc: 'ClassGroupIncInput',
      _set: 'ClassGroupSetInput',
      where: 'ClassGroupBoolExp',
    },
    updateClassGroupByPk: {
      _inc: 'ClassGroupIncInput',
      _set: 'ClassGroupSetInput',
      pkColumns: 'ClassGroupPkColumnsInput',
    },
    updateClassGroupMany: {
      updates: 'ClassGroupUpdates',
    },
    updateClassGroupTeacher: {
      _inc: 'ClassGroupTeacherIncInput',
      _set: 'ClassGroupTeacherSetInput',
      where: 'ClassGroupTeacherBoolExp',
    },
    updateClassGroupTeacherByPk: {
      _inc: 'ClassGroupTeacherIncInput',
      _set: 'ClassGroupTeacherSetInput',
      pkColumns: 'ClassGroupTeacherPkColumnsInput',
    },
    updateClassGroupTeacherMany: {
      updates: 'ClassGroupTeacherUpdates',
    },
    updateClassGroupTeacherSubject: {
      _inc: 'ClassGroupTeacherSubjectIncInput',
      _set: 'ClassGroupTeacherSubjectSetInput',
      where: 'ClassGroupTeacherSubjectBoolExp',
    },
    updateClassGroupTeacherSubjectByPk: {
      _inc: 'ClassGroupTeacherSubjectIncInput',
      _set: 'ClassGroupTeacherSubjectSetInput',
      pkColumns: 'ClassGroupTeacherSubjectPkColumnsInput',
    },
    updateClassGroupTeacherSubjectMany: {
      updates: 'ClassGroupTeacherSubjectUpdates',
    },
    updateCohort: {
      _inc: 'CohortIncInput',
      _set: 'CohortSetInput',
      where: 'CohortBoolExp',
    },
    updateCohortByPk: {
      _inc: 'CohortIncInput',
      _set: 'CohortSetInput',
      pkColumns: 'CohortPkColumnsInput',
    },
    updateCohortMany: {
      updates: 'CohortUpdates',
    },
    updateContent: {
      _inc: 'ContentIncInput',
      _set: 'ContentSetInput',
      where: 'ContentBoolExp',
    },
    updateContentAttachments: {
      _inc: 'ContentAttachmentsIncInput',
      _set: 'ContentAttachmentsSetInput',
      where: 'ContentAttachmentsBoolExp',
    },
    updateContentAttachmentsByPk: {
      _inc: 'ContentAttachmentsIncInput',
      _set: 'ContentAttachmentsSetInput',
      pkColumns: 'ContentAttachmentsPkColumnsInput',
    },
    updateContentAttachmentsMany: {
      updates: 'ContentAttachmentsUpdates',
    },
    updateContentByPk: {
      _inc: 'ContentIncInput',
      _set: 'ContentSetInput',
      pkColumns: 'ContentPkColumnsInput',
    },
    updateContentEdit: {
      _append: 'ContentEditAppendInput',
      _deleteAtPath: 'ContentEditDeleteAtPathInput',
      _deleteElem: 'ContentEditDeleteElemInput',
      _deleteKey: 'ContentEditDeleteKeyInput',
      _inc: 'ContentEditIncInput',
      _prepend: 'ContentEditPrependInput',
      _set: 'ContentEditSetInput',
      where: 'ContentEditBoolExp',
    },
    updateContentEditByPk: {
      _append: 'ContentEditAppendInput',
      _deleteAtPath: 'ContentEditDeleteAtPathInput',
      _deleteElem: 'ContentEditDeleteElemInput',
      _deleteKey: 'ContentEditDeleteKeyInput',
      _inc: 'ContentEditIncInput',
      _prepend: 'ContentEditPrependInput',
      _set: 'ContentEditSetInput',
      pkColumns: 'ContentEditPkColumnsInput',
    },
    updateContentEditMany: {
      updates: 'ContentEditUpdates',
    },
    updateContentMany: {
      updates: 'ContentUpdates',
    },
    updateContentMaster: {
      _inc: 'ContentMasterIncInput',
      _set: 'ContentMasterSetInput',
      where: 'ContentMasterBoolExp',
    },
    updateContentMasterByPk: {
      _inc: 'ContentMasterIncInput',
      _set: 'ContentMasterSetInput',
      pkColumns: 'ContentMasterPkColumnsInput',
    },
    updateContentMasterContributors: {
      _inc: 'ContentMasterContributorsIncInput',
      _set: 'ContentMasterContributorsSetInput',
      where: 'ContentMasterContributorsBoolExp',
    },
    updateContentMasterContributorsByPk: {
      _inc: 'ContentMasterContributorsIncInput',
      _set: 'ContentMasterContributorsSetInput',
      pkColumns: 'ContentMasterContributorsPkColumnsInput',
    },
    updateContentMasterContributorsMany: {
      updates: 'ContentMasterContributorsUpdates',
    },
    updateContentMasterMany: {
      updates: 'ContentMasterUpdates',
    },
    updateContentMasterTags: {
      _inc: 'ContentMasterTagsIncInput',
      _set: 'ContentMasterTagsSetInput',
      where: 'ContentMasterTagsBoolExp',
    },
    updateContentMasterTagsByPk: {
      _inc: 'ContentMasterTagsIncInput',
      _set: 'ContentMasterTagsSetInput',
      pkColumns: 'ContentMasterTagsPkColumnsInput',
    },
    updateContentMasterTagsMany: {
      updates: 'ContentMasterTagsUpdates',
    },
    updateContentRepresentingTeams: {
      _inc: 'ContentRepresentingTeamsIncInput',
      _set: 'ContentRepresentingTeamsSetInput',
      where: 'ContentRepresentingTeamsBoolExp',
    },
    updateContentRepresentingTeamsByPk: {
      _inc: 'ContentRepresentingTeamsIncInput',
      _set: 'ContentRepresentingTeamsSetInput',
      pkColumns: 'ContentRepresentingTeamsPkColumnsInput',
    },
    updateContentRepresentingTeamsMany: {
      updates: 'ContentRepresentingTeamsUpdates',
    },
    updateDocument: {
      _inc: 'DocumentIncInput',
      _set: 'DocumentSetInput',
      where: 'DocumentBoolExp',
    },
    updateDocumentByPk: {
      _inc: 'DocumentIncInput',
      _set: 'DocumentSetInput',
      pkColumns: 'DocumentPkColumnsInput',
    },
    updateDocumentEdit: {
      _inc: 'DocumentEditIncInput',
      _set: 'DocumentEditSetInput',
      where: 'DocumentEditBoolExp',
    },
    updateDocumentEditByPk: {
      _inc: 'DocumentEditIncInput',
      _set: 'DocumentEditSetInput',
      pkColumns: 'DocumentEditPkColumnsInput',
    },
    updateDocumentEditMany: {
      updates: 'DocumentEditUpdates',
    },
    updateDocumentMany: {
      updates: 'DocumentUpdates',
    },
    updateEvent: {
      _append: 'EventAppendInput',
      _deleteAtPath: 'EventDeleteAtPathInput',
      _deleteElem: 'EventDeleteElemInput',
      _deleteKey: 'EventDeleteKeyInput',
      _inc: 'EventIncInput',
      _prepend: 'EventPrependInput',
      _set: 'EventSetInput',
      where: 'EventBoolExp',
    },
    updateEventApproval: {
      _inc: 'EventApprovalIncInput',
      _set: 'EventApprovalSetInput',
      where: 'EventApprovalBoolExp',
    },
    updateEventApprovalByPk: {
      _inc: 'EventApprovalIncInput',
      _set: 'EventApprovalSetInput',
      pkColumns: 'EventApprovalPkColumnsInput',
    },
    updateEventApprovalMany: {
      updates: 'EventApprovalUpdates',
    },
    updateEventApprovalStep: {
      _inc: 'EventApprovalStepIncInput',
      _set: 'EventApprovalStepSetInput',
      where: 'EventApprovalStepBoolExp',
    },
    updateEventApprovalStepByPk: {
      _inc: 'EventApprovalStepIncInput',
      _set: 'EventApprovalStepSetInput',
      pkColumns: 'EventApprovalStepPkColumnsInput',
    },
    updateEventApprovalStepMany: {
      updates: 'EventApprovalStepUpdates',
    },
    updateEventApprovalStepNotifiees: {
      _inc: 'EventApprovalStepNotifieesIncInput',
      _set: 'EventApprovalStepNotifieesSetInput',
      where: 'EventApprovalStepNotifieesBoolExp',
    },
    updateEventApprovalStepNotifieesByPk: {
      _inc: 'EventApprovalStepNotifieesIncInput',
      _set: 'EventApprovalStepNotifieesSetInput',
      pkColumns: 'EventApprovalStepNotifieesPkColumnsInput',
    },
    updateEventApprovalStepNotifieesMany: {
      updates: 'EventApprovalStepNotifieesUpdates',
    },
    updateEventApprovalStepValidators: {
      _inc: 'EventApprovalStepValidatorsIncInput',
      _set: 'EventApprovalStepValidatorsSetInput',
      where: 'EventApprovalStepValidatorsBoolExp',
    },
    updateEventApprovalStepValidatorsByPk: {
      _inc: 'EventApprovalStepValidatorsIncInput',
      _set: 'EventApprovalStepValidatorsSetInput',
      pkColumns: 'EventApprovalStepValidatorsPkColumnsInput',
    },
    updateEventApprovalStepValidatorsMany: {
      updates: 'EventApprovalStepValidatorsUpdates',
    },
    updateEventByPk: {
      _append: 'EventAppendInput',
      _deleteAtPath: 'EventDeleteAtPathInput',
      _deleteElem: 'EventDeleteElemInput',
      _deleteKey: 'EventDeleteKeyInput',
      _inc: 'EventIncInput',
      _prepend: 'EventPrependInput',
      _set: 'EventSetInput',
      pkColumns: 'EventPkColumnsInput',
    },
    updateEventChangeRole: {
      _inc: 'EventChangeRoleIncInput',
      _set: 'EventChangeRoleSetInput',
      where: 'EventChangeRoleBoolExp',
    },
    updateEventChangeRoleByPk: {
      _inc: 'EventChangeRoleIncInput',
      _set: 'EventChangeRoleSetInput',
      pkColumns: 'EventChangeRolePkColumnsInput',
    },
    updateEventChangeRoleMany: {
      updates: 'EventChangeRoleUpdates',
    },
    updateEventJoin: {
      _inc: 'EventJoinIncInput',
      _set: 'EventJoinSetInput',
      where: 'EventJoinBoolExp',
    },
    updateEventJoinByPk: {
      _inc: 'EventJoinIncInput',
      _set: 'EventJoinSetInput',
      pkColumns: 'EventJoinPkColumnsInput',
    },
    updateEventJoinMany: {
      updates: 'EventJoinUpdates',
    },
    updateEventMany: {
      updates: 'EventUpdates',
    },
    updateEventOrganisingTeams: {
      _inc: 'EventOrganisingTeamsIncInput',
      _set: 'EventOrganisingTeamsSetInput',
      where: 'EventOrganisingTeamsBoolExp',
    },
    updateEventOrganisingTeamsByPk: {
      _inc: 'EventOrganisingTeamsIncInput',
      _set: 'EventOrganisingTeamsSetInput',
      pkColumns: 'EventOrganisingTeamsPkColumnsInput',
    },
    updateEventOrganisingTeamsMany: {
      updates: 'EventOrganisingTeamsUpdates',
    },
    updateEventRole: {
      _inc: 'EventRoleIncInput',
      _set: 'EventRoleSetInput',
      where: 'EventRoleBoolExp',
    },
    updateEventRoleByPk: {
      _inc: 'EventRoleIncInput',
      _set: 'EventRoleSetInput',
      pkColumns: 'EventRolePkColumnsInput',
    },
    updateEventRoleMany: {
      updates: 'EventRoleUpdates',
    },
    updateEventTags: {
      _inc: 'EventTagsIncInput',
      _set: 'EventTagsSetInput',
      where: 'EventTagsBoolExp',
    },
    updateEventTagsByPk: {
      _inc: 'EventTagsIncInput',
      _set: 'EventTagsSetInput',
      pkColumns: 'EventTagsPkColumnsInput',
    },
    updateEventTagsMany: {
      updates: 'EventTagsUpdates',
    },
    updateEventTeams: {
      _inc: 'EventTeamsIncInput',
      _set: 'EventTeamsSetInput',
      where: 'EventTeamsBoolExp',
    },
    updateEventTeamsByPk: {
      _inc: 'EventTeamsIncInput',
      _set: 'EventTeamsSetInput',
      pkColumns: 'EventTeamsPkColumnsInput',
    },
    updateEventTeamsMany: {
      updates: 'EventTeamsUpdates',
    },
    updateExpense: {
      _inc: 'ExpenseIncInput',
      _set: 'ExpenseSetInput',
      where: 'ExpenseBoolExp',
    },
    updateExpenseByPk: {
      _inc: 'ExpenseIncInput',
      _set: 'ExpenseSetInput',
      pkColumns: 'ExpensePkColumnsInput',
    },
    updateExpenseMany: {
      updates: 'ExpenseUpdates',
    },
    updateFavorite: {
      _inc: 'FavoriteIncInput',
      _set: 'FavoriteSetInput',
      where: 'FavoriteBoolExp',
    },
    updateFavoriteByPk: {
      _inc: 'FavoriteIncInput',
      _set: 'FavoriteSetInput',
      pkColumns: 'FavoritePkColumnsInput',
    },
    updateFavoriteMany: {
      updates: 'FavoriteUpdates',
    },
    updateForm: {
      _append: 'FormAppendInput',
      _deleteAtPath: 'FormDeleteAtPathInput',
      _deleteElem: 'FormDeleteElemInput',
      _deleteKey: 'FormDeleteKeyInput',
      _inc: 'FormIncInput',
      _prepend: 'FormPrependInput',
      _set: 'FormSetInput',
      where: 'FormBoolExp',
    },
    updateFormByPk: {
      _append: 'FormAppendInput',
      _deleteAtPath: 'FormDeleteAtPathInput',
      _deleteElem: 'FormDeleteElemInput',
      _deleteKey: 'FormDeleteKeyInput',
      _inc: 'FormIncInput',
      _prepend: 'FormPrependInput',
      _set: 'FormSetInput',
      pkColumns: 'FormPkColumnsInput',
    },
    updateFormEdit: {
      _append: 'FormEditAppendInput',
      _deleteAtPath: 'FormEditDeleteAtPathInput',
      _deleteElem: 'FormEditDeleteElemInput',
      _deleteKey: 'FormEditDeleteKeyInput',
      _inc: 'FormEditIncInput',
      _prepend: 'FormEditPrependInput',
      _set: 'FormEditSetInput',
      where: 'FormEditBoolExp',
    },
    updateFormEditByPk: {
      _append: 'FormEditAppendInput',
      _deleteAtPath: 'FormEditDeleteAtPathInput',
      _deleteElem: 'FormEditDeleteElemInput',
      _deleteKey: 'FormEditDeleteKeyInput',
      _inc: 'FormEditIncInput',
      _prepend: 'FormEditPrependInput',
      _set: 'FormEditSetInput',
      pkColumns: 'FormEditPkColumnsInput',
    },
    updateFormEditMany: {
      updates: 'FormEditUpdates',
    },
    updateFormMany: {
      updates: 'FormUpdates',
    },
    updateFormSubmission: {
      _append: 'FormSubmissionAppendInput',
      _deleteAtPath: 'FormSubmissionDeleteAtPathInput',
      _deleteElem: 'FormSubmissionDeleteElemInput',
      _deleteKey: 'FormSubmissionDeleteKeyInput',
      _inc: 'FormSubmissionIncInput',
      _prepend: 'FormSubmissionPrependInput',
      _set: 'FormSubmissionSetInput',
      where: 'FormSubmissionBoolExp',
    },
    updateFormSubmissionByPk: {
      _append: 'FormSubmissionAppendInput',
      _deleteAtPath: 'FormSubmissionDeleteAtPathInput',
      _deleteElem: 'FormSubmissionDeleteElemInput',
      _deleteKey: 'FormSubmissionDeleteKeyInput',
      _inc: 'FormSubmissionIncInput',
      _prepend: 'FormSubmissionPrependInput',
      _set: 'FormSubmissionSetInput',
      pkColumns: 'FormSubmissionPkColumnsInput',
    },
    updateFormSubmissionEdit: {
      _append: 'FormSubmissionEditAppendInput',
      _deleteAtPath: 'FormSubmissionEditDeleteAtPathInput',
      _deleteElem: 'FormSubmissionEditDeleteElemInput',
      _deleteKey: 'FormSubmissionEditDeleteKeyInput',
      _inc: 'FormSubmissionEditIncInput',
      _prepend: 'FormSubmissionEditPrependInput',
      _set: 'FormSubmissionEditSetInput',
      where: 'FormSubmissionEditBoolExp',
    },
    updateFormSubmissionEditByPk: {
      _append: 'FormSubmissionEditAppendInput',
      _deleteAtPath: 'FormSubmissionEditDeleteAtPathInput',
      _deleteElem: 'FormSubmissionEditDeleteElemInput',
      _deleteKey: 'FormSubmissionEditDeleteKeyInput',
      _inc: 'FormSubmissionEditIncInput',
      _prepend: 'FormSubmissionEditPrependInput',
      _set: 'FormSubmissionEditSetInput',
      pkColumns: 'FormSubmissionEditPkColumnsInput',
    },
    updateFormSubmissionEditMany: {
      updates: 'FormSubmissionEditUpdates',
    },
    updateFormSubmissionMany: {
      updates: 'FormSubmissionUpdates',
    },
    updateIndividual: {
      _inc: 'IndividualIncInput',
      _set: 'IndividualSetInput',
      where: 'IndividualBoolExp',
    },
    updateIndividualByPk: {
      _inc: 'IndividualIncInput',
      _set: 'IndividualSetInput',
      pkColumns: 'IndividualPkColumnsInput',
    },
    updateIndividualMany: {
      updates: 'IndividualUpdates',
    },
    updateIssue: {
      _inc: 'IssueIncInput',
      _set: 'IssueSetInput',
      where: 'IssueBoolExp',
    },
    updateIssueByPk: {
      _inc: 'IssueIncInput',
      _set: 'IssueSetInput',
      pkColumns: 'IssuePkColumnsInput',
    },
    updateIssueMany: {
      updates: 'IssueUpdates',
    },
    updateMikroOrmMigrations: {
      _inc: 'MikroOrmMigrationsIncInput',
      _set: 'MikroOrmMigrationsSetInput',
      where: 'MikroOrmMigrationsBoolExp',
    },
    updateMikroOrmMigrationsByPk: {
      _inc: 'MikroOrmMigrationsIncInput',
      _set: 'MikroOrmMigrationsSetInput',
      pkColumns: 'MikroOrmMigrationsPkColumnsInput',
    },
    updateMikroOrmMigrationsMany: {
      updates: 'MikroOrmMigrationsUpdates',
    },
    updatePole: {
      _inc: 'PoleIncInput',
      _set: 'PoleSetInput',
      where: 'PoleBoolExp',
    },
    updatePoleByPk: {
      _inc: 'PoleIncInput',
      _set: 'PoleSetInput',
      pkColumns: 'PolePkColumnsInput',
    },
    updatePoleMany: {
      updates: 'PoleUpdates',
    },
    updateProject: {
      _inc: 'ProjectIncInput',
      _set: 'ProjectSetInput',
      where: 'ProjectBoolExp',
    },
    updateProjectByPk: {
      _inc: 'ProjectIncInput',
      _set: 'ProjectSetInput',
      pkColumns: 'ProjectPkColumnsInput',
    },
    updateProjectMany: {
      updates: 'ProjectUpdates',
    },
    updateProjectRole: {
      _inc: 'ProjectRoleIncInput',
      _set: 'ProjectRoleSetInput',
      where: 'ProjectRoleBoolExp',
    },
    updateProjectRoleByPk: {
      _inc: 'ProjectRoleIncInput',
      _set: 'ProjectRoleSetInput',
      pkColumns: 'ProjectRolePkColumnsInput',
    },
    updateProjectRoleMany: {
      updates: 'ProjectRoleUpdates',
    },
    updateProjectSupervisors: {
      _inc: 'ProjectSupervisorsIncInput',
      _set: 'ProjectSupervisorsSetInput',
      where: 'ProjectSupervisorsBoolExp',
    },
    updateProjectSupervisorsByPk: {
      _inc: 'ProjectSupervisorsIncInput',
      _set: 'ProjectSupervisorsSetInput',
      pkColumns: 'ProjectSupervisorsPkColumnsInput',
    },
    updateProjectSupervisorsMany: {
      updates: 'ProjectSupervisorsUpdates',
    },
    updateProjectTags: {
      _inc: 'ProjectTagsIncInput',
      _set: 'ProjectTagsSetInput',
      where: 'ProjectTagsBoolExp',
    },
    updateProjectTagsByPk: {
      _inc: 'ProjectTagsIncInput',
      _set: 'ProjectTagsSetInput',
      pkColumns: 'ProjectTagsPkColumnsInput',
    },
    updateProjectTagsMany: {
      updates: 'ProjectTagsUpdates',
    },
    updateReaction: {
      _inc: 'ReactionIncInput',
      _set: 'ReactionSetInput',
      where: 'ReactionBoolExp',
    },
    updateReactionByPk: {
      _inc: 'ReactionIncInput',
      _set: 'ReactionSetInput',
      pkColumns: 'ReactionPkColumnsInput',
    },
    updateReactionMany: {
      updates: 'ReactionUpdates',
    },
    updateReport: {
      _inc: 'ReportIncInput',
      _set: 'ReportSetInput',
      where: 'ReportBoolExp',
    },
    updateReportByPk: {
      _inc: 'ReportIncInput',
      _set: 'ReportSetInput',
      pkColumns: 'ReportPkColumnsInput',
    },
    updateReportMany: {
      updates: 'ReportUpdates',
    },
    updateRole: {
      _inc: 'RoleIncInput',
      _set: 'RoleSetInput',
      where: 'RoleBoolExp',
    },
    updateRoleByPk: {
      _inc: 'RoleIncInput',
      _set: 'RoleSetInput',
      pkColumns: 'RolePkColumnsInput',
    },
    updateRoleMany: {
      updates: 'RoleUpdates',
    },
    updateSession: {
      _append: 'SessionAppendInput',
      _deleteAtPath: 'SessionDeleteAtPathInput',
      _deleteElem: 'SessionDeleteElemInput',
      _deleteKey: 'SessionDeleteKeyInput',
      _inc: 'SessionIncInput',
      _prepend: 'SessionPrependInput',
      _set: 'SessionSetInput',
      where: 'SessionBoolExp',
    },
    updateSessionByPk: {
      _append: 'SessionAppendInput',
      _deleteAtPath: 'SessionDeleteAtPathInput',
      _deleteElem: 'SessionDeleteElemInput',
      _deleteKey: 'SessionDeleteKeyInput',
      _inc: 'SessionIncInput',
      _prepend: 'SessionPrependInput',
      _set: 'SessionSetInput',
      pkColumns: 'SessionPkColumnsInput',
    },
    updateSessionMany: {
      updates: 'SessionUpdates',
    },
    updateShortcut: {
      _inc: 'ShortcutIncInput',
      _set: 'ShortcutSetInput',
      where: 'ShortcutBoolExp',
    },
    updateShortcutByPk: {
      _inc: 'ShortcutIncInput',
      _set: 'ShortcutSetInput',
      pkColumns: 'ShortcutPkColumnsInput',
    },
    updateShortcutMany: {
      updates: 'ShortcutUpdates',
    },
    updateSocial: {
      _inc: 'SocialIncInput',
      _set: 'SocialSetInput',
      where: 'SocialBoolExp',
    },
    updateSocialByPk: {
      _inc: 'SocialIncInput',
      _set: 'SocialSetInput',
      pkColumns: 'SocialPkColumnsInput',
    },
    updateSocialMany: {
      updates: 'SocialUpdates',
    },
    updateSubject: {
      _inc: 'SubjectIncInput',
      _set: 'SubjectSetInput',
      where: 'SubjectBoolExp',
    },
    updateSubjectByPk: {
      _inc: 'SubjectIncInput',
      _set: 'SubjectSetInput',
      pkColumns: 'SubjectPkColumnsInput',
    },
    updateSubjectClasses: {
      _inc: 'SubjectClassesIncInput',
      _set: 'SubjectClassesSetInput',
      where: 'SubjectClassesBoolExp',
    },
    updateSubjectClassesByPk: {
      _inc: 'SubjectClassesIncInput',
      _set: 'SubjectClassesSetInput',
      pkColumns: 'SubjectClassesPkColumnsInput',
    },
    updateSubjectClassesMany: {
      updates: 'SubjectClassesUpdates',
    },
    updateSubjectMany: {
      updates: 'SubjectUpdates',
    },
    updateTag: {
      _inc: 'TagIncInput',
      _set: 'TagSetInput',
      where: 'TagBoolExp',
    },
    updateTagByPk: {
      _inc: 'TagIncInput',
      _set: 'TagSetInput',
      pkColumns: 'TagPkColumnsInput',
    },
    updateTagMany: {
      updates: 'TagUpdates',
    },
    updateTeam: {
      _inc: 'TeamIncInput',
      _set: 'TeamSetInput',
      where: 'TeamBoolExp',
    },
    updateTeamByPk: {
      _inc: 'TeamIncInput',
      _set: 'TeamSetInput',
      pkColumns: 'TeamPkColumnsInput',
    },
    updateTeamCategories: {
      _inc: 'TeamCategoriesIncInput',
      _set: 'TeamCategoriesSetInput',
      where: 'TeamCategoriesBoolExp',
    },
    updateTeamCategoriesByPk: {
      _inc: 'TeamCategoriesIncInput',
      _set: 'TeamCategoriesSetInput',
      pkColumns: 'TeamCategoriesPkColumnsInput',
    },
    updateTeamCategoriesMany: {
      updates: 'TeamCategoriesUpdates',
    },
    updateTeamEvents: {
      _inc: 'TeamEventsIncInput',
      _set: 'TeamEventsSetInput',
      where: 'TeamEventsBoolExp',
    },
    updateTeamEventsByPk: {
      _inc: 'TeamEventsIncInput',
      _set: 'TeamEventsSetInput',
      pkColumns: 'TeamEventsPkColumnsInput',
    },
    updateTeamEventsMany: {
      updates: 'TeamEventsUpdates',
    },
    updateTeamFinance: {
      _inc: 'TeamFinanceIncInput',
      _set: 'TeamFinanceSetInput',
      where: 'TeamFinanceBoolExp',
    },
    updateTeamFinanceByPk: {
      _inc: 'TeamFinanceIncInput',
      _set: 'TeamFinanceSetInput',
      pkColumns: 'TeamFinancePkColumnsInput',
    },
    updateTeamFinanceMany: {
      updates: 'TeamFinanceUpdates',
    },
    updateTeamJoin: {
      _inc: 'TeamJoinIncInput',
      _set: 'TeamJoinSetInput',
      where: 'TeamJoinBoolExp',
    },
    updateTeamJoinByPk: {
      _inc: 'TeamJoinIncInput',
      _set: 'TeamJoinSetInput',
      pkColumns: 'TeamJoinPkColumnsInput',
    },
    updateTeamJoinMany: {
      updates: 'TeamJoinUpdates',
    },
    updateTeamMany: {
      updates: 'TeamUpdates',
    },
    updateTeamMember: {
      _inc: 'TeamMemberIncInput',
      _set: 'TeamMemberSetInput',
      where: 'TeamMemberBoolExp',
    },
    updateTeamMemberByPk: {
      _inc: 'TeamMemberIncInput',
      _set: 'TeamMemberSetInput',
      pkColumns: 'TeamMemberPkColumnsInput',
    },
    updateTeamMemberMany: {
      updates: 'TeamMemberUpdates',
    },
    updateTeamMemberRoles: {
      _inc: 'TeamMemberRolesIncInput',
      _set: 'TeamMemberRolesSetInput',
      where: 'TeamMemberRolesBoolExp',
    },
    updateTeamMemberRolesByPk: {
      _inc: 'TeamMemberRolesIncInput',
      _set: 'TeamMemberRolesSetInput',
      pkColumns: 'TeamMemberRolesPkColumnsInput',
    },
    updateTeamMemberRolesMany: {
      updates: 'TeamMemberRolesUpdates',
    },
    updateTeamMetric: {
      _inc: 'TeamMetricIncInput',
      _set: 'TeamMetricSetInput',
      where: 'TeamMetricBoolExp',
    },
    updateTeamMetricByPk: {
      _inc: 'TeamMetricIncInput',
      _set: 'TeamMetricSetInput',
      pkColumns: 'TeamMetricPkColumnsInput',
    },
    updateTeamMetricMany: {
      updates: 'TeamMetricUpdates',
    },
    updateTenant: {
      _inc: 'TenantIncInput',
      _set: 'TenantSetInput',
      where: 'TenantBoolExp',
    },
    updateTenantByPk: {
      _inc: 'TenantIncInput',
      _set: 'TenantSetInput',
      pkColumns: 'TenantPkColumnsInput',
    },
    updateTenantMany: {
      updates: 'TenantUpdates',
    },
    updateUpload: {
      _inc: 'UploadIncInput',
      _set: 'UploadSetInput',
      where: 'UploadBoolExp',
    },
    updateUploadByPk: {
      _inc: 'UploadIncInput',
      _set: 'UploadSetInput',
      pkColumns: 'UploadPkColumnsInput',
    },
    updateUploadMany: {
      updates: 'UploadUpdates',
    },
    updateUserInfo: {
      _inc: 'UserInfoIncInput',
      _set: 'UserInfoSetInput',
      where: 'UserInfoBoolExp',
    },
    updateUserInfoByPk: {
      _inc: 'UserInfoIncInput',
      _set: 'UserInfoSetInput',
      pkColumns: 'UserInfoPkColumnsInput',
    },
    updateUserInfoMany: {
      updates: 'UserInfoUpdates',
    },
    updateValidation: {
      _inc: 'ValidationIncInput',
      _set: 'ValidationSetInput',
      where: 'ValidationBoolExp',
    },
    updateValidationByPk: {
      _inc: 'ValidationIncInput',
      _set: 'ValidationSetInput',
      pkColumns: 'ValidationPkColumnsInput',
    },
    updateValidationMany: {
      updates: 'ValidationUpdates',
    },
    updateVote: {
      _inc: 'VoteIncInput',
      _set: 'VoteSetInput',
      where: 'VoteBoolExp',
    },
    updateVoteByPk: {
      _inc: 'VoteIncInput',
      _set: 'VoteSetInput',
      pkColumns: 'VotePkColumnsInput',
    },
    updateVoteMany: {
      updates: 'VoteUpdates',
    },
    login: {
      dto: 'LoginInput',
    },
  },
  OrderBy: 'enum' as const,
  Pole: {
    changeRoles: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    changeRolesAggregate: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
  },
  PoleAggregateBoolExp: {
    bool_and: 'poleAggregateBoolExpBool_and',
    bool_or: 'poleAggregateBoolExpBool_or',
    count: 'poleAggregateBoolExpCount',
  },
  poleAggregateBoolExpBool_and: {
    arguments: 'PoleSelectColumnPoleAggregateBoolExpBool_andArgumentsColumns',
    filter: 'PoleBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  poleAggregateBoolExpBool_or: {
    arguments: 'PoleSelectColumnPoleAggregateBoolExpBool_orArgumentsColumns',
    filter: 'PoleBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  poleAggregateBoolExpCount: {
    arguments: 'PoleSelectColumn',
    filter: 'PoleBoolExp',
    predicate: 'IntComparisonExp',
  },
  PoleAggregateFields: {
    count: {
      columns: 'PoleSelectColumn',
    },
  },
  PoleAggregateOrderBy: {
    avg: 'PoleAvgOrderBy',
    count: 'OrderBy',
    max: 'PoleMaxOrderBy',
    min: 'PoleMinOrderBy',
    stddev: 'PoleStddevOrderBy',
    stddevPop: 'PoleStddevPopOrderBy',
    stddevSamp: 'PoleStddevSampOrderBy',
    sum: 'PoleSumOrderBy',
    varPop: 'PoleVarPopOrderBy',
    varSamp: 'PoleVarSampOrderBy',
    variance: 'PoleVarianceOrderBy',
  },
  PoleArrRelInsertInput: {
    data: 'PoleInsertInput',
    onConflict: 'PoleOnConflict',
  },
  PoleAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  PoleBoolExp: {
    _and: 'PoleBoolExp',
    _not: 'PoleBoolExp',
    _or: 'PoleBoolExp',
    category: 'StringComparisonExp',
    changeRoles: 'ChangeRoleBoolExp',
    changeRolesAggregate: 'ChangeRoleAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    description: 'StringComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    name: 'StringComparisonExp',
    required: 'BooleanComparisonExp',
    team: 'TeamBoolExp',
    teamId: 'BigintComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  PoleConstraint: 'enum' as const,
  PoleIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  PoleInsertInput: {
    changeRoles: 'ChangeRoleArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    team: 'TeamObjRelInsertInput',
    teamId: 'bigint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  PoleMaxOrderBy: {
    category: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  PoleMinOrderBy: {
    category: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  PoleObjRelInsertInput: {
    data: 'PoleInsertInput',
    onConflict: 'PoleOnConflict',
  },
  PoleOnConflict: {
    constraint: 'PoleConstraint',
    updateColumns: 'PoleUpdateColumn',
    where: 'PoleBoolExp',
  },
  PoleOrderBy: {
    category: 'OrderBy',
    changeRolesAggregate: 'ChangeRoleAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    name: 'OrderBy',
    required: 'OrderBy',
    team: 'TeamOrderBy',
    teamId: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  PolePkColumnsInput: {
    id: 'bigint',
  },
  PoleSelectColumn: 'enum' as const,
  PoleSelectColumnPoleAggregateBoolExpBool_andArgumentsColumns: 'enum' as const,
  PoleSelectColumnPoleAggregateBoolExpBool_orArgumentsColumns: 'enum' as const,
  PoleSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  PoleStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  PoleStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  PoleStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  PoleStreamCursorInput: {
    initialValue: 'PoleStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  PoleStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  PoleSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  PoleUpdateColumn: 'enum' as const,
  PoleUpdates: {
    _inc: 'PoleIncInput',
    _set: 'PoleSetInput',
    where: 'PoleBoolExp',
  },
  PoleVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  PoleVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  PoleVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  Project: {
    actions: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    actionsAggregate: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    events: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    eventsAggregate: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    projectRoles: {
      distinctOn: 'ProjectRoleSelectColumn',
      orderBy: 'ProjectRoleOrderBy',
      where: 'ProjectRoleBoolExp',
    },
    projectRolesAggregate: {
      distinctOn: 'ProjectRoleSelectColumn',
      orderBy: 'ProjectRoleOrderBy',
      where: 'ProjectRoleBoolExp',
    },
    projectSupervisors: {
      distinctOn: 'ProjectSupervisorsSelectColumn',
      orderBy: 'ProjectSupervisorsOrderBy',
      where: 'ProjectSupervisorsBoolExp',
    },
    projectSupervisorsAggregate: {
      distinctOn: 'ProjectSupervisorsSelectColumn',
      orderBy: 'ProjectSupervisorsOrderBy',
      where: 'ProjectSupervisorsBoolExp',
    },
    projectTags: {
      distinctOn: 'ProjectTagsSelectColumn',
      orderBy: 'ProjectTagsOrderBy',
      where: 'ProjectTagsBoolExp',
    },
    projectTagsAggregate: {
      distinctOn: 'ProjectTagsSelectColumn',
      orderBy: 'ProjectTagsOrderBy',
      where: 'ProjectTagsBoolExp',
    },
    teamFinances: {
      distinctOn: 'TeamFinanceSelectColumn',
      orderBy: 'TeamFinanceOrderBy',
      where: 'TeamFinanceBoolExp',
    },
    teamFinancesAggregate: {
      distinctOn: 'TeamFinanceSelectColumn',
      orderBy: 'TeamFinanceOrderBy',
      where: 'TeamFinanceBoolExp',
    },
  },
  ProjectAggregateBoolExp: {
    bool_and: 'projectAggregateBoolExpBool_and',
    bool_or: 'projectAggregateBoolExpBool_or',
    count: 'projectAggregateBoolExpCount',
  },
  projectAggregateBoolExpBool_and: {
    arguments: 'ProjectSelectColumnProjectAggregateBoolExpBool_andArgumentsColumns',
    filter: 'ProjectBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  projectAggregateBoolExpBool_or: {
    arguments: 'ProjectSelectColumnProjectAggregateBoolExpBool_orArgumentsColumns',
    filter: 'ProjectBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  projectAggregateBoolExpCount: {
    arguments: 'ProjectSelectColumn',
    filter: 'ProjectBoolExp',
    predicate: 'IntComparisonExp',
  },
  ProjectAggregateFields: {
    count: {
      columns: 'ProjectSelectColumn',
    },
  },
  ProjectAggregateOrderBy: {
    avg: 'ProjectAvgOrderBy',
    count: 'OrderBy',
    max: 'ProjectMaxOrderBy',
    min: 'ProjectMinOrderBy',
    stddev: 'ProjectStddevOrderBy',
    stddevPop: 'ProjectStddevPopOrderBy',
    stddevSamp: 'ProjectStddevSampOrderBy',
    sum: 'ProjectSumOrderBy',
    varPop: 'ProjectVarPopOrderBy',
    varSamp: 'ProjectVarSampOrderBy',
    variance: 'ProjectVarianceOrderBy',
  },
  ProjectArrRelInsertInput: {
    data: 'ProjectInsertInput',
    onConflict: 'ProjectOnConflict',
  },
  ProjectAvgOrderBy: {
    actualBudget: 'OrderBy',
    createdById: 'OrderBy',
    expectedBudget: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectBoolExp: {
    _and: 'ProjectBoolExp',
    _not: 'ProjectBoolExp',
    _or: 'ProjectBoolExp',
    actions: 'ActionBoolExp',
    actionsAggregate: 'ActionAggregateBoolExp',
    actualBudget: 'FloatComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    description: 'StringComparisonExp',
    events: 'EventBoolExp',
    eventsAggregate: 'EventAggregateBoolExp',
    expectedBudget: 'FloatComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    imageId: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    isPrivate: 'BooleanComparisonExp',
    name: 'StringComparisonExp',
    projectRoles: 'ProjectRoleBoolExp',
    projectRolesAggregate: 'ProjectRoleAggregateBoolExp',
    projectSupervisors: 'ProjectSupervisorsBoolExp',
    projectSupervisorsAggregate: 'ProjectSupervisorsAggregateBoolExp',
    projectTags: 'ProjectTagsBoolExp',
    projectTagsAggregate: 'ProjectTagsAggregateBoolExp',
    slug: 'StringComparisonExp',
    team: 'TeamBoolExp',
    teamFinances: 'TeamFinanceBoolExp',
    teamFinancesAggregate: 'TeamFinanceAggregateBoolExp',
    teamId: 'BigintComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    upload: 'UploadBoolExp',
  },
  ProjectConstraint: 'enum' as const,
  ProjectIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    imageId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  ProjectInsertInput: {
    actions: 'ActionArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    events: 'EventArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    projectRoles: 'ProjectRoleArrRelInsertInput',
    projectSupervisors: 'ProjectSupervisorsArrRelInsertInput',
    projectTags: 'ProjectTagsArrRelInsertInput',
    team: 'TeamObjRelInsertInput',
    teamFinances: 'TeamFinanceArrRelInsertInput',
    teamId: 'bigint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    upload: 'UploadObjRelInsertInput',
  },
  ProjectMaxOrderBy: {
    actualBudget: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    expectedBudget: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    name: 'OrderBy',
    slug: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectMinOrderBy: {
    actualBudget: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    expectedBudget: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    name: 'OrderBy',
    slug: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectObjRelInsertInput: {
    data: 'ProjectInsertInput',
    onConflict: 'ProjectOnConflict',
  },
  ProjectOnConflict: {
    constraint: 'ProjectConstraint',
    updateColumns: 'ProjectUpdateColumn',
    where: 'ProjectBoolExp',
  },
  ProjectOrderBy: {
    actionsAggregate: 'ActionAggregateOrderBy',
    actualBudget: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    eventsAggregate: 'EventAggregateOrderBy',
    expectedBudget: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    individual: 'IndividualOrderBy',
    isPrivate: 'OrderBy',
    name: 'OrderBy',
    projectRolesAggregate: 'ProjectRoleAggregateOrderBy',
    projectSupervisorsAggregate: 'ProjectSupervisorsAggregateOrderBy',
    projectTagsAggregate: 'ProjectTagsAggregateOrderBy',
    slug: 'OrderBy',
    team: 'TeamOrderBy',
    teamFinancesAggregate: 'TeamFinanceAggregateOrderBy',
    teamId: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    upload: 'UploadOrderBy',
  },
  ProjectPkColumnsInput: {
    id: 'bigint',
  },
  ProjectRole: {
    eventRoles: {
      distinctOn: 'EventRoleSelectColumn',
      orderBy: 'EventRoleOrderBy',
      where: 'EventRoleBoolExp',
    },
    eventRolesAggregate: {
      distinctOn: 'EventRoleSelectColumn',
      orderBy: 'EventRoleOrderBy',
      where: 'EventRoleBoolExp',
    },
  },
  ProjectRoleAggregateBoolExp: {
    bool_and: 'projectRoleAggregateBoolExpBool_and',
    bool_or: 'projectRoleAggregateBoolExpBool_or',
    count: 'projectRoleAggregateBoolExpCount',
  },
  projectRoleAggregateBoolExpBool_and: {
    arguments: 'ProjectRoleSelectColumnProjectRoleAggregateBoolExpBool_andArgumentsColumns',
    filter: 'ProjectRoleBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  projectRoleAggregateBoolExpBool_or: {
    arguments: 'ProjectRoleSelectColumnProjectRoleAggregateBoolExpBool_orArgumentsColumns',
    filter: 'ProjectRoleBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  projectRoleAggregateBoolExpCount: {
    arguments: 'ProjectRoleSelectColumn',
    filter: 'ProjectRoleBoolExp',
    predicate: 'IntComparisonExp',
  },
  ProjectRoleAggregateFields: {
    count: {
      columns: 'ProjectRoleSelectColumn',
    },
  },
  ProjectRoleAggregateOrderBy: {
    avg: 'ProjectRoleAvgOrderBy',
    count: 'OrderBy',
    max: 'ProjectRoleMaxOrderBy',
    min: 'ProjectRoleMinOrderBy',
    stddev: 'ProjectRoleStddevOrderBy',
    stddevPop: 'ProjectRoleStddevPopOrderBy',
    stddevSamp: 'ProjectRoleStddevSampOrderBy',
    sum: 'ProjectRoleSumOrderBy',
    varPop: 'ProjectRoleVarPopOrderBy',
    varSamp: 'ProjectRoleVarSampOrderBy',
    variance: 'ProjectRoleVarianceOrderBy',
  },
  ProjectRoleArrRelInsertInput: {
    data: 'ProjectRoleInsertInput',
    onConflict: 'ProjectRoleOnConflict',
  },
  ProjectRoleAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectRoleBoolExp: {
    _and: 'ProjectRoleBoolExp',
    _not: 'ProjectRoleBoolExp',
    _or: 'ProjectRoleBoolExp',
    autoAccept: 'BooleanComparisonExp',
    color: 'StringComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    description: 'StringComparisonExp',
    eventRoles: 'EventRoleBoolExp',
    eventRolesAggregate: 'EventRoleAggregateBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    name: 'StringComparisonExp',
    project: 'ProjectBoolExp',
    projectId: 'BigintComparisonExp',
    required: 'BooleanComparisonExp',
    rewardMaximum: 'SmallintComparisonExp',
    rewardMinimum: 'SmallintComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  ProjectRoleConstraint: 'enum' as const,
  ProjectRoleIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    projectId: 'bigint',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenantId: 'bigint',
  },
  ProjectRoleInsertInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventRoles: 'EventRoleArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    project: 'ProjectObjRelInsertInput',
    projectId: 'bigint',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  ProjectRoleMaxOrderBy: {
    color: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    projectId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectRoleMinOrderBy: {
    color: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    projectId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectRoleObjRelInsertInput: {
    data: 'ProjectRoleInsertInput',
    onConflict: 'ProjectRoleOnConflict',
  },
  ProjectRoleOnConflict: {
    constraint: 'ProjectRoleConstraint',
    updateColumns: 'ProjectRoleUpdateColumn',
    where: 'ProjectRoleBoolExp',
  },
  ProjectRoleOrderBy: {
    autoAccept: 'OrderBy',
    color: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    eventRolesAggregate: 'EventRoleAggregateOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    name: 'OrderBy',
    project: 'ProjectOrderBy',
    projectId: 'OrderBy',
    required: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  ProjectRolePkColumnsInput: {
    id: 'bigint',
  },
  ProjectRoleSelectColumn: 'enum' as const,
  ProjectRoleSelectColumnProjectRoleAggregateBoolExpBool_andArgumentsColumns: 'enum' as const,
  ProjectRoleSelectColumnProjectRoleAggregateBoolExpBool_orArgumentsColumns: 'enum' as const,
  ProjectRoleSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    projectId: 'bigint',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenantId: 'bigint',
  },
  ProjectRoleStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectRoleStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectRoleStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectRoleStreamCursorInput: {
    initialValue: 'ProjectRoleStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ProjectRoleStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    projectId: 'bigint',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenantId: 'bigint',
  },
  ProjectRoleSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectRoleUpdateColumn: 'enum' as const,
  ProjectRoleUpdates: {
    _inc: 'ProjectRoleIncInput',
    _set: 'ProjectRoleSetInput',
    where: 'ProjectRoleBoolExp',
  },
  ProjectRoleVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectRoleVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectRoleVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    rewardMaximum: 'OrderBy',
    rewardMinimum: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectSelectColumn: 'enum' as const,
  ProjectSelectColumnProjectAggregateBoolExpBool_andArgumentsColumns: 'enum' as const,
  ProjectSelectColumnProjectAggregateBoolExpBool_orArgumentsColumns: 'enum' as const,
  ProjectSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  ProjectStddevOrderBy: {
    actualBudget: 'OrderBy',
    createdById: 'OrderBy',
    expectedBudget: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectStddevPopOrderBy: {
    actualBudget: 'OrderBy',
    createdById: 'OrderBy',
    expectedBudget: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectStddevSampOrderBy: {
    actualBudget: 'OrderBy',
    createdById: 'OrderBy',
    expectedBudget: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectStreamCursorInput: {
    initialValue: 'ProjectStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ProjectStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  ProjectSumOrderBy: {
    actualBudget: 'OrderBy',
    createdById: 'OrderBy',
    expectedBudget: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectSupervisorsAggregateBoolExp: {
    count: 'projectSupervisorsAggregateBoolExpCount',
  },
  projectSupervisorsAggregateBoolExpCount: {
    arguments: 'ProjectSupervisorsSelectColumn',
    filter: 'ProjectSupervisorsBoolExp',
    predicate: 'IntComparisonExp',
  },
  ProjectSupervisorsAggregateFields: {
    count: {
      columns: 'ProjectSupervisorsSelectColumn',
    },
  },
  ProjectSupervisorsAggregateOrderBy: {
    avg: 'ProjectSupervisorsAvgOrderBy',
    count: 'OrderBy',
    max: 'ProjectSupervisorsMaxOrderBy',
    min: 'ProjectSupervisorsMinOrderBy',
    stddev: 'ProjectSupervisorsStddevOrderBy',
    stddevPop: 'ProjectSupervisorsStddevPopOrderBy',
    stddevSamp: 'ProjectSupervisorsStddevSampOrderBy',
    sum: 'ProjectSupervisorsSumOrderBy',
    varPop: 'ProjectSupervisorsVarPopOrderBy',
    varSamp: 'ProjectSupervisorsVarSampOrderBy',
    variance: 'ProjectSupervisorsVarianceOrderBy',
  },
  ProjectSupervisorsArrRelInsertInput: {
    data: 'ProjectSupervisorsInsertInput',
    onConflict: 'ProjectSupervisorsOnConflict',
  },
  ProjectSupervisorsAvgOrderBy: {
    projectId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  ProjectSupervisorsBoolExp: {
    _and: 'ProjectSupervisorsBoolExp',
    _not: 'ProjectSupervisorsBoolExp',
    _or: 'ProjectSupervisorsBoolExp',
    project: 'ProjectBoolExp',
    projectId: 'BigintComparisonExp',
    teamMember: 'TeamMemberBoolExp',
    teamMemberId: 'BigintComparisonExp',
  },
  ProjectSupervisorsConstraint: 'enum' as const,
  ProjectSupervisorsIncInput: {
    projectId: 'bigint',
    teamMemberId: 'bigint',
  },
  ProjectSupervisorsInsertInput: {
    project: 'ProjectObjRelInsertInput',
    projectId: 'bigint',
    teamMember: 'TeamMemberObjRelInsertInput',
    teamMemberId: 'bigint',
  },
  ProjectSupervisorsMaxOrderBy: {
    projectId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  ProjectSupervisorsMinOrderBy: {
    projectId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  ProjectSupervisorsOnConflict: {
    constraint: 'ProjectSupervisorsConstraint',
    updateColumns: 'ProjectSupervisorsUpdateColumn',
    where: 'ProjectSupervisorsBoolExp',
  },
  ProjectSupervisorsOrderBy: {
    project: 'ProjectOrderBy',
    projectId: 'OrderBy',
    teamMember: 'TeamMemberOrderBy',
    teamMemberId: 'OrderBy',
  },
  ProjectSupervisorsPkColumnsInput: {
    projectId: 'bigint',
    teamMemberId: 'bigint',
  },
  ProjectSupervisorsSelectColumn: 'enum' as const,
  ProjectSupervisorsSetInput: {
    projectId: 'bigint',
    teamMemberId: 'bigint',
  },
  ProjectSupervisorsStddevOrderBy: {
    projectId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  ProjectSupervisorsStddevPopOrderBy: {
    projectId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  ProjectSupervisorsStddevSampOrderBy: {
    projectId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  ProjectSupervisorsStreamCursorInput: {
    initialValue: 'ProjectSupervisorsStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ProjectSupervisorsStreamCursorValueInput: {
    projectId: 'bigint',
    teamMemberId: 'bigint',
  },
  ProjectSupervisorsSumOrderBy: {
    projectId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  ProjectSupervisorsUpdateColumn: 'enum' as const,
  ProjectSupervisorsUpdates: {
    _inc: 'ProjectSupervisorsIncInput',
    _set: 'ProjectSupervisorsSetInput',
    where: 'ProjectSupervisorsBoolExp',
  },
  ProjectSupervisorsVarianceOrderBy: {
    projectId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  ProjectSupervisorsVarPopOrderBy: {
    projectId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  ProjectSupervisorsVarSampOrderBy: {
    projectId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  ProjectTagsAggregateBoolExp: {
    count: 'projectTagsAggregateBoolExpCount',
  },
  projectTagsAggregateBoolExpCount: {
    arguments: 'ProjectTagsSelectColumn',
    filter: 'ProjectTagsBoolExp',
    predicate: 'IntComparisonExp',
  },
  ProjectTagsAggregateFields: {
    count: {
      columns: 'ProjectTagsSelectColumn',
    },
  },
  ProjectTagsAggregateOrderBy: {
    avg: 'ProjectTagsAvgOrderBy',
    count: 'OrderBy',
    max: 'ProjectTagsMaxOrderBy',
    min: 'ProjectTagsMinOrderBy',
    stddev: 'ProjectTagsStddevOrderBy',
    stddevPop: 'ProjectTagsStddevPopOrderBy',
    stddevSamp: 'ProjectTagsStddevSampOrderBy',
    sum: 'ProjectTagsSumOrderBy',
    varPop: 'ProjectTagsVarPopOrderBy',
    varSamp: 'ProjectTagsVarSampOrderBy',
    variance: 'ProjectTagsVarianceOrderBy',
  },
  ProjectTagsArrRelInsertInput: {
    data: 'ProjectTagsInsertInput',
    onConflict: 'ProjectTagsOnConflict',
  },
  ProjectTagsAvgOrderBy: {
    projectId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ProjectTagsBoolExp: {
    _and: 'ProjectTagsBoolExp',
    _not: 'ProjectTagsBoolExp',
    _or: 'ProjectTagsBoolExp',
    project: 'ProjectBoolExp',
    projectId: 'BigintComparisonExp',
    tag: 'TagBoolExp',
    tagId: 'BigintComparisonExp',
  },
  ProjectTagsConstraint: 'enum' as const,
  ProjectTagsIncInput: {
    projectId: 'bigint',
    tagId: 'bigint',
  },
  ProjectTagsInsertInput: {
    project: 'ProjectObjRelInsertInput',
    projectId: 'bigint',
    tag: 'TagObjRelInsertInput',
    tagId: 'bigint',
  },
  ProjectTagsMaxOrderBy: {
    projectId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ProjectTagsMinOrderBy: {
    projectId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ProjectTagsOnConflict: {
    constraint: 'ProjectTagsConstraint',
    updateColumns: 'ProjectTagsUpdateColumn',
    where: 'ProjectTagsBoolExp',
  },
  ProjectTagsOrderBy: {
    project: 'ProjectOrderBy',
    projectId: 'OrderBy',
    tag: 'TagOrderBy',
    tagId: 'OrderBy',
  },
  ProjectTagsPkColumnsInput: {
    projectId: 'bigint',
    tagId: 'bigint',
  },
  ProjectTagsSelectColumn: 'enum' as const,
  ProjectTagsSetInput: {
    projectId: 'bigint',
    tagId: 'bigint',
  },
  ProjectTagsStddevOrderBy: {
    projectId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ProjectTagsStddevPopOrderBy: {
    projectId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ProjectTagsStddevSampOrderBy: {
    projectId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ProjectTagsStreamCursorInput: {
    initialValue: 'ProjectTagsStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ProjectTagsStreamCursorValueInput: {
    projectId: 'bigint',
    tagId: 'bigint',
  },
  ProjectTagsSumOrderBy: {
    projectId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ProjectTagsUpdateColumn: 'enum' as const,
  ProjectTagsUpdates: {
    _inc: 'ProjectTagsIncInput',
    _set: 'ProjectTagsSetInput',
    where: 'ProjectTagsBoolExp',
  },
  ProjectTagsVarianceOrderBy: {
    projectId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ProjectTagsVarPopOrderBy: {
    projectId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ProjectTagsVarSampOrderBy: {
    projectId: 'OrderBy',
    tagId: 'OrderBy',
  },
  ProjectUpdateColumn: 'enum' as const,
  ProjectUpdates: {
    _inc: 'ProjectIncInput',
    _set: 'ProjectSetInput',
    where: 'ProjectBoolExp',
  },
  ProjectVarianceOrderBy: {
    actualBudget: 'OrderBy',
    createdById: 'OrderBy',
    expectedBudget: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectVarPopOrderBy: {
    actualBudget: 'OrderBy',
    createdById: 'OrderBy',
    expectedBudget: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ProjectVarSampOrderBy: {
    actualBudget: 'OrderBy',
    createdById: 'OrderBy',
    expectedBudget: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  Query: {
    action: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    actionAggregate: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    actionByPk: {
      id: 'bigint',
    },
    actor: {
      distinctOn: 'ActorSelectColumn',
      orderBy: 'ActorOrderBy',
      where: 'ActorBoolExp',
    },
    actorAddress: {
      distinctOn: 'ActorAddressSelectColumn',
      orderBy: 'ActorAddressOrderBy',
      where: 'ActorAddressBoolExp',
    },
    actorAddressAggregate: {
      distinctOn: 'ActorAddressSelectColumn',
      orderBy: 'ActorAddressOrderBy',
      where: 'ActorAddressBoolExp',
    },
    actorAddressByPk: {
      id: 'bigint',
    },
    actorAggregate: {
      distinctOn: 'ActorSelectColumn',
      orderBy: 'ActorOrderBy',
      where: 'ActorBoolExp',
    },
    actorBankInfo: {
      distinctOn: 'ActorBankInfoSelectColumn',
      orderBy: 'ActorBankInfoOrderBy',
      where: 'ActorBankInfoBoolExp',
    },
    actorBankInfoAggregate: {
      distinctOn: 'ActorBankInfoSelectColumn',
      orderBy: 'ActorBankInfoOrderBy',
      where: 'ActorBankInfoBoolExp',
    },
    actorBankInfoByPk: {
      id: 'bigint',
    },
    actorByPk: {
      id: 'bigint',
    },
    actorFinance: {
      distinctOn: 'ActorFinanceSelectColumn',
      orderBy: 'ActorFinanceOrderBy',
      where: 'ActorFinanceBoolExp',
    },
    actorFinanceAggregate: {
      distinctOn: 'ActorFinanceSelectColumn',
      orderBy: 'ActorFinanceOrderBy',
      where: 'ActorFinanceBoolExp',
    },
    actorFinanceByPk: {
      id: 'bigint',
    },
    actorFinanceReceipts: {
      distinctOn: 'ActorFinanceReceiptsSelectColumn',
      orderBy: 'ActorFinanceReceiptsOrderBy',
      where: 'ActorFinanceReceiptsBoolExp',
    },
    actorFinanceReceiptsAggregate: {
      distinctOn: 'ActorFinanceReceiptsSelectColumn',
      orderBy: 'ActorFinanceReceiptsOrderBy',
      where: 'ActorFinanceReceiptsBoolExp',
    },
    actorFinanceReceiptsByPk: {
      actorFinanceId: 'bigint',
      uploadId: 'bigint',
    },
    actorImage: {
      distinctOn: 'ActorImageSelectColumn',
      orderBy: 'ActorImageOrderBy',
      where: 'ActorImageBoolExp',
    },
    actorImageAggregate: {
      distinctOn: 'ActorImageSelectColumn',
      orderBy: 'ActorImageOrderBy',
      where: 'ActorImageBoolExp',
    },
    actorImageByPk: {
      id: 'bigint',
    },
    actorTags: {
      distinctOn: 'ActorTagsSelectColumn',
      orderBy: 'ActorTagsOrderBy',
      where: 'ActorTagsBoolExp',
    },
    actorTagsAggregate: {
      distinctOn: 'ActorTagsSelectColumn',
      orderBy: 'ActorTagsOrderBy',
      where: 'ActorTagsBoolExp',
    },
    actorTagsByPk: {
      actorId: 'bigint',
      tagId: 'bigint',
    },
    botInfo: {
      distinctOn: 'BotInfoSelectColumn',
      orderBy: 'BotInfoOrderBy',
      where: 'BotInfoBoolExp',
    },
    botInfoAggregate: {
      distinctOn: 'BotInfoSelectColumn',
      orderBy: 'BotInfoOrderBy',
      where: 'BotInfoBoolExp',
    },
    botInfoByPk: {
      id: 'bigint',
    },
    canteen: {
      distinctOn: 'CanteenSelectColumn',
      orderBy: 'CanteenOrderBy',
      where: 'CanteenBoolExp',
    },
    canteenAggregate: {
      distinctOn: 'CanteenSelectColumn',
      orderBy: 'CanteenOrderBy',
      where: 'CanteenBoolExp',
    },
    canteenByPk: {
      id: 'bigint',
    },
    canteenFood: {
      distinctOn: 'CanteenFoodSelectColumn',
      orderBy: 'CanteenFoodOrderBy',
      where: 'CanteenFoodBoolExp',
    },
    canteenFoodAggregate: {
      distinctOn: 'CanteenFoodSelectColumn',
      orderBy: 'CanteenFoodOrderBy',
      where: 'CanteenFoodBoolExp',
    },
    canteenFoodByPk: {
      id: 'bigint',
    },
    canteenMenu: {
      distinctOn: 'CanteenMenuSelectColumn',
      orderBy: 'CanteenMenuOrderBy',
      where: 'CanteenMenuBoolExp',
    },
    canteenMenuAggregate: {
      distinctOn: 'CanteenMenuSelectColumn',
      orderBy: 'CanteenMenuOrderBy',
      where: 'CanteenMenuBoolExp',
    },
    canteenMenuByPk: {
      id: 'bigint',
    },
    changeRole: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    changeRoleAggregate: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    changeRoleByPk: {
      id: 'bigint',
    },
    classGroup: {
      distinctOn: 'ClassGroupSelectColumn',
      orderBy: 'ClassGroupOrderBy',
      where: 'ClassGroupBoolExp',
    },
    classGroupAggregate: {
      distinctOn: 'ClassGroupSelectColumn',
      orderBy: 'ClassGroupOrderBy',
      where: 'ClassGroupBoolExp',
    },
    classGroupByPk: {
      id: 'bigint',
    },
    classGroupTeacher: {
      distinctOn: 'ClassGroupTeacherSelectColumn',
      orderBy: 'ClassGroupTeacherOrderBy',
      where: 'ClassGroupTeacherBoolExp',
    },
    classGroupTeacherAggregate: {
      distinctOn: 'ClassGroupTeacherSelectColumn',
      orderBy: 'ClassGroupTeacherOrderBy',
      where: 'ClassGroupTeacherBoolExp',
    },
    classGroupTeacherByPk: {
      id: 'bigint',
    },
    classGroupTeacherSubject: {
      distinctOn: 'ClassGroupTeacherSubjectSelectColumn',
      orderBy: 'ClassGroupTeacherSubjectOrderBy',
      where: 'ClassGroupTeacherSubjectBoolExp',
    },
    classGroupTeacherSubjectAggregate: {
      distinctOn: 'ClassGroupTeacherSubjectSelectColumn',
      orderBy: 'ClassGroupTeacherSubjectOrderBy',
      where: 'ClassGroupTeacherSubjectBoolExp',
    },
    classGroupTeacherSubjectByPk: {
      classGroupTeacherId: 'bigint',
      subjectId: 'bigint',
    },
    cohort: {
      distinctOn: 'CohortSelectColumn',
      orderBy: 'CohortOrderBy',
      where: 'CohortBoolExp',
    },
    cohortAggregate: {
      distinctOn: 'CohortSelectColumn',
      orderBy: 'CohortOrderBy',
      where: 'CohortBoolExp',
    },
    cohortByPk: {
      id: 'bigint',
    },
    content: {
      distinctOn: 'ContentSelectColumn',
      orderBy: 'ContentOrderBy',
      where: 'ContentBoolExp',
    },
    contentAggregate: {
      distinctOn: 'ContentSelectColumn',
      orderBy: 'ContentOrderBy',
      where: 'ContentBoolExp',
    },
    contentAttachments: {
      distinctOn: 'ContentAttachmentsSelectColumn',
      orderBy: 'ContentAttachmentsOrderBy',
      where: 'ContentAttachmentsBoolExp',
    },
    contentAttachmentsAggregate: {
      distinctOn: 'ContentAttachmentsSelectColumn',
      orderBy: 'ContentAttachmentsOrderBy',
      where: 'ContentAttachmentsBoolExp',
    },
    contentAttachmentsByPk: {
      contentId: 'bigint',
      uploadId: 'bigint',
    },
    contentByPk: {
      id: 'bigint',
    },
    contentEdit: {
      distinctOn: 'ContentEditSelectColumn',
      orderBy: 'ContentEditOrderBy',
      where: 'ContentEditBoolExp',
    },
    contentEditAggregate: {
      distinctOn: 'ContentEditSelectColumn',
      orderBy: 'ContentEditOrderBy',
      where: 'ContentEditBoolExp',
    },
    contentEditByPk: {
      id: 'bigint',
    },
    contentMaster: {
      distinctOn: 'ContentMasterSelectColumn',
      orderBy: 'ContentMasterOrderBy',
      where: 'ContentMasterBoolExp',
    },
    contentMasterAggregate: {
      distinctOn: 'ContentMasterSelectColumn',
      orderBy: 'ContentMasterOrderBy',
      where: 'ContentMasterBoolExp',
    },
    contentMasterByPk: {
      id: 'bigint',
    },
    contentMasterContributors: {
      distinctOn: 'ContentMasterContributorsSelectColumn',
      orderBy: 'ContentMasterContributorsOrderBy',
      where: 'ContentMasterContributorsBoolExp',
    },
    contentMasterContributorsAggregate: {
      distinctOn: 'ContentMasterContributorsSelectColumn',
      orderBy: 'ContentMasterContributorsOrderBy',
      where: 'ContentMasterContributorsBoolExp',
    },
    contentMasterContributorsByPk: {
      contentMasterId: 'bigint',
      individualId: 'bigint',
    },
    contentMasterTags: {
      distinctOn: 'ContentMasterTagsSelectColumn',
      orderBy: 'ContentMasterTagsOrderBy',
      where: 'ContentMasterTagsBoolExp',
    },
    contentMasterTagsAggregate: {
      distinctOn: 'ContentMasterTagsSelectColumn',
      orderBy: 'ContentMasterTagsOrderBy',
      where: 'ContentMasterTagsBoolExp',
    },
    contentMasterTagsByPk: {
      contentMasterId: 'bigint',
      tagId: 'bigint',
    },
    contentRepresentingTeams: {
      distinctOn: 'ContentRepresentingTeamsSelectColumn',
      orderBy: 'ContentRepresentingTeamsOrderBy',
      where: 'ContentRepresentingTeamsBoolExp',
    },
    contentRepresentingTeamsAggregate: {
      distinctOn: 'ContentRepresentingTeamsSelectColumn',
      orderBy: 'ContentRepresentingTeamsOrderBy',
      where: 'ContentRepresentingTeamsBoolExp',
    },
    contentRepresentingTeamsByPk: {
      contentId: 'bigint',
      teamId: 'bigint',
    },
    document: {
      distinctOn: 'DocumentSelectColumn',
      orderBy: 'DocumentOrderBy',
      where: 'DocumentBoolExp',
    },
    documentAggregate: {
      distinctOn: 'DocumentSelectColumn',
      orderBy: 'DocumentOrderBy',
      where: 'DocumentBoolExp',
    },
    documentByPk: {
      id: 'bigint',
    },
    documentEdit: {
      distinctOn: 'DocumentEditSelectColumn',
      orderBy: 'DocumentEditOrderBy',
      where: 'DocumentEditBoolExp',
    },
    documentEditAggregate: {
      distinctOn: 'DocumentEditSelectColumn',
      orderBy: 'DocumentEditOrderBy',
      where: 'DocumentEditBoolExp',
    },
    documentEditByPk: {
      id: 'bigint',
    },
    event: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    eventAggregate: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    eventApproval: {
      distinctOn: 'EventApprovalSelectColumn',
      orderBy: 'EventApprovalOrderBy',
      where: 'EventApprovalBoolExp',
    },
    eventApprovalAggregate: {
      distinctOn: 'EventApprovalSelectColumn',
      orderBy: 'EventApprovalOrderBy',
      where: 'EventApprovalBoolExp',
    },
    eventApprovalByPk: {
      id: 'bigint',
    },
    eventApprovalStep: {
      distinctOn: 'EventApprovalStepSelectColumn',
      orderBy: 'EventApprovalStepOrderBy',
      where: 'EventApprovalStepBoolExp',
    },
    eventApprovalStepAggregate: {
      distinctOn: 'EventApprovalStepSelectColumn',
      orderBy: 'EventApprovalStepOrderBy',
      where: 'EventApprovalStepBoolExp',
    },
    eventApprovalStepByPk: {
      id: 'bigint',
    },
    eventApprovalStepNotifiees: {
      distinctOn: 'EventApprovalStepNotifieesSelectColumn',
      orderBy: 'EventApprovalStepNotifieesOrderBy',
      where: 'EventApprovalStepNotifieesBoolExp',
    },
    eventApprovalStepNotifieesAggregate: {
      distinctOn: 'EventApprovalStepNotifieesSelectColumn',
      orderBy: 'EventApprovalStepNotifieesOrderBy',
      where: 'EventApprovalStepNotifieesBoolExp',
    },
    eventApprovalStepNotifieesByPk: {
      eventApprovalStepId: 'bigint',
      individualId: 'bigint',
    },
    eventApprovalStepValidators: {
      distinctOn: 'EventApprovalStepValidatorsSelectColumn',
      orderBy: 'EventApprovalStepValidatorsOrderBy',
      where: 'EventApprovalStepValidatorsBoolExp',
    },
    eventApprovalStepValidatorsAggregate: {
      distinctOn: 'EventApprovalStepValidatorsSelectColumn',
      orderBy: 'EventApprovalStepValidatorsOrderBy',
      where: 'EventApprovalStepValidatorsBoolExp',
    },
    eventApprovalStepValidatorsByPk: {
      eventApprovalStepId: 'bigint',
      individualId: 'bigint',
    },
    eventByPk: {
      id: 'bigint',
    },
    eventChangeRole: {
      distinctOn: 'EventChangeRoleSelectColumn',
      orderBy: 'EventChangeRoleOrderBy',
      where: 'EventChangeRoleBoolExp',
    },
    eventChangeRoleAggregate: {
      distinctOn: 'EventChangeRoleSelectColumn',
      orderBy: 'EventChangeRoleOrderBy',
      where: 'EventChangeRoleBoolExp',
    },
    eventChangeRoleByPk: {
      id: 'bigint',
    },
    eventJoin: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventJoinAggregate: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventJoinByPk: {
      id: 'bigint',
    },
    eventOrganisingTeams: {
      distinctOn: 'EventOrganisingTeamsSelectColumn',
      orderBy: 'EventOrganisingTeamsOrderBy',
      where: 'EventOrganisingTeamsBoolExp',
    },
    eventOrganisingTeamsAggregate: {
      distinctOn: 'EventOrganisingTeamsSelectColumn',
      orderBy: 'EventOrganisingTeamsOrderBy',
      where: 'EventOrganisingTeamsBoolExp',
    },
    eventOrganisingTeamsByPk: {
      eventId: 'bigint',
      teamId: 'bigint',
    },
    eventRole: {
      distinctOn: 'EventRoleSelectColumn',
      orderBy: 'EventRoleOrderBy',
      where: 'EventRoleBoolExp',
    },
    eventRoleAggregate: {
      distinctOn: 'EventRoleSelectColumn',
      orderBy: 'EventRoleOrderBy',
      where: 'EventRoleBoolExp',
    },
    eventRoleByPk: {
      id: 'bigint',
    },
    eventTags: {
      distinctOn: 'EventTagsSelectColumn',
      orderBy: 'EventTagsOrderBy',
      where: 'EventTagsBoolExp',
    },
    eventTagsAggregate: {
      distinctOn: 'EventTagsSelectColumn',
      orderBy: 'EventTagsOrderBy',
      where: 'EventTagsBoolExp',
    },
    eventTagsByPk: {
      eventId: 'bigint',
      tagId: 'bigint',
    },
    eventTeams: {
      distinctOn: 'EventTeamsSelectColumn',
      orderBy: 'EventTeamsOrderBy',
      where: 'EventTeamsBoolExp',
    },
    eventTeamsAggregate: {
      distinctOn: 'EventTeamsSelectColumn',
      orderBy: 'EventTeamsOrderBy',
      where: 'EventTeamsBoolExp',
    },
    eventTeamsByPk: {
      eventId: 'bigint',
      teamId: 'bigint',
    },
    expense: {
      distinctOn: 'ExpenseSelectColumn',
      orderBy: 'ExpenseOrderBy',
      where: 'ExpenseBoolExp',
    },
    expenseAggregate: {
      distinctOn: 'ExpenseSelectColumn',
      orderBy: 'ExpenseOrderBy',
      where: 'ExpenseBoolExp',
    },
    expenseByPk: {
      id: 'bigint',
    },
    favorite: {
      distinctOn: 'FavoriteSelectColumn',
      orderBy: 'FavoriteOrderBy',
      where: 'FavoriteBoolExp',
    },
    favoriteAggregate: {
      distinctOn: 'FavoriteSelectColumn',
      orderBy: 'FavoriteOrderBy',
      where: 'FavoriteBoolExp',
    },
    favoriteByPk: {
      id: 'bigint',
    },
    form: {
      distinctOn: 'FormSelectColumn',
      orderBy: 'FormOrderBy',
      where: 'FormBoolExp',
    },
    formAggregate: {
      distinctOn: 'FormSelectColumn',
      orderBy: 'FormOrderBy',
      where: 'FormBoolExp',
    },
    formByPk: {
      id: 'bigint',
    },
    formEdit: {
      distinctOn: 'FormEditSelectColumn',
      orderBy: 'FormEditOrderBy',
      where: 'FormEditBoolExp',
    },
    formEditAggregate: {
      distinctOn: 'FormEditSelectColumn',
      orderBy: 'FormEditOrderBy',
      where: 'FormEditBoolExp',
    },
    formEditByPk: {
      id: 'bigint',
    },
    formSubmission: {
      distinctOn: 'FormSubmissionSelectColumn',
      orderBy: 'FormSubmissionOrderBy',
      where: 'FormSubmissionBoolExp',
    },
    formSubmissionAggregate: {
      distinctOn: 'FormSubmissionSelectColumn',
      orderBy: 'FormSubmissionOrderBy',
      where: 'FormSubmissionBoolExp',
    },
    formSubmissionByPk: {
      id: 'bigint',
    },
    formSubmissionEdit: {
      distinctOn: 'FormSubmissionEditSelectColumn',
      orderBy: 'FormSubmissionEditOrderBy',
      where: 'FormSubmissionEditBoolExp',
    },
    formSubmissionEditAggregate: {
      distinctOn: 'FormSubmissionEditSelectColumn',
      orderBy: 'FormSubmissionEditOrderBy',
      where: 'FormSubmissionEditBoolExp',
    },
    formSubmissionEditByPk: {
      id: 'bigint',
    },
    individual: {
      distinctOn: 'IndividualSelectColumn',
      orderBy: 'IndividualOrderBy',
      where: 'IndividualBoolExp',
    },
    individualAggregate: {
      distinctOn: 'IndividualSelectColumn',
      orderBy: 'IndividualOrderBy',
      where: 'IndividualBoolExp',
    },
    individualByPk: {
      id: 'bigint',
    },
    issue: {
      distinctOn: 'IssueSelectColumn',
      orderBy: 'IssueOrderBy',
      where: 'IssueBoolExp',
    },
    issueAggregate: {
      distinctOn: 'IssueSelectColumn',
      orderBy: 'IssueOrderBy',
      where: 'IssueBoolExp',
    },
    issueByPk: {
      id: 'bigint',
    },
    mikroOrmMigrations: {
      distinctOn: 'MikroOrmMigrationsSelectColumn',
      orderBy: 'MikroOrmMigrationsOrderBy',
      where: 'MikroOrmMigrationsBoolExp',
    },
    mikroOrmMigrationsAggregate: {
      distinctOn: 'MikroOrmMigrationsSelectColumn',
      orderBy: 'MikroOrmMigrationsOrderBy',
      where: 'MikroOrmMigrationsBoolExp',
    },
    mikroOrmMigrationsByPk: {},
    pole: {
      distinctOn: 'PoleSelectColumn',
      orderBy: 'PoleOrderBy',
      where: 'PoleBoolExp',
    },
    poleAggregate: {
      distinctOn: 'PoleSelectColumn',
      orderBy: 'PoleOrderBy',
      where: 'PoleBoolExp',
    },
    poleByPk: {
      id: 'bigint',
    },
    project: {
      distinctOn: 'ProjectSelectColumn',
      orderBy: 'ProjectOrderBy',
      where: 'ProjectBoolExp',
    },
    projectAggregate: {
      distinctOn: 'ProjectSelectColumn',
      orderBy: 'ProjectOrderBy',
      where: 'ProjectBoolExp',
    },
    projectByPk: {
      id: 'bigint',
    },
    projectRole: {
      distinctOn: 'ProjectRoleSelectColumn',
      orderBy: 'ProjectRoleOrderBy',
      where: 'ProjectRoleBoolExp',
    },
    projectRoleAggregate: {
      distinctOn: 'ProjectRoleSelectColumn',
      orderBy: 'ProjectRoleOrderBy',
      where: 'ProjectRoleBoolExp',
    },
    projectRoleByPk: {
      id: 'bigint',
    },
    projectSupervisors: {
      distinctOn: 'ProjectSupervisorsSelectColumn',
      orderBy: 'ProjectSupervisorsOrderBy',
      where: 'ProjectSupervisorsBoolExp',
    },
    projectSupervisorsAggregate: {
      distinctOn: 'ProjectSupervisorsSelectColumn',
      orderBy: 'ProjectSupervisorsOrderBy',
      where: 'ProjectSupervisorsBoolExp',
    },
    projectSupervisorsByPk: {
      projectId: 'bigint',
      teamMemberId: 'bigint',
    },
    projectTags: {
      distinctOn: 'ProjectTagsSelectColumn',
      orderBy: 'ProjectTagsOrderBy',
      where: 'ProjectTagsBoolExp',
    },
    projectTagsAggregate: {
      distinctOn: 'ProjectTagsSelectColumn',
      orderBy: 'ProjectTagsOrderBy',
      where: 'ProjectTagsBoolExp',
    },
    projectTagsByPk: {
      projectId: 'bigint',
      tagId: 'bigint',
    },
    reaction: {
      distinctOn: 'ReactionSelectColumn',
      orderBy: 'ReactionOrderBy',
      where: 'ReactionBoolExp',
    },
    reactionAggregate: {
      distinctOn: 'ReactionSelectColumn',
      orderBy: 'ReactionOrderBy',
      where: 'ReactionBoolExp',
    },
    reactionByPk: {
      id: 'bigint',
    },
    report: {
      distinctOn: 'ReportSelectColumn',
      orderBy: 'ReportOrderBy',
      where: 'ReportBoolExp',
    },
    reportAggregate: {
      distinctOn: 'ReportSelectColumn',
      orderBy: 'ReportOrderBy',
      where: 'ReportBoolExp',
    },
    reportByPk: {
      id: 'bigint',
    },
    role: {
      distinctOn: 'RoleSelectColumn',
      orderBy: 'RoleOrderBy',
      where: 'RoleBoolExp',
    },
    roleAggregate: {
      distinctOn: 'RoleSelectColumn',
      orderBy: 'RoleOrderBy',
      where: 'RoleBoolExp',
    },
    roleByPk: {
      id: 'bigint',
    },
    session: {
      distinctOn: 'SessionSelectColumn',
      orderBy: 'SessionOrderBy',
      where: 'SessionBoolExp',
    },
    sessionAggregate: {
      distinctOn: 'SessionSelectColumn',
      orderBy: 'SessionOrderBy',
      where: 'SessionBoolExp',
    },
    sessionByPk: {
      id: 'bigint',
    },
    shortcut: {
      distinctOn: 'ShortcutSelectColumn',
      orderBy: 'ShortcutOrderBy',
      where: 'ShortcutBoolExp',
    },
    shortcutAggregate: {
      distinctOn: 'ShortcutSelectColumn',
      orderBy: 'ShortcutOrderBy',
      where: 'ShortcutBoolExp',
    },
    shortcutByPk: {
      id: 'bigint',
    },
    social: {
      distinctOn: 'SocialSelectColumn',
      orderBy: 'SocialOrderBy',
      where: 'SocialBoolExp',
    },
    socialAggregate: {
      distinctOn: 'SocialSelectColumn',
      orderBy: 'SocialOrderBy',
      where: 'SocialBoolExp',
    },
    socialByPk: {
      id: 'bigint',
    },
    subject: {
      distinctOn: 'SubjectSelectColumn',
      orderBy: 'SubjectOrderBy',
      where: 'SubjectBoolExp',
    },
    subjectAggregate: {
      distinctOn: 'SubjectSelectColumn',
      orderBy: 'SubjectOrderBy',
      where: 'SubjectBoolExp',
    },
    subjectByPk: {
      id: 'bigint',
    },
    subjectClasses: {
      distinctOn: 'SubjectClassesSelectColumn',
      orderBy: 'SubjectClassesOrderBy',
      where: 'SubjectClassesBoolExp',
    },
    subjectClassesAggregate: {
      distinctOn: 'SubjectClassesSelectColumn',
      orderBy: 'SubjectClassesOrderBy',
      where: 'SubjectClassesBoolExp',
    },
    subjectClassesByPk: {
      classGroupId: 'bigint',
      subjectId: 'bigint',
    },
    tag: {
      distinctOn: 'TagSelectColumn',
      orderBy: 'TagOrderBy',
      where: 'TagBoolExp',
    },
    tagAggregate: {
      distinctOn: 'TagSelectColumn',
      orderBy: 'TagOrderBy',
      where: 'TagBoolExp',
    },
    tagByPk: {
      id: 'bigint',
    },
    team: {
      distinctOn: 'TeamSelectColumn',
      orderBy: 'TeamOrderBy',
      where: 'TeamBoolExp',
    },
    teamAggregate: {
      distinctOn: 'TeamSelectColumn',
      orderBy: 'TeamOrderBy',
      where: 'TeamBoolExp',
    },
    teamByPk: {
      id: 'bigint',
    },
    teamCategories: {
      distinctOn: 'TeamCategoriesSelectColumn',
      orderBy: 'TeamCategoriesOrderBy',
      where: 'TeamCategoriesBoolExp',
    },
    teamCategoriesAggregate: {
      distinctOn: 'TeamCategoriesSelectColumn',
      orderBy: 'TeamCategoriesOrderBy',
      where: 'TeamCategoriesBoolExp',
    },
    teamCategoriesByPk: {
      tagId: 'bigint',
      teamId: 'bigint',
    },
    teamEvents: {
      distinctOn: 'TeamEventsSelectColumn',
      orderBy: 'TeamEventsOrderBy',
      where: 'TeamEventsBoolExp',
    },
    teamEventsAggregate: {
      distinctOn: 'TeamEventsSelectColumn',
      orderBy: 'TeamEventsOrderBy',
      where: 'TeamEventsBoolExp',
    },
    teamEventsByPk: {
      eventId: 'bigint',
      teamId: 'bigint',
    },
    teamFinance: {
      distinctOn: 'TeamFinanceSelectColumn',
      orderBy: 'TeamFinanceOrderBy',
      where: 'TeamFinanceBoolExp',
    },
    teamFinanceAggregate: {
      distinctOn: 'TeamFinanceSelectColumn',
      orderBy: 'TeamFinanceOrderBy',
      where: 'TeamFinanceBoolExp',
    },
    teamFinanceByPk: {
      id: 'bigint',
    },
    teamJoin: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamJoinAggregate: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamJoinByPk: {
      id: 'bigint',
    },
    teamMember: {
      distinctOn: 'TeamMemberSelectColumn',
      orderBy: 'TeamMemberOrderBy',
      where: 'TeamMemberBoolExp',
    },
    teamMemberAggregate: {
      distinctOn: 'TeamMemberSelectColumn',
      orderBy: 'TeamMemberOrderBy',
      where: 'TeamMemberBoolExp',
    },
    teamMemberByPk: {
      id: 'bigint',
    },
    teamMemberRoles: {
      distinctOn: 'TeamMemberRolesSelectColumn',
      orderBy: 'TeamMemberRolesOrderBy',
      where: 'TeamMemberRolesBoolExp',
    },
    teamMemberRolesAggregate: {
      distinctOn: 'TeamMemberRolesSelectColumn',
      orderBy: 'TeamMemberRolesOrderBy',
      where: 'TeamMemberRolesBoolExp',
    },
    teamMemberRolesByPk: {
      roleId: 'bigint',
      teamMemberId: 'bigint',
    },
    teamMetric: {
      distinctOn: 'TeamMetricSelectColumn',
      orderBy: 'TeamMetricOrderBy',
      where: 'TeamMetricBoolExp',
    },
    teamMetricAggregate: {
      distinctOn: 'TeamMetricSelectColumn',
      orderBy: 'TeamMetricOrderBy',
      where: 'TeamMetricBoolExp',
    },
    teamMetricByPk: {
      id: 'bigint',
    },
    tenant: {
      distinctOn: 'TenantSelectColumn',
      orderBy: 'TenantOrderBy',
      where: 'TenantBoolExp',
    },
    tenantAggregate: {
      distinctOn: 'TenantSelectColumn',
      orderBy: 'TenantOrderBy',
      where: 'TenantBoolExp',
    },
    tenantByPk: {
      id: 'bigint',
    },
    upload: {
      distinctOn: 'UploadSelectColumn',
      orderBy: 'UploadOrderBy',
      where: 'UploadBoolExp',
    },
    uploadAggregate: {
      distinctOn: 'UploadSelectColumn',
      orderBy: 'UploadOrderBy',
      where: 'UploadBoolExp',
    },
    uploadByPk: {
      id: 'bigint',
    },
    userInfo: {
      distinctOn: 'UserInfoSelectColumn',
      orderBy: 'UserInfoOrderBy',
      where: 'UserInfoBoolExp',
    },
    userInfoAggregate: {
      distinctOn: 'UserInfoSelectColumn',
      orderBy: 'UserInfoOrderBy',
      where: 'UserInfoBoolExp',
    },
    userInfoByPk: {
      id: 'bigint',
    },
    validation: {
      distinctOn: 'ValidationSelectColumn',
      orderBy: 'ValidationOrderBy',
      where: 'ValidationBoolExp',
    },
    validationAggregate: {
      distinctOn: 'ValidationSelectColumn',
      orderBy: 'ValidationOrderBy',
      where: 'ValidationBoolExp',
    },
    validationByPk: {
      id: 'bigint',
    },
    vote: {
      distinctOn: 'VoteSelectColumn',
      orderBy: 'VoteOrderBy',
      where: 'VoteBoolExp',
    },
    voteAggregate: {
      distinctOn: 'VoteSelectColumn',
      orderBy: 'VoteOrderBy',
      where: 'VoteBoolExp',
    },
    voteByPk: {
      id: 'bigint',
    },
  },
  ReactionAggregateBoolExp: {
    count: 'reactionAggregateBoolExpCount',
  },
  reactionAggregateBoolExpCount: {
    arguments: 'ReactionSelectColumn',
    filter: 'ReactionBoolExp',
    predicate: 'IntComparisonExp',
  },
  ReactionAggregateFields: {
    count: {
      columns: 'ReactionSelectColumn',
    },
  },
  ReactionAggregateOrderBy: {
    avg: 'ReactionAvgOrderBy',
    count: 'OrderBy',
    max: 'ReactionMaxOrderBy',
    min: 'ReactionMinOrderBy',
    stddev: 'ReactionStddevOrderBy',
    stddevPop: 'ReactionStddevPopOrderBy',
    stddevSamp: 'ReactionStddevSampOrderBy',
    sum: 'ReactionSumOrderBy',
    varPop: 'ReactionVarPopOrderBy',
    varSamp: 'ReactionVarSampOrderBy',
    variance: 'ReactionVarianceOrderBy',
  },
  ReactionArrRelInsertInput: {
    data: 'ReactionInsertInput',
    onConflict: 'ReactionOnConflict',
  },
  ReactionAvgOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReactionBoolExp: {
    _and: 'ReactionBoolExp',
    _not: 'ReactionBoolExp',
    _or: 'ReactionBoolExp',
    content: 'ContentBoolExp',
    contentId: 'BigintComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    lastActiveDate: 'TimestamptzComparisonExp',
    reactionType: 'StringComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  ReactionConstraint: 'enum' as const,
  ReactionIncInput: {
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ReactionInsertInput: {
    content: 'ContentObjRelInsertInput',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    lastActiveDate: 'timestamptz',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  ReactionMaxOrderBy: {
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    lastActiveDate: 'OrderBy',
    reactionType: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReactionMinOrderBy: {
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    lastActiveDate: 'OrderBy',
    reactionType: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReactionOnConflict: {
    constraint: 'ReactionConstraint',
    updateColumns: 'ReactionUpdateColumn',
    where: 'ReactionBoolExp',
  },
  ReactionOrderBy: {
    content: 'ContentOrderBy',
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    lastActiveDate: 'OrderBy',
    reactionType: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  ReactionPkColumnsInput: {
    id: 'bigint',
  },
  ReactionSelectColumn: 'enum' as const,
  ReactionSetInput: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
  },
  ReactionStddevOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReactionStddevPopOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReactionStddevSampOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReactionStreamCursorInput: {
    initialValue: 'ReactionStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ReactionStreamCursorValueInput: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
  },
  ReactionSumOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReactionUpdateColumn: 'enum' as const,
  ReactionUpdates: {
    _inc: 'ReactionIncInput',
    _set: 'ReactionSetInput',
    where: 'ReactionBoolExp',
  },
  ReactionVarianceOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReactionVarPopOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReactionVarSampOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReportAggregateBoolExp: {
    count: 'reportAggregateBoolExpCount',
  },
  reportAggregateBoolExpCount: {
    arguments: 'ReportSelectColumn',
    filter: 'ReportBoolExp',
    predicate: 'IntComparisonExp',
  },
  ReportAggregateFields: {
    count: {
      columns: 'ReportSelectColumn',
    },
  },
  ReportAggregateOrderBy: {
    avg: 'ReportAvgOrderBy',
    count: 'OrderBy',
    max: 'ReportMaxOrderBy',
    min: 'ReportMinOrderBy',
    stddev: 'ReportStddevOrderBy',
    stddevPop: 'ReportStddevPopOrderBy',
    stddevSamp: 'ReportStddevSampOrderBy',
    sum: 'ReportSumOrderBy',
    varPop: 'ReportVarPopOrderBy',
    varSamp: 'ReportVarSampOrderBy',
    variance: 'ReportVarianceOrderBy',
  },
  ReportArrRelInsertInput: {
    data: 'ReportInsertInput',
    onConflict: 'ReportOnConflict',
  },
  ReportAvgOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReportBoolExp: {
    _and: 'ReportBoolExp',
    _not: 'ReportBoolExp',
    _or: 'ReportBoolExp',
    actor: 'ActorBoolExp',
    actorId: 'BigintComparisonExp',
    content: 'ContentBoolExp',
    contentId: 'BigintComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    lastActiveDate: 'TimestamptzComparisonExp',
    reason: 'StringComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
  },
  ReportConstraint: 'enum' as const,
  ReportIncInput: {
    actorId: 'bigint',
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ReportInsertInput: {
    actor: 'ActorObjRelInsertInput',
    actorId: 'bigint',
    content: 'ContentObjRelInsertInput',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    lastActiveDate: 'timestamptz',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  ReportMaxOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    lastActiveDate: 'OrderBy',
    reason: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  ReportMinOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    lastActiveDate: 'OrderBy',
    reason: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  ReportOnConflict: {
    constraint: 'ReportConstraint',
    updateColumns: 'ReportUpdateColumn',
    where: 'ReportBoolExp',
  },
  ReportOrderBy: {
    actor: 'ActorOrderBy',
    actorId: 'OrderBy',
    content: 'ContentOrderBy',
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    lastActiveDate: 'OrderBy',
    reason: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  ReportPkColumnsInput: {
    id: 'bigint',
  },
  ReportSelectColumn: 'enum' as const,
  ReportSetInput: {
    actorId: 'bigint',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
  },
  ReportStddevOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReportStddevPopOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReportStddevSampOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReportStreamCursorInput: {
    initialValue: 'ReportStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ReportStreamCursorValueInput: {
    actorId: 'bigint',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
  },
  ReportSumOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReportUpdateColumn: 'enum' as const,
  ReportUpdates: {
    _inc: 'ReportIncInput',
    _set: 'ReportSetInput',
    where: 'ReportBoolExp',
  },
  ReportVarianceOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReportVarPopOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ReportVarSampOrderBy: {
    actorId: 'OrderBy',
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  Role: {
    changeRoles: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    changeRolesAggregate: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    teamJoins: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamJoinsAggregate: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamMemberRoles: {
      distinctOn: 'TeamMemberRolesSelectColumn',
      orderBy: 'TeamMemberRolesOrderBy',
      where: 'TeamMemberRolesBoolExp',
    },
    teamMemberRolesAggregate: {
      distinctOn: 'TeamMemberRolesSelectColumn',
      orderBy: 'TeamMemberRolesOrderBy',
      where: 'TeamMemberRolesBoolExp',
    },
  },
  RoleAggregateBoolExp: {
    bool_and: 'roleAggregateBoolExpBool_and',
    bool_or: 'roleAggregateBoolExpBool_or',
    count: 'roleAggregateBoolExpCount',
  },
  roleAggregateBoolExpBool_and: {
    arguments: 'RoleSelectColumnRoleAggregateBoolExpBool_andArgumentsColumns',
    filter: 'RoleBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  roleAggregateBoolExpBool_or: {
    arguments: 'RoleSelectColumnRoleAggregateBoolExpBool_orArgumentsColumns',
    filter: 'RoleBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  roleAggregateBoolExpCount: {
    arguments: 'RoleSelectColumn',
    filter: 'RoleBoolExp',
    predicate: 'IntComparisonExp',
  },
  RoleAggregateFields: {
    count: {
      columns: 'RoleSelectColumn',
    },
  },
  RoleAggregateOrderBy: {
    avg: 'RoleAvgOrderBy',
    count: 'OrderBy',
    max: 'RoleMaxOrderBy',
    min: 'RoleMinOrderBy',
    stddev: 'RoleStddevOrderBy',
    stddevPop: 'RoleStddevPopOrderBy',
    stddevSamp: 'RoleStddevSampOrderBy',
    sum: 'RoleSumOrderBy',
    varPop: 'RoleVarPopOrderBy',
    varSamp: 'RoleVarSampOrderBy',
    variance: 'RoleVarianceOrderBy',
  },
  RoleArrRelInsertInput: {
    data: 'RoleInsertInput',
    onConflict: 'RoleOnConflict',
  },
  RoleAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  RoleBoolExp: {
    _and: 'RoleBoolExp',
    _not: 'RoleBoolExp',
    _or: 'RoleBoolExp',
    category: 'StringComparisonExp',
    changeRoles: 'ChangeRoleBoolExp',
    changeRolesAggregate: 'ChangeRoleAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    isRequired: 'BooleanComparisonExp',
    name: 'StringComparisonExp',
    permissions: 'IntComparisonExp',
    team: 'TeamBoolExp',
    teamId: 'BigintComparisonExp',
    teamJoins: 'TeamJoinBoolExp',
    teamJoinsAggregate: 'TeamJoinAggregateBoolExp',
    teamMemberRoles: 'TeamMemberRolesBoolExp',
    teamMemberRolesAggregate: 'TeamMemberRolesAggregateBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
  },
  RoleConstraint: 'enum' as const,
  RoleIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  RoleInsertInput: {
    changeRoles: 'ChangeRoleArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    team: 'TeamObjRelInsertInput',
    teamId: 'bigint',
    teamJoins: 'TeamJoinArrRelInsertInput',
    teamMemberRoles: 'TeamMemberRolesArrRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  RoleMaxOrderBy: {
    category: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  RoleMinOrderBy: {
    category: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    name: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  RoleObjRelInsertInput: {
    data: 'RoleInsertInput',
    onConflict: 'RoleOnConflict',
  },
  RoleOnConflict: {
    constraint: 'RoleConstraint',
    updateColumns: 'RoleUpdateColumn',
    where: 'RoleBoolExp',
  },
  RoleOrderBy: {
    category: 'OrderBy',
    changeRolesAggregate: 'ChangeRoleAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    isRequired: 'OrderBy',
    name: 'OrderBy',
    permissions: 'OrderBy',
    team: 'TeamOrderBy',
    teamId: 'OrderBy',
    teamJoinsAggregate: 'TeamJoinAggregateOrderBy',
    teamMemberRolesAggregate: 'TeamMemberRolesAggregateOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  RolePkColumnsInput: {
    id: 'bigint',
  },
  RoleSelectColumn: 'enum' as const,
  RoleSelectColumnRoleAggregateBoolExpBool_andArgumentsColumns: 'enum' as const,
  RoleSelectColumnRoleAggregateBoolExpBool_orArgumentsColumns: 'enum' as const,
  RoleSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  RoleStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  RoleStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  RoleStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  RoleStreamCursorInput: {
    initialValue: 'RoleStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  RoleStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  RoleSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  RoleUpdateColumn: 'enum' as const,
  RoleUpdates: {
    _inc: 'RoleIncInput',
    _set: 'RoleSetInput',
    where: 'RoleBoolExp',
  },
  RoleVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  RoleVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  RoleVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  Session: {
    userAgent: {},
  },
  SessionAggregateBoolExp: {
    count: 'sessionAggregateBoolExpCount',
  },
  sessionAggregateBoolExpCount: {
    arguments: 'SessionSelectColumn',
    filter: 'SessionBoolExp',
    predicate: 'IntComparisonExp',
  },
  SessionAggregateFields: {
    count: {
      columns: 'SessionSelectColumn',
    },
  },
  SessionAggregateOrderBy: {
    avg: 'SessionAvgOrderBy',
    count: 'OrderBy',
    max: 'SessionMaxOrderBy',
    min: 'SessionMinOrderBy',
    stddev: 'SessionStddevOrderBy',
    stddevPop: 'SessionStddevPopOrderBy',
    stddevSamp: 'SessionStddevSampOrderBy',
    sum: 'SessionSumOrderBy',
    varPop: 'SessionVarPopOrderBy',
    varSamp: 'SessionVarSampOrderBy',
    variance: 'SessionVarianceOrderBy',
  },
  SessionAppendInput: {
    userAgent: 'jsonb',
  },
  SessionArrRelInsertInput: {
    data: 'SessionInsertInput',
    onConflict: 'SessionOnConflict',
  },
  SessionAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  SessionBoolExp: {
    _and: 'SessionBoolExp',
    _not: 'SessionBoolExp',
    _or: 'SessionBoolExp',
    clientType: 'StringComparisonExp',
    country: 'StringComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    expiredAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    ip: 'StringComparisonExp',
    lastActivityAt: 'TimestamptzComparisonExp',
    lastIssuedAt: 'TimestamptzComparisonExp',
    refreshTokenHash: 'StringComparisonExp',
    revokedAt: 'TimestamptzComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    tokenFamily: 'StringComparisonExp',
    userAgent: 'JsonbComparisonExp',
    userId: 'BigintComparisonExp',
    userInfo: 'UserInfoBoolExp',
  },
  SessionConstraint: 'enum' as const,
  SessionDeleteAtPathInput: {},
  SessionDeleteElemInput: {},
  SessionDeleteKeyInput: {},
  SessionIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  SessionInsertInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expiredAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    lastActivityAt: 'timestamptz',
    lastIssuedAt: 'timestamptz',
    revokedAt: 'timestamptz',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    userAgent: 'jsonb',
    userId: 'bigint',
    userInfo: 'UserInfoObjRelInsertInput',
  },
  SessionMaxOrderBy: {
    clientType: 'OrderBy',
    country: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    expiredAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    ip: 'OrderBy',
    lastActivityAt: 'OrderBy',
    lastIssuedAt: 'OrderBy',
    refreshTokenHash: 'OrderBy',
    revokedAt: 'OrderBy',
    tenantId: 'OrderBy',
    tokenFamily: 'OrderBy',
    userId: 'OrderBy',
  },
  SessionMinOrderBy: {
    clientType: 'OrderBy',
    country: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    expiredAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    ip: 'OrderBy',
    lastActivityAt: 'OrderBy',
    lastIssuedAt: 'OrderBy',
    refreshTokenHash: 'OrderBy',
    revokedAt: 'OrderBy',
    tenantId: 'OrderBy',
    tokenFamily: 'OrderBy',
    userId: 'OrderBy',
  },
  SessionOnConflict: {
    constraint: 'SessionConstraint',
    updateColumns: 'SessionUpdateColumn',
    where: 'SessionBoolExp',
  },
  SessionOrderBy: {
    clientType: 'OrderBy',
    country: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    expiredAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    ip: 'OrderBy',
    lastActivityAt: 'OrderBy',
    lastIssuedAt: 'OrderBy',
    refreshTokenHash: 'OrderBy',
    revokedAt: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    tokenFamily: 'OrderBy',
    userAgent: 'OrderBy',
    userId: 'OrderBy',
    userInfo: 'UserInfoOrderBy',
  },
  SessionPkColumnsInput: {
    id: 'bigint',
  },
  SessionPrependInput: {
    userAgent: 'jsonb',
  },
  SessionSelectColumn: 'enum' as const,
  SessionSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expiredAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActivityAt: 'timestamptz',
    lastIssuedAt: 'timestamptz',
    revokedAt: 'timestamptz',
    tenantId: 'bigint',
    userAgent: 'jsonb',
    userId: 'bigint',
  },
  SessionStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  SessionStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  SessionStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  SessionStreamCursorInput: {
    initialValue: 'SessionStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  SessionStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expiredAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActivityAt: 'timestamptz',
    lastIssuedAt: 'timestamptz',
    revokedAt: 'timestamptz',
    tenantId: 'bigint',
    userAgent: 'jsonb',
    userId: 'bigint',
  },
  SessionSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  SessionUpdateColumn: 'enum' as const,
  SessionUpdates: {
    _append: 'SessionAppendInput',
    _deleteAtPath: 'SessionDeleteAtPathInput',
    _deleteElem: 'SessionDeleteElemInput',
    _deleteKey: 'SessionDeleteKeyInput',
    _inc: 'SessionIncInput',
    _prepend: 'SessionPrependInput',
    _set: 'SessionSetInput',
    where: 'SessionBoolExp',
  },
  SessionVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  SessionVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  SessionVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ShortcutAggregateBoolExp: {
    count: 'shortcutAggregateBoolExpCount',
  },
  shortcutAggregateBoolExpCount: {
    arguments: 'ShortcutSelectColumn',
    filter: 'ShortcutBoolExp',
    predicate: 'IntComparisonExp',
  },
  ShortcutAggregateFields: {
    count: {
      columns: 'ShortcutSelectColumn',
    },
  },
  ShortcutAggregateOrderBy: {
    avg: 'ShortcutAvgOrderBy',
    count: 'OrderBy',
    max: 'ShortcutMaxOrderBy',
    min: 'ShortcutMinOrderBy',
    stddev: 'ShortcutStddevOrderBy',
    stddevPop: 'ShortcutStddevPopOrderBy',
    stddevSamp: 'ShortcutStddevSampOrderBy',
    sum: 'ShortcutSumOrderBy',
    varPop: 'ShortcutVarPopOrderBy',
    varSamp: 'ShortcutVarSampOrderBy',
    variance: 'ShortcutVarianceOrderBy',
  },
  ShortcutArrRelInsertInput: {
    data: 'ShortcutInsertInput',
    onConflict: 'ShortcutOnConflict',
  },
  ShortcutAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    targetActorId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ShortcutBoolExp: {
    _and: 'ShortcutBoolExp',
    _not: 'ShortcutBoolExp',
    _or: 'ShortcutBoolExp',
    actor: 'ActorBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    targetActorId: 'BigintComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
    userId: 'BigintComparisonExp',
    userInfo: 'UserInfoBoolExp',
  },
  ShortcutConstraint: 'enum' as const,
  ShortcutIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    targetActorId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ShortcutInsertInput: {
    actor: 'ActorObjRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    targetActorId: 'bigint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    userId: 'bigint',
    userInfo: 'UserInfoObjRelInsertInput',
  },
  ShortcutMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    targetActorId: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    userId: 'OrderBy',
  },
  ShortcutMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    targetActorId: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    userId: 'OrderBy',
  },
  ShortcutOnConflict: {
    constraint: 'ShortcutConstraint',
    updateColumns: 'ShortcutUpdateColumn',
    where: 'ShortcutBoolExp',
  },
  ShortcutOrderBy: {
    actor: 'ActorOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    targetActorId: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    userId: 'OrderBy',
    userInfo: 'UserInfoOrderBy',
  },
  ShortcutPkColumnsInput: {
    id: 'bigint',
  },
  ShortcutSelectColumn: 'enum' as const,
  ShortcutSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    targetActorId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ShortcutStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    targetActorId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ShortcutStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    targetActorId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ShortcutStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    targetActorId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ShortcutStreamCursorInput: {
    initialValue: 'ShortcutStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ShortcutStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    targetActorId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ShortcutSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    targetActorId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ShortcutUpdateColumn: 'enum' as const,
  ShortcutUpdates: {
    _inc: 'ShortcutIncInput',
    _set: 'ShortcutSetInput',
    where: 'ShortcutBoolExp',
  },
  ShortcutVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    targetActorId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ShortcutVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    targetActorId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  ShortcutVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    targetActorId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  smallint: `scalar.smallint` as const,
  SmallintComparisonExp: {
    _eq: 'smallint',
    _gt: 'smallint',
    _gte: 'smallint',
    _in: 'smallint',
    _lt: 'smallint',
    _lte: 'smallint',
    _neq: 'smallint',
    _nin: 'smallint',
  },
  SocialAggregateBoolExp: {
    count: 'socialAggregateBoolExpCount',
  },
  socialAggregateBoolExpCount: {
    arguments: 'SocialSelectColumn',
    filter: 'SocialBoolExp',
    predicate: 'IntComparisonExp',
  },
  SocialAggregateFields: {
    count: {
      columns: 'SocialSelectColumn',
    },
  },
  SocialAggregateOrderBy: {
    avg: 'SocialAvgOrderBy',
    count: 'OrderBy',
    max: 'SocialMaxOrderBy',
    min: 'SocialMinOrderBy',
    stddev: 'SocialStddevOrderBy',
    stddevPop: 'SocialStddevPopOrderBy',
    stddevSamp: 'SocialStddevSampOrderBy',
    sum: 'SocialSumOrderBy',
    varPop: 'SocialVarPopOrderBy',
    varSamp: 'SocialVarSampOrderBy',
    variance: 'SocialVarianceOrderBy',
  },
  SocialArrRelInsertInput: {
    data: 'SocialInsertInput',
    onConflict: 'SocialOnConflict',
  },
  SocialAvgOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  SocialBoolExp: {
    _and: 'SocialBoolExp',
    _not: 'SocialBoolExp',
    _or: 'SocialBoolExp',
    actor: 'ActorBoolExp',
    actorId: 'BigintComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    pseudo: 'StringComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
    url: 'StringComparisonExp',
  },
  SocialConstraint: 'enum' as const,
  SocialIncInput: {
    actorId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  SocialInsertInput: {
    actor: 'ActorObjRelInsertInput',
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  SocialMaxOrderBy: {
    actorId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    pseudo: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    url: 'OrderBy',
  },
  SocialMinOrderBy: {
    actorId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    pseudo: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    url: 'OrderBy',
  },
  SocialOnConflict: {
    constraint: 'SocialConstraint',
    updateColumns: 'SocialUpdateColumn',
    where: 'SocialBoolExp',
  },
  SocialOrderBy: {
    actor: 'ActorOrderBy',
    actorId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    pseudo: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    url: 'OrderBy',
  },
  SocialPkColumnsInput: {
    id: 'bigint',
  },
  SocialSelectColumn: 'enum' as const,
  SocialSetInput: {
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  SocialStddevOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  SocialStddevPopOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  SocialStddevSampOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  SocialStreamCursorInput: {
    initialValue: 'SocialStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  SocialStreamCursorValueInput: {
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  SocialSumOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  SocialUpdateColumn: 'enum' as const,
  SocialUpdates: {
    _inc: 'SocialIncInput',
    _set: 'SocialSetInput',
    where: 'SocialBoolExp',
  },
  SocialVarianceOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  SocialVarPopOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  SocialVarSampOrderBy: {
    actorId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  StringComparisonExp: {},
  Subject: {
    classGroupTeacherSubjects: {
      distinctOn: 'ClassGroupTeacherSubjectSelectColumn',
      orderBy: 'ClassGroupTeacherSubjectOrderBy',
      where: 'ClassGroupTeacherSubjectBoolExp',
    },
    classGroupTeacherSubjectsAggregate: {
      distinctOn: 'ClassGroupTeacherSubjectSelectColumn',
      orderBy: 'ClassGroupTeacherSubjectOrderBy',
      where: 'ClassGroupTeacherSubjectBoolExp',
    },
    documents: {
      distinctOn: 'DocumentSelectColumn',
      orderBy: 'DocumentOrderBy',
      where: 'DocumentBoolExp',
    },
    documentsAggregate: {
      distinctOn: 'DocumentSelectColumn',
      orderBy: 'DocumentOrderBy',
      where: 'DocumentBoolExp',
    },
    subjectClasses: {
      distinctOn: 'SubjectClassesSelectColumn',
      orderBy: 'SubjectClassesOrderBy',
      where: 'SubjectClassesBoolExp',
    },
    subjectClassesAggregate: {
      distinctOn: 'SubjectClassesSelectColumn',
      orderBy: 'SubjectClassesOrderBy',
      where: 'SubjectClassesBoolExp',
    },
  },
  SubjectAggregateBoolExp: {
    count: 'subjectAggregateBoolExpCount',
  },
  subjectAggregateBoolExpCount: {
    arguments: 'SubjectSelectColumn',
    filter: 'SubjectBoolExp',
    predicate: 'IntComparisonExp',
  },
  SubjectAggregateFields: {
    count: {
      columns: 'SubjectSelectColumn',
    },
  },
  SubjectAggregateOrderBy: {
    avg: 'SubjectAvgOrderBy',
    count: 'OrderBy',
    max: 'SubjectMaxOrderBy',
    min: 'SubjectMinOrderBy',
    stddev: 'SubjectStddevOrderBy',
    stddevPop: 'SubjectStddevPopOrderBy',
    stddevSamp: 'SubjectStddevSampOrderBy',
    sum: 'SubjectSumOrderBy',
    varPop: 'SubjectVarPopOrderBy',
    varSamp: 'SubjectVarSampOrderBy',
    variance: 'SubjectVarianceOrderBy',
  },
  SubjectArrRelInsertInput: {
    data: 'SubjectInsertInput',
    onConflict: 'SubjectOnConflict',
  },
  SubjectAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  SubjectBoolExp: {
    _and: 'SubjectBoolExp',
    _not: 'SubjectBoolExp',
    _or: 'SubjectBoolExp',
    classGroupTeacherSubjects: 'ClassGroupTeacherSubjectBoolExp',
    classGroupTeacherSubjectsAggregate: 'ClassGroupTeacherSubjectAggregateBoolExp',
    code: 'StringComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    description: 'StringComparisonExp',
    documents: 'DocumentBoolExp',
    documentsAggregate: 'DocumentAggregateBoolExp',
    englishName: 'StringComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    lastActiveDate: 'TimestamptzComparisonExp',
    name: 'StringComparisonExp',
    subjectClasses: 'SubjectClassesBoolExp',
    subjectClassesAggregate: 'SubjectClassesAggregateBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
  },
  SubjectClassesAggregateBoolExp: {
    count: 'subjectClassesAggregateBoolExpCount',
  },
  subjectClassesAggregateBoolExpCount: {
    arguments: 'SubjectClassesSelectColumn',
    filter: 'SubjectClassesBoolExp',
    predicate: 'IntComparisonExp',
  },
  SubjectClassesAggregateFields: {
    count: {
      columns: 'SubjectClassesSelectColumn',
    },
  },
  SubjectClassesAggregateOrderBy: {
    avg: 'SubjectClassesAvgOrderBy',
    count: 'OrderBy',
    max: 'SubjectClassesMaxOrderBy',
    min: 'SubjectClassesMinOrderBy',
    stddev: 'SubjectClassesStddevOrderBy',
    stddevPop: 'SubjectClassesStddevPopOrderBy',
    stddevSamp: 'SubjectClassesStddevSampOrderBy',
    sum: 'SubjectClassesSumOrderBy',
    varPop: 'SubjectClassesVarPopOrderBy',
    varSamp: 'SubjectClassesVarSampOrderBy',
    variance: 'SubjectClassesVarianceOrderBy',
  },
  SubjectClassesArrRelInsertInput: {
    data: 'SubjectClassesInsertInput',
    onConflict: 'SubjectClassesOnConflict',
  },
  SubjectClassesAvgOrderBy: {
    classGroupId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  SubjectClassesBoolExp: {
    _and: 'SubjectClassesBoolExp',
    _not: 'SubjectClassesBoolExp',
    _or: 'SubjectClassesBoolExp',
    classGroup: 'ClassGroupBoolExp',
    classGroupId: 'BigintComparisonExp',
    subject: 'SubjectBoolExp',
    subjectId: 'BigintComparisonExp',
  },
  SubjectClassesConstraint: 'enum' as const,
  SubjectClassesIncInput: {
    classGroupId: 'bigint',
    subjectId: 'bigint',
  },
  SubjectClassesInsertInput: {
    classGroup: 'ClassGroupObjRelInsertInput',
    classGroupId: 'bigint',
    subject: 'SubjectObjRelInsertInput',
    subjectId: 'bigint',
  },
  SubjectClassesMaxOrderBy: {
    classGroupId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  SubjectClassesMinOrderBy: {
    classGroupId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  SubjectClassesOnConflict: {
    constraint: 'SubjectClassesConstraint',
    updateColumns: 'SubjectClassesUpdateColumn',
    where: 'SubjectClassesBoolExp',
  },
  SubjectClassesOrderBy: {
    classGroup: 'ClassGroupOrderBy',
    classGroupId: 'OrderBy',
    subject: 'SubjectOrderBy',
    subjectId: 'OrderBy',
  },
  SubjectClassesPkColumnsInput: {
    classGroupId: 'bigint',
    subjectId: 'bigint',
  },
  SubjectClassesSelectColumn: 'enum' as const,
  SubjectClassesSetInput: {
    classGroupId: 'bigint',
    subjectId: 'bigint',
  },
  SubjectClassesStddevOrderBy: {
    classGroupId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  SubjectClassesStddevPopOrderBy: {
    classGroupId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  SubjectClassesStddevSampOrderBy: {
    classGroupId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  SubjectClassesStreamCursorInput: {
    initialValue: 'SubjectClassesStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  SubjectClassesStreamCursorValueInput: {
    classGroupId: 'bigint',
    subjectId: 'bigint',
  },
  SubjectClassesSumOrderBy: {
    classGroupId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  SubjectClassesUpdateColumn: 'enum' as const,
  SubjectClassesUpdates: {
    _inc: 'SubjectClassesIncInput',
    _set: 'SubjectClassesSetInput',
    where: 'SubjectClassesBoolExp',
  },
  SubjectClassesVarianceOrderBy: {
    classGroupId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  SubjectClassesVarPopOrderBy: {
    classGroupId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  SubjectClassesVarSampOrderBy: {
    classGroupId: 'OrderBy',
    subjectId: 'OrderBy',
  },
  SubjectConstraint: 'enum' as const,
  SubjectIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  SubjectInsertInput: {
    classGroupTeacherSubjects: 'ClassGroupTeacherSubjectArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    documents: 'DocumentArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    lastActiveDate: 'timestamptz',
    subjectClasses: 'SubjectClassesArrRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  SubjectMaxOrderBy: {
    code: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    englishName: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    lastActiveDate: 'OrderBy',
    name: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  SubjectMinOrderBy: {
    code: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    englishName: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    lastActiveDate: 'OrderBy',
    name: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  SubjectObjRelInsertInput: {
    data: 'SubjectInsertInput',
    onConflict: 'SubjectOnConflict',
  },
  SubjectOnConflict: {
    constraint: 'SubjectConstraint',
    updateColumns: 'SubjectUpdateColumn',
    where: 'SubjectBoolExp',
  },
  SubjectOrderBy: {
    classGroupTeacherSubjectsAggregate: 'ClassGroupTeacherSubjectAggregateOrderBy',
    code: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    documentsAggregate: 'DocumentAggregateOrderBy',
    englishName: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    lastActiveDate: 'OrderBy',
    name: 'OrderBy',
    subjectClassesAggregate: 'SubjectClassesAggregateOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  SubjectPkColumnsInput: {
    id: 'bigint',
  },
  SubjectSelectColumn: 'enum' as const,
  SubjectSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
  },
  SubjectStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  SubjectStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  SubjectStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  SubjectStreamCursorInput: {
    initialValue: 'SubjectStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  SubjectStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
  },
  SubjectSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  SubjectUpdateColumn: 'enum' as const,
  SubjectUpdates: {
    _inc: 'SubjectIncInput',
    _set: 'SubjectSetInput',
    where: 'SubjectBoolExp',
  },
  SubjectVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  SubjectVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  SubjectVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  Subscription: {
    action: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    actionAggregate: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    actionByPk: {
      id: 'bigint',
    },
    actionStream: {
      cursor: 'ActionStreamCursorInput',
      where: 'ActionBoolExp',
    },
    actor: {
      distinctOn: 'ActorSelectColumn',
      orderBy: 'ActorOrderBy',
      where: 'ActorBoolExp',
    },
    actorAddress: {
      distinctOn: 'ActorAddressSelectColumn',
      orderBy: 'ActorAddressOrderBy',
      where: 'ActorAddressBoolExp',
    },
    actorAddressAggregate: {
      distinctOn: 'ActorAddressSelectColumn',
      orderBy: 'ActorAddressOrderBy',
      where: 'ActorAddressBoolExp',
    },
    actorAddressByPk: {
      id: 'bigint',
    },
    actorAddressStream: {
      cursor: 'ActorAddressStreamCursorInput',
      where: 'ActorAddressBoolExp',
    },
    actorAggregate: {
      distinctOn: 'ActorSelectColumn',
      orderBy: 'ActorOrderBy',
      where: 'ActorBoolExp',
    },
    actorBankInfo: {
      distinctOn: 'ActorBankInfoSelectColumn',
      orderBy: 'ActorBankInfoOrderBy',
      where: 'ActorBankInfoBoolExp',
    },
    actorBankInfoAggregate: {
      distinctOn: 'ActorBankInfoSelectColumn',
      orderBy: 'ActorBankInfoOrderBy',
      where: 'ActorBankInfoBoolExp',
    },
    actorBankInfoByPk: {
      id: 'bigint',
    },
    actorBankInfoStream: {
      cursor: 'ActorBankInfoStreamCursorInput',
      where: 'ActorBankInfoBoolExp',
    },
    actorByPk: {
      id: 'bigint',
    },
    actorFinance: {
      distinctOn: 'ActorFinanceSelectColumn',
      orderBy: 'ActorFinanceOrderBy',
      where: 'ActorFinanceBoolExp',
    },
    actorFinanceAggregate: {
      distinctOn: 'ActorFinanceSelectColumn',
      orderBy: 'ActorFinanceOrderBy',
      where: 'ActorFinanceBoolExp',
    },
    actorFinanceByPk: {
      id: 'bigint',
    },
    actorFinanceReceipts: {
      distinctOn: 'ActorFinanceReceiptsSelectColumn',
      orderBy: 'ActorFinanceReceiptsOrderBy',
      where: 'ActorFinanceReceiptsBoolExp',
    },
    actorFinanceReceiptsAggregate: {
      distinctOn: 'ActorFinanceReceiptsSelectColumn',
      orderBy: 'ActorFinanceReceiptsOrderBy',
      where: 'ActorFinanceReceiptsBoolExp',
    },
    actorFinanceReceiptsByPk: {
      actorFinanceId: 'bigint',
      uploadId: 'bigint',
    },
    actorFinanceReceiptsStream: {
      cursor: 'ActorFinanceReceiptsStreamCursorInput',
      where: 'ActorFinanceReceiptsBoolExp',
    },
    actorFinanceStream: {
      cursor: 'ActorFinanceStreamCursorInput',
      where: 'ActorFinanceBoolExp',
    },
    actorImage: {
      distinctOn: 'ActorImageSelectColumn',
      orderBy: 'ActorImageOrderBy',
      where: 'ActorImageBoolExp',
    },
    actorImageAggregate: {
      distinctOn: 'ActorImageSelectColumn',
      orderBy: 'ActorImageOrderBy',
      where: 'ActorImageBoolExp',
    },
    actorImageByPk: {
      id: 'bigint',
    },
    actorImageStream: {
      cursor: 'ActorImageStreamCursorInput',
      where: 'ActorImageBoolExp',
    },
    actorStream: {
      cursor: 'ActorStreamCursorInput',
      where: 'ActorBoolExp',
    },
    actorTags: {
      distinctOn: 'ActorTagsSelectColumn',
      orderBy: 'ActorTagsOrderBy',
      where: 'ActorTagsBoolExp',
    },
    actorTagsAggregate: {
      distinctOn: 'ActorTagsSelectColumn',
      orderBy: 'ActorTagsOrderBy',
      where: 'ActorTagsBoolExp',
    },
    actorTagsByPk: {
      actorId: 'bigint',
      tagId: 'bigint',
    },
    actorTagsStream: {
      cursor: 'ActorTagsStreamCursorInput',
      where: 'ActorTagsBoolExp',
    },
    botInfo: {
      distinctOn: 'BotInfoSelectColumn',
      orderBy: 'BotInfoOrderBy',
      where: 'BotInfoBoolExp',
    },
    botInfoAggregate: {
      distinctOn: 'BotInfoSelectColumn',
      orderBy: 'BotInfoOrderBy',
      where: 'BotInfoBoolExp',
    },
    botInfoByPk: {
      id: 'bigint',
    },
    botInfoStream: {
      cursor: 'BotInfoStreamCursorInput',
      where: 'BotInfoBoolExp',
    },
    canteen: {
      distinctOn: 'CanteenSelectColumn',
      orderBy: 'CanteenOrderBy',
      where: 'CanteenBoolExp',
    },
    canteenAggregate: {
      distinctOn: 'CanteenSelectColumn',
      orderBy: 'CanteenOrderBy',
      where: 'CanteenBoolExp',
    },
    canteenByPk: {
      id: 'bigint',
    },
    canteenFood: {
      distinctOn: 'CanteenFoodSelectColumn',
      orderBy: 'CanteenFoodOrderBy',
      where: 'CanteenFoodBoolExp',
    },
    canteenFoodAggregate: {
      distinctOn: 'CanteenFoodSelectColumn',
      orderBy: 'CanteenFoodOrderBy',
      where: 'CanteenFoodBoolExp',
    },
    canteenFoodByPk: {
      id: 'bigint',
    },
    canteenFoodStream: {
      cursor: 'CanteenFoodStreamCursorInput',
      where: 'CanteenFoodBoolExp',
    },
    canteenMenu: {
      distinctOn: 'CanteenMenuSelectColumn',
      orderBy: 'CanteenMenuOrderBy',
      where: 'CanteenMenuBoolExp',
    },
    canteenMenuAggregate: {
      distinctOn: 'CanteenMenuSelectColumn',
      orderBy: 'CanteenMenuOrderBy',
      where: 'CanteenMenuBoolExp',
    },
    canteenMenuByPk: {
      id: 'bigint',
    },
    canteenMenuStream: {
      cursor: 'CanteenMenuStreamCursorInput',
      where: 'CanteenMenuBoolExp',
    },
    canteenStream: {
      cursor: 'CanteenStreamCursorInput',
      where: 'CanteenBoolExp',
    },
    changeRole: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    changeRoleAggregate: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    changeRoleByPk: {
      id: 'bigint',
    },
    changeRoleStream: {
      cursor: 'ChangeRoleStreamCursorInput',
      where: 'ChangeRoleBoolExp',
    },
    classGroup: {
      distinctOn: 'ClassGroupSelectColumn',
      orderBy: 'ClassGroupOrderBy',
      where: 'ClassGroupBoolExp',
    },
    classGroupAggregate: {
      distinctOn: 'ClassGroupSelectColumn',
      orderBy: 'ClassGroupOrderBy',
      where: 'ClassGroupBoolExp',
    },
    classGroupByPk: {
      id: 'bigint',
    },
    classGroupStream: {
      cursor: 'ClassGroupStreamCursorInput',
      where: 'ClassGroupBoolExp',
    },
    classGroupTeacher: {
      distinctOn: 'ClassGroupTeacherSelectColumn',
      orderBy: 'ClassGroupTeacherOrderBy',
      where: 'ClassGroupTeacherBoolExp',
    },
    classGroupTeacherAggregate: {
      distinctOn: 'ClassGroupTeacherSelectColumn',
      orderBy: 'ClassGroupTeacherOrderBy',
      where: 'ClassGroupTeacherBoolExp',
    },
    classGroupTeacherByPk: {
      id: 'bigint',
    },
    classGroupTeacherStream: {
      cursor: 'ClassGroupTeacherStreamCursorInput',
      where: 'ClassGroupTeacherBoolExp',
    },
    classGroupTeacherSubject: {
      distinctOn: 'ClassGroupTeacherSubjectSelectColumn',
      orderBy: 'ClassGroupTeacherSubjectOrderBy',
      where: 'ClassGroupTeacherSubjectBoolExp',
    },
    classGroupTeacherSubjectAggregate: {
      distinctOn: 'ClassGroupTeacherSubjectSelectColumn',
      orderBy: 'ClassGroupTeacherSubjectOrderBy',
      where: 'ClassGroupTeacherSubjectBoolExp',
    },
    classGroupTeacherSubjectByPk: {
      classGroupTeacherId: 'bigint',
      subjectId: 'bigint',
    },
    classGroupTeacherSubjectStream: {
      cursor: 'ClassGroupTeacherSubjectStreamCursorInput',
      where: 'ClassGroupTeacherSubjectBoolExp',
    },
    cohort: {
      distinctOn: 'CohortSelectColumn',
      orderBy: 'CohortOrderBy',
      where: 'CohortBoolExp',
    },
    cohortAggregate: {
      distinctOn: 'CohortSelectColumn',
      orderBy: 'CohortOrderBy',
      where: 'CohortBoolExp',
    },
    cohortByPk: {
      id: 'bigint',
    },
    cohortStream: {
      cursor: 'CohortStreamCursorInput',
      where: 'CohortBoolExp',
    },
    content: {
      distinctOn: 'ContentSelectColumn',
      orderBy: 'ContentOrderBy',
      where: 'ContentBoolExp',
    },
    contentAggregate: {
      distinctOn: 'ContentSelectColumn',
      orderBy: 'ContentOrderBy',
      where: 'ContentBoolExp',
    },
    contentAttachments: {
      distinctOn: 'ContentAttachmentsSelectColumn',
      orderBy: 'ContentAttachmentsOrderBy',
      where: 'ContentAttachmentsBoolExp',
    },
    contentAttachmentsAggregate: {
      distinctOn: 'ContentAttachmentsSelectColumn',
      orderBy: 'ContentAttachmentsOrderBy',
      where: 'ContentAttachmentsBoolExp',
    },
    contentAttachmentsByPk: {
      contentId: 'bigint',
      uploadId: 'bigint',
    },
    contentAttachmentsStream: {
      cursor: 'ContentAttachmentsStreamCursorInput',
      where: 'ContentAttachmentsBoolExp',
    },
    contentByPk: {
      id: 'bigint',
    },
    contentEdit: {
      distinctOn: 'ContentEditSelectColumn',
      orderBy: 'ContentEditOrderBy',
      where: 'ContentEditBoolExp',
    },
    contentEditAggregate: {
      distinctOn: 'ContentEditSelectColumn',
      orderBy: 'ContentEditOrderBy',
      where: 'ContentEditBoolExp',
    },
    contentEditByPk: {
      id: 'bigint',
    },
    contentEditStream: {
      cursor: 'ContentEditStreamCursorInput',
      where: 'ContentEditBoolExp',
    },
    contentMaster: {
      distinctOn: 'ContentMasterSelectColumn',
      orderBy: 'ContentMasterOrderBy',
      where: 'ContentMasterBoolExp',
    },
    contentMasterAggregate: {
      distinctOn: 'ContentMasterSelectColumn',
      orderBy: 'ContentMasterOrderBy',
      where: 'ContentMasterBoolExp',
    },
    contentMasterByPk: {
      id: 'bigint',
    },
    contentMasterContributors: {
      distinctOn: 'ContentMasterContributorsSelectColumn',
      orderBy: 'ContentMasterContributorsOrderBy',
      where: 'ContentMasterContributorsBoolExp',
    },
    contentMasterContributorsAggregate: {
      distinctOn: 'ContentMasterContributorsSelectColumn',
      orderBy: 'ContentMasterContributorsOrderBy',
      where: 'ContentMasterContributorsBoolExp',
    },
    contentMasterContributorsByPk: {
      contentMasterId: 'bigint',
      individualId: 'bigint',
    },
    contentMasterContributorsStream: {
      cursor: 'ContentMasterContributorsStreamCursorInput',
      where: 'ContentMasterContributorsBoolExp',
    },
    contentMasterStream: {
      cursor: 'ContentMasterStreamCursorInput',
      where: 'ContentMasterBoolExp',
    },
    contentMasterTags: {
      distinctOn: 'ContentMasterTagsSelectColumn',
      orderBy: 'ContentMasterTagsOrderBy',
      where: 'ContentMasterTagsBoolExp',
    },
    contentMasterTagsAggregate: {
      distinctOn: 'ContentMasterTagsSelectColumn',
      orderBy: 'ContentMasterTagsOrderBy',
      where: 'ContentMasterTagsBoolExp',
    },
    contentMasterTagsByPk: {
      contentMasterId: 'bigint',
      tagId: 'bigint',
    },
    contentMasterTagsStream: {
      cursor: 'ContentMasterTagsStreamCursorInput',
      where: 'ContentMasterTagsBoolExp',
    },
    contentRepresentingTeams: {
      distinctOn: 'ContentRepresentingTeamsSelectColumn',
      orderBy: 'ContentRepresentingTeamsOrderBy',
      where: 'ContentRepresentingTeamsBoolExp',
    },
    contentRepresentingTeamsAggregate: {
      distinctOn: 'ContentRepresentingTeamsSelectColumn',
      orderBy: 'ContentRepresentingTeamsOrderBy',
      where: 'ContentRepresentingTeamsBoolExp',
    },
    contentRepresentingTeamsByPk: {
      contentId: 'bigint',
      teamId: 'bigint',
    },
    contentRepresentingTeamsStream: {
      cursor: 'ContentRepresentingTeamsStreamCursorInput',
      where: 'ContentRepresentingTeamsBoolExp',
    },
    contentStream: {
      cursor: 'ContentStreamCursorInput',
      where: 'ContentBoolExp',
    },
    document: {
      distinctOn: 'DocumentSelectColumn',
      orderBy: 'DocumentOrderBy',
      where: 'DocumentBoolExp',
    },
    documentAggregate: {
      distinctOn: 'DocumentSelectColumn',
      orderBy: 'DocumentOrderBy',
      where: 'DocumentBoolExp',
    },
    documentByPk: {
      id: 'bigint',
    },
    documentEdit: {
      distinctOn: 'DocumentEditSelectColumn',
      orderBy: 'DocumentEditOrderBy',
      where: 'DocumentEditBoolExp',
    },
    documentEditAggregate: {
      distinctOn: 'DocumentEditSelectColumn',
      orderBy: 'DocumentEditOrderBy',
      where: 'DocumentEditBoolExp',
    },
    documentEditByPk: {
      id: 'bigint',
    },
    documentEditStream: {
      cursor: 'DocumentEditStreamCursorInput',
      where: 'DocumentEditBoolExp',
    },
    documentStream: {
      cursor: 'DocumentStreamCursorInput',
      where: 'DocumentBoolExp',
    },
    event: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    eventAggregate: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    eventApproval: {
      distinctOn: 'EventApprovalSelectColumn',
      orderBy: 'EventApprovalOrderBy',
      where: 'EventApprovalBoolExp',
    },
    eventApprovalAggregate: {
      distinctOn: 'EventApprovalSelectColumn',
      orderBy: 'EventApprovalOrderBy',
      where: 'EventApprovalBoolExp',
    },
    eventApprovalByPk: {
      id: 'bigint',
    },
    eventApprovalStep: {
      distinctOn: 'EventApprovalStepSelectColumn',
      orderBy: 'EventApprovalStepOrderBy',
      where: 'EventApprovalStepBoolExp',
    },
    eventApprovalStepAggregate: {
      distinctOn: 'EventApprovalStepSelectColumn',
      orderBy: 'EventApprovalStepOrderBy',
      where: 'EventApprovalStepBoolExp',
    },
    eventApprovalStepByPk: {
      id: 'bigint',
    },
    eventApprovalStepNotifiees: {
      distinctOn: 'EventApprovalStepNotifieesSelectColumn',
      orderBy: 'EventApprovalStepNotifieesOrderBy',
      where: 'EventApprovalStepNotifieesBoolExp',
    },
    eventApprovalStepNotifieesAggregate: {
      distinctOn: 'EventApprovalStepNotifieesSelectColumn',
      orderBy: 'EventApprovalStepNotifieesOrderBy',
      where: 'EventApprovalStepNotifieesBoolExp',
    },
    eventApprovalStepNotifieesByPk: {
      eventApprovalStepId: 'bigint',
      individualId: 'bigint',
    },
    eventApprovalStepNotifieesStream: {
      cursor: 'EventApprovalStepNotifieesStreamCursorInput',
      where: 'EventApprovalStepNotifieesBoolExp',
    },
    eventApprovalStepStream: {
      cursor: 'EventApprovalStepStreamCursorInput',
      where: 'EventApprovalStepBoolExp',
    },
    eventApprovalStepValidators: {
      distinctOn: 'EventApprovalStepValidatorsSelectColumn',
      orderBy: 'EventApprovalStepValidatorsOrderBy',
      where: 'EventApprovalStepValidatorsBoolExp',
    },
    eventApprovalStepValidatorsAggregate: {
      distinctOn: 'EventApprovalStepValidatorsSelectColumn',
      orderBy: 'EventApprovalStepValidatorsOrderBy',
      where: 'EventApprovalStepValidatorsBoolExp',
    },
    eventApprovalStepValidatorsByPk: {
      eventApprovalStepId: 'bigint',
      individualId: 'bigint',
    },
    eventApprovalStepValidatorsStream: {
      cursor: 'EventApprovalStepValidatorsStreamCursorInput',
      where: 'EventApprovalStepValidatorsBoolExp',
    },
    eventApprovalStream: {
      cursor: 'EventApprovalStreamCursorInput',
      where: 'EventApprovalBoolExp',
    },
    eventByPk: {
      id: 'bigint',
    },
    eventChangeRole: {
      distinctOn: 'EventChangeRoleSelectColumn',
      orderBy: 'EventChangeRoleOrderBy',
      where: 'EventChangeRoleBoolExp',
    },
    eventChangeRoleAggregate: {
      distinctOn: 'EventChangeRoleSelectColumn',
      orderBy: 'EventChangeRoleOrderBy',
      where: 'EventChangeRoleBoolExp',
    },
    eventChangeRoleByPk: {
      id: 'bigint',
    },
    eventChangeRoleStream: {
      cursor: 'EventChangeRoleStreamCursorInput',
      where: 'EventChangeRoleBoolExp',
    },
    eventJoin: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventJoinAggregate: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventJoinByPk: {
      id: 'bigint',
    },
    eventJoinStream: {
      cursor: 'EventJoinStreamCursorInput',
      where: 'EventJoinBoolExp',
    },
    eventOrganisingTeams: {
      distinctOn: 'EventOrganisingTeamsSelectColumn',
      orderBy: 'EventOrganisingTeamsOrderBy',
      where: 'EventOrganisingTeamsBoolExp',
    },
    eventOrganisingTeamsAggregate: {
      distinctOn: 'EventOrganisingTeamsSelectColumn',
      orderBy: 'EventOrganisingTeamsOrderBy',
      where: 'EventOrganisingTeamsBoolExp',
    },
    eventOrganisingTeamsByPk: {
      eventId: 'bigint',
      teamId: 'bigint',
    },
    eventOrganisingTeamsStream: {
      cursor: 'EventOrganisingTeamsStreamCursorInput',
      where: 'EventOrganisingTeamsBoolExp',
    },
    eventRole: {
      distinctOn: 'EventRoleSelectColumn',
      orderBy: 'EventRoleOrderBy',
      where: 'EventRoleBoolExp',
    },
    eventRoleAggregate: {
      distinctOn: 'EventRoleSelectColumn',
      orderBy: 'EventRoleOrderBy',
      where: 'EventRoleBoolExp',
    },
    eventRoleByPk: {
      id: 'bigint',
    },
    eventRoleStream: {
      cursor: 'EventRoleStreamCursorInput',
      where: 'EventRoleBoolExp',
    },
    eventStream: {
      cursor: 'EventStreamCursorInput',
      where: 'EventBoolExp',
    },
    eventTags: {
      distinctOn: 'EventTagsSelectColumn',
      orderBy: 'EventTagsOrderBy',
      where: 'EventTagsBoolExp',
    },
    eventTagsAggregate: {
      distinctOn: 'EventTagsSelectColumn',
      orderBy: 'EventTagsOrderBy',
      where: 'EventTagsBoolExp',
    },
    eventTagsByPk: {
      eventId: 'bigint',
      tagId: 'bigint',
    },
    eventTagsStream: {
      cursor: 'EventTagsStreamCursorInput',
      where: 'EventTagsBoolExp',
    },
    eventTeams: {
      distinctOn: 'EventTeamsSelectColumn',
      orderBy: 'EventTeamsOrderBy',
      where: 'EventTeamsBoolExp',
    },
    eventTeamsAggregate: {
      distinctOn: 'EventTeamsSelectColumn',
      orderBy: 'EventTeamsOrderBy',
      where: 'EventTeamsBoolExp',
    },
    eventTeamsByPk: {
      eventId: 'bigint',
      teamId: 'bigint',
    },
    eventTeamsStream: {
      cursor: 'EventTeamsStreamCursorInput',
      where: 'EventTeamsBoolExp',
    },
    expense: {
      distinctOn: 'ExpenseSelectColumn',
      orderBy: 'ExpenseOrderBy',
      where: 'ExpenseBoolExp',
    },
    expenseAggregate: {
      distinctOn: 'ExpenseSelectColumn',
      orderBy: 'ExpenseOrderBy',
      where: 'ExpenseBoolExp',
    },
    expenseByPk: {
      id: 'bigint',
    },
    expenseStream: {
      cursor: 'ExpenseStreamCursorInput',
      where: 'ExpenseBoolExp',
    },
    favorite: {
      distinctOn: 'FavoriteSelectColumn',
      orderBy: 'FavoriteOrderBy',
      where: 'FavoriteBoolExp',
    },
    favoriteAggregate: {
      distinctOn: 'FavoriteSelectColumn',
      orderBy: 'FavoriteOrderBy',
      where: 'FavoriteBoolExp',
    },
    favoriteByPk: {
      id: 'bigint',
    },
    favoriteStream: {
      cursor: 'FavoriteStreamCursorInput',
      where: 'FavoriteBoolExp',
    },
    form: {
      distinctOn: 'FormSelectColumn',
      orderBy: 'FormOrderBy',
      where: 'FormBoolExp',
    },
    formAggregate: {
      distinctOn: 'FormSelectColumn',
      orderBy: 'FormOrderBy',
      where: 'FormBoolExp',
    },
    formByPk: {
      id: 'bigint',
    },
    formEdit: {
      distinctOn: 'FormEditSelectColumn',
      orderBy: 'FormEditOrderBy',
      where: 'FormEditBoolExp',
    },
    formEditAggregate: {
      distinctOn: 'FormEditSelectColumn',
      orderBy: 'FormEditOrderBy',
      where: 'FormEditBoolExp',
    },
    formEditByPk: {
      id: 'bigint',
    },
    formEditStream: {
      cursor: 'FormEditStreamCursorInput',
      where: 'FormEditBoolExp',
    },
    formStream: {
      cursor: 'FormStreamCursorInput',
      where: 'FormBoolExp',
    },
    formSubmission: {
      distinctOn: 'FormSubmissionSelectColumn',
      orderBy: 'FormSubmissionOrderBy',
      where: 'FormSubmissionBoolExp',
    },
    formSubmissionAggregate: {
      distinctOn: 'FormSubmissionSelectColumn',
      orderBy: 'FormSubmissionOrderBy',
      where: 'FormSubmissionBoolExp',
    },
    formSubmissionByPk: {
      id: 'bigint',
    },
    formSubmissionEdit: {
      distinctOn: 'FormSubmissionEditSelectColumn',
      orderBy: 'FormSubmissionEditOrderBy',
      where: 'FormSubmissionEditBoolExp',
    },
    formSubmissionEditAggregate: {
      distinctOn: 'FormSubmissionEditSelectColumn',
      orderBy: 'FormSubmissionEditOrderBy',
      where: 'FormSubmissionEditBoolExp',
    },
    formSubmissionEditByPk: {
      id: 'bigint',
    },
    formSubmissionEditStream: {
      cursor: 'FormSubmissionEditStreamCursorInput',
      where: 'FormSubmissionEditBoolExp',
    },
    formSubmissionStream: {
      cursor: 'FormSubmissionStreamCursorInput',
      where: 'FormSubmissionBoolExp',
    },
    individual: {
      distinctOn: 'IndividualSelectColumn',
      orderBy: 'IndividualOrderBy',
      where: 'IndividualBoolExp',
    },
    individualAggregate: {
      distinctOn: 'IndividualSelectColumn',
      orderBy: 'IndividualOrderBy',
      where: 'IndividualBoolExp',
    },
    individualByPk: {
      id: 'bigint',
    },
    individualStream: {
      cursor: 'IndividualStreamCursorInput',
      where: 'IndividualBoolExp',
    },
    issue: {
      distinctOn: 'IssueSelectColumn',
      orderBy: 'IssueOrderBy',
      where: 'IssueBoolExp',
    },
    issueAggregate: {
      distinctOn: 'IssueSelectColumn',
      orderBy: 'IssueOrderBy',
      where: 'IssueBoolExp',
    },
    issueByPk: {
      id: 'bigint',
    },
    issueStream: {
      cursor: 'IssueStreamCursorInput',
      where: 'IssueBoolExp',
    },
    mikroOrmMigrations: {
      distinctOn: 'MikroOrmMigrationsSelectColumn',
      orderBy: 'MikroOrmMigrationsOrderBy',
      where: 'MikroOrmMigrationsBoolExp',
    },
    mikroOrmMigrationsAggregate: {
      distinctOn: 'MikroOrmMigrationsSelectColumn',
      orderBy: 'MikroOrmMigrationsOrderBy',
      where: 'MikroOrmMigrationsBoolExp',
    },
    mikroOrmMigrationsByPk: {},
    mikroOrmMigrationsStream: {
      cursor: 'MikroOrmMigrationsStreamCursorInput',
      where: 'MikroOrmMigrationsBoolExp',
    },
    pole: {
      distinctOn: 'PoleSelectColumn',
      orderBy: 'PoleOrderBy',
      where: 'PoleBoolExp',
    },
    poleAggregate: {
      distinctOn: 'PoleSelectColumn',
      orderBy: 'PoleOrderBy',
      where: 'PoleBoolExp',
    },
    poleByPk: {
      id: 'bigint',
    },
    poleStream: {
      cursor: 'PoleStreamCursorInput',
      where: 'PoleBoolExp',
    },
    project: {
      distinctOn: 'ProjectSelectColumn',
      orderBy: 'ProjectOrderBy',
      where: 'ProjectBoolExp',
    },
    projectAggregate: {
      distinctOn: 'ProjectSelectColumn',
      orderBy: 'ProjectOrderBy',
      where: 'ProjectBoolExp',
    },
    projectByPk: {
      id: 'bigint',
    },
    projectRole: {
      distinctOn: 'ProjectRoleSelectColumn',
      orderBy: 'ProjectRoleOrderBy',
      where: 'ProjectRoleBoolExp',
    },
    projectRoleAggregate: {
      distinctOn: 'ProjectRoleSelectColumn',
      orderBy: 'ProjectRoleOrderBy',
      where: 'ProjectRoleBoolExp',
    },
    projectRoleByPk: {
      id: 'bigint',
    },
    projectRoleStream: {
      cursor: 'ProjectRoleStreamCursorInput',
      where: 'ProjectRoleBoolExp',
    },
    projectStream: {
      cursor: 'ProjectStreamCursorInput',
      where: 'ProjectBoolExp',
    },
    projectSupervisors: {
      distinctOn: 'ProjectSupervisorsSelectColumn',
      orderBy: 'ProjectSupervisorsOrderBy',
      where: 'ProjectSupervisorsBoolExp',
    },
    projectSupervisorsAggregate: {
      distinctOn: 'ProjectSupervisorsSelectColumn',
      orderBy: 'ProjectSupervisorsOrderBy',
      where: 'ProjectSupervisorsBoolExp',
    },
    projectSupervisorsByPk: {
      projectId: 'bigint',
      teamMemberId: 'bigint',
    },
    projectSupervisorsStream: {
      cursor: 'ProjectSupervisorsStreamCursorInput',
      where: 'ProjectSupervisorsBoolExp',
    },
    projectTags: {
      distinctOn: 'ProjectTagsSelectColumn',
      orderBy: 'ProjectTagsOrderBy',
      where: 'ProjectTagsBoolExp',
    },
    projectTagsAggregate: {
      distinctOn: 'ProjectTagsSelectColumn',
      orderBy: 'ProjectTagsOrderBy',
      where: 'ProjectTagsBoolExp',
    },
    projectTagsByPk: {
      projectId: 'bigint',
      tagId: 'bigint',
    },
    projectTagsStream: {
      cursor: 'ProjectTagsStreamCursorInput',
      where: 'ProjectTagsBoolExp',
    },
    reaction: {
      distinctOn: 'ReactionSelectColumn',
      orderBy: 'ReactionOrderBy',
      where: 'ReactionBoolExp',
    },
    reactionAggregate: {
      distinctOn: 'ReactionSelectColumn',
      orderBy: 'ReactionOrderBy',
      where: 'ReactionBoolExp',
    },
    reactionByPk: {
      id: 'bigint',
    },
    reactionStream: {
      cursor: 'ReactionStreamCursorInput',
      where: 'ReactionBoolExp',
    },
    report: {
      distinctOn: 'ReportSelectColumn',
      orderBy: 'ReportOrderBy',
      where: 'ReportBoolExp',
    },
    reportAggregate: {
      distinctOn: 'ReportSelectColumn',
      orderBy: 'ReportOrderBy',
      where: 'ReportBoolExp',
    },
    reportByPk: {
      id: 'bigint',
    },
    reportStream: {
      cursor: 'ReportStreamCursorInput',
      where: 'ReportBoolExp',
    },
    role: {
      distinctOn: 'RoleSelectColumn',
      orderBy: 'RoleOrderBy',
      where: 'RoleBoolExp',
    },
    roleAggregate: {
      distinctOn: 'RoleSelectColumn',
      orderBy: 'RoleOrderBy',
      where: 'RoleBoolExp',
    },
    roleByPk: {
      id: 'bigint',
    },
    roleStream: {
      cursor: 'RoleStreamCursorInput',
      where: 'RoleBoolExp',
    },
    session: {
      distinctOn: 'SessionSelectColumn',
      orderBy: 'SessionOrderBy',
      where: 'SessionBoolExp',
    },
    sessionAggregate: {
      distinctOn: 'SessionSelectColumn',
      orderBy: 'SessionOrderBy',
      where: 'SessionBoolExp',
    },
    sessionByPk: {
      id: 'bigint',
    },
    sessionStream: {
      cursor: 'SessionStreamCursorInput',
      where: 'SessionBoolExp',
    },
    shortcut: {
      distinctOn: 'ShortcutSelectColumn',
      orderBy: 'ShortcutOrderBy',
      where: 'ShortcutBoolExp',
    },
    shortcutAggregate: {
      distinctOn: 'ShortcutSelectColumn',
      orderBy: 'ShortcutOrderBy',
      where: 'ShortcutBoolExp',
    },
    shortcutByPk: {
      id: 'bigint',
    },
    shortcutStream: {
      cursor: 'ShortcutStreamCursorInput',
      where: 'ShortcutBoolExp',
    },
    social: {
      distinctOn: 'SocialSelectColumn',
      orderBy: 'SocialOrderBy',
      where: 'SocialBoolExp',
    },
    socialAggregate: {
      distinctOn: 'SocialSelectColumn',
      orderBy: 'SocialOrderBy',
      where: 'SocialBoolExp',
    },
    socialByPk: {
      id: 'bigint',
    },
    socialStream: {
      cursor: 'SocialStreamCursorInput',
      where: 'SocialBoolExp',
    },
    subject: {
      distinctOn: 'SubjectSelectColumn',
      orderBy: 'SubjectOrderBy',
      where: 'SubjectBoolExp',
    },
    subjectAggregate: {
      distinctOn: 'SubjectSelectColumn',
      orderBy: 'SubjectOrderBy',
      where: 'SubjectBoolExp',
    },
    subjectByPk: {
      id: 'bigint',
    },
    subjectClasses: {
      distinctOn: 'SubjectClassesSelectColumn',
      orderBy: 'SubjectClassesOrderBy',
      where: 'SubjectClassesBoolExp',
    },
    subjectClassesAggregate: {
      distinctOn: 'SubjectClassesSelectColumn',
      orderBy: 'SubjectClassesOrderBy',
      where: 'SubjectClassesBoolExp',
    },
    subjectClassesByPk: {
      classGroupId: 'bigint',
      subjectId: 'bigint',
    },
    subjectClassesStream: {
      cursor: 'SubjectClassesStreamCursorInput',
      where: 'SubjectClassesBoolExp',
    },
    subjectStream: {
      cursor: 'SubjectStreamCursorInput',
      where: 'SubjectBoolExp',
    },
    tag: {
      distinctOn: 'TagSelectColumn',
      orderBy: 'TagOrderBy',
      where: 'TagBoolExp',
    },
    tagAggregate: {
      distinctOn: 'TagSelectColumn',
      orderBy: 'TagOrderBy',
      where: 'TagBoolExp',
    },
    tagByPk: {
      id: 'bigint',
    },
    tagStream: {
      cursor: 'TagStreamCursorInput',
      where: 'TagBoolExp',
    },
    team: {
      distinctOn: 'TeamSelectColumn',
      orderBy: 'TeamOrderBy',
      where: 'TeamBoolExp',
    },
    teamAggregate: {
      distinctOn: 'TeamSelectColumn',
      orderBy: 'TeamOrderBy',
      where: 'TeamBoolExp',
    },
    teamByPk: {
      id: 'bigint',
    },
    teamCategories: {
      distinctOn: 'TeamCategoriesSelectColumn',
      orderBy: 'TeamCategoriesOrderBy',
      where: 'TeamCategoriesBoolExp',
    },
    teamCategoriesAggregate: {
      distinctOn: 'TeamCategoriesSelectColumn',
      orderBy: 'TeamCategoriesOrderBy',
      where: 'TeamCategoriesBoolExp',
    },
    teamCategoriesByPk: {
      tagId: 'bigint',
      teamId: 'bigint',
    },
    teamCategoriesStream: {
      cursor: 'TeamCategoriesStreamCursorInput',
      where: 'TeamCategoriesBoolExp',
    },
    teamEvents: {
      distinctOn: 'TeamEventsSelectColumn',
      orderBy: 'TeamEventsOrderBy',
      where: 'TeamEventsBoolExp',
    },
    teamEventsAggregate: {
      distinctOn: 'TeamEventsSelectColumn',
      orderBy: 'TeamEventsOrderBy',
      where: 'TeamEventsBoolExp',
    },
    teamEventsByPk: {
      eventId: 'bigint',
      teamId: 'bigint',
    },
    teamEventsStream: {
      cursor: 'TeamEventsStreamCursorInput',
      where: 'TeamEventsBoolExp',
    },
    teamFinance: {
      distinctOn: 'TeamFinanceSelectColumn',
      orderBy: 'TeamFinanceOrderBy',
      where: 'TeamFinanceBoolExp',
    },
    teamFinanceAggregate: {
      distinctOn: 'TeamFinanceSelectColumn',
      orderBy: 'TeamFinanceOrderBy',
      where: 'TeamFinanceBoolExp',
    },
    teamFinanceByPk: {
      id: 'bigint',
    },
    teamFinanceStream: {
      cursor: 'TeamFinanceStreamCursorInput',
      where: 'TeamFinanceBoolExp',
    },
    teamJoin: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamJoinAggregate: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamJoinByPk: {
      id: 'bigint',
    },
    teamJoinStream: {
      cursor: 'TeamJoinStreamCursorInput',
      where: 'TeamJoinBoolExp',
    },
    teamMember: {
      distinctOn: 'TeamMemberSelectColumn',
      orderBy: 'TeamMemberOrderBy',
      where: 'TeamMemberBoolExp',
    },
    teamMemberAggregate: {
      distinctOn: 'TeamMemberSelectColumn',
      orderBy: 'TeamMemberOrderBy',
      where: 'TeamMemberBoolExp',
    },
    teamMemberByPk: {
      id: 'bigint',
    },
    teamMemberRoles: {
      distinctOn: 'TeamMemberRolesSelectColumn',
      orderBy: 'TeamMemberRolesOrderBy',
      where: 'TeamMemberRolesBoolExp',
    },
    teamMemberRolesAggregate: {
      distinctOn: 'TeamMemberRolesSelectColumn',
      orderBy: 'TeamMemberRolesOrderBy',
      where: 'TeamMemberRolesBoolExp',
    },
    teamMemberRolesByPk: {
      roleId: 'bigint',
      teamMemberId: 'bigint',
    },
    teamMemberRolesStream: {
      cursor: 'TeamMemberRolesStreamCursorInput',
      where: 'TeamMemberRolesBoolExp',
    },
    teamMemberStream: {
      cursor: 'TeamMemberStreamCursorInput',
      where: 'TeamMemberBoolExp',
    },
    teamMetric: {
      distinctOn: 'TeamMetricSelectColumn',
      orderBy: 'TeamMetricOrderBy',
      where: 'TeamMetricBoolExp',
    },
    teamMetricAggregate: {
      distinctOn: 'TeamMetricSelectColumn',
      orderBy: 'TeamMetricOrderBy',
      where: 'TeamMetricBoolExp',
    },
    teamMetricByPk: {
      id: 'bigint',
    },
    teamMetricStream: {
      cursor: 'TeamMetricStreamCursorInput',
      where: 'TeamMetricBoolExp',
    },
    teamStream: {
      cursor: 'TeamStreamCursorInput',
      where: 'TeamBoolExp',
    },
    tenant: {
      distinctOn: 'TenantSelectColumn',
      orderBy: 'TenantOrderBy',
      where: 'TenantBoolExp',
    },
    tenantAggregate: {
      distinctOn: 'TenantSelectColumn',
      orderBy: 'TenantOrderBy',
      where: 'TenantBoolExp',
    },
    tenantByPk: {
      id: 'bigint',
    },
    tenantStream: {
      cursor: 'TenantStreamCursorInput',
      where: 'TenantBoolExp',
    },
    upload: {
      distinctOn: 'UploadSelectColumn',
      orderBy: 'UploadOrderBy',
      where: 'UploadBoolExp',
    },
    uploadAggregate: {
      distinctOn: 'UploadSelectColumn',
      orderBy: 'UploadOrderBy',
      where: 'UploadBoolExp',
    },
    uploadByPk: {
      id: 'bigint',
    },
    uploadStream: {
      cursor: 'UploadStreamCursorInput',
      where: 'UploadBoolExp',
    },
    userInfo: {
      distinctOn: 'UserInfoSelectColumn',
      orderBy: 'UserInfoOrderBy',
      where: 'UserInfoBoolExp',
    },
    userInfoAggregate: {
      distinctOn: 'UserInfoSelectColumn',
      orderBy: 'UserInfoOrderBy',
      where: 'UserInfoBoolExp',
    },
    userInfoByPk: {
      id: 'bigint',
    },
    userInfoStream: {
      cursor: 'UserInfoStreamCursorInput',
      where: 'UserInfoBoolExp',
    },
    validation: {
      distinctOn: 'ValidationSelectColumn',
      orderBy: 'ValidationOrderBy',
      where: 'ValidationBoolExp',
    },
    validationAggregate: {
      distinctOn: 'ValidationSelectColumn',
      orderBy: 'ValidationOrderBy',
      where: 'ValidationBoolExp',
    },
    validationByPk: {
      id: 'bigint',
    },
    validationStream: {
      cursor: 'ValidationStreamCursorInput',
      where: 'ValidationBoolExp',
    },
    vote: {
      distinctOn: 'VoteSelectColumn',
      orderBy: 'VoteOrderBy',
      where: 'VoteBoolExp',
    },
    voteAggregate: {
      distinctOn: 'VoteSelectColumn',
      orderBy: 'VoteOrderBy',
      where: 'VoteBoolExp',
    },
    voteByPk: {
      id: 'bigint',
    },
    voteStream: {
      cursor: 'VoteStreamCursorInput',
      where: 'VoteBoolExp',
    },
  },
  Tag: {
    actorTags: {
      distinctOn: 'ActorTagsSelectColumn',
      orderBy: 'ActorTagsOrderBy',
      where: 'ActorTagsBoolExp',
    },
    actorTagsAggregate: {
      distinctOn: 'ActorTagsSelectColumn',
      orderBy: 'ActorTagsOrderBy',
      where: 'ActorTagsBoolExp',
    },
    contentMasterTags: {
      distinctOn: 'ContentMasterTagsSelectColumn',
      orderBy: 'ContentMasterTagsOrderBy',
      where: 'ContentMasterTagsBoolExp',
    },
    contentMasterTagsAggregate: {
      distinctOn: 'ContentMasterTagsSelectColumn',
      orderBy: 'ContentMasterTagsOrderBy',
      where: 'ContentMasterTagsBoolExp',
    },
    eventTags: {
      distinctOn: 'EventTagsSelectColumn',
      orderBy: 'EventTagsOrderBy',
      where: 'EventTagsBoolExp',
    },
    eventTagsAggregate: {
      distinctOn: 'EventTagsSelectColumn',
      orderBy: 'EventTagsOrderBy',
      where: 'EventTagsBoolExp',
    },
    projectTags: {
      distinctOn: 'ProjectTagsSelectColumn',
      orderBy: 'ProjectTagsOrderBy',
      where: 'ProjectTagsBoolExp',
    },
    projectTagsAggregate: {
      distinctOn: 'ProjectTagsSelectColumn',
      orderBy: 'ProjectTagsOrderBy',
      where: 'ProjectTagsBoolExp',
    },
    teamCategories: {
      distinctOn: 'TeamCategoriesSelectColumn',
      orderBy: 'TeamCategoriesOrderBy',
      where: 'TeamCategoriesBoolExp',
    },
    teamCategoriesAggregate: {
      distinctOn: 'TeamCategoriesSelectColumn',
      orderBy: 'TeamCategoriesOrderBy',
      where: 'TeamCategoriesBoolExp',
    },
  },
  TagAggregateBoolExp: {
    count: 'tagAggregateBoolExpCount',
  },
  tagAggregateBoolExpCount: {
    arguments: 'TagSelectColumn',
    filter: 'TagBoolExp',
    predicate: 'IntComparisonExp',
  },
  TagAggregateFields: {
    count: {
      columns: 'TagSelectColumn',
    },
  },
  TagAggregateOrderBy: {
    avg: 'TagAvgOrderBy',
    count: 'OrderBy',
    max: 'TagMaxOrderBy',
    min: 'TagMinOrderBy',
    stddev: 'TagStddevOrderBy',
    stddevPop: 'TagStddevPopOrderBy',
    stddevSamp: 'TagStddevSampOrderBy',
    sum: 'TagSumOrderBy',
    varPop: 'TagVarPopOrderBy',
    varSamp: 'TagVarSampOrderBy',
    variance: 'TagVarianceOrderBy',
  },
  TagArrRelInsertInput: {
    data: 'TagInsertInput',
    onConflict: 'TagOnConflict',
  },
  TagAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TagBoolExp: {
    _and: 'TagBoolExp',
    _not: 'TagBoolExp',
    _or: 'TagBoolExp',
    actorTags: 'ActorTagsBoolExp',
    actorTagsAggregate: 'ActorTagsAggregateBoolExp',
    color: 'StringComparisonExp',
    contentMasterTags: 'ContentMasterTagsBoolExp',
    contentMasterTagsAggregate: 'ContentMasterTagsAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    description: 'StringComparisonExp',
    eventTags: 'EventTagsBoolExp',
    eventTagsAggregate: 'EventTagsAggregateBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    imageId: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    name: 'StringComparisonExp',
    projectTags: 'ProjectTagsBoolExp',
    projectTagsAggregate: 'ProjectTagsAggregateBoolExp',
    slug: 'StringComparisonExp',
    teamCategories: 'TeamCategoriesBoolExp',
    teamCategoriesAggregate: 'TeamCategoriesAggregateBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
    upload: 'UploadBoolExp',
  },
  TagConstraint: 'enum' as const,
  TagIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    imageId: 'bigint',
    tenantId: 'bigint',
  },
  TagInsertInput: {
    actorTags: 'ActorTagsArrRelInsertInput',
    contentMasterTags: 'ContentMasterTagsArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventTags: 'EventTagsArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    projectTags: 'ProjectTagsArrRelInsertInput',
    teamCategories: 'TeamCategoriesArrRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    upload: 'UploadObjRelInsertInput',
  },
  TagMaxOrderBy: {
    color: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    name: 'OrderBy',
    slug: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  TagMinOrderBy: {
    color: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    name: 'OrderBy',
    slug: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  TagObjRelInsertInput: {
    data: 'TagInsertInput',
    onConflict: 'TagOnConflict',
  },
  TagOnConflict: {
    constraint: 'TagConstraint',
    updateColumns: 'TagUpdateColumn',
    where: 'TagBoolExp',
  },
  TagOrderBy: {
    actorTagsAggregate: 'ActorTagsAggregateOrderBy',
    color: 'OrderBy',
    contentMasterTagsAggregate: 'ContentMasterTagsAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    description: 'OrderBy',
    eventTagsAggregate: 'EventTagsAggregateOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    individual: 'IndividualOrderBy',
    name: 'OrderBy',
    projectTagsAggregate: 'ProjectTagsAggregateOrderBy',
    slug: 'OrderBy',
    teamCategoriesAggregate: 'TeamCategoriesAggregateOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    upload: 'UploadOrderBy',
  },
  TagPkColumnsInput: {
    id: 'bigint',
  },
  TagSelectColumn: 'enum' as const,
  TagSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    tenantId: 'bigint',
  },
  TagStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TagStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TagStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TagStreamCursorInput: {
    initialValue: 'TagStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  TagStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    tenantId: 'bigint',
  },
  TagSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TagUpdateColumn: 'enum' as const,
  TagUpdates: {
    _inc: 'TagIncInput',
    _set: 'TagSetInput',
    where: 'TagBoolExp',
  },
  TagVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TagVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TagVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    imageId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  Team: {
    actions: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    actionsAggregate: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    changeRoles: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    changeRolesAggregate: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    contentRepresentingTeams: {
      distinctOn: 'ContentRepresentingTeamsSelectColumn',
      orderBy: 'ContentRepresentingTeamsOrderBy',
      where: 'ContentRepresentingTeamsBoolExp',
    },
    contentRepresentingTeamsAggregate: {
      distinctOn: 'ContentRepresentingTeamsSelectColumn',
      orderBy: 'ContentRepresentingTeamsOrderBy',
      where: 'ContentRepresentingTeamsBoolExp',
    },
    documents: {
      distinctOn: 'DocumentSelectColumn',
      orderBy: 'DocumentOrderBy',
      where: 'DocumentBoolExp',
    },
    documentsAggregate: {
      distinctOn: 'DocumentSelectColumn',
      orderBy: 'DocumentOrderBy',
      where: 'DocumentBoolExp',
    },
    eventOrganisingTeams: {
      distinctOn: 'EventOrganisingTeamsSelectColumn',
      orderBy: 'EventOrganisingTeamsOrderBy',
      where: 'EventOrganisingTeamsBoolExp',
    },
    eventOrganisingTeamsAggregate: {
      distinctOn: 'EventOrganisingTeamsSelectColumn',
      orderBy: 'EventOrganisingTeamsOrderBy',
      where: 'EventOrganisingTeamsBoolExp',
    },
    eventTeams: {
      distinctOn: 'EventTeamsSelectColumn',
      orderBy: 'EventTeamsOrderBy',
      where: 'EventTeamsBoolExp',
    },
    eventTeamsAggregate: {
      distinctOn: 'EventTeamsSelectColumn',
      orderBy: 'EventTeamsOrderBy',
      where: 'EventTeamsBoolExp',
    },
    poles: {
      distinctOn: 'PoleSelectColumn',
      orderBy: 'PoleOrderBy',
      where: 'PoleBoolExp',
    },
    polesAggregate: {
      distinctOn: 'PoleSelectColumn',
      orderBy: 'PoleOrderBy',
      where: 'PoleBoolExp',
    },
    projects: {
      distinctOn: 'ProjectSelectColumn',
      orderBy: 'ProjectOrderBy',
      where: 'ProjectBoolExp',
    },
    projectsAggregate: {
      distinctOn: 'ProjectSelectColumn',
      orderBy: 'ProjectOrderBy',
      where: 'ProjectBoolExp',
    },
    roles: {
      distinctOn: 'RoleSelectColumn',
      orderBy: 'RoleOrderBy',
      where: 'RoleBoolExp',
    },
    rolesAggregate: {
      distinctOn: 'RoleSelectColumn',
      orderBy: 'RoleOrderBy',
      where: 'RoleBoolExp',
    },
    teamCategories: {
      distinctOn: 'TeamCategoriesSelectColumn',
      orderBy: 'TeamCategoriesOrderBy',
      where: 'TeamCategoriesBoolExp',
    },
    teamCategoriesAggregate: {
      distinctOn: 'TeamCategoriesSelectColumn',
      orderBy: 'TeamCategoriesOrderBy',
      where: 'TeamCategoriesBoolExp',
    },
    teamEvents: {
      distinctOn: 'TeamEventsSelectColumn',
      orderBy: 'TeamEventsOrderBy',
      where: 'TeamEventsBoolExp',
    },
    teamEventsAggregate: {
      distinctOn: 'TeamEventsSelectColumn',
      orderBy: 'TeamEventsOrderBy',
      where: 'TeamEventsBoolExp',
    },
    teamFinances: {
      distinctOn: 'TeamFinanceSelectColumn',
      orderBy: 'TeamFinanceOrderBy',
      where: 'TeamFinanceBoolExp',
    },
    teamFinancesAggregate: {
      distinctOn: 'TeamFinanceSelectColumn',
      orderBy: 'TeamFinanceOrderBy',
      where: 'TeamFinanceBoolExp',
    },
    teamJoins: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamJoinsAggregate: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamMembers: {
      distinctOn: 'TeamMemberSelectColumn',
      orderBy: 'TeamMemberOrderBy',
      where: 'TeamMemberBoolExp',
    },
    teamMembersAggregate: {
      distinctOn: 'TeamMemberSelectColumn',
      orderBy: 'TeamMemberOrderBy',
      where: 'TeamMemberBoolExp',
    },
    teams: {
      distinctOn: 'TeamSelectColumn',
      orderBy: 'TeamOrderBy',
      where: 'TeamBoolExp',
    },
    teamsAggregate: {
      distinctOn: 'TeamSelectColumn',
      orderBy: 'TeamOrderBy',
      where: 'TeamBoolExp',
    },
  },
  TeamAggregateBoolExp: {
    count: 'teamAggregateBoolExpCount',
  },
  teamAggregateBoolExpCount: {
    arguments: 'TeamSelectColumn',
    filter: 'TeamBoolExp',
    predicate: 'IntComparisonExp',
  },
  TeamAggregateFields: {
    count: {
      columns: 'TeamSelectColumn',
    },
  },
  TeamAggregateOrderBy: {
    avg: 'TeamAvgOrderBy',
    count: 'OrderBy',
    max: 'TeamMaxOrderBy',
    min: 'TeamMinOrderBy',
    stddev: 'TeamStddevOrderBy',
    stddevPop: 'TeamStddevPopOrderBy',
    stddevSamp: 'TeamStddevSampOrderBy',
    sum: 'TeamSumOrderBy',
    varPop: 'TeamVarPopOrderBy',
    varSamp: 'TeamVarSampOrderBy',
    variance: 'TeamVarianceOrderBy',
  },
  TeamArrRelInsertInput: {
    data: 'TeamInsertInput',
    onConflict: 'TeamOnConflict',
  },
  TeamAvgOrderBy: {
    canteenId: 'OrderBy',
    classGroupId: 'OrderBy',
    cohortId: 'OrderBy',
    createdById: 'OrderBy',
    currentFinance: 'OrderBy',
    id: 'OrderBy',
    joinFormId: 'OrderBy',
    membershipFees: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
    videoId: 'OrderBy',
  },
  TeamBoolExp: {
    _and: 'TeamBoolExp',
    _not: 'TeamBoolExp',
    _or: 'TeamBoolExp',
    actions: 'ActionBoolExp',
    actionsAggregate: 'ActionAggregateBoolExp',
    actor: 'ActorBoolExp',
    canteen: 'CanteenBoolExp',
    canteenId: 'BigintComparisonExp',
    changeRoles: 'ChangeRoleBoolExp',
    changeRolesAggregate: 'ChangeRoleAggregateBoolExp',
    classGroup: 'ClassGroupBoolExp',
    classGroupId: 'BigintComparisonExp',
    cohort: 'CohortBoolExp',
    cohortId: 'BigintComparisonExp',
    contentRepresentingTeams: 'ContentRepresentingTeamsBoolExp',
    contentRepresentingTeamsAggregate: 'ContentRepresentingTeamsAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    currentFinance: 'IntComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    directorsCategoryName: 'StringComparisonExp',
    documents: 'DocumentBoolExp',
    documentsAggregate: 'DocumentAggregateBoolExp',
    eventOrganisingTeams: 'EventOrganisingTeamsBoolExp',
    eventOrganisingTeamsAggregate: 'EventOrganisingTeamsAggregateBoolExp',
    eventTeams: 'EventTeamsBoolExp',
    eventTeamsAggregate: 'EventTeamsAggregateBoolExp',
    form: 'FormBoolExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    joinFormId: 'BigintComparisonExp',
    managersCategoryName: 'StringComparisonExp',
    membersCategoryName: 'StringComparisonExp',
    membershipFees: 'IntComparisonExp',
    parentId: 'BigintComparisonExp',
    poles: 'PoleBoolExp',
    polesAggregate: 'PoleAggregateBoolExp',
    projects: 'ProjectBoolExp',
    projectsAggregate: 'ProjectAggregateBoolExp',
    roles: 'RoleBoolExp',
    rolesAggregate: 'RoleAggregateBoolExp',
    tagline: 'StringComparisonExp',
    team: 'TeamBoolExp',
    teamCategories: 'TeamCategoriesBoolExp',
    teamCategoriesAggregate: 'TeamCategoriesAggregateBoolExp',
    teamEvents: 'TeamEventsBoolExp',
    teamEventsAggregate: 'TeamEventsAggregateBoolExp',
    teamFinances: 'TeamFinanceBoolExp',
    teamFinancesAggregate: 'TeamFinanceAggregateBoolExp',
    teamJoins: 'TeamJoinBoolExp',
    teamJoinsAggregate: 'TeamJoinAggregateBoolExp',
    teamMembers: 'TeamMemberBoolExp',
    teamMembersAggregate: 'TeamMemberAggregateBoolExp',
    teams: 'TeamBoolExp',
    teamsAggregate: 'TeamAggregateBoolExp',
    tenant: 'TenantBoolExp',
    tenantById: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
    upload: 'UploadBoolExp',
    videoId: 'BigintComparisonExp',
  },
  TeamCategoriesAggregateBoolExp: {
    count: 'teamCategoriesAggregateBoolExpCount',
  },
  teamCategoriesAggregateBoolExpCount: {
    arguments: 'TeamCategoriesSelectColumn',
    filter: 'TeamCategoriesBoolExp',
    predicate: 'IntComparisonExp',
  },
  TeamCategoriesAggregateFields: {
    count: {
      columns: 'TeamCategoriesSelectColumn',
    },
  },
  TeamCategoriesAggregateOrderBy: {
    avg: 'TeamCategoriesAvgOrderBy',
    count: 'OrderBy',
    max: 'TeamCategoriesMaxOrderBy',
    min: 'TeamCategoriesMinOrderBy',
    stddev: 'TeamCategoriesStddevOrderBy',
    stddevPop: 'TeamCategoriesStddevPopOrderBy',
    stddevSamp: 'TeamCategoriesStddevSampOrderBy',
    sum: 'TeamCategoriesSumOrderBy',
    varPop: 'TeamCategoriesVarPopOrderBy',
    varSamp: 'TeamCategoriesVarSampOrderBy',
    variance: 'TeamCategoriesVarianceOrderBy',
  },
  TeamCategoriesArrRelInsertInput: {
    data: 'TeamCategoriesInsertInput',
    onConflict: 'TeamCategoriesOnConflict',
  },
  TeamCategoriesAvgOrderBy: {
    tagId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamCategoriesBoolExp: {
    _and: 'TeamCategoriesBoolExp',
    _not: 'TeamCategoriesBoolExp',
    _or: 'TeamCategoriesBoolExp',
    tag: 'TagBoolExp',
    tagId: 'BigintComparisonExp',
    team: 'TeamBoolExp',
    teamId: 'BigintComparisonExp',
  },
  TeamCategoriesConstraint: 'enum' as const,
  TeamCategoriesIncInput: {
    tagId: 'bigint',
    teamId: 'bigint',
  },
  TeamCategoriesInsertInput: {
    tag: 'TagObjRelInsertInput',
    tagId: 'bigint',
    team: 'TeamObjRelInsertInput',
    teamId: 'bigint',
  },
  TeamCategoriesMaxOrderBy: {
    tagId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamCategoriesMinOrderBy: {
    tagId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamCategoriesOnConflict: {
    constraint: 'TeamCategoriesConstraint',
    updateColumns: 'TeamCategoriesUpdateColumn',
    where: 'TeamCategoriesBoolExp',
  },
  TeamCategoriesOrderBy: {
    tag: 'TagOrderBy',
    tagId: 'OrderBy',
    team: 'TeamOrderBy',
    teamId: 'OrderBy',
  },
  TeamCategoriesPkColumnsInput: {
    tagId: 'bigint',
    teamId: 'bigint',
  },
  TeamCategoriesSelectColumn: 'enum' as const,
  TeamCategoriesSetInput: {
    tagId: 'bigint',
    teamId: 'bigint',
  },
  TeamCategoriesStddevOrderBy: {
    tagId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamCategoriesStddevPopOrderBy: {
    tagId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamCategoriesStddevSampOrderBy: {
    tagId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamCategoriesStreamCursorInput: {
    initialValue: 'TeamCategoriesStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  TeamCategoriesStreamCursorValueInput: {
    tagId: 'bigint',
    teamId: 'bigint',
  },
  TeamCategoriesSumOrderBy: {
    tagId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamCategoriesUpdateColumn: 'enum' as const,
  TeamCategoriesUpdates: {
    _inc: 'TeamCategoriesIncInput',
    _set: 'TeamCategoriesSetInput',
    where: 'TeamCategoriesBoolExp',
  },
  TeamCategoriesVarianceOrderBy: {
    tagId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamCategoriesVarPopOrderBy: {
    tagId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamCategoriesVarSampOrderBy: {
    tagId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamConstraint: 'enum' as const,
  TeamEventsAggregateBoolExp: {
    count: 'teamEventsAggregateBoolExpCount',
  },
  teamEventsAggregateBoolExpCount: {
    arguments: 'TeamEventsSelectColumn',
    filter: 'TeamEventsBoolExp',
    predicate: 'IntComparisonExp',
  },
  TeamEventsAggregateFields: {
    count: {
      columns: 'TeamEventsSelectColumn',
    },
  },
  TeamEventsAggregateOrderBy: {
    avg: 'TeamEventsAvgOrderBy',
    count: 'OrderBy',
    max: 'TeamEventsMaxOrderBy',
    min: 'TeamEventsMinOrderBy',
    stddev: 'TeamEventsStddevOrderBy',
    stddevPop: 'TeamEventsStddevPopOrderBy',
    stddevSamp: 'TeamEventsStddevSampOrderBy',
    sum: 'TeamEventsSumOrderBy',
    varPop: 'TeamEventsVarPopOrderBy',
    varSamp: 'TeamEventsVarSampOrderBy',
    variance: 'TeamEventsVarianceOrderBy',
  },
  TeamEventsArrRelInsertInput: {
    data: 'TeamEventsInsertInput',
    onConflict: 'TeamEventsOnConflict',
  },
  TeamEventsAvgOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamEventsBoolExp: {
    _and: 'TeamEventsBoolExp',
    _not: 'TeamEventsBoolExp',
    _or: 'TeamEventsBoolExp',
    event: 'EventBoolExp',
    eventId: 'BigintComparisonExp',
    team: 'TeamBoolExp',
    teamId: 'BigintComparisonExp',
  },
  TeamEventsConstraint: 'enum' as const,
  TeamEventsIncInput: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  TeamEventsInsertInput: {
    event: 'EventObjRelInsertInput',
    eventId: 'bigint',
    team: 'TeamObjRelInsertInput',
    teamId: 'bigint',
  },
  TeamEventsMaxOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamEventsMinOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamEventsOnConflict: {
    constraint: 'TeamEventsConstraint',
    updateColumns: 'TeamEventsUpdateColumn',
    where: 'TeamEventsBoolExp',
  },
  TeamEventsOrderBy: {
    event: 'EventOrderBy',
    eventId: 'OrderBy',
    team: 'TeamOrderBy',
    teamId: 'OrderBy',
  },
  TeamEventsPkColumnsInput: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  TeamEventsSelectColumn: 'enum' as const,
  TeamEventsSetInput: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  TeamEventsStddevOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamEventsStddevPopOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamEventsStddevSampOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamEventsStreamCursorInput: {
    initialValue: 'TeamEventsStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  TeamEventsStreamCursorValueInput: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  TeamEventsSumOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamEventsUpdateColumn: 'enum' as const,
  TeamEventsUpdates: {
    _inc: 'TeamEventsIncInput',
    _set: 'TeamEventsSetInput',
    where: 'TeamEventsBoolExp',
  },
  TeamEventsVarianceOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamEventsVarPopOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamEventsVarSampOrderBy: {
    eventId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TeamFinanceAggregateBoolExp: {
    count: 'teamFinanceAggregateBoolExpCount',
  },
  teamFinanceAggregateBoolExpCount: {
    arguments: 'TeamFinanceSelectColumn',
    filter: 'TeamFinanceBoolExp',
    predicate: 'IntComparisonExp',
  },
  TeamFinanceAggregateFields: {
    count: {
      columns: 'TeamFinanceSelectColumn',
    },
  },
  TeamFinanceAggregateOrderBy: {
    avg: 'TeamFinanceAvgOrderBy',
    count: 'OrderBy',
    max: 'TeamFinanceMaxOrderBy',
    min: 'TeamFinanceMinOrderBy',
    stddev: 'TeamFinanceStddevOrderBy',
    stddevPop: 'TeamFinanceStddevPopOrderBy',
    stddevSamp: 'TeamFinanceStddevSampOrderBy',
    sum: 'TeamFinanceSumOrderBy',
    varPop: 'TeamFinanceVarPopOrderBy',
    varSamp: 'TeamFinanceVarSampOrderBy',
    variance: 'TeamFinanceVarianceOrderBy',
  },
  TeamFinanceArrRelInsertInput: {
    data: 'TeamFinanceInsertInput',
    onConflict: 'TeamFinanceOnConflict',
  },
  TeamFinanceAvgOrderBy: {
    actorFinanceId: 'OrderBy',
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamFinanceBoolExp: {
    _and: 'TeamFinanceBoolExp',
    _not: 'TeamFinanceBoolExp',
    _or: 'TeamFinanceBoolExp',
    actorFinance: 'ActorFinanceBoolExp',
    actorFinanceId: 'BigintComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    event: 'EventBoolExp',
    eventId: 'BigintComparisonExp',
    expense: 'ExpenseBoolExp',
    expenseId: 'BigintComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    method: 'StringComparisonExp',
    payedByType: 'StringComparisonExp',
    project: 'ProjectBoolExp',
    projectId: 'BigintComparisonExp',
    state: 'StringComparisonExp',
    team: 'TeamBoolExp',
    teamId: 'BigintComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  TeamFinanceConstraint: 'enum' as const,
  TeamFinanceIncInput: {
    actorFinanceId: 'bigint',
    createdById: 'bigint',
    eventId: 'bigint',
    expenseId: 'bigint',
    id: 'bigint',
    projectId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  TeamFinanceInsertInput: {
    actorFinance: 'ActorFinanceObjRelInsertInput',
    actorFinanceId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    event: 'EventObjRelInsertInput',
    eventId: 'bigint',
    expense: 'ExpenseObjRelInsertInput',
    expenseId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    project: 'ProjectObjRelInsertInput',
    projectId: 'bigint',
    team: 'TeamObjRelInsertInput',
    teamId: 'bigint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  TeamFinanceMaxOrderBy: {
    actorFinanceId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    eventId: 'OrderBy',
    expenseId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    method: 'OrderBy',
    payedByType: 'OrderBy',
    projectId: 'OrderBy',
    state: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamFinanceMinOrderBy: {
    actorFinanceId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    eventId: 'OrderBy',
    expenseId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    method: 'OrderBy',
    payedByType: 'OrderBy',
    projectId: 'OrderBy',
    state: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamFinanceObjRelInsertInput: {
    data: 'TeamFinanceInsertInput',
    onConflict: 'TeamFinanceOnConflict',
  },
  TeamFinanceOnConflict: {
    constraint: 'TeamFinanceConstraint',
    updateColumns: 'TeamFinanceUpdateColumn',
    where: 'TeamFinanceBoolExp',
  },
  TeamFinanceOrderBy: {
    actorFinance: 'ActorFinanceOrderBy',
    actorFinanceId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    event: 'EventOrderBy',
    eventId: 'OrderBy',
    expense: 'ExpenseOrderBy',
    expenseId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    method: 'OrderBy',
    payedByType: 'OrderBy',
    project: 'ProjectOrderBy',
    projectId: 'OrderBy',
    state: 'OrderBy',
    team: 'TeamOrderBy',
    teamId: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  TeamFinancePkColumnsInput: {
    id: 'bigint',
  },
  TeamFinanceSelectColumn: 'enum' as const,
  TeamFinanceSetInput: {
    actorFinanceId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    expenseId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    projectId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  TeamFinanceStddevOrderBy: {
    actorFinanceId: 'OrderBy',
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamFinanceStddevPopOrderBy: {
    actorFinanceId: 'OrderBy',
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamFinanceStddevSampOrderBy: {
    actorFinanceId: 'OrderBy',
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamFinanceStreamCursorInput: {
    initialValue: 'TeamFinanceStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  TeamFinanceStreamCursorValueInput: {
    actorFinanceId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    expenseId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    projectId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  TeamFinanceSumOrderBy: {
    actorFinanceId: 'OrderBy',
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamFinanceUpdateColumn: 'enum' as const,
  TeamFinanceUpdates: {
    _inc: 'TeamFinanceIncInput',
    _set: 'TeamFinanceSetInput',
    where: 'TeamFinanceBoolExp',
  },
  TeamFinanceVarianceOrderBy: {
    actorFinanceId: 'OrderBy',
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamFinanceVarPopOrderBy: {
    actorFinanceId: 'OrderBy',
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamFinanceVarSampOrderBy: {
    actorFinanceId: 'OrderBy',
    createdById: 'OrderBy',
    eventId: 'OrderBy',
    expenseId: 'OrderBy',
    id: 'OrderBy',
    projectId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamIncInput: {
    canteenId: 'bigint',
    classGroupId: 'bigint',
    cohortId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    joinFormId: 'bigint',
    parentId: 'bigint',
    tenantId: 'bigint',
    videoId: 'bigint',
  },
  TeamInsertInput: {
    actions: 'ActionArrRelInsertInput',
    actor: 'ActorObjRelInsertInput',
    canteen: 'CanteenObjRelInsertInput',
    canteenId: 'bigint',
    changeRoles: 'ChangeRoleArrRelInsertInput',
    classGroup: 'ClassGroupObjRelInsertInput',
    classGroupId: 'bigint',
    cohort: 'CohortObjRelInsertInput',
    cohortId: 'bigint',
    contentRepresentingTeams: 'ContentRepresentingTeamsArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    documents: 'DocumentArrRelInsertInput',
    eventOrganisingTeams: 'EventOrganisingTeamsArrRelInsertInput',
    eventTeams: 'EventTeamsArrRelInsertInput',
    form: 'FormObjRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    joinFormId: 'bigint',
    parentId: 'bigint',
    poles: 'PoleArrRelInsertInput',
    projects: 'ProjectArrRelInsertInput',
    roles: 'RoleArrRelInsertInput',
    team: 'TeamObjRelInsertInput',
    teamCategories: 'TeamCategoriesArrRelInsertInput',
    teamEvents: 'TeamEventsArrRelInsertInput',
    teamFinances: 'TeamFinanceArrRelInsertInput',
    teamJoins: 'TeamJoinArrRelInsertInput',
    teamMembers: 'TeamMemberArrRelInsertInput',
    teams: 'TeamArrRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantById: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    upload: 'UploadObjRelInsertInput',
    videoId: 'bigint',
  },
  TeamJoinAggregateBoolExp: {
    count: 'teamJoinAggregateBoolExpCount',
  },
  teamJoinAggregateBoolExpCount: {
    arguments: 'TeamJoinSelectColumn',
    filter: 'TeamJoinBoolExp',
    predicate: 'IntComparisonExp',
  },
  TeamJoinAggregateFields: {
    count: {
      columns: 'TeamJoinSelectColumn',
    },
  },
  TeamJoinAggregateOrderBy: {
    avg: 'TeamJoinAvgOrderBy',
    count: 'OrderBy',
    max: 'TeamJoinMaxOrderBy',
    min: 'TeamJoinMinOrderBy',
    stddev: 'TeamJoinStddevOrderBy',
    stddevPop: 'TeamJoinStddevPopOrderBy',
    stddevSamp: 'TeamJoinStddevSampOrderBy',
    sum: 'TeamJoinSumOrderBy',
    varPop: 'TeamJoinVarPopOrderBy',
    varSamp: 'TeamJoinVarSampOrderBy',
    variance: 'TeamJoinVarianceOrderBy',
  },
  TeamJoinArrRelInsertInput: {
    data: 'TeamJoinInsertInput',
    onConflict: 'TeamJoinOnConflict',
  },
  TeamJoinAvgOrderBy: {
    askedRoleId: 'OrderBy',
    changeRoleId: 'OrderBy',
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamJoinBoolExp: {
    _and: 'TeamJoinBoolExp',
    _not: 'TeamJoinBoolExp',
    _or: 'TeamJoinBoolExp',
    askedRoleId: 'BigintComparisonExp',
    changeRole: 'ChangeRoleBoolExp',
    changeRoleId: 'BigintComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    formSubmission: 'FormSubmissionBoolExp',
    formSubmissionId: 'BigintComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    joinerId: 'BigintComparisonExp',
    role: 'RoleBoolExp',
    state: 'StringComparisonExp',
    team: 'TeamBoolExp',
    teamId: 'BigintComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    userInfo: 'UserInfoBoolExp',
  },
  TeamJoinConstraint: 'enum' as const,
  TeamJoinIncInput: {
    askedRoleId: 'bigint',
    changeRoleId: 'bigint',
    createdById: 'bigint',
    formSubmissionId: 'bigint',
    id: 'bigint',
    joinerId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  TeamJoinInsertInput: {
    askedRoleId: 'bigint',
    changeRole: 'ChangeRoleObjRelInsertInput',
    changeRoleId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formSubmission: 'FormSubmissionObjRelInsertInput',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    joinerId: 'bigint',
    role: 'RoleObjRelInsertInput',
    team: 'TeamObjRelInsertInput',
    teamId: 'bigint',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    userInfo: 'UserInfoObjRelInsertInput',
  },
  TeamJoinMaxOrderBy: {
    askedRoleId: 'OrderBy',
    changeRoleId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    formSubmissionId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    state: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamJoinMinOrderBy: {
    askedRoleId: 'OrderBy',
    changeRoleId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    formSubmissionId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    state: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamJoinObjRelInsertInput: {
    data: 'TeamJoinInsertInput',
    onConflict: 'TeamJoinOnConflict',
  },
  TeamJoinOnConflict: {
    constraint: 'TeamJoinConstraint',
    updateColumns: 'TeamJoinUpdateColumn',
    where: 'TeamJoinBoolExp',
  },
  TeamJoinOrderBy: {
    askedRoleId: 'OrderBy',
    changeRole: 'ChangeRoleOrderBy',
    changeRoleId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    formSubmission: 'FormSubmissionOrderBy',
    formSubmissionId: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    joinerId: 'OrderBy',
    role: 'RoleOrderBy',
    state: 'OrderBy',
    team: 'TeamOrderBy',
    teamId: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    userInfo: 'UserInfoOrderBy',
  },
  TeamJoinPkColumnsInput: {
    id: 'bigint',
  },
  TeamJoinSelectColumn: 'enum' as const,
  TeamJoinSetInput: {
    askedRoleId: 'bigint',
    changeRoleId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    joinerId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  TeamJoinStddevOrderBy: {
    askedRoleId: 'OrderBy',
    changeRoleId: 'OrderBy',
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamJoinStddevPopOrderBy: {
    askedRoleId: 'OrderBy',
    changeRoleId: 'OrderBy',
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamJoinStddevSampOrderBy: {
    askedRoleId: 'OrderBy',
    changeRoleId: 'OrderBy',
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamJoinStreamCursorInput: {
    initialValue: 'TeamJoinStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  TeamJoinStreamCursorValueInput: {
    askedRoleId: 'bigint',
    changeRoleId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    joinerId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  TeamJoinSumOrderBy: {
    askedRoleId: 'OrderBy',
    changeRoleId: 'OrderBy',
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamJoinUpdateColumn: 'enum' as const,
  TeamJoinUpdates: {
    _inc: 'TeamJoinIncInput',
    _set: 'TeamJoinSetInput',
    where: 'TeamJoinBoolExp',
  },
  TeamJoinVarianceOrderBy: {
    askedRoleId: 'OrderBy',
    changeRoleId: 'OrderBy',
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamJoinVarPopOrderBy: {
    askedRoleId: 'OrderBy',
    changeRoleId: 'OrderBy',
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamJoinVarSampOrderBy: {
    askedRoleId: 'OrderBy',
    changeRoleId: 'OrderBy',
    createdById: 'OrderBy',
    formSubmissionId: 'OrderBy',
    id: 'OrderBy',
    joinerId: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamMaxOrderBy: {
    canteenId: 'OrderBy',
    classGroupId: 'OrderBy',
    cohortId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    currentFinance: 'OrderBy',
    deletedAt: 'OrderBy',
    directorsCategoryName: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    joinFormId: 'OrderBy',
    managersCategoryName: 'OrderBy',
    membersCategoryName: 'OrderBy',
    membershipFees: 'OrderBy',
    parentId: 'OrderBy',
    tagline: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    videoId: 'OrderBy',
  },
  TeamMember: {
    actions: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    actionsAggregate: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    projectSupervisors: {
      distinctOn: 'ProjectSupervisorsSelectColumn',
      orderBy: 'ProjectSupervisorsOrderBy',
      where: 'ProjectSupervisorsBoolExp',
    },
    projectSupervisorsAggregate: {
      distinctOn: 'ProjectSupervisorsSelectColumn',
      orderBy: 'ProjectSupervisorsOrderBy',
      where: 'ProjectSupervisorsBoolExp',
    },
    teamMemberRoles: {
      distinctOn: 'TeamMemberRolesSelectColumn',
      orderBy: 'TeamMemberRolesOrderBy',
      where: 'TeamMemberRolesBoolExp',
    },
    teamMemberRolesAggregate: {
      distinctOn: 'TeamMemberRolesSelectColumn',
      orderBy: 'TeamMemberRolesOrderBy',
      where: 'TeamMemberRolesBoolExp',
    },
  },
  TeamMemberAggregateBoolExp: {
    count: 'teamMemberAggregateBoolExpCount',
  },
  teamMemberAggregateBoolExpCount: {
    arguments: 'TeamMemberSelectColumn',
    filter: 'TeamMemberBoolExp',
    predicate: 'IntComparisonExp',
  },
  TeamMemberAggregateFields: {
    count: {
      columns: 'TeamMemberSelectColumn',
    },
  },
  TeamMemberAggregateOrderBy: {
    avg: 'TeamMemberAvgOrderBy',
    count: 'OrderBy',
    max: 'TeamMemberMaxOrderBy',
    min: 'TeamMemberMinOrderBy',
    stddev: 'TeamMemberStddevOrderBy',
    stddevPop: 'TeamMemberStddevPopOrderBy',
    stddevSamp: 'TeamMemberStddevSampOrderBy',
    sum: 'TeamMemberSumOrderBy',
    varPop: 'TeamMemberVarPopOrderBy',
    varSamp: 'TeamMemberVarSampOrderBy',
    variance: 'TeamMemberVarianceOrderBy',
  },
  TeamMemberArrRelInsertInput: {
    data: 'TeamMemberInsertInput',
    onConflict: 'TeamMemberOnConflict',
  },
  TeamMemberAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  TeamMemberBoolExp: {
    _and: 'TeamMemberBoolExp',
    _not: 'TeamMemberBoolExp',
    _or: 'TeamMemberBoolExp',
    actions: 'ActionBoolExp',
    actionsAggregate: 'ActionAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    endDate: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    permissions: 'IntComparisonExp',
    projectSupervisors: 'ProjectSupervisorsBoolExp',
    projectSupervisorsAggregate: 'ProjectSupervisorsAggregateBoolExp',
    startDate: 'TimestamptzComparisonExp',
    team: 'TeamBoolExp',
    teamId: 'BigintComparisonExp',
    teamMemberRoles: 'TeamMemberRolesBoolExp',
    teamMemberRolesAggregate: 'TeamMemberRolesAggregateBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    userId: 'BigintComparisonExp',
    userInfo: 'UserInfoBoolExp',
  },
  TeamMemberConstraint: 'enum' as const,
  TeamMemberIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  TeamMemberInsertInput: {
    actions: 'ActionArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    endDate: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    projectSupervisors: 'ProjectSupervisorsArrRelInsertInput',
    startDate: 'timestamptz',
    team: 'TeamObjRelInsertInput',
    teamId: 'bigint',
    teamMemberRoles: 'TeamMemberRolesArrRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    userId: 'bigint',
    userInfo: 'UserInfoObjRelInsertInput',
  },
  TeamMemberMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    endDate: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    startDate: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  TeamMemberMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    endDate: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    startDate: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  TeamMemberObjRelInsertInput: {
    data: 'TeamMemberInsertInput',
    onConflict: 'TeamMemberOnConflict',
  },
  TeamMemberOnConflict: {
    constraint: 'TeamMemberConstraint',
    updateColumns: 'TeamMemberUpdateColumn',
    where: 'TeamMemberBoolExp',
  },
  TeamMemberOrderBy: {
    actionsAggregate: 'ActionAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    endDate: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    permissions: 'OrderBy',
    projectSupervisorsAggregate: 'ProjectSupervisorsAggregateOrderBy',
    startDate: 'OrderBy',
    team: 'TeamOrderBy',
    teamId: 'OrderBy',
    teamMemberRolesAggregate: 'TeamMemberRolesAggregateOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
    userInfo: 'UserInfoOrderBy',
  },
  TeamMemberPkColumnsInput: {
    id: 'bigint',
  },
  TeamMemberRolesAggregateBoolExp: {
    count: 'teamMemberRolesAggregateBoolExpCount',
  },
  teamMemberRolesAggregateBoolExpCount: {
    arguments: 'TeamMemberRolesSelectColumn',
    filter: 'TeamMemberRolesBoolExp',
    predicate: 'IntComparisonExp',
  },
  TeamMemberRolesAggregateFields: {
    count: {
      columns: 'TeamMemberRolesSelectColumn',
    },
  },
  TeamMemberRolesAggregateOrderBy: {
    avg: 'TeamMemberRolesAvgOrderBy',
    count: 'OrderBy',
    max: 'TeamMemberRolesMaxOrderBy',
    min: 'TeamMemberRolesMinOrderBy',
    stddev: 'TeamMemberRolesStddevOrderBy',
    stddevPop: 'TeamMemberRolesStddevPopOrderBy',
    stddevSamp: 'TeamMemberRolesStddevSampOrderBy',
    sum: 'TeamMemberRolesSumOrderBy',
    varPop: 'TeamMemberRolesVarPopOrderBy',
    varSamp: 'TeamMemberRolesVarSampOrderBy',
    variance: 'TeamMemberRolesVarianceOrderBy',
  },
  TeamMemberRolesArrRelInsertInput: {
    data: 'TeamMemberRolesInsertInput',
    onConflict: 'TeamMemberRolesOnConflict',
  },
  TeamMemberRolesAvgOrderBy: {
    roleId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  TeamMemberRolesBoolExp: {
    _and: 'TeamMemberRolesBoolExp',
    _not: 'TeamMemberRolesBoolExp',
    _or: 'TeamMemberRolesBoolExp',
    role: 'RoleBoolExp',
    roleId: 'BigintComparisonExp',
    teamMember: 'TeamMemberBoolExp',
    teamMemberId: 'BigintComparisonExp',
  },
  TeamMemberRolesConstraint: 'enum' as const,
  TeamMemberRolesIncInput: {
    roleId: 'bigint',
    teamMemberId: 'bigint',
  },
  TeamMemberRolesInsertInput: {
    role: 'RoleObjRelInsertInput',
    roleId: 'bigint',
    teamMember: 'TeamMemberObjRelInsertInput',
    teamMemberId: 'bigint',
  },
  TeamMemberRolesMaxOrderBy: {
    roleId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  TeamMemberRolesMinOrderBy: {
    roleId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  TeamMemberRolesOnConflict: {
    constraint: 'TeamMemberRolesConstraint',
    updateColumns: 'TeamMemberRolesUpdateColumn',
    where: 'TeamMemberRolesBoolExp',
  },
  TeamMemberRolesOrderBy: {
    role: 'RoleOrderBy',
    roleId: 'OrderBy',
    teamMember: 'TeamMemberOrderBy',
    teamMemberId: 'OrderBy',
  },
  TeamMemberRolesPkColumnsInput: {
    roleId: 'bigint',
    teamMemberId: 'bigint',
  },
  TeamMemberRolesSelectColumn: 'enum' as const,
  TeamMemberRolesSetInput: {
    roleId: 'bigint',
    teamMemberId: 'bigint',
  },
  TeamMemberRolesStddevOrderBy: {
    roleId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  TeamMemberRolesStddevPopOrderBy: {
    roleId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  TeamMemberRolesStddevSampOrderBy: {
    roleId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  TeamMemberRolesStreamCursorInput: {
    initialValue: 'TeamMemberRolesStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  TeamMemberRolesStreamCursorValueInput: {
    roleId: 'bigint',
    teamMemberId: 'bigint',
  },
  TeamMemberRolesSumOrderBy: {
    roleId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  TeamMemberRolesUpdateColumn: 'enum' as const,
  TeamMemberRolesUpdates: {
    _inc: 'TeamMemberRolesIncInput',
    _set: 'TeamMemberRolesSetInput',
    where: 'TeamMemberRolesBoolExp',
  },
  TeamMemberRolesVarianceOrderBy: {
    roleId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  TeamMemberRolesVarPopOrderBy: {
    roleId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  TeamMemberRolesVarSampOrderBy: {
    roleId: 'OrderBy',
    teamMemberId: 'OrderBy',
  },
  TeamMemberSelectColumn: 'enum' as const,
  TeamMemberSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    endDate: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    startDate: 'timestamptz',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  TeamMemberStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  TeamMemberStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  TeamMemberStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  TeamMemberStreamCursorInput: {
    initialValue: 'TeamMemberStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  TeamMemberStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    endDate: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    startDate: 'timestamptz',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  TeamMemberSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  TeamMemberUpdateColumn: 'enum' as const,
  TeamMemberUpdates: {
    _inc: 'TeamMemberIncInput',
    _set: 'TeamMemberSetInput',
    where: 'TeamMemberBoolExp',
  },
  TeamMemberVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  TeamMemberVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  TeamMemberVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    permissions: 'OrderBy',
    teamId: 'OrderBy',
    tenantId: 'OrderBy',
    userId: 'OrderBy',
  },
  TeamMetricAggregateBoolExp: {
    count: 'teamMetricAggregateBoolExpCount',
  },
  teamMetricAggregateBoolExpCount: {
    arguments: 'TeamMetricSelectColumn',
    filter: 'TeamMetricBoolExp',
    predicate: 'IntComparisonExp',
  },
  TeamMetricAggregateFields: {
    count: {
      columns: 'TeamMetricSelectColumn',
    },
  },
  TeamMetricAggregateOrderBy: {
    avg: 'TeamMetricAvgOrderBy',
    count: 'OrderBy',
    max: 'TeamMetricMaxOrderBy',
    min: 'TeamMetricMinOrderBy',
    stddev: 'TeamMetricStddevOrderBy',
    stddevPop: 'TeamMetricStddevPopOrderBy',
    stddevSamp: 'TeamMetricStddevSampOrderBy',
    sum: 'TeamMetricSumOrderBy',
    varPop: 'TeamMetricVarPopOrderBy',
    varSamp: 'TeamMetricVarSampOrderBy',
    variance: 'TeamMetricVarianceOrderBy',
  },
  TeamMetricArrRelInsertInput: {
    data: 'TeamMetricInsertInput',
    onConflict: 'TeamMetricOnConflict',
  },
  TeamMetricAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamMetricBoolExp: {
    _and: 'TeamMetricBoolExp',
    _not: 'TeamMetricBoolExp',
    _or: 'TeamMetricBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
    value: 'StringComparisonExp',
  },
  TeamMetricConstraint: 'enum' as const,
  TeamMetricIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  TeamMetricInsertInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  TeamMetricMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    value: 'OrderBy',
  },
  TeamMetricMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    value: 'OrderBy',
  },
  TeamMetricOnConflict: {
    constraint: 'TeamMetricConstraint',
    updateColumns: 'TeamMetricUpdateColumn',
    where: 'TeamMetricBoolExp',
  },
  TeamMetricOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    value: 'OrderBy',
  },
  TeamMetricPkColumnsInput: {
    id: 'bigint',
  },
  TeamMetricSelectColumn: 'enum' as const,
  TeamMetricSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  TeamMetricStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamMetricStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamMetricStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamMetricStreamCursorInput: {
    initialValue: 'TeamMetricStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  TeamMetricStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  TeamMetricSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamMetricUpdateColumn: 'enum' as const,
  TeamMetricUpdates: {
    _inc: 'TeamMetricIncInput',
    _set: 'TeamMetricSetInput',
    where: 'TeamMetricBoolExp',
  },
  TeamMetricVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamMetricVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamMetricVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  TeamMinOrderBy: {
    canteenId: 'OrderBy',
    classGroupId: 'OrderBy',
    cohortId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    currentFinance: 'OrderBy',
    deletedAt: 'OrderBy',
    directorsCategoryName: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    joinFormId: 'OrderBy',
    managersCategoryName: 'OrderBy',
    membersCategoryName: 'OrderBy',
    membershipFees: 'OrderBy',
    parentId: 'OrderBy',
    tagline: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    videoId: 'OrderBy',
  },
  TeamObjRelInsertInput: {
    data: 'TeamInsertInput',
    onConflict: 'TeamOnConflict',
  },
  TeamOnConflict: {
    constraint: 'TeamConstraint',
    updateColumns: 'TeamUpdateColumn',
    where: 'TeamBoolExp',
  },
  TeamOrderBy: {
    actionsAggregate: 'ActionAggregateOrderBy',
    actor: 'ActorOrderBy',
    canteen: 'CanteenOrderBy',
    canteenId: 'OrderBy',
    changeRolesAggregate: 'ChangeRoleAggregateOrderBy',
    classGroup: 'ClassGroupOrderBy',
    classGroupId: 'OrderBy',
    cohort: 'CohortOrderBy',
    cohortId: 'OrderBy',
    contentRepresentingTeamsAggregate: 'ContentRepresentingTeamsAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    currentFinance: 'OrderBy',
    deletedAt: 'OrderBy',
    directorsCategoryName: 'OrderBy',
    documentsAggregate: 'DocumentAggregateOrderBy',
    eventOrganisingTeamsAggregate: 'EventOrganisingTeamsAggregateOrderBy',
    eventTeamsAggregate: 'EventTeamsAggregateOrderBy',
    form: 'FormOrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    joinFormId: 'OrderBy',
    managersCategoryName: 'OrderBy',
    membersCategoryName: 'OrderBy',
    membershipFees: 'OrderBy',
    parentId: 'OrderBy',
    polesAggregate: 'PoleAggregateOrderBy',
    projectsAggregate: 'ProjectAggregateOrderBy',
    rolesAggregate: 'RoleAggregateOrderBy',
    tagline: 'OrderBy',
    team: 'TeamOrderBy',
    teamCategoriesAggregate: 'TeamCategoriesAggregateOrderBy',
    teamEventsAggregate: 'TeamEventsAggregateOrderBy',
    teamFinancesAggregate: 'TeamFinanceAggregateOrderBy',
    teamJoinsAggregate: 'TeamJoinAggregateOrderBy',
    teamMembersAggregate: 'TeamMemberAggregateOrderBy',
    teamsAggregate: 'TeamAggregateOrderBy',
    tenant: 'TenantOrderBy',
    tenantById: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
    upload: 'UploadOrderBy',
    videoId: 'OrderBy',
  },
  TeamPkColumnsInput: {
    id: 'bigint',
  },
  TeamSelectColumn: 'enum' as const,
  TeamSetInput: {
    canteenId: 'bigint',
    classGroupId: 'bigint',
    cohortId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    joinFormId: 'bigint',
    parentId: 'bigint',
    tenantId: 'bigint',
    videoId: 'bigint',
  },
  TeamStddevOrderBy: {
    canteenId: 'OrderBy',
    classGroupId: 'OrderBy',
    cohortId: 'OrderBy',
    createdById: 'OrderBy',
    currentFinance: 'OrderBy',
    id: 'OrderBy',
    joinFormId: 'OrderBy',
    membershipFees: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
    videoId: 'OrderBy',
  },
  TeamStddevPopOrderBy: {
    canteenId: 'OrderBy',
    classGroupId: 'OrderBy',
    cohortId: 'OrderBy',
    createdById: 'OrderBy',
    currentFinance: 'OrderBy',
    id: 'OrderBy',
    joinFormId: 'OrderBy',
    membershipFees: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
    videoId: 'OrderBy',
  },
  TeamStddevSampOrderBy: {
    canteenId: 'OrderBy',
    classGroupId: 'OrderBy',
    cohortId: 'OrderBy',
    createdById: 'OrderBy',
    currentFinance: 'OrderBy',
    id: 'OrderBy',
    joinFormId: 'OrderBy',
    membershipFees: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
    videoId: 'OrderBy',
  },
  TeamStreamCursorInput: {
    initialValue: 'TeamStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  TeamStreamCursorValueInput: {
    canteenId: 'bigint',
    classGroupId: 'bigint',
    cohortId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    joinFormId: 'bigint',
    parentId: 'bigint',
    tenantId: 'bigint',
    videoId: 'bigint',
  },
  TeamSumOrderBy: {
    canteenId: 'OrderBy',
    classGroupId: 'OrderBy',
    cohortId: 'OrderBy',
    createdById: 'OrderBy',
    currentFinance: 'OrderBy',
    id: 'OrderBy',
    joinFormId: 'OrderBy',
    membershipFees: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
    videoId: 'OrderBy',
  },
  TeamUpdateColumn: 'enum' as const,
  TeamUpdates: {
    _inc: 'TeamIncInput',
    _set: 'TeamSetInput',
    where: 'TeamBoolExp',
  },
  TeamVarianceOrderBy: {
    canteenId: 'OrderBy',
    classGroupId: 'OrderBy',
    cohortId: 'OrderBy',
    createdById: 'OrderBy',
    currentFinance: 'OrderBy',
    id: 'OrderBy',
    joinFormId: 'OrderBy',
    membershipFees: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
    videoId: 'OrderBy',
  },
  TeamVarPopOrderBy: {
    canteenId: 'OrderBy',
    classGroupId: 'OrderBy',
    cohortId: 'OrderBy',
    createdById: 'OrderBy',
    currentFinance: 'OrderBy',
    id: 'OrderBy',
    joinFormId: 'OrderBy',
    membershipFees: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
    videoId: 'OrderBy',
  },
  TeamVarSampOrderBy: {
    canteenId: 'OrderBy',
    classGroupId: 'OrderBy',
    cohortId: 'OrderBy',
    createdById: 'OrderBy',
    currentFinance: 'OrderBy',
    id: 'OrderBy',
    joinFormId: 'OrderBy',
    membershipFees: 'OrderBy',
    parentId: 'OrderBy',
    tenantId: 'OrderBy',
    videoId: 'OrderBy',
  },
  Tenant: {
    actions: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    actionsAggregate: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    actorAddresses: {
      distinctOn: 'ActorAddressSelectColumn',
      orderBy: 'ActorAddressOrderBy',
      where: 'ActorAddressBoolExp',
    },
    actorAddressesAggregate: {
      distinctOn: 'ActorAddressSelectColumn',
      orderBy: 'ActorAddressOrderBy',
      where: 'ActorAddressBoolExp',
    },
    actorBankInfos: {
      distinctOn: 'ActorBankInfoSelectColumn',
      orderBy: 'ActorBankInfoOrderBy',
      where: 'ActorBankInfoBoolExp',
    },
    actorBankInfosAggregate: {
      distinctOn: 'ActorBankInfoSelectColumn',
      orderBy: 'ActorBankInfoOrderBy',
      where: 'ActorBankInfoBoolExp',
    },
    actorFinances: {
      distinctOn: 'ActorFinanceSelectColumn',
      orderBy: 'ActorFinanceOrderBy',
      where: 'ActorFinanceBoolExp',
    },
    actorFinancesAggregate: {
      distinctOn: 'ActorFinanceSelectColumn',
      orderBy: 'ActorFinanceOrderBy',
      where: 'ActorFinanceBoolExp',
    },
    actorImages: {
      distinctOn: 'ActorImageSelectColumn',
      orderBy: 'ActorImageOrderBy',
      where: 'ActorImageBoolExp',
    },
    actorImagesAggregate: {
      distinctOn: 'ActorImageSelectColumn',
      orderBy: 'ActorImageOrderBy',
      where: 'ActorImageBoolExp',
    },
    actors: {
      distinctOn: 'ActorSelectColumn',
      orderBy: 'ActorOrderBy',
      where: 'ActorBoolExp',
    },
    actorsAggregate: {
      distinctOn: 'ActorSelectColumn',
      orderBy: 'ActorOrderBy',
      where: 'ActorBoolExp',
    },
    botInfos: {
      distinctOn: 'BotInfoSelectColumn',
      orderBy: 'BotInfoOrderBy',
      where: 'BotInfoBoolExp',
    },
    botInfosAggregate: {
      distinctOn: 'BotInfoSelectColumn',
      orderBy: 'BotInfoOrderBy',
      where: 'BotInfoBoolExp',
    },
    canteenFoods: {
      distinctOn: 'CanteenFoodSelectColumn',
      orderBy: 'CanteenFoodOrderBy',
      where: 'CanteenFoodBoolExp',
    },
    canteenFoodsAggregate: {
      distinctOn: 'CanteenFoodSelectColumn',
      orderBy: 'CanteenFoodOrderBy',
      where: 'CanteenFoodBoolExp',
    },
    canteenMenus: {
      distinctOn: 'CanteenMenuSelectColumn',
      orderBy: 'CanteenMenuOrderBy',
      where: 'CanteenMenuBoolExp',
    },
    canteenMenusAggregate: {
      distinctOn: 'CanteenMenuSelectColumn',
      orderBy: 'CanteenMenuOrderBy',
      where: 'CanteenMenuBoolExp',
    },
    canteens: {
      distinctOn: 'CanteenSelectColumn',
      orderBy: 'CanteenOrderBy',
      where: 'CanteenBoolExp',
    },
    canteensAggregate: {
      distinctOn: 'CanteenSelectColumn',
      orderBy: 'CanteenOrderBy',
      where: 'CanteenBoolExp',
    },
    changeRoles: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    changeRolesAggregate: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    classGroupTeachers: {
      distinctOn: 'ClassGroupTeacherSelectColumn',
      orderBy: 'ClassGroupTeacherOrderBy',
      where: 'ClassGroupTeacherBoolExp',
    },
    classGroupTeachersAggregate: {
      distinctOn: 'ClassGroupTeacherSelectColumn',
      orderBy: 'ClassGroupTeacherOrderBy',
      where: 'ClassGroupTeacherBoolExp',
    },
    classGroups: {
      distinctOn: 'ClassGroupSelectColumn',
      orderBy: 'ClassGroupOrderBy',
      where: 'ClassGroupBoolExp',
    },
    classGroupsAggregate: {
      distinctOn: 'ClassGroupSelectColumn',
      orderBy: 'ClassGroupOrderBy',
      where: 'ClassGroupBoolExp',
    },
    cohorts: {
      distinctOn: 'CohortSelectColumn',
      orderBy: 'CohortOrderBy',
      where: 'CohortBoolExp',
    },
    cohortsAggregate: {
      distinctOn: 'CohortSelectColumn',
      orderBy: 'CohortOrderBy',
      where: 'CohortBoolExp',
    },
    contentEdits: {
      distinctOn: 'ContentEditSelectColumn',
      orderBy: 'ContentEditOrderBy',
      where: 'ContentEditBoolExp',
    },
    contentEditsAggregate: {
      distinctOn: 'ContentEditSelectColumn',
      orderBy: 'ContentEditOrderBy',
      where: 'ContentEditBoolExp',
    },
    contentMasters: {
      distinctOn: 'ContentMasterSelectColumn',
      orderBy: 'ContentMasterOrderBy',
      where: 'ContentMasterBoolExp',
    },
    contentMastersAggregate: {
      distinctOn: 'ContentMasterSelectColumn',
      orderBy: 'ContentMasterOrderBy',
      where: 'ContentMasterBoolExp',
    },
    contents: {
      distinctOn: 'ContentSelectColumn',
      orderBy: 'ContentOrderBy',
      where: 'ContentBoolExp',
    },
    contentsAggregate: {
      distinctOn: 'ContentSelectColumn',
      orderBy: 'ContentOrderBy',
      where: 'ContentBoolExp',
    },
    documentEdits: {
      distinctOn: 'DocumentEditSelectColumn',
      orderBy: 'DocumentEditOrderBy',
      where: 'DocumentEditBoolExp',
    },
    documentEditsAggregate: {
      distinctOn: 'DocumentEditSelectColumn',
      orderBy: 'DocumentEditOrderBy',
      where: 'DocumentEditBoolExp',
    },
    documents: {
      distinctOn: 'DocumentSelectColumn',
      orderBy: 'DocumentOrderBy',
      where: 'DocumentBoolExp',
    },
    documentsAggregate: {
      distinctOn: 'DocumentSelectColumn',
      orderBy: 'DocumentOrderBy',
      where: 'DocumentBoolExp',
    },
    eventApprovalSteps: {
      distinctOn: 'EventApprovalStepSelectColumn',
      orderBy: 'EventApprovalStepOrderBy',
      where: 'EventApprovalStepBoolExp',
    },
    eventApprovalStepsAggregate: {
      distinctOn: 'EventApprovalStepSelectColumn',
      orderBy: 'EventApprovalStepOrderBy',
      where: 'EventApprovalStepBoolExp',
    },
    eventApprovals: {
      distinctOn: 'EventApprovalSelectColumn',
      orderBy: 'EventApprovalOrderBy',
      where: 'EventApprovalBoolExp',
    },
    eventApprovalsAggregate: {
      distinctOn: 'EventApprovalSelectColumn',
      orderBy: 'EventApprovalOrderBy',
      where: 'EventApprovalBoolExp',
    },
    eventChangeRoles: {
      distinctOn: 'EventChangeRoleSelectColumn',
      orderBy: 'EventChangeRoleOrderBy',
      where: 'EventChangeRoleBoolExp',
    },
    eventChangeRolesAggregate: {
      distinctOn: 'EventChangeRoleSelectColumn',
      orderBy: 'EventChangeRoleOrderBy',
      where: 'EventChangeRoleBoolExp',
    },
    eventJoins: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventJoinsAggregate: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventRoles: {
      distinctOn: 'EventRoleSelectColumn',
      orderBy: 'EventRoleOrderBy',
      where: 'EventRoleBoolExp',
    },
    eventRolesAggregate: {
      distinctOn: 'EventRoleSelectColumn',
      orderBy: 'EventRoleOrderBy',
      where: 'EventRoleBoolExp',
    },
    events: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    eventsAggregate: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    expenses: {
      distinctOn: 'ExpenseSelectColumn',
      orderBy: 'ExpenseOrderBy',
      where: 'ExpenseBoolExp',
    },
    expensesAggregate: {
      distinctOn: 'ExpenseSelectColumn',
      orderBy: 'ExpenseOrderBy',
      where: 'ExpenseBoolExp',
    },
    favorites: {
      distinctOn: 'FavoriteSelectColumn',
      orderBy: 'FavoriteOrderBy',
      where: 'FavoriteBoolExp',
    },
    favoritesAggregate: {
      distinctOn: 'FavoriteSelectColumn',
      orderBy: 'FavoriteOrderBy',
      where: 'FavoriteBoolExp',
    },
    formEdits: {
      distinctOn: 'FormEditSelectColumn',
      orderBy: 'FormEditOrderBy',
      where: 'FormEditBoolExp',
    },
    formEditsAggregate: {
      distinctOn: 'FormEditSelectColumn',
      orderBy: 'FormEditOrderBy',
      where: 'FormEditBoolExp',
    },
    formSubmissionEdits: {
      distinctOn: 'FormSubmissionEditSelectColumn',
      orderBy: 'FormSubmissionEditOrderBy',
      where: 'FormSubmissionEditBoolExp',
    },
    formSubmissionEditsAggregate: {
      distinctOn: 'FormSubmissionEditSelectColumn',
      orderBy: 'FormSubmissionEditOrderBy',
      where: 'FormSubmissionEditBoolExp',
    },
    formSubmissions: {
      distinctOn: 'FormSubmissionSelectColumn',
      orderBy: 'FormSubmissionOrderBy',
      where: 'FormSubmissionBoolExp',
    },
    formSubmissionsAggregate: {
      distinctOn: 'FormSubmissionSelectColumn',
      orderBy: 'FormSubmissionOrderBy',
      where: 'FormSubmissionBoolExp',
    },
    forms: {
      distinctOn: 'FormSelectColumn',
      orderBy: 'FormOrderBy',
      where: 'FormBoolExp',
    },
    formsAggregate: {
      distinctOn: 'FormSelectColumn',
      orderBy: 'FormOrderBy',
      where: 'FormBoolExp',
    },
    individuals: {
      distinctOn: 'IndividualSelectColumn',
      orderBy: 'IndividualOrderBy',
      where: 'IndividualBoolExp',
    },
    individualsAggregate: {
      distinctOn: 'IndividualSelectColumn',
      orderBy: 'IndividualOrderBy',
      where: 'IndividualBoolExp',
    },
    issues: {
      distinctOn: 'IssueSelectColumn',
      orderBy: 'IssueOrderBy',
      where: 'IssueBoolExp',
    },
    issuesAggregate: {
      distinctOn: 'IssueSelectColumn',
      orderBy: 'IssueOrderBy',
      where: 'IssueBoolExp',
    },
    poles: {
      distinctOn: 'PoleSelectColumn',
      orderBy: 'PoleOrderBy',
      where: 'PoleBoolExp',
    },
    polesAggregate: {
      distinctOn: 'PoleSelectColumn',
      orderBy: 'PoleOrderBy',
      where: 'PoleBoolExp',
    },
    projectRoles: {
      distinctOn: 'ProjectRoleSelectColumn',
      orderBy: 'ProjectRoleOrderBy',
      where: 'ProjectRoleBoolExp',
    },
    projectRolesAggregate: {
      distinctOn: 'ProjectRoleSelectColumn',
      orderBy: 'ProjectRoleOrderBy',
      where: 'ProjectRoleBoolExp',
    },
    projects: {
      distinctOn: 'ProjectSelectColumn',
      orderBy: 'ProjectOrderBy',
      where: 'ProjectBoolExp',
    },
    projectsAggregate: {
      distinctOn: 'ProjectSelectColumn',
      orderBy: 'ProjectOrderBy',
      where: 'ProjectBoolExp',
    },
    reactions: {
      distinctOn: 'ReactionSelectColumn',
      orderBy: 'ReactionOrderBy',
      where: 'ReactionBoolExp',
    },
    reactionsAggregate: {
      distinctOn: 'ReactionSelectColumn',
      orderBy: 'ReactionOrderBy',
      where: 'ReactionBoolExp',
    },
    reports: {
      distinctOn: 'ReportSelectColumn',
      orderBy: 'ReportOrderBy',
      where: 'ReportBoolExp',
    },
    reportsAggregate: {
      distinctOn: 'ReportSelectColumn',
      orderBy: 'ReportOrderBy',
      where: 'ReportBoolExp',
    },
    roles: {
      distinctOn: 'RoleSelectColumn',
      orderBy: 'RoleOrderBy',
      where: 'RoleBoolExp',
    },
    rolesAggregate: {
      distinctOn: 'RoleSelectColumn',
      orderBy: 'RoleOrderBy',
      where: 'RoleBoolExp',
    },
    sessions: {
      distinctOn: 'SessionSelectColumn',
      orderBy: 'SessionOrderBy',
      where: 'SessionBoolExp',
    },
    sessionsAggregate: {
      distinctOn: 'SessionSelectColumn',
      orderBy: 'SessionOrderBy',
      where: 'SessionBoolExp',
    },
    shortcuts: {
      distinctOn: 'ShortcutSelectColumn',
      orderBy: 'ShortcutOrderBy',
      where: 'ShortcutBoolExp',
    },
    shortcutsAggregate: {
      distinctOn: 'ShortcutSelectColumn',
      orderBy: 'ShortcutOrderBy',
      where: 'ShortcutBoolExp',
    },
    socials: {
      distinctOn: 'SocialSelectColumn',
      orderBy: 'SocialOrderBy',
      where: 'SocialBoolExp',
    },
    socialsAggregate: {
      distinctOn: 'SocialSelectColumn',
      orderBy: 'SocialOrderBy',
      where: 'SocialBoolExp',
    },
    subjects: {
      distinctOn: 'SubjectSelectColumn',
      orderBy: 'SubjectOrderBy',
      where: 'SubjectBoolExp',
    },
    subjectsAggregate: {
      distinctOn: 'SubjectSelectColumn',
      orderBy: 'SubjectOrderBy',
      where: 'SubjectBoolExp',
    },
    tags: {
      distinctOn: 'TagSelectColumn',
      orderBy: 'TagOrderBy',
      where: 'TagBoolExp',
    },
    tagsAggregate: {
      distinctOn: 'TagSelectColumn',
      orderBy: 'TagOrderBy',
      where: 'TagBoolExp',
    },
    teamFinances: {
      distinctOn: 'TeamFinanceSelectColumn',
      orderBy: 'TeamFinanceOrderBy',
      where: 'TeamFinanceBoolExp',
    },
    teamFinancesAggregate: {
      distinctOn: 'TeamFinanceSelectColumn',
      orderBy: 'TeamFinanceOrderBy',
      where: 'TeamFinanceBoolExp',
    },
    teamJoins: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamJoinsAggregate: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamMembers: {
      distinctOn: 'TeamMemberSelectColumn',
      orderBy: 'TeamMemberOrderBy',
      where: 'TeamMemberBoolExp',
    },
    teamMembersAggregate: {
      distinctOn: 'TeamMemberSelectColumn',
      orderBy: 'TeamMemberOrderBy',
      where: 'TeamMemberBoolExp',
    },
    teamMetrics: {
      distinctOn: 'TeamMetricSelectColumn',
      orderBy: 'TeamMetricOrderBy',
      where: 'TeamMetricBoolExp',
    },
    teamMetricsAggregate: {
      distinctOn: 'TeamMetricSelectColumn',
      orderBy: 'TeamMetricOrderBy',
      where: 'TeamMetricBoolExp',
    },
    teams: {
      distinctOn: 'TeamSelectColumn',
      orderBy: 'TeamOrderBy',
      where: 'TeamBoolExp',
    },
    teamsAggregate: {
      distinctOn: 'TeamSelectColumn',
      orderBy: 'TeamOrderBy',
      where: 'TeamBoolExp',
    },
    uploads: {
      distinctOn: 'UploadSelectColumn',
      orderBy: 'UploadOrderBy',
      where: 'UploadBoolExp',
    },
    uploadsAggregate: {
      distinctOn: 'UploadSelectColumn',
      orderBy: 'UploadOrderBy',
      where: 'UploadBoolExp',
    },
    userInfos: {
      distinctOn: 'UserInfoSelectColumn',
      orderBy: 'UserInfoOrderBy',
      where: 'UserInfoBoolExp',
    },
    userInfosAggregate: {
      distinctOn: 'UserInfoSelectColumn',
      orderBy: 'UserInfoOrderBy',
      where: 'UserInfoBoolExp',
    },
    validations: {
      distinctOn: 'ValidationSelectColumn',
      orderBy: 'ValidationOrderBy',
      where: 'ValidationBoolExp',
    },
    validationsAggregate: {
      distinctOn: 'ValidationSelectColumn',
      orderBy: 'ValidationOrderBy',
      where: 'ValidationBoolExp',
    },
    votes: {
      distinctOn: 'VoteSelectColumn',
      orderBy: 'VoteOrderBy',
      where: 'VoteBoolExp',
    },
    votesAggregate: {
      distinctOn: 'VoteSelectColumn',
      orderBy: 'VoteOrderBy',
      where: 'VoteBoolExp',
    },
  },
  TenantAggregateBoolExp: {
    bool_and: 'tenantAggregateBoolExpBool_and',
    bool_or: 'tenantAggregateBoolExpBool_or',
    count: 'tenantAggregateBoolExpCount',
  },
  tenantAggregateBoolExpBool_and: {
    arguments: 'TenantSelectColumnTenantAggregateBoolExpBool_andArgumentsColumns',
    filter: 'TenantBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  tenantAggregateBoolExpBool_or: {
    arguments: 'TenantSelectColumnTenantAggregateBoolExpBool_orArgumentsColumns',
    filter: 'TenantBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  tenantAggregateBoolExpCount: {
    arguments: 'TenantSelectColumn',
    filter: 'TenantBoolExp',
    predicate: 'IntComparisonExp',
  },
  TenantAggregateFields: {
    count: {
      columns: 'TenantSelectColumn',
    },
  },
  TenantAggregateOrderBy: {
    avg: 'TenantAvgOrderBy',
    count: 'OrderBy',
    max: 'TenantMaxOrderBy',
    min: 'TenantMinOrderBy',
    stddev: 'TenantStddevOrderBy',
    stddevPop: 'TenantStddevPopOrderBy',
    stddevSamp: 'TenantStddevSampOrderBy',
    sum: 'TenantSumOrderBy',
    varPop: 'TenantVarPopOrderBy',
    varSamp: 'TenantVarSampOrderBy',
    variance: 'TenantVarianceOrderBy',
  },
  TenantArrRelInsertInput: {
    data: 'TenantInsertInput',
    onConflict: 'TenantOnConflict',
  },
  TenantAvgOrderBy: {
    createdById: 'OrderBy',
    eventValidationFormId: 'OrderBy',
    id: 'OrderBy',
    logoId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TenantBoolExp: {
    _and: 'TenantBoolExp',
    _not: 'TenantBoolExp',
    _or: 'TenantBoolExp',
    actions: 'ActionBoolExp',
    actionsAggregate: 'ActionAggregateBoolExp',
    actorAddresses: 'ActorAddressBoolExp',
    actorAddressesAggregate: 'ActorAddressAggregateBoolExp',
    actorBankInfos: 'ActorBankInfoBoolExp',
    actorBankInfosAggregate: 'ActorBankInfoAggregateBoolExp',
    actorFinances: 'ActorFinanceBoolExp',
    actorFinancesAggregate: 'ActorFinanceAggregateBoolExp',
    actorImages: 'ActorImageBoolExp',
    actorImagesAggregate: 'ActorImageAggregateBoolExp',
    actors: 'ActorBoolExp',
    actorsAggregate: 'ActorAggregateBoolExp',
    botInfos: 'BotInfoBoolExp',
    botInfosAggregate: 'BotInfoAggregateBoolExp',
    canteenFoods: 'CanteenFoodBoolExp',
    canteenFoodsAggregate: 'CanteenFoodAggregateBoolExp',
    canteenMenus: 'CanteenMenuBoolExp',
    canteenMenusAggregate: 'CanteenMenuAggregateBoolExp',
    canteens: 'CanteenBoolExp',
    canteensAggregate: 'CanteenAggregateBoolExp',
    changeRoles: 'ChangeRoleBoolExp',
    changeRolesAggregate: 'ChangeRoleAggregateBoolExp',
    classGroupTeachers: 'ClassGroupTeacherBoolExp',
    classGroupTeachersAggregate: 'ClassGroupTeacherAggregateBoolExp',
    classGroups: 'ClassGroupBoolExp',
    classGroupsAggregate: 'ClassGroupAggregateBoolExp',
    cohorts: 'CohortBoolExp',
    cohortsAggregate: 'CohortAggregateBoolExp',
    contentEdits: 'ContentEditBoolExp',
    contentEditsAggregate: 'ContentEditAggregateBoolExp',
    contentMasters: 'ContentMasterBoolExp',
    contentMastersAggregate: 'ContentMasterAggregateBoolExp',
    contents: 'ContentBoolExp',
    contentsAggregate: 'ContentAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    documentEdits: 'DocumentEditBoolExp',
    documentEditsAggregate: 'DocumentEditAggregateBoolExp',
    documents: 'DocumentBoolExp',
    documentsAggregate: 'DocumentAggregateBoolExp',
    domain: 'StringComparisonExp',
    eventApprovalSteps: 'EventApprovalStepBoolExp',
    eventApprovalStepsAggregate: 'EventApprovalStepAggregateBoolExp',
    eventApprovals: 'EventApprovalBoolExp',
    eventApprovalsAggregate: 'EventApprovalAggregateBoolExp',
    eventChangeRoles: 'EventChangeRoleBoolExp',
    eventChangeRolesAggregate: 'EventChangeRoleAggregateBoolExp',
    eventJoins: 'EventJoinBoolExp',
    eventJoinsAggregate: 'EventJoinAggregateBoolExp',
    eventRoles: 'EventRoleBoolExp',
    eventRolesAggregate: 'EventRoleAggregateBoolExp',
    eventValidationFormId: 'BigintComparisonExp',
    events: 'EventBoolExp',
    eventsAggregate: 'EventAggregateBoolExp',
    expenses: 'ExpenseBoolExp',
    expensesAggregate: 'ExpenseAggregateBoolExp',
    favorites: 'FavoriteBoolExp',
    favoritesAggregate: 'FavoriteAggregateBoolExp',
    form: 'FormBoolExp',
    formEdits: 'FormEditBoolExp',
    formEditsAggregate: 'FormEditAggregateBoolExp',
    formSubmissionEdits: 'FormSubmissionEditBoolExp',
    formSubmissionEditsAggregate: 'FormSubmissionEditAggregateBoolExp',
    formSubmissions: 'FormSubmissionBoolExp',
    formSubmissionsAggregate: 'FormSubmissionAggregateBoolExp',
    forms: 'FormBoolExp',
    formsAggregate: 'FormAggregateBoolExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    individuals: 'IndividualBoolExp',
    individualsAggregate: 'IndividualAggregateBoolExp',
    issues: 'IssueBoolExp',
    issuesAggregate: 'IssueAggregateBoolExp',
    logoId: 'BigintComparisonExp',
    name: 'StringComparisonExp',
    oidcInfoOidcCallbackUri: 'StringComparisonExp',
    oidcInfoOidcClientId: 'StringComparisonExp',
    oidcInfoOidcClientSecret: 'StringComparisonExp',
    oidcInfoOidcDiscoveryUrl: 'StringComparisonExp',
    oidcInfoOidcEnabled: 'BooleanComparisonExp',
    oidcInfoOidcName: 'StringComparisonExp',
    oidcInfoOidcScopes: 'StringComparisonExp',
    poles: 'PoleBoolExp',
    polesAggregate: 'PoleAggregateBoolExp',
    projectRoles: 'ProjectRoleBoolExp',
    projectRolesAggregate: 'ProjectRoleAggregateBoolExp',
    projects: 'ProjectBoolExp',
    projectsAggregate: 'ProjectAggregateBoolExp',
    reactions: 'ReactionBoolExp',
    reactionsAggregate: 'ReactionAggregateBoolExp',
    reports: 'ReportBoolExp',
    reportsAggregate: 'ReportAggregateBoolExp',
    roles: 'RoleBoolExp',
    rolesAggregate: 'RoleAggregateBoolExp',
    sessions: 'SessionBoolExp',
    sessionsAggregate: 'SessionAggregateBoolExp',
    shortcuts: 'ShortcutBoolExp',
    shortcutsAggregate: 'ShortcutAggregateBoolExp',
    socials: 'SocialBoolExp',
    socialsAggregate: 'SocialAggregateBoolExp',
    subjects: 'SubjectBoolExp',
    subjectsAggregate: 'SubjectAggregateBoolExp',
    tags: 'TagBoolExp',
    tagsAggregate: 'TagAggregateBoolExp',
    team: 'TeamBoolExp',
    teamFinances: 'TeamFinanceBoolExp',
    teamFinancesAggregate: 'TeamFinanceAggregateBoolExp',
    teamId: 'BigintComparisonExp',
    teamJoins: 'TeamJoinBoolExp',
    teamJoinsAggregate: 'TeamJoinAggregateBoolExp',
    teamMembers: 'TeamMemberBoolExp',
    teamMembersAggregate: 'TeamMemberAggregateBoolExp',
    teamMetrics: 'TeamMetricBoolExp',
    teamMetricsAggregate: 'TeamMetricAggregateBoolExp',
    teams: 'TeamBoolExp',
    teamsAggregate: 'TeamAggregateBoolExp',
    upload: 'UploadBoolExp',
    uploads: 'UploadBoolExp',
    uploadsAggregate: 'UploadAggregateBoolExp',
    userInfos: 'UserInfoBoolExp',
    userInfosAggregate: 'UserInfoAggregateBoolExp',
    validations: 'ValidationBoolExp',
    validationsAggregate: 'ValidationAggregateBoolExp',
    votes: 'VoteBoolExp',
    votesAggregate: 'VoteAggregateBoolExp',
  },
  TenantConstraint: 'enum' as const,
  TenantIncInput: {
    createdById: 'bigint',
    eventValidationFormId: 'bigint',
    id: 'bigint',
    logoId: 'bigint',
    teamId: 'bigint',
  },
  TenantInsertInput: {
    actions: 'ActionArrRelInsertInput',
    actorAddresses: 'ActorAddressArrRelInsertInput',
    actorBankInfos: 'ActorBankInfoArrRelInsertInput',
    actorFinances: 'ActorFinanceArrRelInsertInput',
    actorImages: 'ActorImageArrRelInsertInput',
    actors: 'ActorArrRelInsertInput',
    botInfos: 'BotInfoArrRelInsertInput',
    canteenFoods: 'CanteenFoodArrRelInsertInput',
    canteenMenus: 'CanteenMenuArrRelInsertInput',
    canteens: 'CanteenArrRelInsertInput',
    changeRoles: 'ChangeRoleArrRelInsertInput',
    classGroupTeachers: 'ClassGroupTeacherArrRelInsertInput',
    classGroups: 'ClassGroupArrRelInsertInput',
    cohorts: 'CohortArrRelInsertInput',
    contentEdits: 'ContentEditArrRelInsertInput',
    contentMasters: 'ContentMasterArrRelInsertInput',
    contents: 'ContentArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    documentEdits: 'DocumentEditArrRelInsertInput',
    documents: 'DocumentArrRelInsertInput',
    eventApprovalSteps: 'EventApprovalStepArrRelInsertInput',
    eventApprovals: 'EventApprovalArrRelInsertInput',
    eventChangeRoles: 'EventChangeRoleArrRelInsertInput',
    eventJoins: 'EventJoinArrRelInsertInput',
    eventRoles: 'EventRoleArrRelInsertInput',
    eventValidationFormId: 'bigint',
    events: 'EventArrRelInsertInput',
    expenses: 'ExpenseArrRelInsertInput',
    favorites: 'FavoriteArrRelInsertInput',
    form: 'FormObjRelInsertInput',
    formEdits: 'FormEditArrRelInsertInput',
    formSubmissionEdits: 'FormSubmissionEditArrRelInsertInput',
    formSubmissions: 'FormSubmissionArrRelInsertInput',
    forms: 'FormArrRelInsertInput',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    individuals: 'IndividualArrRelInsertInput',
    issues: 'IssueArrRelInsertInput',
    logoId: 'bigint',
    poles: 'PoleArrRelInsertInput',
    projectRoles: 'ProjectRoleArrRelInsertInput',
    projects: 'ProjectArrRelInsertInput',
    reactions: 'ReactionArrRelInsertInput',
    reports: 'ReportArrRelInsertInput',
    roles: 'RoleArrRelInsertInput',
    sessions: 'SessionArrRelInsertInput',
    shortcuts: 'ShortcutArrRelInsertInput',
    socials: 'SocialArrRelInsertInput',
    subjects: 'SubjectArrRelInsertInput',
    tags: 'TagArrRelInsertInput',
    team: 'TeamObjRelInsertInput',
    teamFinances: 'TeamFinanceArrRelInsertInput',
    teamId: 'bigint',
    teamJoins: 'TeamJoinArrRelInsertInput',
    teamMembers: 'TeamMemberArrRelInsertInput',
    teamMetrics: 'TeamMetricArrRelInsertInput',
    teams: 'TeamArrRelInsertInput',
    upload: 'UploadObjRelInsertInput',
    uploads: 'UploadArrRelInsertInput',
    userInfos: 'UserInfoArrRelInsertInput',
    validations: 'ValidationArrRelInsertInput',
    votes: 'VoteArrRelInsertInput',
  },
  TenantMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    domain: 'OrderBy',
    eventValidationFormId: 'OrderBy',
    id: 'OrderBy',
    logoId: 'OrderBy',
    name: 'OrderBy',
    oidcInfoOidcCallbackUri: 'OrderBy',
    oidcInfoOidcClientId: 'OrderBy',
    oidcInfoOidcClientSecret: 'OrderBy',
    oidcInfoOidcDiscoveryUrl: 'OrderBy',
    oidcInfoOidcName: 'OrderBy',
    oidcInfoOidcScopes: 'OrderBy',
    teamId: 'OrderBy',
  },
  TenantMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    domain: 'OrderBy',
    eventValidationFormId: 'OrderBy',
    id: 'OrderBy',
    logoId: 'OrderBy',
    name: 'OrderBy',
    oidcInfoOidcCallbackUri: 'OrderBy',
    oidcInfoOidcClientId: 'OrderBy',
    oidcInfoOidcClientSecret: 'OrderBy',
    oidcInfoOidcDiscoveryUrl: 'OrderBy',
    oidcInfoOidcName: 'OrderBy',
    oidcInfoOidcScopes: 'OrderBy',
    teamId: 'OrderBy',
  },
  TenantObjRelInsertInput: {
    data: 'TenantInsertInput',
    onConflict: 'TenantOnConflict',
  },
  TenantOnConflict: {
    constraint: 'TenantConstraint',
    updateColumns: 'TenantUpdateColumn',
    where: 'TenantBoolExp',
  },
  TenantOrderBy: {
    actionsAggregate: 'ActionAggregateOrderBy',
    actorAddressesAggregate: 'ActorAddressAggregateOrderBy',
    actorBankInfosAggregate: 'ActorBankInfoAggregateOrderBy',
    actorFinancesAggregate: 'ActorFinanceAggregateOrderBy',
    actorImagesAggregate: 'ActorImageAggregateOrderBy',
    actorsAggregate: 'ActorAggregateOrderBy',
    botInfosAggregate: 'BotInfoAggregateOrderBy',
    canteenFoodsAggregate: 'CanteenFoodAggregateOrderBy',
    canteenMenusAggregate: 'CanteenMenuAggregateOrderBy',
    canteensAggregate: 'CanteenAggregateOrderBy',
    changeRolesAggregate: 'ChangeRoleAggregateOrderBy',
    classGroupTeachersAggregate: 'ClassGroupTeacherAggregateOrderBy',
    classGroupsAggregate: 'ClassGroupAggregateOrderBy',
    cohortsAggregate: 'CohortAggregateOrderBy',
    contentEditsAggregate: 'ContentEditAggregateOrderBy',
    contentMastersAggregate: 'ContentMasterAggregateOrderBy',
    contentsAggregate: 'ContentAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    documentEditsAggregate: 'DocumentEditAggregateOrderBy',
    documentsAggregate: 'DocumentAggregateOrderBy',
    domain: 'OrderBy',
    eventApprovalStepsAggregate: 'EventApprovalStepAggregateOrderBy',
    eventApprovalsAggregate: 'EventApprovalAggregateOrderBy',
    eventChangeRolesAggregate: 'EventChangeRoleAggregateOrderBy',
    eventJoinsAggregate: 'EventJoinAggregateOrderBy',
    eventRolesAggregate: 'EventRoleAggregateOrderBy',
    eventValidationFormId: 'OrderBy',
    eventsAggregate: 'EventAggregateOrderBy',
    expensesAggregate: 'ExpenseAggregateOrderBy',
    favoritesAggregate: 'FavoriteAggregateOrderBy',
    form: 'FormOrderBy',
    formEditsAggregate: 'FormEditAggregateOrderBy',
    formSubmissionEditsAggregate: 'FormSubmissionEditAggregateOrderBy',
    formSubmissionsAggregate: 'FormSubmissionAggregateOrderBy',
    formsAggregate: 'FormAggregateOrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    individualsAggregate: 'IndividualAggregateOrderBy',
    issuesAggregate: 'IssueAggregateOrderBy',
    logoId: 'OrderBy',
    name: 'OrderBy',
    oidcInfoOidcCallbackUri: 'OrderBy',
    oidcInfoOidcClientId: 'OrderBy',
    oidcInfoOidcClientSecret: 'OrderBy',
    oidcInfoOidcDiscoveryUrl: 'OrderBy',
    oidcInfoOidcEnabled: 'OrderBy',
    oidcInfoOidcName: 'OrderBy',
    oidcInfoOidcScopes: 'OrderBy',
    polesAggregate: 'PoleAggregateOrderBy',
    projectRolesAggregate: 'ProjectRoleAggregateOrderBy',
    projectsAggregate: 'ProjectAggregateOrderBy',
    reactionsAggregate: 'ReactionAggregateOrderBy',
    reportsAggregate: 'ReportAggregateOrderBy',
    rolesAggregate: 'RoleAggregateOrderBy',
    sessionsAggregate: 'SessionAggregateOrderBy',
    shortcutsAggregate: 'ShortcutAggregateOrderBy',
    socialsAggregate: 'SocialAggregateOrderBy',
    subjectsAggregate: 'SubjectAggregateOrderBy',
    tagsAggregate: 'TagAggregateOrderBy',
    team: 'TeamOrderBy',
    teamFinancesAggregate: 'TeamFinanceAggregateOrderBy',
    teamId: 'OrderBy',
    teamJoinsAggregate: 'TeamJoinAggregateOrderBy',
    teamMembersAggregate: 'TeamMemberAggregateOrderBy',
    teamMetricsAggregate: 'TeamMetricAggregateOrderBy',
    teamsAggregate: 'TeamAggregateOrderBy',
    upload: 'UploadOrderBy',
    uploadsAggregate: 'UploadAggregateOrderBy',
    userInfosAggregate: 'UserInfoAggregateOrderBy',
    validationsAggregate: 'ValidationAggregateOrderBy',
    votesAggregate: 'VoteAggregateOrderBy',
  },
  TenantPkColumnsInput: {
    id: 'bigint',
  },
  TenantSelectColumn: 'enum' as const,
  TenantSelectColumnTenantAggregateBoolExpBool_andArgumentsColumns: 'enum' as const,
  TenantSelectColumnTenantAggregateBoolExpBool_orArgumentsColumns: 'enum' as const,
  TenantSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventValidationFormId: 'bigint',
    id: 'bigint',
    logoId: 'bigint',
    teamId: 'bigint',
  },
  TenantStddevOrderBy: {
    createdById: 'OrderBy',
    eventValidationFormId: 'OrderBy',
    id: 'OrderBy',
    logoId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TenantStddevPopOrderBy: {
    createdById: 'OrderBy',
    eventValidationFormId: 'OrderBy',
    id: 'OrderBy',
    logoId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TenantStddevSampOrderBy: {
    createdById: 'OrderBy',
    eventValidationFormId: 'OrderBy',
    id: 'OrderBy',
    logoId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TenantStreamCursorInput: {
    initialValue: 'TenantStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  TenantStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventValidationFormId: 'bigint',
    id: 'bigint',
    logoId: 'bigint',
    teamId: 'bigint',
  },
  TenantSumOrderBy: {
    createdById: 'OrderBy',
    eventValidationFormId: 'OrderBy',
    id: 'OrderBy',
    logoId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TenantUpdateColumn: 'enum' as const,
  TenantUpdates: {
    _inc: 'TenantIncInput',
    _set: 'TenantSetInput',
    where: 'TenantBoolExp',
  },
  TenantVarianceOrderBy: {
    createdById: 'OrderBy',
    eventValidationFormId: 'OrderBy',
    id: 'OrderBy',
    logoId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TenantVarPopOrderBy: {
    createdById: 'OrderBy',
    eventValidationFormId: 'OrderBy',
    id: 'OrderBy',
    logoId: 'OrderBy',
    teamId: 'OrderBy',
  },
  TenantVarSampOrderBy: {
    createdById: 'OrderBy',
    eventValidationFormId: 'OrderBy',
    id: 'OrderBy',
    logoId: 'OrderBy',
    teamId: 'OrderBy',
  },
  timestamptz: `scalar.timestamptz` as const,
  TimestamptzComparisonExp: {
    _eq: 'timestamptz',
    _gt: 'timestamptz',
    _gte: 'timestamptz',
    _in: 'timestamptz',
    _lt: 'timestamptz',
    _lte: 'timestamptz',
    _neq: 'timestamptz',
    _nin: 'timestamptz',
  },
  Upload: {
    actorFinanceReceipts: {
      distinctOn: 'ActorFinanceReceiptsSelectColumn',
      orderBy: 'ActorFinanceReceiptsOrderBy',
      where: 'ActorFinanceReceiptsBoolExp',
    },
    actorFinanceReceiptsAggregate: {
      distinctOn: 'ActorFinanceReceiptsSelectColumn',
      orderBy: 'ActorFinanceReceiptsOrderBy',
      where: 'ActorFinanceReceiptsBoolExp',
    },
    contentAttachments: {
      distinctOn: 'ContentAttachmentsSelectColumn',
      orderBy: 'ContentAttachmentsOrderBy',
      where: 'ContentAttachmentsBoolExp',
    },
    contentAttachmentsAggregate: {
      distinctOn: 'ContentAttachmentsSelectColumn',
      orderBy: 'ContentAttachmentsOrderBy',
      where: 'ContentAttachmentsBoolExp',
    },
    documentEdits: {
      distinctOn: 'DocumentEditSelectColumn',
      orderBy: 'DocumentEditOrderBy',
      where: 'DocumentEditBoolExp',
    },
    documentEditsAggregate: {
      distinctOn: 'DocumentEditSelectColumn',
      orderBy: 'DocumentEditOrderBy',
      where: 'DocumentEditBoolExp',
    },
    events: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    eventsAggregate: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    expenses: {
      distinctOn: 'ExpenseSelectColumn',
      orderBy: 'ExpenseOrderBy',
      where: 'ExpenseBoolExp',
    },
    expensesAggregate: {
      distinctOn: 'ExpenseSelectColumn',
      orderBy: 'ExpenseOrderBy',
      where: 'ExpenseBoolExp',
    },
    projects: {
      distinctOn: 'ProjectSelectColumn',
      orderBy: 'ProjectOrderBy',
      where: 'ProjectBoolExp',
    },
    projectsAggregate: {
      distinctOn: 'ProjectSelectColumn',
      orderBy: 'ProjectOrderBy',
      where: 'ProjectBoolExp',
    },
    tags: {
      distinctOn: 'TagSelectColumn',
      orderBy: 'TagOrderBy',
      where: 'TagBoolExp',
    },
    tagsAggregate: {
      distinctOn: 'TagSelectColumn',
      orderBy: 'TagOrderBy',
      where: 'TagBoolExp',
    },
    teams: {
      distinctOn: 'TeamSelectColumn',
      orderBy: 'TeamOrderBy',
      where: 'TeamBoolExp',
    },
    teamsAggregate: {
      distinctOn: 'TeamSelectColumn',
      orderBy: 'TeamOrderBy',
      where: 'TeamBoolExp',
    },
    tenants: {
      distinctOn: 'TenantSelectColumn',
      orderBy: 'TenantOrderBy',
      where: 'TenantBoolExp',
    },
    tenantsAggregate: {
      distinctOn: 'TenantSelectColumn',
      orderBy: 'TenantOrderBy',
      where: 'TenantBoolExp',
    },
  },
  UploadAggregateBoolExp: {
    count: 'uploadAggregateBoolExpCount',
  },
  uploadAggregateBoolExpCount: {
    arguments: 'UploadSelectColumn',
    filter: 'UploadBoolExp',
    predicate: 'IntComparisonExp',
  },
  UploadAggregateFields: {
    count: {
      columns: 'UploadSelectColumn',
    },
  },
  UploadAggregateOrderBy: {
    avg: 'UploadAvgOrderBy',
    count: 'OrderBy',
    max: 'UploadMaxOrderBy',
    min: 'UploadMinOrderBy',
    stddev: 'UploadStddevOrderBy',
    stddevPop: 'UploadStddevPopOrderBy',
    stddevSamp: 'UploadStddevSampOrderBy',
    sum: 'UploadSumOrderBy',
    varPop: 'UploadVarPopOrderBy',
    varSamp: 'UploadVarSampOrderBy',
    variance: 'UploadVarianceOrderBy',
  },
  UploadArrRelInsertInput: {
    data: 'UploadInsertInput',
    onConflict: 'UploadOnConflict',
  },
  UploadAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    size: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UploadBoolExp: {
    _and: 'UploadBoolExp',
    _not: 'UploadBoolExp',
    _or: 'UploadBoolExp',
    actorAddress: 'ActorAddressBoolExp',
    actorFinanceReceipts: 'ActorFinanceReceiptsBoolExp',
    actorFinanceReceiptsAggregate: 'ActorFinanceReceiptsAggregateBoolExp',
    actorImage: 'ActorImageBoolExp',
    contentAttachments: 'ContentAttachmentsBoolExp',
    contentAttachmentsAggregate: 'ContentAttachmentsAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    document: 'DocumentBoolExp',
    documentEdits: 'DocumentEditBoolExp',
    documentEditsAggregate: 'DocumentEditAggregateBoolExp',
    events: 'EventBoolExp',
    eventsAggregate: 'EventAggregateBoolExp',
    expenses: 'ExpenseBoolExp',
    expensesAggregate: 'ExpenseAggregateBoolExp',
    fileLastModifiedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    mime: 'StringComparisonExp',
    name: 'StringComparisonExp',
    projects: 'ProjectBoolExp',
    projectsAggregate: 'ProjectAggregateBoolExp',
    size: 'IntComparisonExp',
    tags: 'TagBoolExp',
    tagsAggregate: 'TagAggregateBoolExp',
    teams: 'TeamBoolExp',
    teamsAggregate: 'TeamAggregateBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    tenants: 'TenantBoolExp',
    tenantsAggregate: 'TenantAggregateBoolExp',
    url: 'StringComparisonExp',
  },
  UploadConstraint: 'enum' as const,
  UploadIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  UploadInsertInput: {
    actorAddress: 'ActorAddressObjRelInsertInput',
    actorFinanceReceipts: 'ActorFinanceReceiptsArrRelInsertInput',
    actorImage: 'ActorImageObjRelInsertInput',
    contentAttachments: 'ContentAttachmentsArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    document: 'DocumentObjRelInsertInput',
    documentEdits: 'DocumentEditArrRelInsertInput',
    events: 'EventArrRelInsertInput',
    expenses: 'ExpenseArrRelInsertInput',
    fileLastModifiedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    projects: 'ProjectArrRelInsertInput',
    tags: 'TagArrRelInsertInput',
    teams: 'TeamArrRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    tenants: 'TenantArrRelInsertInput',
  },
  UploadMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    fileLastModifiedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    mime: 'OrderBy',
    name: 'OrderBy',
    size: 'OrderBy',
    tenantId: 'OrderBy',
    url: 'OrderBy',
  },
  UploadMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    fileLastModifiedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    mime: 'OrderBy',
    name: 'OrderBy',
    size: 'OrderBy',
    tenantId: 'OrderBy',
    url: 'OrderBy',
  },
  UploadObjRelInsertInput: {
    data: 'UploadInsertInput',
    onConflict: 'UploadOnConflict',
  },
  UploadOnConflict: {
    constraint: 'UploadConstraint',
    updateColumns: 'UploadUpdateColumn',
    where: 'UploadBoolExp',
  },
  UploadOrderBy: {
    actorAddress: 'ActorAddressOrderBy',
    actorFinanceReceiptsAggregate: 'ActorFinanceReceiptsAggregateOrderBy',
    actorImage: 'ActorImageOrderBy',
    contentAttachmentsAggregate: 'ContentAttachmentsAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    document: 'DocumentOrderBy',
    documentEditsAggregate: 'DocumentEditAggregateOrderBy',
    eventsAggregate: 'EventAggregateOrderBy',
    expensesAggregate: 'ExpenseAggregateOrderBy',
    fileLastModifiedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    mime: 'OrderBy',
    name: 'OrderBy',
    projectsAggregate: 'ProjectAggregateOrderBy',
    size: 'OrderBy',
    tagsAggregate: 'TagAggregateOrderBy',
    teamsAggregate: 'TeamAggregateOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    tenantsAggregate: 'TenantAggregateOrderBy',
    url: 'OrderBy',
  },
  UploadPkColumnsInput: {
    id: 'bigint',
  },
  UploadSelectColumn: 'enum' as const,
  UploadSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    fileLastModifiedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  UploadStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    size: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UploadStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    size: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UploadStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    size: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UploadStreamCursorInput: {
    initialValue: 'UploadStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  UploadStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    fileLastModifiedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  UploadSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    size: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UploadUpdateColumn: 'enum' as const,
  UploadUpdates: {
    _inc: 'UploadIncInput',
    _set: 'UploadSetInput',
    where: 'UploadBoolExp',
  },
  UploadVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    size: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UploadVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    size: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UploadVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    size: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UserInfo: {
    actions: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    actionsAggregate: {
      distinctOn: 'ActionSelectColumn',
      orderBy: 'ActionOrderBy',
      where: 'ActionBoolExp',
    },
    changeRoles: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    changeRolesAggregate: {
      distinctOn: 'ChangeRoleSelectColumn',
      orderBy: 'ChangeRoleOrderBy',
      where: 'ChangeRoleBoolExp',
    },
    classGroupTeachers: {
      distinctOn: 'ClassGroupTeacherSelectColumn',
      orderBy: 'ClassGroupTeacherOrderBy',
      where: 'ClassGroupTeacherBoolExp',
    },
    classGroupTeachersAggregate: {
      distinctOn: 'ClassGroupTeacherSelectColumn',
      orderBy: 'ClassGroupTeacherOrderBy',
      where: 'ClassGroupTeacherBoolExp',
    },
    eventJoins: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventJoinsAggregate: {
      distinctOn: 'EventJoinSelectColumn',
      orderBy: 'EventJoinOrderBy',
      where: 'EventJoinBoolExp',
    },
    eventRoles: {
      distinctOn: 'EventRoleSelectColumn',
      orderBy: 'EventRoleOrderBy',
      where: 'EventRoleBoolExp',
    },
    eventRolesAggregate: {
      distinctOn: 'EventRoleSelectColumn',
      orderBy: 'EventRoleOrderBy',
      where: 'EventRoleBoolExp',
    },
    events: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    eventsAggregate: {
      distinctOn: 'EventSelectColumn',
      orderBy: 'EventOrderBy',
      where: 'EventBoolExp',
    },
    sessions: {
      distinctOn: 'SessionSelectColumn',
      orderBy: 'SessionOrderBy',
      where: 'SessionBoolExp',
    },
    sessionsAggregate: {
      distinctOn: 'SessionSelectColumn',
      orderBy: 'SessionOrderBy',
      where: 'SessionBoolExp',
    },
    shortcuts: {
      distinctOn: 'ShortcutSelectColumn',
      orderBy: 'ShortcutOrderBy',
      where: 'ShortcutBoolExp',
    },
    shortcutsAggregate: {
      distinctOn: 'ShortcutSelectColumn',
      orderBy: 'ShortcutOrderBy',
      where: 'ShortcutBoolExp',
    },
    teamJoins: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamJoinsAggregate: {
      distinctOn: 'TeamJoinSelectColumn',
      orderBy: 'TeamJoinOrderBy',
      where: 'TeamJoinBoolExp',
    },
    teamMembers: {
      distinctOn: 'TeamMemberSelectColumn',
      orderBy: 'TeamMemberOrderBy',
      where: 'TeamMemberBoolExp',
    },
    teamMembersAggregate: {
      distinctOn: 'TeamMemberSelectColumn',
      orderBy: 'TeamMemberOrderBy',
      where: 'TeamMemberBoolExp',
    },
  },
  UserInfoAggregateBoolExp: {
    bool_and: 'userInfoAggregateBoolExpBool_and',
    bool_or: 'userInfoAggregateBoolExpBool_or',
    count: 'userInfoAggregateBoolExpCount',
  },
  userInfoAggregateBoolExpBool_and: {
    arguments: 'UserInfoSelectColumnUserInfoAggregateBoolExpBool_andArgumentsColumns',
    filter: 'UserInfoBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  userInfoAggregateBoolExpBool_or: {
    arguments: 'UserInfoSelectColumnUserInfoAggregateBoolExpBool_orArgumentsColumns',
    filter: 'UserInfoBoolExp',
    predicate: 'BooleanComparisonExp',
  },
  userInfoAggregateBoolExpCount: {
    arguments: 'UserInfoSelectColumn',
    filter: 'UserInfoBoolExp',
    predicate: 'IntComparisonExp',
  },
  UserInfoAggregateFields: {
    count: {
      columns: 'UserInfoSelectColumn',
    },
  },
  UserInfoAggregateOrderBy: {
    avg: 'UserInfoAvgOrderBy',
    count: 'OrderBy',
    max: 'UserInfoMaxOrderBy',
    min: 'UserInfoMinOrderBy',
    stddev: 'UserInfoStddevOrderBy',
    stddevPop: 'UserInfoStddevPopOrderBy',
    stddevSamp: 'UserInfoStddevSampOrderBy',
    sum: 'UserInfoSumOrderBy',
    varPop: 'UserInfoVarPopOrderBy',
    varSamp: 'UserInfoVarSampOrderBy',
    variance: 'UserInfoVarianceOrderBy',
  },
  UserInfoArrRelInsertInput: {
    data: 'UserInfoInsertInput',
    onConflict: 'UserInfoOnConflict',
  },
  UserInfoAvgOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    notificationSettingsAdminEventValidationApproved: 'OrderBy',
    notificationSettingsAdminEventValidationRejected: 'OrderBy',
    notificationSettingsAdminEventValidationStarted: 'OrderBy',
    notificationSettingsAdminEventValidationStep: 'OrderBy',
    notificationSettingsAdminReportCreated: 'OrderBy',
    notificationSettingsAdminRoleUpdated: 'OrderBy',
    notificationSettingsAdminTeamLegalFileUpdated: 'OrderBy',
    notificationSettingsAdminTeamSocialUpdated: 'OrderBy',
    notificationSettingsAdminThreadAssigned: 'OrderBy',
    notificationSettingsAdminThreadAssignedStale: 'OrderBy',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'OrderBy',
    notificationSettingsAdminThreadStale: 'OrderBy',
    notificationSettingsAdminThreadStaleThreshold: 'OrderBy',
    notificationSettingsBadgeUnlocked: 'OrderBy',
    notificationSettingsBlogSubscribedUpdated: 'OrderBy',
    notificationSettingsContentRemoved: 'OrderBy',
    notificationSettingsEventCreated: 'OrderBy',
    notificationSettingsEventManagedApproved: 'OrderBy',
    notificationSettingsEventManagedRegistrationCreated: 'OrderBy',
    notificationSettingsEventManagedRejected: 'OrderBy',
    notificationSettingsEventSubscribedUpdated: 'OrderBy',
    notificationSettingsMentionned: 'OrderBy',
    notificationSettingsRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedEventUpdated: 'OrderBy',
    notificationSettingsTeamManagedFormUpdated: 'OrderBy',
    notificationSettingsTeamManagedMemberRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'OrderBy',
    notificationSettingsTeamSubscribedEventCreated: 'OrderBy',
    notificationSettingsThreadSubscribedAnswered: 'OrderBy',
    notificationSettingsThreadSubscribedUpdated: 'OrderBy',
    statsActionStreak: 'OrderBy',
    statsCommentCount: 'OrderBy',
    statsPoints: 'OrderBy',
    statsPostCount: 'OrderBy',
    statsPostStreak: 'OrderBy',
    statsReplyCount: 'OrderBy',
    statsReplyStreak: 'OrderBy',
    statsUploadCount: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UserInfoBoolExp: {
    _and: 'UserInfoBoolExp',
    _not: 'UserInfoBoolExp',
    _or: 'UserInfoBoolExp',
    actions: 'ActionBoolExp',
    actionsAggregate: 'ActionAggregateBoolExp',
    changeRoles: 'ChangeRoleBoolExp',
    changeRolesAggregate: 'ChangeRoleAggregateBoolExp',
    classGroupTeachers: 'ClassGroupTeacherBoolExp',
    classGroupTeachersAggregate: 'ClassGroupTeacherAggregateBoolExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    customizationColor: 'StringComparisonExp',
    customizationSignature: 'StringComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    eventJoins: 'EventJoinBoolExp',
    eventJoinsAggregate: 'EventJoinAggregateBoolExp',
    eventRoles: 'EventRoleBoolExp',
    eventRolesAggregate: 'EventRoleAggregateBoolExp',
    events: 'EventBoolExp',
    eventsAggregate: 'EventAggregateBoolExp',
    finishedIntroduction: 'BooleanComparisonExp',
    finishedOnboarding: 'BooleanComparisonExp',
    firstName: 'StringComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    individualById: 'IndividualBoolExp',
    lastName: 'StringComparisonExp',
    middleNames: '_textComparisonExp',
    notificationSettingsAdminEventValidationApproved: 'SmallintComparisonExp',
    notificationSettingsAdminEventValidationRejected: 'SmallintComparisonExp',
    notificationSettingsAdminEventValidationStarted: 'SmallintComparisonExp',
    notificationSettingsAdminEventValidationStep: 'SmallintComparisonExp',
    notificationSettingsAdminReportCreated: 'SmallintComparisonExp',
    notificationSettingsAdminRoleUpdated: 'SmallintComparisonExp',
    notificationSettingsAdminTeamLegalFileUpdated: 'SmallintComparisonExp',
    notificationSettingsAdminTeamSocialUpdated: 'SmallintComparisonExp',
    notificationSettingsAdminThreadAssigned: 'SmallintComparisonExp',
    notificationSettingsAdminThreadAssignedStale: 'SmallintComparisonExp',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'IntComparisonExp',
    notificationSettingsAdminThreadStale: 'SmallintComparisonExp',
    notificationSettingsAdminThreadStaleThreshold: 'IntComparisonExp',
    notificationSettingsBadgeUnlocked: 'SmallintComparisonExp',
    notificationSettingsBlogSubscribedUpdated: 'SmallintComparisonExp',
    notificationSettingsContentRemoved: 'SmallintComparisonExp',
    notificationSettingsEventCreated: 'SmallintComparisonExp',
    notificationSettingsEventManagedApproved: 'SmallintComparisonExp',
    notificationSettingsEventManagedRegistrationCreated: 'SmallintComparisonExp',
    notificationSettingsEventManagedRejected: 'SmallintComparisonExp',
    notificationSettingsEventSubscribedUpdated: 'SmallintComparisonExp',
    notificationSettingsMentionned: 'SmallintComparisonExp',
    notificationSettingsRoleUpdated: 'SmallintComparisonExp',
    notificationSettingsTeamManagedEventUpdated: 'SmallintComparisonExp',
    notificationSettingsTeamManagedFormUpdated: 'SmallintComparisonExp',
    notificationSettingsTeamManagedMemberRoleUpdated: 'SmallintComparisonExp',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'SmallintComparisonExp',
    notificationSettingsTeamSubscribedEventCreated: 'SmallintComparisonExp',
    notificationSettingsThreadSubscribedAnswered: 'SmallintComparisonExp',
    notificationSettingsThreadSubscribedUpdated: 'SmallintComparisonExp',
    sessions: 'SessionBoolExp',
    sessionsAggregate: 'SessionAggregateBoolExp',
    settingsDarkModeActivated: 'BooleanComparisonExp',
    settingsGdprEndOfLifeAnonymize: 'BooleanComparisonExp',
    settingsGdprEndOfLifeExport: 'BooleanComparisonExp',
    shortcuts: 'ShortcutBoolExp',
    shortcutsAggregate: 'ShortcutAggregateBoolExp',
    statsActionStreak: 'SmallintComparisonExp',
    statsCommentCount: 'SmallintComparisonExp',
    statsLastActionAt: 'TimestamptzComparisonExp',
    statsLastComment: 'TimestamptzComparisonExp',
    statsLastPostAt: 'TimestamptzComparisonExp',
    statsLastReplyAt: 'TimestamptzComparisonExp',
    statsPoints: 'IntComparisonExp',
    statsPostCount: 'SmallintComparisonExp',
    statsPostStreak: 'SmallintComparisonExp',
    statsReplyCount: 'SmallintComparisonExp',
    statsReplyStreak: 'SmallintComparisonExp',
    statsUploadCount: 'SmallintComparisonExp',
    teamJoins: 'TeamJoinBoolExp',
    teamJoinsAggregate: 'TeamJoinAggregateBoolExp',
    teamMembers: 'TeamMemberBoolExp',
    teamMembersAggregate: 'TeamMemberAggregateBoolExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
  },
  UserInfoConstraint: 'enum' as const,
  UserInfoIncInput: {
    createdById: 'bigint',
    id: 'bigint',
    notificationSettingsAdminEventValidationApproved: 'smallint',
    notificationSettingsAdminEventValidationRejected: 'smallint',
    notificationSettingsAdminEventValidationStarted: 'smallint',
    notificationSettingsAdminEventValidationStep: 'smallint',
    notificationSettingsAdminReportCreated: 'smallint',
    notificationSettingsAdminRoleUpdated: 'smallint',
    notificationSettingsAdminTeamLegalFileUpdated: 'smallint',
    notificationSettingsAdminTeamSocialUpdated: 'smallint',
    notificationSettingsAdminThreadAssigned: 'smallint',
    notificationSettingsAdminThreadAssignedStale: 'smallint',
    notificationSettingsAdminThreadStale: 'smallint',
    notificationSettingsBadgeUnlocked: 'smallint',
    notificationSettingsBlogSubscribedUpdated: 'smallint',
    notificationSettingsContentRemoved: 'smallint',
    notificationSettingsEventCreated: 'smallint',
    notificationSettingsEventManagedApproved: 'smallint',
    notificationSettingsEventManagedRegistrationCreated: 'smallint',
    notificationSettingsEventManagedRejected: 'smallint',
    notificationSettingsEventSubscribedUpdated: 'smallint',
    notificationSettingsMentionned: 'smallint',
    notificationSettingsRoleUpdated: 'smallint',
    notificationSettingsTeamManagedEventUpdated: 'smallint',
    notificationSettingsTeamManagedFormUpdated: 'smallint',
    notificationSettingsTeamManagedMemberRoleUpdated: 'smallint',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'smallint',
    notificationSettingsTeamSubscribedEventCreated: 'smallint',
    notificationSettingsThreadSubscribedAnswered: 'smallint',
    notificationSettingsThreadSubscribedUpdated: 'smallint',
    statsActionStreak: 'smallint',
    statsCommentCount: 'smallint',
    statsPostCount: 'smallint',
    statsPostStreak: 'smallint',
    statsReplyCount: 'smallint',
    statsReplyStreak: 'smallint',
    statsUploadCount: 'smallint',
    tenantId: 'bigint',
  },
  UserInfoInsertInput: {
    actions: 'ActionArrRelInsertInput',
    changeRoles: 'ChangeRoleArrRelInsertInput',
    classGroupTeachers: 'ClassGroupTeacherArrRelInsertInput',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventJoins: 'EventJoinArrRelInsertInput',
    eventRoles: 'EventRoleArrRelInsertInput',
    events: 'EventArrRelInsertInput',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    individualById: 'IndividualObjRelInsertInput',
    middleNames: '_text',
    notificationSettingsAdminEventValidationApproved: 'smallint',
    notificationSettingsAdminEventValidationRejected: 'smallint',
    notificationSettingsAdminEventValidationStarted: 'smallint',
    notificationSettingsAdminEventValidationStep: 'smallint',
    notificationSettingsAdminReportCreated: 'smallint',
    notificationSettingsAdminRoleUpdated: 'smallint',
    notificationSettingsAdminTeamLegalFileUpdated: 'smallint',
    notificationSettingsAdminTeamSocialUpdated: 'smallint',
    notificationSettingsAdminThreadAssigned: 'smallint',
    notificationSettingsAdminThreadAssignedStale: 'smallint',
    notificationSettingsAdminThreadStale: 'smallint',
    notificationSettingsBadgeUnlocked: 'smallint',
    notificationSettingsBlogSubscribedUpdated: 'smallint',
    notificationSettingsContentRemoved: 'smallint',
    notificationSettingsEventCreated: 'smallint',
    notificationSettingsEventManagedApproved: 'smallint',
    notificationSettingsEventManagedRegistrationCreated: 'smallint',
    notificationSettingsEventManagedRejected: 'smallint',
    notificationSettingsEventSubscribedUpdated: 'smallint',
    notificationSettingsMentionned: 'smallint',
    notificationSettingsRoleUpdated: 'smallint',
    notificationSettingsTeamManagedEventUpdated: 'smallint',
    notificationSettingsTeamManagedFormUpdated: 'smallint',
    notificationSettingsTeamManagedMemberRoleUpdated: 'smallint',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'smallint',
    notificationSettingsTeamSubscribedEventCreated: 'smallint',
    notificationSettingsThreadSubscribedAnswered: 'smallint',
    notificationSettingsThreadSubscribedUpdated: 'smallint',
    sessions: 'SessionArrRelInsertInput',
    shortcuts: 'ShortcutArrRelInsertInput',
    statsActionStreak: 'smallint',
    statsCommentCount: 'smallint',
    statsLastActionAt: 'timestamptz',
    statsLastComment: 'timestamptz',
    statsLastPostAt: 'timestamptz',
    statsLastReplyAt: 'timestamptz',
    statsPostCount: 'smallint',
    statsPostStreak: 'smallint',
    statsReplyCount: 'smallint',
    statsReplyStreak: 'smallint',
    statsUploadCount: 'smallint',
    teamJoins: 'TeamJoinArrRelInsertInput',
    teamMembers: 'TeamMemberArrRelInsertInput',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  UserInfoMaxOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    customizationColor: 'OrderBy',
    customizationSignature: 'OrderBy',
    deletedAt: 'OrderBy',
    firstName: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    lastName: 'OrderBy',
    notificationSettingsAdminEventValidationApproved: 'OrderBy',
    notificationSettingsAdminEventValidationRejected: 'OrderBy',
    notificationSettingsAdminEventValidationStarted: 'OrderBy',
    notificationSettingsAdminEventValidationStep: 'OrderBy',
    notificationSettingsAdminReportCreated: 'OrderBy',
    notificationSettingsAdminRoleUpdated: 'OrderBy',
    notificationSettingsAdminTeamLegalFileUpdated: 'OrderBy',
    notificationSettingsAdminTeamSocialUpdated: 'OrderBy',
    notificationSettingsAdminThreadAssigned: 'OrderBy',
    notificationSettingsAdminThreadAssignedStale: 'OrderBy',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'OrderBy',
    notificationSettingsAdminThreadStale: 'OrderBy',
    notificationSettingsAdminThreadStaleThreshold: 'OrderBy',
    notificationSettingsBadgeUnlocked: 'OrderBy',
    notificationSettingsBlogSubscribedUpdated: 'OrderBy',
    notificationSettingsContentRemoved: 'OrderBy',
    notificationSettingsEventCreated: 'OrderBy',
    notificationSettingsEventManagedApproved: 'OrderBy',
    notificationSettingsEventManagedRegistrationCreated: 'OrderBy',
    notificationSettingsEventManagedRejected: 'OrderBy',
    notificationSettingsEventSubscribedUpdated: 'OrderBy',
    notificationSettingsMentionned: 'OrderBy',
    notificationSettingsRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedEventUpdated: 'OrderBy',
    notificationSettingsTeamManagedFormUpdated: 'OrderBy',
    notificationSettingsTeamManagedMemberRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'OrderBy',
    notificationSettingsTeamSubscribedEventCreated: 'OrderBy',
    notificationSettingsThreadSubscribedAnswered: 'OrderBy',
    notificationSettingsThreadSubscribedUpdated: 'OrderBy',
    statsActionStreak: 'OrderBy',
    statsCommentCount: 'OrderBy',
    statsLastActionAt: 'OrderBy',
    statsLastComment: 'OrderBy',
    statsLastPostAt: 'OrderBy',
    statsLastReplyAt: 'OrderBy',
    statsPoints: 'OrderBy',
    statsPostCount: 'OrderBy',
    statsPostStreak: 'OrderBy',
    statsReplyCount: 'OrderBy',
    statsReplyStreak: 'OrderBy',
    statsUploadCount: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UserInfoMinOrderBy: {
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    customizationColor: 'OrderBy',
    customizationSignature: 'OrderBy',
    deletedAt: 'OrderBy',
    firstName: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    lastName: 'OrderBy',
    notificationSettingsAdminEventValidationApproved: 'OrderBy',
    notificationSettingsAdminEventValidationRejected: 'OrderBy',
    notificationSettingsAdminEventValidationStarted: 'OrderBy',
    notificationSettingsAdminEventValidationStep: 'OrderBy',
    notificationSettingsAdminReportCreated: 'OrderBy',
    notificationSettingsAdminRoleUpdated: 'OrderBy',
    notificationSettingsAdminTeamLegalFileUpdated: 'OrderBy',
    notificationSettingsAdminTeamSocialUpdated: 'OrderBy',
    notificationSettingsAdminThreadAssigned: 'OrderBy',
    notificationSettingsAdminThreadAssignedStale: 'OrderBy',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'OrderBy',
    notificationSettingsAdminThreadStale: 'OrderBy',
    notificationSettingsAdminThreadStaleThreshold: 'OrderBy',
    notificationSettingsBadgeUnlocked: 'OrderBy',
    notificationSettingsBlogSubscribedUpdated: 'OrderBy',
    notificationSettingsContentRemoved: 'OrderBy',
    notificationSettingsEventCreated: 'OrderBy',
    notificationSettingsEventManagedApproved: 'OrderBy',
    notificationSettingsEventManagedRegistrationCreated: 'OrderBy',
    notificationSettingsEventManagedRejected: 'OrderBy',
    notificationSettingsEventSubscribedUpdated: 'OrderBy',
    notificationSettingsMentionned: 'OrderBy',
    notificationSettingsRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedEventUpdated: 'OrderBy',
    notificationSettingsTeamManagedFormUpdated: 'OrderBy',
    notificationSettingsTeamManagedMemberRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'OrderBy',
    notificationSettingsTeamSubscribedEventCreated: 'OrderBy',
    notificationSettingsThreadSubscribedAnswered: 'OrderBy',
    notificationSettingsThreadSubscribedUpdated: 'OrderBy',
    statsActionStreak: 'OrderBy',
    statsCommentCount: 'OrderBy',
    statsLastActionAt: 'OrderBy',
    statsLastComment: 'OrderBy',
    statsLastPostAt: 'OrderBy',
    statsLastReplyAt: 'OrderBy',
    statsPoints: 'OrderBy',
    statsPostCount: 'OrderBy',
    statsPostStreak: 'OrderBy',
    statsReplyCount: 'OrderBy',
    statsReplyStreak: 'OrderBy',
    statsUploadCount: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UserInfoObjRelInsertInput: {
    data: 'UserInfoInsertInput',
    onConflict: 'UserInfoOnConflict',
  },
  UserInfoOnConflict: {
    constraint: 'UserInfoConstraint',
    updateColumns: 'UserInfoUpdateColumn',
    where: 'UserInfoBoolExp',
  },
  UserInfoOrderBy: {
    actionsAggregate: 'ActionAggregateOrderBy',
    changeRolesAggregate: 'ChangeRoleAggregateOrderBy',
    classGroupTeachersAggregate: 'ClassGroupTeacherAggregateOrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    customizationColor: 'OrderBy',
    customizationSignature: 'OrderBy',
    deletedAt: 'OrderBy',
    eventJoinsAggregate: 'EventJoinAggregateOrderBy',
    eventRolesAggregate: 'EventRoleAggregateOrderBy',
    eventsAggregate: 'EventAggregateOrderBy',
    finishedIntroduction: 'OrderBy',
    finishedOnboarding: 'OrderBy',
    firstName: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    individualById: 'IndividualOrderBy',
    lastName: 'OrderBy',
    middleNames: 'OrderBy',
    notificationSettingsAdminEventValidationApproved: 'OrderBy',
    notificationSettingsAdminEventValidationRejected: 'OrderBy',
    notificationSettingsAdminEventValidationStarted: 'OrderBy',
    notificationSettingsAdminEventValidationStep: 'OrderBy',
    notificationSettingsAdminReportCreated: 'OrderBy',
    notificationSettingsAdminRoleUpdated: 'OrderBy',
    notificationSettingsAdminTeamLegalFileUpdated: 'OrderBy',
    notificationSettingsAdminTeamSocialUpdated: 'OrderBy',
    notificationSettingsAdminThreadAssigned: 'OrderBy',
    notificationSettingsAdminThreadAssignedStale: 'OrderBy',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'OrderBy',
    notificationSettingsAdminThreadStale: 'OrderBy',
    notificationSettingsAdminThreadStaleThreshold: 'OrderBy',
    notificationSettingsBadgeUnlocked: 'OrderBy',
    notificationSettingsBlogSubscribedUpdated: 'OrderBy',
    notificationSettingsContentRemoved: 'OrderBy',
    notificationSettingsEventCreated: 'OrderBy',
    notificationSettingsEventManagedApproved: 'OrderBy',
    notificationSettingsEventManagedRegistrationCreated: 'OrderBy',
    notificationSettingsEventManagedRejected: 'OrderBy',
    notificationSettingsEventSubscribedUpdated: 'OrderBy',
    notificationSettingsMentionned: 'OrderBy',
    notificationSettingsRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedEventUpdated: 'OrderBy',
    notificationSettingsTeamManagedFormUpdated: 'OrderBy',
    notificationSettingsTeamManagedMemberRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'OrderBy',
    notificationSettingsTeamSubscribedEventCreated: 'OrderBy',
    notificationSettingsThreadSubscribedAnswered: 'OrderBy',
    notificationSettingsThreadSubscribedUpdated: 'OrderBy',
    sessionsAggregate: 'SessionAggregateOrderBy',
    settingsDarkModeActivated: 'OrderBy',
    settingsGdprEndOfLifeAnonymize: 'OrderBy',
    settingsGdprEndOfLifeExport: 'OrderBy',
    shortcutsAggregate: 'ShortcutAggregateOrderBy',
    statsActionStreak: 'OrderBy',
    statsCommentCount: 'OrderBy',
    statsLastActionAt: 'OrderBy',
    statsLastComment: 'OrderBy',
    statsLastPostAt: 'OrderBy',
    statsLastReplyAt: 'OrderBy',
    statsPoints: 'OrderBy',
    statsPostCount: 'OrderBy',
    statsPostStreak: 'OrderBy',
    statsReplyCount: 'OrderBy',
    statsReplyStreak: 'OrderBy',
    statsUploadCount: 'OrderBy',
    teamJoinsAggregate: 'TeamJoinAggregateOrderBy',
    teamMembersAggregate: 'TeamMemberAggregateOrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
  },
  UserInfoPkColumnsInput: {
    id: 'bigint',
  },
  UserInfoSelectColumn: 'enum' as const,
  UserInfoSelectColumnUserInfoAggregateBoolExpBool_andArgumentsColumns: 'enum' as const,
  UserInfoSelectColumnUserInfoAggregateBoolExpBool_orArgumentsColumns: 'enum' as const,
  UserInfoSetInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    middleNames: '_text',
    notificationSettingsAdminEventValidationApproved: 'smallint',
    notificationSettingsAdminEventValidationRejected: 'smallint',
    notificationSettingsAdminEventValidationStarted: 'smallint',
    notificationSettingsAdminEventValidationStep: 'smallint',
    notificationSettingsAdminReportCreated: 'smallint',
    notificationSettingsAdminRoleUpdated: 'smallint',
    notificationSettingsAdminTeamLegalFileUpdated: 'smallint',
    notificationSettingsAdminTeamSocialUpdated: 'smallint',
    notificationSettingsAdminThreadAssigned: 'smallint',
    notificationSettingsAdminThreadAssignedStale: 'smallint',
    notificationSettingsAdminThreadStale: 'smallint',
    notificationSettingsBadgeUnlocked: 'smallint',
    notificationSettingsBlogSubscribedUpdated: 'smallint',
    notificationSettingsContentRemoved: 'smallint',
    notificationSettingsEventCreated: 'smallint',
    notificationSettingsEventManagedApproved: 'smallint',
    notificationSettingsEventManagedRegistrationCreated: 'smallint',
    notificationSettingsEventManagedRejected: 'smallint',
    notificationSettingsEventSubscribedUpdated: 'smallint',
    notificationSettingsMentionned: 'smallint',
    notificationSettingsRoleUpdated: 'smallint',
    notificationSettingsTeamManagedEventUpdated: 'smallint',
    notificationSettingsTeamManagedFormUpdated: 'smallint',
    notificationSettingsTeamManagedMemberRoleUpdated: 'smallint',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'smallint',
    notificationSettingsTeamSubscribedEventCreated: 'smallint',
    notificationSettingsThreadSubscribedAnswered: 'smallint',
    notificationSettingsThreadSubscribedUpdated: 'smallint',
    statsActionStreak: 'smallint',
    statsCommentCount: 'smallint',
    statsLastActionAt: 'timestamptz',
    statsLastComment: 'timestamptz',
    statsLastPostAt: 'timestamptz',
    statsLastReplyAt: 'timestamptz',
    statsPostCount: 'smallint',
    statsPostStreak: 'smallint',
    statsReplyCount: 'smallint',
    statsReplyStreak: 'smallint',
    statsUploadCount: 'smallint',
    tenantId: 'bigint',
  },
  UserInfoStddevOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    notificationSettingsAdminEventValidationApproved: 'OrderBy',
    notificationSettingsAdminEventValidationRejected: 'OrderBy',
    notificationSettingsAdminEventValidationStarted: 'OrderBy',
    notificationSettingsAdminEventValidationStep: 'OrderBy',
    notificationSettingsAdminReportCreated: 'OrderBy',
    notificationSettingsAdminRoleUpdated: 'OrderBy',
    notificationSettingsAdminTeamLegalFileUpdated: 'OrderBy',
    notificationSettingsAdminTeamSocialUpdated: 'OrderBy',
    notificationSettingsAdminThreadAssigned: 'OrderBy',
    notificationSettingsAdminThreadAssignedStale: 'OrderBy',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'OrderBy',
    notificationSettingsAdminThreadStale: 'OrderBy',
    notificationSettingsAdminThreadStaleThreshold: 'OrderBy',
    notificationSettingsBadgeUnlocked: 'OrderBy',
    notificationSettingsBlogSubscribedUpdated: 'OrderBy',
    notificationSettingsContentRemoved: 'OrderBy',
    notificationSettingsEventCreated: 'OrderBy',
    notificationSettingsEventManagedApproved: 'OrderBy',
    notificationSettingsEventManagedRegistrationCreated: 'OrderBy',
    notificationSettingsEventManagedRejected: 'OrderBy',
    notificationSettingsEventSubscribedUpdated: 'OrderBy',
    notificationSettingsMentionned: 'OrderBy',
    notificationSettingsRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedEventUpdated: 'OrderBy',
    notificationSettingsTeamManagedFormUpdated: 'OrderBy',
    notificationSettingsTeamManagedMemberRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'OrderBy',
    notificationSettingsTeamSubscribedEventCreated: 'OrderBy',
    notificationSettingsThreadSubscribedAnswered: 'OrderBy',
    notificationSettingsThreadSubscribedUpdated: 'OrderBy',
    statsActionStreak: 'OrderBy',
    statsCommentCount: 'OrderBy',
    statsPoints: 'OrderBy',
    statsPostCount: 'OrderBy',
    statsPostStreak: 'OrderBy',
    statsReplyCount: 'OrderBy',
    statsReplyStreak: 'OrderBy',
    statsUploadCount: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UserInfoStddevPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    notificationSettingsAdminEventValidationApproved: 'OrderBy',
    notificationSettingsAdminEventValidationRejected: 'OrderBy',
    notificationSettingsAdminEventValidationStarted: 'OrderBy',
    notificationSettingsAdminEventValidationStep: 'OrderBy',
    notificationSettingsAdminReportCreated: 'OrderBy',
    notificationSettingsAdminRoleUpdated: 'OrderBy',
    notificationSettingsAdminTeamLegalFileUpdated: 'OrderBy',
    notificationSettingsAdminTeamSocialUpdated: 'OrderBy',
    notificationSettingsAdminThreadAssigned: 'OrderBy',
    notificationSettingsAdminThreadAssignedStale: 'OrderBy',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'OrderBy',
    notificationSettingsAdminThreadStale: 'OrderBy',
    notificationSettingsAdminThreadStaleThreshold: 'OrderBy',
    notificationSettingsBadgeUnlocked: 'OrderBy',
    notificationSettingsBlogSubscribedUpdated: 'OrderBy',
    notificationSettingsContentRemoved: 'OrderBy',
    notificationSettingsEventCreated: 'OrderBy',
    notificationSettingsEventManagedApproved: 'OrderBy',
    notificationSettingsEventManagedRegistrationCreated: 'OrderBy',
    notificationSettingsEventManagedRejected: 'OrderBy',
    notificationSettingsEventSubscribedUpdated: 'OrderBy',
    notificationSettingsMentionned: 'OrderBy',
    notificationSettingsRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedEventUpdated: 'OrderBy',
    notificationSettingsTeamManagedFormUpdated: 'OrderBy',
    notificationSettingsTeamManagedMemberRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'OrderBy',
    notificationSettingsTeamSubscribedEventCreated: 'OrderBy',
    notificationSettingsThreadSubscribedAnswered: 'OrderBy',
    notificationSettingsThreadSubscribedUpdated: 'OrderBy',
    statsActionStreak: 'OrderBy',
    statsCommentCount: 'OrderBy',
    statsPoints: 'OrderBy',
    statsPostCount: 'OrderBy',
    statsPostStreak: 'OrderBy',
    statsReplyCount: 'OrderBy',
    statsReplyStreak: 'OrderBy',
    statsUploadCount: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UserInfoStddevSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    notificationSettingsAdminEventValidationApproved: 'OrderBy',
    notificationSettingsAdminEventValidationRejected: 'OrderBy',
    notificationSettingsAdminEventValidationStarted: 'OrderBy',
    notificationSettingsAdminEventValidationStep: 'OrderBy',
    notificationSettingsAdminReportCreated: 'OrderBy',
    notificationSettingsAdminRoleUpdated: 'OrderBy',
    notificationSettingsAdminTeamLegalFileUpdated: 'OrderBy',
    notificationSettingsAdminTeamSocialUpdated: 'OrderBy',
    notificationSettingsAdminThreadAssigned: 'OrderBy',
    notificationSettingsAdminThreadAssignedStale: 'OrderBy',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'OrderBy',
    notificationSettingsAdminThreadStale: 'OrderBy',
    notificationSettingsAdminThreadStaleThreshold: 'OrderBy',
    notificationSettingsBadgeUnlocked: 'OrderBy',
    notificationSettingsBlogSubscribedUpdated: 'OrderBy',
    notificationSettingsContentRemoved: 'OrderBy',
    notificationSettingsEventCreated: 'OrderBy',
    notificationSettingsEventManagedApproved: 'OrderBy',
    notificationSettingsEventManagedRegistrationCreated: 'OrderBy',
    notificationSettingsEventManagedRejected: 'OrderBy',
    notificationSettingsEventSubscribedUpdated: 'OrderBy',
    notificationSettingsMentionned: 'OrderBy',
    notificationSettingsRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedEventUpdated: 'OrderBy',
    notificationSettingsTeamManagedFormUpdated: 'OrderBy',
    notificationSettingsTeamManagedMemberRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'OrderBy',
    notificationSettingsTeamSubscribedEventCreated: 'OrderBy',
    notificationSettingsThreadSubscribedAnswered: 'OrderBy',
    notificationSettingsThreadSubscribedUpdated: 'OrderBy',
    statsActionStreak: 'OrderBy',
    statsCommentCount: 'OrderBy',
    statsPoints: 'OrderBy',
    statsPostCount: 'OrderBy',
    statsPostStreak: 'OrderBy',
    statsReplyCount: 'OrderBy',
    statsReplyStreak: 'OrderBy',
    statsUploadCount: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UserInfoStreamCursorInput: {
    initialValue: 'UserInfoStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  UserInfoStreamCursorValueInput: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    middleNames: '_text',
    notificationSettingsAdminEventValidationApproved: 'smallint',
    notificationSettingsAdminEventValidationRejected: 'smallint',
    notificationSettingsAdminEventValidationStarted: 'smallint',
    notificationSettingsAdminEventValidationStep: 'smallint',
    notificationSettingsAdminReportCreated: 'smallint',
    notificationSettingsAdminRoleUpdated: 'smallint',
    notificationSettingsAdminTeamLegalFileUpdated: 'smallint',
    notificationSettingsAdminTeamSocialUpdated: 'smallint',
    notificationSettingsAdminThreadAssigned: 'smallint',
    notificationSettingsAdminThreadAssignedStale: 'smallint',
    notificationSettingsAdminThreadStale: 'smallint',
    notificationSettingsBadgeUnlocked: 'smallint',
    notificationSettingsBlogSubscribedUpdated: 'smallint',
    notificationSettingsContentRemoved: 'smallint',
    notificationSettingsEventCreated: 'smallint',
    notificationSettingsEventManagedApproved: 'smallint',
    notificationSettingsEventManagedRegistrationCreated: 'smallint',
    notificationSettingsEventManagedRejected: 'smallint',
    notificationSettingsEventSubscribedUpdated: 'smallint',
    notificationSettingsMentionned: 'smallint',
    notificationSettingsRoleUpdated: 'smallint',
    notificationSettingsTeamManagedEventUpdated: 'smallint',
    notificationSettingsTeamManagedFormUpdated: 'smallint',
    notificationSettingsTeamManagedMemberRoleUpdated: 'smallint',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'smallint',
    notificationSettingsTeamSubscribedEventCreated: 'smallint',
    notificationSettingsThreadSubscribedAnswered: 'smallint',
    notificationSettingsThreadSubscribedUpdated: 'smallint',
    statsActionStreak: 'smallint',
    statsCommentCount: 'smallint',
    statsLastActionAt: 'timestamptz',
    statsLastComment: 'timestamptz',
    statsLastPostAt: 'timestamptz',
    statsLastReplyAt: 'timestamptz',
    statsPostCount: 'smallint',
    statsPostStreak: 'smallint',
    statsReplyCount: 'smallint',
    statsReplyStreak: 'smallint',
    statsUploadCount: 'smallint',
    tenantId: 'bigint',
  },
  UserInfoSumOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    notificationSettingsAdminEventValidationApproved: 'OrderBy',
    notificationSettingsAdminEventValidationRejected: 'OrderBy',
    notificationSettingsAdminEventValidationStarted: 'OrderBy',
    notificationSettingsAdminEventValidationStep: 'OrderBy',
    notificationSettingsAdminReportCreated: 'OrderBy',
    notificationSettingsAdminRoleUpdated: 'OrderBy',
    notificationSettingsAdminTeamLegalFileUpdated: 'OrderBy',
    notificationSettingsAdminTeamSocialUpdated: 'OrderBy',
    notificationSettingsAdminThreadAssigned: 'OrderBy',
    notificationSettingsAdminThreadAssignedStale: 'OrderBy',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'OrderBy',
    notificationSettingsAdminThreadStale: 'OrderBy',
    notificationSettingsAdminThreadStaleThreshold: 'OrderBy',
    notificationSettingsBadgeUnlocked: 'OrderBy',
    notificationSettingsBlogSubscribedUpdated: 'OrderBy',
    notificationSettingsContentRemoved: 'OrderBy',
    notificationSettingsEventCreated: 'OrderBy',
    notificationSettingsEventManagedApproved: 'OrderBy',
    notificationSettingsEventManagedRegistrationCreated: 'OrderBy',
    notificationSettingsEventManagedRejected: 'OrderBy',
    notificationSettingsEventSubscribedUpdated: 'OrderBy',
    notificationSettingsMentionned: 'OrderBy',
    notificationSettingsRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedEventUpdated: 'OrderBy',
    notificationSettingsTeamManagedFormUpdated: 'OrderBy',
    notificationSettingsTeamManagedMemberRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'OrderBy',
    notificationSettingsTeamSubscribedEventCreated: 'OrderBy',
    notificationSettingsThreadSubscribedAnswered: 'OrderBy',
    notificationSettingsThreadSubscribedUpdated: 'OrderBy',
    statsActionStreak: 'OrderBy',
    statsCommentCount: 'OrderBy',
    statsPoints: 'OrderBy',
    statsPostCount: 'OrderBy',
    statsPostStreak: 'OrderBy',
    statsReplyCount: 'OrderBy',
    statsReplyStreak: 'OrderBy',
    statsUploadCount: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UserInfoUpdateColumn: 'enum' as const,
  UserInfoUpdates: {
    _inc: 'UserInfoIncInput',
    _set: 'UserInfoSetInput',
    where: 'UserInfoBoolExp',
  },
  UserInfoVarianceOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    notificationSettingsAdminEventValidationApproved: 'OrderBy',
    notificationSettingsAdminEventValidationRejected: 'OrderBy',
    notificationSettingsAdminEventValidationStarted: 'OrderBy',
    notificationSettingsAdminEventValidationStep: 'OrderBy',
    notificationSettingsAdminReportCreated: 'OrderBy',
    notificationSettingsAdminRoleUpdated: 'OrderBy',
    notificationSettingsAdminTeamLegalFileUpdated: 'OrderBy',
    notificationSettingsAdminTeamSocialUpdated: 'OrderBy',
    notificationSettingsAdminThreadAssigned: 'OrderBy',
    notificationSettingsAdminThreadAssignedStale: 'OrderBy',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'OrderBy',
    notificationSettingsAdminThreadStale: 'OrderBy',
    notificationSettingsAdminThreadStaleThreshold: 'OrderBy',
    notificationSettingsBadgeUnlocked: 'OrderBy',
    notificationSettingsBlogSubscribedUpdated: 'OrderBy',
    notificationSettingsContentRemoved: 'OrderBy',
    notificationSettingsEventCreated: 'OrderBy',
    notificationSettingsEventManagedApproved: 'OrderBy',
    notificationSettingsEventManagedRegistrationCreated: 'OrderBy',
    notificationSettingsEventManagedRejected: 'OrderBy',
    notificationSettingsEventSubscribedUpdated: 'OrderBy',
    notificationSettingsMentionned: 'OrderBy',
    notificationSettingsRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedEventUpdated: 'OrderBy',
    notificationSettingsTeamManagedFormUpdated: 'OrderBy',
    notificationSettingsTeamManagedMemberRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'OrderBy',
    notificationSettingsTeamSubscribedEventCreated: 'OrderBy',
    notificationSettingsThreadSubscribedAnswered: 'OrderBy',
    notificationSettingsThreadSubscribedUpdated: 'OrderBy',
    statsActionStreak: 'OrderBy',
    statsCommentCount: 'OrderBy',
    statsPoints: 'OrderBy',
    statsPostCount: 'OrderBy',
    statsPostStreak: 'OrderBy',
    statsReplyCount: 'OrderBy',
    statsReplyStreak: 'OrderBy',
    statsUploadCount: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UserInfoVarPopOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    notificationSettingsAdminEventValidationApproved: 'OrderBy',
    notificationSettingsAdminEventValidationRejected: 'OrderBy',
    notificationSettingsAdminEventValidationStarted: 'OrderBy',
    notificationSettingsAdminEventValidationStep: 'OrderBy',
    notificationSettingsAdminReportCreated: 'OrderBy',
    notificationSettingsAdminRoleUpdated: 'OrderBy',
    notificationSettingsAdminTeamLegalFileUpdated: 'OrderBy',
    notificationSettingsAdminTeamSocialUpdated: 'OrderBy',
    notificationSettingsAdminThreadAssigned: 'OrderBy',
    notificationSettingsAdminThreadAssignedStale: 'OrderBy',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'OrderBy',
    notificationSettingsAdminThreadStale: 'OrderBy',
    notificationSettingsAdminThreadStaleThreshold: 'OrderBy',
    notificationSettingsBadgeUnlocked: 'OrderBy',
    notificationSettingsBlogSubscribedUpdated: 'OrderBy',
    notificationSettingsContentRemoved: 'OrderBy',
    notificationSettingsEventCreated: 'OrderBy',
    notificationSettingsEventManagedApproved: 'OrderBy',
    notificationSettingsEventManagedRegistrationCreated: 'OrderBy',
    notificationSettingsEventManagedRejected: 'OrderBy',
    notificationSettingsEventSubscribedUpdated: 'OrderBy',
    notificationSettingsMentionned: 'OrderBy',
    notificationSettingsRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedEventUpdated: 'OrderBy',
    notificationSettingsTeamManagedFormUpdated: 'OrderBy',
    notificationSettingsTeamManagedMemberRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'OrderBy',
    notificationSettingsTeamSubscribedEventCreated: 'OrderBy',
    notificationSettingsThreadSubscribedAnswered: 'OrderBy',
    notificationSettingsThreadSubscribedUpdated: 'OrderBy',
    statsActionStreak: 'OrderBy',
    statsCommentCount: 'OrderBy',
    statsPoints: 'OrderBy',
    statsPostCount: 'OrderBy',
    statsPostStreak: 'OrderBy',
    statsReplyCount: 'OrderBy',
    statsReplyStreak: 'OrderBy',
    statsUploadCount: 'OrderBy',
    tenantId: 'OrderBy',
  },
  UserInfoVarSampOrderBy: {
    createdById: 'OrderBy',
    id: 'OrderBy',
    notificationSettingsAdminEventValidationApproved: 'OrderBy',
    notificationSettingsAdminEventValidationRejected: 'OrderBy',
    notificationSettingsAdminEventValidationStarted: 'OrderBy',
    notificationSettingsAdminEventValidationStep: 'OrderBy',
    notificationSettingsAdminReportCreated: 'OrderBy',
    notificationSettingsAdminRoleUpdated: 'OrderBy',
    notificationSettingsAdminTeamLegalFileUpdated: 'OrderBy',
    notificationSettingsAdminTeamSocialUpdated: 'OrderBy',
    notificationSettingsAdminThreadAssigned: 'OrderBy',
    notificationSettingsAdminThreadAssignedStale: 'OrderBy',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'OrderBy',
    notificationSettingsAdminThreadStale: 'OrderBy',
    notificationSettingsAdminThreadStaleThreshold: 'OrderBy',
    notificationSettingsBadgeUnlocked: 'OrderBy',
    notificationSettingsBlogSubscribedUpdated: 'OrderBy',
    notificationSettingsContentRemoved: 'OrderBy',
    notificationSettingsEventCreated: 'OrderBy',
    notificationSettingsEventManagedApproved: 'OrderBy',
    notificationSettingsEventManagedRegistrationCreated: 'OrderBy',
    notificationSettingsEventManagedRejected: 'OrderBy',
    notificationSettingsEventSubscribedUpdated: 'OrderBy',
    notificationSettingsMentionned: 'OrderBy',
    notificationSettingsRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedEventUpdated: 'OrderBy',
    notificationSettingsTeamManagedFormUpdated: 'OrderBy',
    notificationSettingsTeamManagedMemberRoleUpdated: 'OrderBy',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'OrderBy',
    notificationSettingsTeamSubscribedEventCreated: 'OrderBy',
    notificationSettingsThreadSubscribedAnswered: 'OrderBy',
    notificationSettingsThreadSubscribedUpdated: 'OrderBy',
    statsActionStreak: 'OrderBy',
    statsCommentCount: 'OrderBy',
    statsPoints: 'OrderBy',
    statsPostCount: 'OrderBy',
    statsPostStreak: 'OrderBy',
    statsReplyCount: 'OrderBy',
    statsReplyStreak: 'OrderBy',
    statsUploadCount: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ValidationAggregateBoolExp: {
    count: 'validationAggregateBoolExpCount',
  },
  validationAggregateBoolExpCount: {
    arguments: 'ValidationSelectColumn',
    filter: 'ValidationBoolExp',
    predicate: 'IntComparisonExp',
  },
  ValidationAggregateFields: {
    count: {
      columns: 'ValidationSelectColumn',
    },
  },
  ValidationAggregateOrderBy: {
    avg: 'ValidationAvgOrderBy',
    count: 'OrderBy',
    max: 'ValidationMaxOrderBy',
    min: 'ValidationMinOrderBy',
    stddev: 'ValidationStddevOrderBy',
    stddevPop: 'ValidationStddevPopOrderBy',
    stddevSamp: 'ValidationStddevSampOrderBy',
    sum: 'ValidationSumOrderBy',
    varPop: 'ValidationVarPopOrderBy',
    varSamp: 'ValidationVarSampOrderBy',
    variance: 'ValidationVarianceOrderBy',
  },
  ValidationArrRelInsertInput: {
    data: 'ValidationInsertInput',
    onConflict: 'ValidationOnConflict',
  },
  ValidationAvgOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ValidationBoolExp: {
    _and: 'ValidationBoolExp',
    _not: 'ValidationBoolExp',
    _or: 'ValidationBoolExp',
    content: 'ContentBoolExp',
    contentId: 'BigintComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    lastActiveDate: 'TimestamptzComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    type: 'StringComparisonExp',
  },
  ValidationConstraint: 'enum' as const,
  ValidationIncInput: {
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ValidationInsertInput: {
    content: 'ContentObjRelInsertInput',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    lastActiveDate: 'timestamptz',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
  },
  ValidationMaxOrderBy: {
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    lastActiveDate: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  ValidationMinOrderBy: {
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    lastActiveDate: 'OrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  ValidationOnConflict: {
    constraint: 'ValidationConstraint',
    updateColumns: 'ValidationUpdateColumn',
    where: 'ValidationBoolExp',
  },
  ValidationOrderBy: {
    content: 'ContentOrderBy',
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    lastActiveDate: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    type: 'OrderBy',
  },
  ValidationPkColumnsInput: {
    id: 'bigint',
  },
  ValidationSelectColumn: 'enum' as const,
  ValidationSetInput: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
  },
  ValidationStddevOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ValidationStddevPopOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ValidationStddevSampOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ValidationStreamCursorInput: {
    initialValue: 'ValidationStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  ValidationStreamCursorValueInput: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
  },
  ValidationSumOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ValidationUpdateColumn: 'enum' as const,
  ValidationUpdates: {
    _inc: 'ValidationIncInput',
    _set: 'ValidationSetInput',
    where: 'ValidationBoolExp',
  },
  ValidationVarianceOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ValidationVarPopOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  ValidationVarSampOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
  },
  VoteAggregateBoolExp: {
    count: 'voteAggregateBoolExpCount',
  },
  voteAggregateBoolExpCount: {
    arguments: 'VoteSelectColumn',
    filter: 'VoteBoolExp',
    predicate: 'IntComparisonExp',
  },
  VoteAggregateFields: {
    count: {
      columns: 'VoteSelectColumn',
    },
  },
  VoteAggregateOrderBy: {
    avg: 'VoteAvgOrderBy',
    count: 'OrderBy',
    max: 'VoteMaxOrderBy',
    min: 'VoteMinOrderBy',
    stddev: 'VoteStddevOrderBy',
    stddevPop: 'VoteStddevPopOrderBy',
    stddevSamp: 'VoteStddevSampOrderBy',
    sum: 'VoteSumOrderBy',
    varPop: 'VoteVarPopOrderBy',
    varSamp: 'VoteVarSampOrderBy',
    variance: 'VoteVarianceOrderBy',
  },
  VoteArrRelInsertInput: {
    data: 'VoteInsertInput',
    onConflict: 'VoteOnConflict',
  },
  VoteAvgOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    value: 'OrderBy',
  },
  VoteBoolExp: {
    _and: 'VoteBoolExp',
    _not: 'VoteBoolExp',
    _or: 'VoteBoolExp',
    content: 'ContentBoolExp',
    contentId: 'BigintComparisonExp',
    createdAt: 'TimestamptzComparisonExp',
    createdById: 'BigintComparisonExp',
    deletedAt: 'TimestamptzComparisonExp',
    hiddenAt: 'TimestamptzComparisonExp',
    id: 'BigintComparisonExp',
    individual: 'IndividualBoolExp',
    lastActiveDate: 'TimestamptzComparisonExp',
    tenant: 'TenantBoolExp',
    tenantId: 'BigintComparisonExp',
    value: 'SmallintComparisonExp',
  },
  VoteConstraint: 'enum' as const,
  VoteIncInput: {
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
    value: 'smallint',
  },
  VoteInsertInput: {
    content: 'ContentObjRelInsertInput',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'IndividualObjRelInsertInput',
    lastActiveDate: 'timestamptz',
    tenant: 'TenantObjRelInsertInput',
    tenantId: 'bigint',
    value: 'smallint',
  },
  VoteMaxOrderBy: {
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    lastActiveDate: 'OrderBy',
    tenantId: 'OrderBy',
    value: 'OrderBy',
  },
  VoteMinOrderBy: {
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    lastActiveDate: 'OrderBy',
    tenantId: 'OrderBy',
    value: 'OrderBy',
  },
  VoteOnConflict: {
    constraint: 'VoteConstraint',
    updateColumns: 'VoteUpdateColumn',
    where: 'VoteBoolExp',
  },
  VoteOrderBy: {
    content: 'ContentOrderBy',
    contentId: 'OrderBy',
    createdAt: 'OrderBy',
    createdById: 'OrderBy',
    deletedAt: 'OrderBy',
    hiddenAt: 'OrderBy',
    id: 'OrderBy',
    individual: 'IndividualOrderBy',
    lastActiveDate: 'OrderBy',
    tenant: 'TenantOrderBy',
    tenantId: 'OrderBy',
    value: 'OrderBy',
  },
  VotePkColumnsInput: {
    id: 'bigint',
  },
  VoteSelectColumn: 'enum' as const,
  VoteSetInput: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
    value: 'smallint',
  },
  VoteStddevOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    value: 'OrderBy',
  },
  VoteStddevPopOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    value: 'OrderBy',
  },
  VoteStddevSampOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    value: 'OrderBy',
  },
  VoteStreamCursorInput: {
    initialValue: 'VoteStreamCursorValueInput',
    ordering: 'CursorOrdering',
  },
  VoteStreamCursorValueInput: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
    value: 'smallint',
  },
  VoteSumOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    value: 'OrderBy',
  },
  VoteUpdateColumn: 'enum' as const,
  VoteUpdates: {
    _inc: 'VoteIncInput',
    _set: 'VoteSetInput',
    where: 'VoteBoolExp',
  },
  VoteVarianceOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    value: 'OrderBy',
  },
  VoteVarPopOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    value: 'OrderBy',
  },
  VoteVarSampOrderBy: {
    contentId: 'OrderBy',
    createdById: 'OrderBy',
    id: 'OrderBy',
    tenantId: 'OrderBy',
    value: 'OrderBy',
  },
  LoginInput: {},
};

export const ReturnTypes: Record<string, any> = {
  cached: {
    ttl: 'Int',
    refresh: 'Boolean',
  },
  _text: `scalar._text` as const,
  Action: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    event: 'Event',
    eventId: 'bigint',
    eventJoin: 'EventJoin',
    eventJoinId: 'bigint',
    eventJoins: 'EventJoin',
    eventJoinsAggregate: 'EventJoinAggregate',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    name: 'String',
    project: 'Project',
    projectId: 'bigint',
    score: 'Int',
    state: 'String',
    team: 'Team',
    teamId: 'bigint',
    teamMember: 'TeamMember',
    tenant: 'Tenant',
    tenantId: 'bigint',
    userId: 'bigint',
    userInfo: 'UserInfo',
    validatedById: 'bigint',
  },
  ActionAggregate: {
    aggregate: 'ActionAggregateFields',
    nodes: 'Action',
  },
  ActionAggregateFields: {
    avg: 'ActionAvgFields',
    count: 'Int',
    max: 'ActionMaxFields',
    min: 'ActionMinFields',
    stddev: 'ActionStddevFields',
    stddevPop: 'ActionStddevPopFields',
    stddevSamp: 'ActionStddevSampFields',
    sum: 'ActionSumFields',
    varPop: 'ActionVarPopFields',
    varSamp: 'ActionVarSampFields',
    variance: 'ActionVarianceFields',
  },
  ActionAvgFields: {
    createdById: 'Float',
    eventId: 'Float',
    eventJoinId: 'Float',
    id: 'Float',
    projectId: 'Float',
    score: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
    validatedById: 'Float',
  },
  ActionMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    eventId: 'bigint',
    eventJoinId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    projectId: 'bigint',
    score: 'Int',
    state: 'String',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
    validatedById: 'bigint',
  },
  ActionMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    eventId: 'bigint',
    eventJoinId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    projectId: 'bigint',
    score: 'Int',
    state: 'String',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
    validatedById: 'bigint',
  },
  ActionMutationResponse: {
    affectedRows: 'Int',
    returning: 'Action',
  },
  ActionStddevFields: {
    createdById: 'Float',
    eventId: 'Float',
    eventJoinId: 'Float',
    id: 'Float',
    projectId: 'Float',
    score: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
    validatedById: 'Float',
  },
  ActionStddevPopFields: {
    createdById: 'Float',
    eventId: 'Float',
    eventJoinId: 'Float',
    id: 'Float',
    projectId: 'Float',
    score: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
    validatedById: 'Float',
  },
  ActionStddevSampFields: {
    createdById: 'Float',
    eventId: 'Float',
    eventJoinId: 'Float',
    id: 'Float',
    projectId: 'Float',
    score: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
    validatedById: 'Float',
  },
  ActionSumFields: {
    createdById: 'bigint',
    eventId: 'bigint',
    eventJoinId: 'bigint',
    id: 'bigint',
    projectId: 'bigint',
    score: 'Int',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
    validatedById: 'bigint',
  },
  ActionVarianceFields: {
    createdById: 'Float',
    eventId: 'Float',
    eventJoinId: 'Float',
    id: 'Float',
    projectId: 'Float',
    score: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
    validatedById: 'Float',
  },
  ActionVarPopFields: {
    createdById: 'Float',
    eventId: 'Float',
    eventJoinId: 'Float',
    id: 'Float',
    projectId: 'Float',
    score: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
    validatedById: 'Float',
  },
  ActionVarSampFields: {
    createdById: 'Float',
    eventId: 'Float',
    eventJoinId: 'Float',
    id: 'Float',
    projectId: 'Float',
    score: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
    validatedById: 'Float',
  },
  Actor: {
    actorAddresses: 'ActorAddress',
    actorAddressesAggregate: 'ActorAddressAggregate',
    actorBankInfos: 'ActorBankInfo',
    actorBankInfosAggregate: 'ActorBankInfoAggregate',
    actorFinances: 'ActorFinance',
    actorFinancesAggregate: 'ActorFinanceAggregate',
    actorImages: 'ActorImage',
    actorImagesAggregate: 'ActorImageAggregate',
    actorTags: 'ActorTags',
    actorTagsAggregate: 'ActorTagsAggregate',
    bio: 'String',
    botInfos: 'BotInfo',
    botInfosAggregate: 'BotInfoAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    favorites: 'Favorite',
    favoritesAggregate: 'FavoriteAggregate',
    hiddenAt: 'timestamptz',
    ical: 'String',
    id: 'bigint',
    individual: 'Individual',
    individualByIndividualId: 'Individual',
    individualId: 'bigint',
    name: 'String',
    primaryEmail: 'String',
    reports: 'Report',
    reportsAggregate: 'ReportAggregate',
    shortcuts: 'Shortcut',
    shortcutsAggregate: 'ShortcutAggregate',
    slug: 'String',
    socials: 'Social',
    socialsAggregate: 'SocialAggregate',
    team: 'Team',
    teamId: 'bigint',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  ActorAddress: {
    actor: 'Actor',
    actorBankInfos: 'ActorBankInfo',
    actorBankInfosAggregate: 'ActorBankInfoAggregate',
    actorFinances: 'ActorFinance',
    actorFinancesAggregate: 'ActorFinanceAggregate',
    actorId: 'bigint',
    city: 'String',
    country: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    events: 'Event',
    eventsAggregate: 'EventAggregate',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    individual: 'Individual',
    latitude: 'Float',
    longitude: 'Float',
    name: 'String',
    public: 'Boolean',
    state: 'String',
    street: 'String',
    tenant: 'Tenant',
    tenantId: 'bigint',
    upload: 'Upload',
    zip: 'String',
  },
  ActorAddressAggregate: {
    aggregate: 'ActorAddressAggregateFields',
    nodes: 'ActorAddress',
  },
  ActorAddressAggregateFields: {
    avg: 'ActorAddressAvgFields',
    count: 'Int',
    max: 'ActorAddressMaxFields',
    min: 'ActorAddressMinFields',
    stddev: 'ActorAddressStddevFields',
    stddevPop: 'ActorAddressStddevPopFields',
    stddevSamp: 'ActorAddressStddevSampFields',
    sum: 'ActorAddressSumFields',
    varPop: 'ActorAddressVarPopFields',
    varSamp: 'ActorAddressVarSampFields',
    variance: 'ActorAddressVarianceFields',
  },
  ActorAddressAvgFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    latitude: 'Float',
    longitude: 'Float',
    tenantId: 'Float',
  },
  ActorAddressMaxFields: {
    actorId: 'bigint',
    city: 'String',
    country: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    latitude: 'Float',
    longitude: 'Float',
    name: 'String',
    state: 'String',
    street: 'String',
    tenantId: 'bigint',
    zip: 'String',
  },
  ActorAddressMinFields: {
    actorId: 'bigint',
    city: 'String',
    country: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    latitude: 'Float',
    longitude: 'Float',
    name: 'String',
    state: 'String',
    street: 'String',
    tenantId: 'bigint',
    zip: 'String',
  },
  ActorAddressMutationResponse: {
    affectedRows: 'Int',
    returning: 'ActorAddress',
  },
  ActorAddressStddevFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    latitude: 'Float',
    longitude: 'Float',
    tenantId: 'Float',
  },
  ActorAddressStddevPopFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    latitude: 'Float',
    longitude: 'Float',
    tenantId: 'Float',
  },
  ActorAddressStddevSampFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    latitude: 'Float',
    longitude: 'Float',
    tenantId: 'Float',
  },
  ActorAddressSumFields: {
    actorId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    imageId: 'bigint',
    latitude: 'Float',
    longitude: 'Float',
    tenantId: 'bigint',
  },
  ActorAddressVarianceFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    latitude: 'Float',
    longitude: 'Float',
    tenantId: 'Float',
  },
  ActorAddressVarPopFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    latitude: 'Float',
    longitude: 'Float',
    tenantId: 'Float',
  },
  ActorAddressVarSampFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    latitude: 'Float',
    longitude: 'Float',
    tenantId: 'Float',
  },
  ActorAggregate: {
    aggregate: 'ActorAggregateFields',
    nodes: 'Actor',
  },
  ActorAggregateFields: {
    avg: 'ActorAvgFields',
    count: 'Int',
    max: 'ActorMaxFields',
    min: 'ActorMinFields',
    stddev: 'ActorStddevFields',
    stddevPop: 'ActorStddevPopFields',
    stddevSamp: 'ActorStddevSampFields',
    sum: 'ActorSumFields',
    varPop: 'ActorVarPopFields',
    varSamp: 'ActorVarSampFields',
    variance: 'ActorVarianceFields',
  },
  ActorAvgFields: {
    createdById: 'Float',
    id: 'Float',
    individualId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  ActorBankInfo: {
    accountCode: 'String',
    actor: 'Actor',
    actorAddress: 'ActorAddress',
    actorId: 'bigint',
    agencyCode: 'String',
    bankCode: 'String',
    bankCodeBic: 'String',
    bankLocationId: 'bigint',
    checksum: 'String',
    country: 'String',
    countryCode: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expenses: 'Expense',
    expensesAggregate: 'ExpenseAggregate',
    fullAcount: 'String',
    hiddenAt: 'timestamptz',
    holderName: 'String',
    id: 'bigint',
    individual: 'Individual',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  ActorBankInfoAggregate: {
    aggregate: 'ActorBankInfoAggregateFields',
    nodes: 'ActorBankInfo',
  },
  ActorBankInfoAggregateFields: {
    avg: 'ActorBankInfoAvgFields',
    count: 'Int',
    max: 'ActorBankInfoMaxFields',
    min: 'ActorBankInfoMinFields',
    stddev: 'ActorBankInfoStddevFields',
    stddevPop: 'ActorBankInfoStddevPopFields',
    stddevSamp: 'ActorBankInfoStddevSampFields',
    sum: 'ActorBankInfoSumFields',
    varPop: 'ActorBankInfoVarPopFields',
    varSamp: 'ActorBankInfoVarSampFields',
    variance: 'ActorBankInfoVarianceFields',
  },
  ActorBankInfoAvgFields: {
    actorId: 'Float',
    bankLocationId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ActorBankInfoMaxFields: {
    accountCode: 'String',
    actorId: 'bigint',
    agencyCode: 'String',
    bankCode: 'String',
    bankCodeBic: 'String',
    bankLocationId: 'bigint',
    checksum: 'String',
    country: 'String',
    countryCode: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    fullAcount: 'String',
    hiddenAt: 'timestamptz',
    holderName: 'String',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ActorBankInfoMinFields: {
    accountCode: 'String',
    actorId: 'bigint',
    agencyCode: 'String',
    bankCode: 'String',
    bankCodeBic: 'String',
    bankLocationId: 'bigint',
    checksum: 'String',
    country: 'String',
    countryCode: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    fullAcount: 'String',
    hiddenAt: 'timestamptz',
    holderName: 'String',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ActorBankInfoMutationResponse: {
    affectedRows: 'Int',
    returning: 'ActorBankInfo',
  },
  ActorBankInfoStddevFields: {
    actorId: 'Float',
    bankLocationId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ActorBankInfoStddevPopFields: {
    actorId: 'Float',
    bankLocationId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ActorBankInfoStddevSampFields: {
    actorId: 'Float',
    bankLocationId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ActorBankInfoSumFields: {
    actorId: 'bigint',
    bankLocationId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ActorBankInfoVarianceFields: {
    actorId: 'Float',
    bankLocationId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ActorBankInfoVarPopFields: {
    actorId: 'Float',
    bankLocationId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ActorBankInfoVarSampFields: {
    actorId: 'Float',
    bankLocationId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ActorFinance: {
    actor: 'Actor',
    actorAddress: 'ActorAddress',
    actorFinanceReceipts: 'ActorFinanceReceipts',
    actorFinanceReceiptsAggregate: 'ActorFinanceReceiptsAggregate',
    amount: 'Float',
    category: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    expense: 'Expense',
    expenseId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    locationId: 'bigint',
    name: 'String',
    payedAt: 'timestamptz',
    payedById: 'bigint',
    teamFinance: 'TeamFinance',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  ActorFinanceAggregate: {
    aggregate: 'ActorFinanceAggregateFields',
    nodes: 'ActorFinance',
  },
  ActorFinanceAggregateFields: {
    avg: 'ActorFinanceAvgFields',
    count: 'Int',
    max: 'ActorFinanceMaxFields',
    min: 'ActorFinanceMinFields',
    stddev: 'ActorFinanceStddevFields',
    stddevPop: 'ActorFinanceStddevPopFields',
    stddevSamp: 'ActorFinanceStddevSampFields',
    sum: 'ActorFinanceSumFields',
    varPop: 'ActorFinanceVarPopFields',
    varSamp: 'ActorFinanceVarSampFields',
    variance: 'ActorFinanceVarianceFields',
  },
  ActorFinanceAvgFields: {
    amount: 'Float',
    createdById: 'Float',
    expenseId: 'Float',
    id: 'Float',
    locationId: 'Float',
    payedById: 'Float',
    tenantId: 'Float',
  },
  ActorFinanceMaxFields: {
    amount: 'Float',
    category: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    expenseId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    locationId: 'bigint',
    name: 'String',
    payedAt: 'timestamptz',
    payedById: 'bigint',
    tenantId: 'bigint',
  },
  ActorFinanceMinFields: {
    amount: 'Float',
    category: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    expenseId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    locationId: 'bigint',
    name: 'String',
    payedAt: 'timestamptz',
    payedById: 'bigint',
    tenantId: 'bigint',
  },
  ActorFinanceMutationResponse: {
    affectedRows: 'Int',
    returning: 'ActorFinance',
  },
  ActorFinanceReceipts: {
    actorFinance: 'ActorFinance',
    actorFinanceId: 'bigint',
    upload: 'Upload',
    uploadId: 'bigint',
  },
  ActorFinanceReceiptsAggregate: {
    aggregate: 'ActorFinanceReceiptsAggregateFields',
    nodes: 'ActorFinanceReceipts',
  },
  ActorFinanceReceiptsAggregateFields: {
    avg: 'ActorFinanceReceiptsAvgFields',
    count: 'Int',
    max: 'ActorFinanceReceiptsMaxFields',
    min: 'ActorFinanceReceiptsMinFields',
    stddev: 'ActorFinanceReceiptsStddevFields',
    stddevPop: 'ActorFinanceReceiptsStddevPopFields',
    stddevSamp: 'ActorFinanceReceiptsStddevSampFields',
    sum: 'ActorFinanceReceiptsSumFields',
    varPop: 'ActorFinanceReceiptsVarPopFields',
    varSamp: 'ActorFinanceReceiptsVarSampFields',
    variance: 'ActorFinanceReceiptsVarianceFields',
  },
  ActorFinanceReceiptsAvgFields: {
    actorFinanceId: 'Float',
    uploadId: 'Float',
  },
  ActorFinanceReceiptsMaxFields: {
    actorFinanceId: 'bigint',
    uploadId: 'bigint',
  },
  ActorFinanceReceiptsMinFields: {
    actorFinanceId: 'bigint',
    uploadId: 'bigint',
  },
  ActorFinanceReceiptsMutationResponse: {
    affectedRows: 'Int',
    returning: 'ActorFinanceReceipts',
  },
  ActorFinanceReceiptsStddevFields: {
    actorFinanceId: 'Float',
    uploadId: 'Float',
  },
  ActorFinanceReceiptsStddevPopFields: {
    actorFinanceId: 'Float',
    uploadId: 'Float',
  },
  ActorFinanceReceiptsStddevSampFields: {
    actorFinanceId: 'Float',
    uploadId: 'Float',
  },
  ActorFinanceReceiptsSumFields: {
    actorFinanceId: 'bigint',
    uploadId: 'bigint',
  },
  ActorFinanceReceiptsVarianceFields: {
    actorFinanceId: 'Float',
    uploadId: 'Float',
  },
  ActorFinanceReceiptsVarPopFields: {
    actorFinanceId: 'Float',
    uploadId: 'Float',
  },
  ActorFinanceReceiptsVarSampFields: {
    actorFinanceId: 'Float',
    uploadId: 'Float',
  },
  ActorFinanceStddevFields: {
    amount: 'Float',
    createdById: 'Float',
    expenseId: 'Float',
    id: 'Float',
    locationId: 'Float',
    payedById: 'Float',
    tenantId: 'Float',
  },
  ActorFinanceStddevPopFields: {
    amount: 'Float',
    createdById: 'Float',
    expenseId: 'Float',
    id: 'Float',
    locationId: 'Float',
    payedById: 'Float',
    tenantId: 'Float',
  },
  ActorFinanceStddevSampFields: {
    amount: 'Float',
    createdById: 'Float',
    expenseId: 'Float',
    id: 'Float',
    locationId: 'Float',
    payedById: 'Float',
    tenantId: 'Float',
  },
  ActorFinanceSumFields: {
    amount: 'Float',
    createdById: 'bigint',
    expenseId: 'bigint',
    id: 'bigint',
    locationId: 'bigint',
    payedById: 'bigint',
    tenantId: 'bigint',
  },
  ActorFinanceVarianceFields: {
    amount: 'Float',
    createdById: 'Float',
    expenseId: 'Float',
    id: 'Float',
    locationId: 'Float',
    payedById: 'Float',
    tenantId: 'Float',
  },
  ActorFinanceVarPopFields: {
    amount: 'Float',
    createdById: 'Float',
    expenseId: 'Float',
    id: 'Float',
    locationId: 'Float',
    payedById: 'Float',
    tenantId: 'Float',
  },
  ActorFinanceVarSampFields: {
    amount: 'Float',
    createdById: 'Float',
    expenseId: 'Float',
    id: 'Float',
    locationId: 'Float',
    payedById: 'Float',
    tenantId: 'Float',
  },
  ActorImage: {
    actor: 'Actor',
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    individual: 'Individual',
    lastActiveDate: 'timestamptz',
    tenant: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
    upload: 'Upload',
  },
  ActorImageAggregate: {
    aggregate: 'ActorImageAggregateFields',
    nodes: 'ActorImage',
  },
  ActorImageAggregateFields: {
    avg: 'ActorImageAvgFields',
    count: 'Int',
    max: 'ActorImageMaxFields',
    min: 'ActorImageMinFields',
    stddev: 'ActorImageStddevFields',
    stddevPop: 'ActorImageStddevPopFields',
    stddevSamp: 'ActorImageStddevSampFields',
    sum: 'ActorImageSumFields',
    varPop: 'ActorImageVarPopFields',
    varSamp: 'ActorImageVarSampFields',
    variance: 'ActorImageVarianceFields',
  },
  ActorImageAvgFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    tenantId: 'Float',
  },
  ActorImageMaxFields: {
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
    type: 'String',
  },
  ActorImageMinFields: {
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
    type: 'String',
  },
  ActorImageMutationResponse: {
    affectedRows: 'Int',
    returning: 'ActorImage',
  },
  ActorImageStddevFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    tenantId: 'Float',
  },
  ActorImageStddevPopFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    tenantId: 'Float',
  },
  ActorImageStddevSampFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    tenantId: 'Float',
  },
  ActorImageSumFields: {
    actorId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    imageId: 'bigint',
    tenantId: 'bigint',
  },
  ActorImageVarianceFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    tenantId: 'Float',
  },
  ActorImageVarPopFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    tenantId: 'Float',
  },
  ActorImageVarSampFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    tenantId: 'Float',
  },
  ActorMaxFields: {
    bio: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    ical: 'String',
    id: 'bigint',
    individualId: 'bigint',
    name: 'String',
    primaryEmail: 'String',
    slug: 'String',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  ActorMinFields: {
    bio: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    ical: 'String',
    id: 'bigint',
    individualId: 'bigint',
    name: 'String',
    primaryEmail: 'String',
    slug: 'String',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  ActorMutationResponse: {
    affectedRows: 'Int',
    returning: 'Actor',
  },
  ActorStddevFields: {
    createdById: 'Float',
    id: 'Float',
    individualId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  ActorStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    individualId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  ActorStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    individualId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  ActorSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    individualId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  ActorTags: {
    actor: 'Actor',
    actorId: 'bigint',
    tag: 'Tag',
    tagId: 'bigint',
  },
  ActorTagsAggregate: {
    aggregate: 'ActorTagsAggregateFields',
    nodes: 'ActorTags',
  },
  ActorTagsAggregateFields: {
    avg: 'ActorTagsAvgFields',
    count: 'Int',
    max: 'ActorTagsMaxFields',
    min: 'ActorTagsMinFields',
    stddev: 'ActorTagsStddevFields',
    stddevPop: 'ActorTagsStddevPopFields',
    stddevSamp: 'ActorTagsStddevSampFields',
    sum: 'ActorTagsSumFields',
    varPop: 'ActorTagsVarPopFields',
    varSamp: 'ActorTagsVarSampFields',
    variance: 'ActorTagsVarianceFields',
  },
  ActorTagsAvgFields: {
    actorId: 'Float',
    tagId: 'Float',
  },
  ActorTagsMaxFields: {
    actorId: 'bigint',
    tagId: 'bigint',
  },
  ActorTagsMinFields: {
    actorId: 'bigint',
    tagId: 'bigint',
  },
  ActorTagsMutationResponse: {
    affectedRows: 'Int',
    returning: 'ActorTags',
  },
  ActorTagsStddevFields: {
    actorId: 'Float',
    tagId: 'Float',
  },
  ActorTagsStddevPopFields: {
    actorId: 'Float',
    tagId: 'Float',
  },
  ActorTagsStddevSampFields: {
    actorId: 'Float',
    tagId: 'Float',
  },
  ActorTagsSumFields: {
    actorId: 'bigint',
    tagId: 'bigint',
  },
  ActorTagsVarianceFields: {
    actorId: 'Float',
    tagId: 'Float',
  },
  ActorTagsVarPopFields: {
    actorId: 'Float',
    tagId: 'Float',
  },
  ActorTagsVarSampFields: {
    actorId: 'Float',
    tagId: 'Float',
  },
  ActorVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    individualId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  ActorVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    individualId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  ActorVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    individualId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  bigint: `scalar.bigint` as const,
  BotInfo: {
    actor: 'Actor',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    individualById: 'Individual',
    ownerId: 'bigint',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  BotInfoAggregate: {
    aggregate: 'BotInfoAggregateFields',
    nodes: 'BotInfo',
  },
  BotInfoAggregateFields: {
    avg: 'BotInfoAvgFields',
    count: 'Int',
    max: 'BotInfoMaxFields',
    min: 'BotInfoMinFields',
    stddev: 'BotInfoStddevFields',
    stddevPop: 'BotInfoStddevPopFields',
    stddevSamp: 'BotInfoStddevSampFields',
    sum: 'BotInfoSumFields',
    varPop: 'BotInfoVarPopFields',
    varSamp: 'BotInfoVarSampFields',
    variance: 'BotInfoVarianceFields',
  },
  BotInfoAvgFields: {
    createdById: 'Float',
    id: 'Float',
    ownerId: 'Float',
    tenantId: 'Float',
  },
  BotInfoMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    ownerId: 'bigint',
    tenantId: 'bigint',
  },
  BotInfoMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    ownerId: 'bigint',
    tenantId: 'bigint',
  },
  BotInfoMutationResponse: {
    affectedRows: 'Int',
    returning: 'BotInfo',
  },
  BotInfoStddevFields: {
    createdById: 'Float',
    id: 'Float',
    ownerId: 'Float',
    tenantId: 'Float',
  },
  BotInfoStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    ownerId: 'Float',
    tenantId: 'Float',
  },
  BotInfoStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    ownerId: 'Float',
    tenantId: 'Float',
  },
  BotInfoSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    ownerId: 'bigint',
    tenantId: 'bigint',
  },
  BotInfoVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    ownerId: 'Float',
    tenantId: 'Float',
  },
  BotInfoVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    ownerId: 'Float',
    tenantId: 'Float',
  },
  BotInfoVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    ownerId: 'Float',
    tenantId: 'Float',
  },
  Canteen: {
    canteenFoods: 'CanteenFood',
    canteenFoodsAggregate: 'CanteenFoodAggregate',
    canteenMenus: 'CanteenMenu',
    canteenMenusAggregate: 'CanteenMenuAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    team: 'Team',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  CanteenAggregate: {
    aggregate: 'CanteenAggregateFields',
    nodes: 'Canteen',
  },
  CanteenAggregateFields: {
    avg: 'CanteenAvgFields',
    count: 'Int',
    max: 'CanteenMaxFields',
    min: 'CanteenMinFields',
    stddev: 'CanteenStddevFields',
    stddevPop: 'CanteenStddevPopFields',
    stddevSamp: 'CanteenStddevSampFields',
    sum: 'CanteenSumFields',
    varPop: 'CanteenVarPopFields',
    varSamp: 'CanteenVarSampFields',
    variance: 'CanteenVarianceFields',
  },
  CanteenAvgFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenFood: {
    canteen: 'Canteen',
    canteenId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  CanteenFoodAggregate: {
    aggregate: 'CanteenFoodAggregateFields',
    nodes: 'CanteenFood',
  },
  CanteenFoodAggregateFields: {
    avg: 'CanteenFoodAvgFields',
    count: 'Int',
    max: 'CanteenFoodMaxFields',
    min: 'CanteenFoodMinFields',
    stddev: 'CanteenFoodStddevFields',
    stddevPop: 'CanteenFoodStddevPopFields',
    stddevSamp: 'CanteenFoodStddevSampFields',
    sum: 'CanteenFoodSumFields',
    varPop: 'CanteenFoodVarPopFields',
    varSamp: 'CanteenFoodVarSampFields',
    variance: 'CanteenFoodVarianceFields',
  },
  CanteenFoodAvgFields: {
    canteenId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenFoodMaxFields: {
    canteenId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenFoodMinFields: {
    canteenId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenFoodMutationResponse: {
    affectedRows: 'Int',
    returning: 'CanteenFood',
  },
  CanteenFoodStddevFields: {
    canteenId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenFoodStddevPopFields: {
    canteenId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenFoodStddevSampFields: {
    canteenId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenFoodSumFields: {
    canteenId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenFoodVarianceFields: {
    canteenId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenFoodVarPopFields: {
    canteenId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenFoodVarSampFields: {
    canteenId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenMenu: {
    canteen: 'Canteen',
    canteenId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  CanteenMenuAggregate: {
    aggregate: 'CanteenMenuAggregateFields',
    nodes: 'CanteenMenu',
  },
  CanteenMenuAggregateFields: {
    avg: 'CanteenMenuAvgFields',
    count: 'Int',
    max: 'CanteenMenuMaxFields',
    min: 'CanteenMenuMinFields',
    stddev: 'CanteenMenuStddevFields',
    stddevPop: 'CanteenMenuStddevPopFields',
    stddevSamp: 'CanteenMenuStddevSampFields',
    sum: 'CanteenMenuSumFields',
    varPop: 'CanteenMenuVarPopFields',
    varSamp: 'CanteenMenuVarSampFields',
    variance: 'CanteenMenuVarianceFields',
  },
  CanteenMenuAvgFields: {
    canteenId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenMenuMaxFields: {
    canteenId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenMenuMinFields: {
    canteenId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenMenuMutationResponse: {
    affectedRows: 'Int',
    returning: 'CanteenMenu',
  },
  CanteenMenuStddevFields: {
    canteenId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenMenuStddevPopFields: {
    canteenId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenMenuStddevSampFields: {
    canteenId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenMenuSumFields: {
    canteenId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenMenuVarianceFields: {
    canteenId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenMenuVarPopFields: {
    canteenId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenMenuVarSampFields: {
    canteenId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenMutationResponse: {
    affectedRows: 'Int',
    returning: 'Canteen',
  },
  CanteenStddevFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  CanteenVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  CanteenVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ChangeRole: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    note: 'String',
    pole: 'Pole',
    receivedPoleId: 'bigint',
    receivedRoleId: 'bigint',
    role: 'Role',
    team: 'Team',
    teamId: 'bigint',
    teamJoin: 'TeamJoin',
    tenant: 'Tenant',
    tenantId: 'bigint',
    userId: 'bigint',
    userInfo: 'UserInfo',
  },
  ChangeRoleAggregate: {
    aggregate: 'ChangeRoleAggregateFields',
    nodes: 'ChangeRole',
  },
  ChangeRoleAggregateFields: {
    avg: 'ChangeRoleAvgFields',
    count: 'Int',
    max: 'ChangeRoleMaxFields',
    min: 'ChangeRoleMinFields',
    stddev: 'ChangeRoleStddevFields',
    stddevPop: 'ChangeRoleStddevPopFields',
    stddevSamp: 'ChangeRoleStddevSampFields',
    sum: 'ChangeRoleSumFields',
    varPop: 'ChangeRoleVarPopFields',
    varSamp: 'ChangeRoleVarSampFields',
    variance: 'ChangeRoleVarianceFields',
  },
  ChangeRoleAvgFields: {
    createdById: 'Float',
    id: 'Float',
    receivedPoleId: 'Float',
    receivedRoleId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ChangeRoleMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    note: 'String',
    receivedPoleId: 'bigint',
    receivedRoleId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ChangeRoleMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    note: 'String',
    receivedPoleId: 'bigint',
    receivedRoleId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ChangeRoleMutationResponse: {
    affectedRows: 'Int',
    returning: 'ChangeRole',
  },
  ChangeRoleStddevFields: {
    createdById: 'Float',
    id: 'Float',
    receivedPoleId: 'Float',
    receivedRoleId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ChangeRoleStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    receivedPoleId: 'Float',
    receivedRoleId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ChangeRoleStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    receivedPoleId: 'Float',
    receivedRoleId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ChangeRoleSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    receivedPoleId: 'bigint',
    receivedRoleId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ChangeRoleVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    receivedPoleId: 'Float',
    receivedRoleId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ChangeRoleVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    receivedPoleId: 'Float',
    receivedRoleId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ChangeRoleVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    receivedPoleId: 'Float',
    receivedRoleId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ClassGroup: {
    classGroupTeachers: 'ClassGroupTeacher',
    classGroupTeachersAggregate: 'ClassGroupTeacherAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    subjectClasses: 'SubjectClasses',
    subjectClassesAggregate: 'SubjectClassesAggregate',
    team: 'Team',
    tenant: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
  },
  ClassGroupAggregate: {
    aggregate: 'ClassGroupAggregateFields',
    nodes: 'ClassGroup',
  },
  ClassGroupAggregateFields: {
    avg: 'ClassGroupAvgFields',
    count: 'Int',
    max: 'ClassGroupMaxFields',
    min: 'ClassGroupMinFields',
    stddev: 'ClassGroupStddevFields',
    stddevPop: 'ClassGroupStddevPopFields',
    stddevSamp: 'ClassGroupStddevSampFields',
    sum: 'ClassGroupSumFields',
    varPop: 'ClassGroupVarPopFields',
    varSamp: 'ClassGroupVarSampFields',
    variance: 'ClassGroupVarianceFields',
  },
  ClassGroupAvgFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ClassGroupMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
    type: 'String',
  },
  ClassGroupMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
    type: 'String',
  },
  ClassGroupMutationResponse: {
    affectedRows: 'Int',
    returning: 'ClassGroup',
  },
  ClassGroupStddevFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ClassGroupStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ClassGroupStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ClassGroupSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ClassGroupTeacher: {
    classGroup: 'ClassGroup',
    classGroupId: 'bigint',
    classGroupTeacherSubjects: 'ClassGroupTeacherSubject',
    classGroupTeacherSubjectsAggregate: 'ClassGroupTeacherSubjectAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    endDate: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    startDate: 'timestamptz',
    tenant: 'Tenant',
    tenantId: 'bigint',
    userId: 'bigint',
    userInfo: 'UserInfo',
  },
  ClassGroupTeacherAggregate: {
    aggregate: 'ClassGroupTeacherAggregateFields',
    nodes: 'ClassGroupTeacher',
  },
  ClassGroupTeacherAggregateFields: {
    avg: 'ClassGroupTeacherAvgFields',
    count: 'Int',
    max: 'ClassGroupTeacherMaxFields',
    min: 'ClassGroupTeacherMinFields',
    stddev: 'ClassGroupTeacherStddevFields',
    stddevPop: 'ClassGroupTeacherStddevPopFields',
    stddevSamp: 'ClassGroupTeacherStddevSampFields',
    sum: 'ClassGroupTeacherSumFields',
    varPop: 'ClassGroupTeacherVarPopFields',
    varSamp: 'ClassGroupTeacherVarSampFields',
    variance: 'ClassGroupTeacherVarianceFields',
  },
  ClassGroupTeacherAvgFields: {
    classGroupId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ClassGroupTeacherMaxFields: {
    classGroupId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    endDate: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    startDate: 'timestamptz',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ClassGroupTeacherMinFields: {
    classGroupId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    endDate: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    startDate: 'timestamptz',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ClassGroupTeacherMutationResponse: {
    affectedRows: 'Int',
    returning: 'ClassGroupTeacher',
  },
  ClassGroupTeacherStddevFields: {
    classGroupId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ClassGroupTeacherStddevPopFields: {
    classGroupId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ClassGroupTeacherStddevSampFields: {
    classGroupId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ClassGroupTeacherSubject: {
    classGroupTeacher: 'ClassGroupTeacher',
    classGroupTeacherId: 'bigint',
    subject: 'Subject',
    subjectId: 'bigint',
  },
  ClassGroupTeacherSubjectAggregate: {
    aggregate: 'ClassGroupTeacherSubjectAggregateFields',
    nodes: 'ClassGroupTeacherSubject',
  },
  ClassGroupTeacherSubjectAggregateFields: {
    avg: 'ClassGroupTeacherSubjectAvgFields',
    count: 'Int',
    max: 'ClassGroupTeacherSubjectMaxFields',
    min: 'ClassGroupTeacherSubjectMinFields',
    stddev: 'ClassGroupTeacherSubjectStddevFields',
    stddevPop: 'ClassGroupTeacherSubjectStddevPopFields',
    stddevSamp: 'ClassGroupTeacherSubjectStddevSampFields',
    sum: 'ClassGroupTeacherSubjectSumFields',
    varPop: 'ClassGroupTeacherSubjectVarPopFields',
    varSamp: 'ClassGroupTeacherSubjectVarSampFields',
    variance: 'ClassGroupTeacherSubjectVarianceFields',
  },
  ClassGroupTeacherSubjectAvgFields: {
    classGroupTeacherId: 'Float',
    subjectId: 'Float',
  },
  ClassGroupTeacherSubjectMaxFields: {
    classGroupTeacherId: 'bigint',
    subjectId: 'bigint',
  },
  ClassGroupTeacherSubjectMinFields: {
    classGroupTeacherId: 'bigint',
    subjectId: 'bigint',
  },
  ClassGroupTeacherSubjectMutationResponse: {
    affectedRows: 'Int',
    returning: 'ClassGroupTeacherSubject',
  },
  ClassGroupTeacherSubjectStddevFields: {
    classGroupTeacherId: 'Float',
    subjectId: 'Float',
  },
  ClassGroupTeacherSubjectStddevPopFields: {
    classGroupTeacherId: 'Float',
    subjectId: 'Float',
  },
  ClassGroupTeacherSubjectStddevSampFields: {
    classGroupTeacherId: 'Float',
    subjectId: 'Float',
  },
  ClassGroupTeacherSubjectSumFields: {
    classGroupTeacherId: 'bigint',
    subjectId: 'bigint',
  },
  ClassGroupTeacherSubjectVarianceFields: {
    classGroupTeacherId: 'Float',
    subjectId: 'Float',
  },
  ClassGroupTeacherSubjectVarPopFields: {
    classGroupTeacherId: 'Float',
    subjectId: 'Float',
  },
  ClassGroupTeacherSubjectVarSampFields: {
    classGroupTeacherId: 'Float',
    subjectId: 'Float',
  },
  ClassGroupTeacherSumFields: {
    classGroupId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ClassGroupTeacherVarianceFields: {
    classGroupId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ClassGroupTeacherVarPopFields: {
    classGroupId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ClassGroupTeacherVarSampFields: {
    classGroupId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ClassGroupVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ClassGroupVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ClassGroupVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  Cohort: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    team: 'Team',
    tenant: 'Tenant',
    tenantId: 'bigint',
    year: 'smallint',
  },
  CohortAggregate: {
    aggregate: 'CohortAggregateFields',
    nodes: 'Cohort',
  },
  CohortAggregateFields: {
    avg: 'CohortAvgFields',
    count: 'Int',
    max: 'CohortMaxFields',
    min: 'CohortMinFields',
    stddev: 'CohortStddevFields',
    stddevPop: 'CohortStddevPopFields',
    stddevSamp: 'CohortStddevSampFields',
    sum: 'CohortSumFields',
    varPop: 'CohortVarPopFields',
    varSamp: 'CohortVarSampFields',
    variance: 'CohortVarianceFields',
  },
  CohortAvgFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    year: 'Float',
  },
  CohortMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
    year: 'smallint',
  },
  CohortMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
    year: 'smallint',
  },
  CohortMutationResponse: {
    affectedRows: 'Int',
    returning: 'Cohort',
  },
  CohortStddevFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    year: 'Float',
  },
  CohortStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    year: 'Float',
  },
  CohortStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    year: 'Float',
  },
  CohortSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
    year: 'smallint',
  },
  CohortVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    year: 'Float',
  },
  CohortVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    year: 'Float',
  },
  CohortVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    year: 'Float',
  },
  Content: {
    content: 'Content',
    contentAttachments: 'ContentAttachments',
    contentAttachmentsAggregate: 'ContentAttachmentsAggregate',
    contentEdits: 'ContentEdit',
    contentEditsAggregate: 'ContentEditAggregate',
    contentMaster: 'ContentMaster',
    contentRepresentingTeams: 'ContentRepresentingTeams',
    contentRepresentingTeamsAggregate: 'ContentRepresentingTeamsAggregate',
    contents: 'Content',
    contentsAggregate: 'ContentAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    event: 'Event',
    eventId: 'bigint',
    favorites: 'Favorite',
    favoritesAggregate: 'FavoriteAggregate',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    isAnonymous: 'Boolean',
    parentId: 'bigint',
    reactions: 'Reaction',
    reactionsAggregate: 'ReactionAggregate',
    reports: 'Report',
    reportsAggregate: 'ReportAggregate',
    tenant: 'Tenant',
    tenantId: 'bigint',
    text: 'String',
    validations: 'Validation',
    validationsAggregate: 'ValidationAggregate',
    votes: 'Vote',
    votesAggregate: 'VoteAggregate',
  },
  ContentAggregate: {
    aggregate: 'ContentAggregateFields',
    nodes: 'Content',
  },
  ContentAggregateFields: {
    avg: 'ContentAvgFields',
    count: 'Int',
    max: 'ContentMaxFields',
    min: 'ContentMinFields',
    stddev: 'ContentStddevFields',
    stddevPop: 'ContentStddevPopFields',
    stddevSamp: 'ContentStddevSampFields',
    sum: 'ContentSumFields',
    varPop: 'ContentVarPopFields',
    varSamp: 'ContentVarSampFields',
    variance: 'ContentVarianceFields',
  },
  ContentAttachments: {
    content: 'Content',
    contentId: 'bigint',
    upload: 'Upload',
    uploadId: 'bigint',
  },
  ContentAttachmentsAggregate: {
    aggregate: 'ContentAttachmentsAggregateFields',
    nodes: 'ContentAttachments',
  },
  ContentAttachmentsAggregateFields: {
    avg: 'ContentAttachmentsAvgFields',
    count: 'Int',
    max: 'ContentAttachmentsMaxFields',
    min: 'ContentAttachmentsMinFields',
    stddev: 'ContentAttachmentsStddevFields',
    stddevPop: 'ContentAttachmentsStddevPopFields',
    stddevSamp: 'ContentAttachmentsStddevSampFields',
    sum: 'ContentAttachmentsSumFields',
    varPop: 'ContentAttachmentsVarPopFields',
    varSamp: 'ContentAttachmentsVarSampFields',
    variance: 'ContentAttachmentsVarianceFields',
  },
  ContentAttachmentsAvgFields: {
    contentId: 'Float',
    uploadId: 'Float',
  },
  ContentAttachmentsMaxFields: {
    contentId: 'bigint',
    uploadId: 'bigint',
  },
  ContentAttachmentsMinFields: {
    contentId: 'bigint',
    uploadId: 'bigint',
  },
  ContentAttachmentsMutationResponse: {
    affectedRows: 'Int',
    returning: 'ContentAttachments',
  },
  ContentAttachmentsStddevFields: {
    contentId: 'Float',
    uploadId: 'Float',
  },
  ContentAttachmentsStddevPopFields: {
    contentId: 'Float',
    uploadId: 'Float',
  },
  ContentAttachmentsStddevSampFields: {
    contentId: 'Float',
    uploadId: 'Float',
  },
  ContentAttachmentsSumFields: {
    contentId: 'bigint',
    uploadId: 'bigint',
  },
  ContentAttachmentsVarianceFields: {
    contentId: 'Float',
    uploadId: 'Float',
  },
  ContentAttachmentsVarPopFields: {
    contentId: 'Float',
    uploadId: 'Float',
  },
  ContentAttachmentsVarSampFields: {
    contentId: 'Float',
    uploadId: 'Float',
  },
  ContentAvgFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    parentId: 'Float',
    tenantId: 'Float',
  },
  ContentEdit: {
    addedDiff: 'jsonb',
    content: 'Content',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    newVersion: 'String',
    note: 'String',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  ContentEditAggregate: {
    aggregate: 'ContentEditAggregateFields',
    nodes: 'ContentEdit',
  },
  ContentEditAggregateFields: {
    avg: 'ContentEditAvgFields',
    count: 'Int',
    max: 'ContentEditMaxFields',
    min: 'ContentEditMinFields',
    stddev: 'ContentEditStddevFields',
    stddevPop: 'ContentEditStddevPopFields',
    stddevSamp: 'ContentEditStddevSampFields',
    sum: 'ContentEditSumFields',
    varPop: 'ContentEditVarPopFields',
    varSamp: 'ContentEditVarSampFields',
    variance: 'ContentEditVarianceFields',
  },
  ContentEditAvgFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ContentEditMaxFields: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    newVersion: 'String',
    note: 'String',
    tenantId: 'bigint',
  },
  ContentEditMinFields: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    newVersion: 'String',
    note: 'String',
    tenantId: 'bigint',
  },
  ContentEditMutationResponse: {
    affectedRows: 'Int',
    returning: 'ContentEdit',
  },
  ContentEditStddevFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ContentEditStddevPopFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ContentEditStddevSampFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ContentEditSumFields: {
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ContentEditVarianceFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ContentEditVarPopFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ContentEditVarSampFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ContentMaster: {
    content: 'Content',
    contentMasterContributors: 'ContentMasterContributors',
    contentMasterContributorsAggregate: 'ContentMasterContributorsAggregate',
    contentMasterTags: 'ContentMasterTags',
    contentMasterTagsAggregate: 'ContentMasterTagsAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    event: 'Event',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    issue: 'Issue',
    name: 'String',
    rootContentId: 'bigint',
    slug: 'String',
    tenant: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
  },
  ContentMasterAggregate: {
    aggregate: 'ContentMasterAggregateFields',
    nodes: 'ContentMaster',
  },
  ContentMasterAggregateFields: {
    avg: 'ContentMasterAvgFields',
    count: 'Int',
    max: 'ContentMasterMaxFields',
    min: 'ContentMasterMinFields',
    stddev: 'ContentMasterStddevFields',
    stddevPop: 'ContentMasterStddevPopFields',
    stddevSamp: 'ContentMasterStddevSampFields',
    sum: 'ContentMasterSumFields',
    varPop: 'ContentMasterVarPopFields',
    varSamp: 'ContentMasterVarSampFields',
    variance: 'ContentMasterVarianceFields',
  },
  ContentMasterAvgFields: {
    createdById: 'Float',
    id: 'Float',
    rootContentId: 'Float',
    tenantId: 'Float',
  },
  ContentMasterContributors: {
    contentMaster: 'ContentMaster',
    contentMasterId: 'bigint',
    individual: 'Individual',
    individualId: 'bigint',
  },
  ContentMasterContributorsAggregate: {
    aggregate: 'ContentMasterContributorsAggregateFields',
    nodes: 'ContentMasterContributors',
  },
  ContentMasterContributorsAggregateFields: {
    avg: 'ContentMasterContributorsAvgFields',
    count: 'Int',
    max: 'ContentMasterContributorsMaxFields',
    min: 'ContentMasterContributorsMinFields',
    stddev: 'ContentMasterContributorsStddevFields',
    stddevPop: 'ContentMasterContributorsStddevPopFields',
    stddevSamp: 'ContentMasterContributorsStddevSampFields',
    sum: 'ContentMasterContributorsSumFields',
    varPop: 'ContentMasterContributorsVarPopFields',
    varSamp: 'ContentMasterContributorsVarSampFields',
    variance: 'ContentMasterContributorsVarianceFields',
  },
  ContentMasterContributorsAvgFields: {
    contentMasterId: 'Float',
    individualId: 'Float',
  },
  ContentMasterContributorsMaxFields: {
    contentMasterId: 'bigint',
    individualId: 'bigint',
  },
  ContentMasterContributorsMinFields: {
    contentMasterId: 'bigint',
    individualId: 'bigint',
  },
  ContentMasterContributorsMutationResponse: {
    affectedRows: 'Int',
    returning: 'ContentMasterContributors',
  },
  ContentMasterContributorsStddevFields: {
    contentMasterId: 'Float',
    individualId: 'Float',
  },
  ContentMasterContributorsStddevPopFields: {
    contentMasterId: 'Float',
    individualId: 'Float',
  },
  ContentMasterContributorsStddevSampFields: {
    contentMasterId: 'Float',
    individualId: 'Float',
  },
  ContentMasterContributorsSumFields: {
    contentMasterId: 'bigint',
    individualId: 'bigint',
  },
  ContentMasterContributorsVarianceFields: {
    contentMasterId: 'Float',
    individualId: 'Float',
  },
  ContentMasterContributorsVarPopFields: {
    contentMasterId: 'Float',
    individualId: 'Float',
  },
  ContentMasterContributorsVarSampFields: {
    contentMasterId: 'Float',
    individualId: 'Float',
  },
  ContentMasterMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    rootContentId: 'bigint',
    slug: 'String',
    tenantId: 'bigint',
    type: 'String',
  },
  ContentMasterMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    rootContentId: 'bigint',
    slug: 'String',
    tenantId: 'bigint',
    type: 'String',
  },
  ContentMasterMutationResponse: {
    affectedRows: 'Int',
    returning: 'ContentMaster',
  },
  ContentMasterStddevFields: {
    createdById: 'Float',
    id: 'Float',
    rootContentId: 'Float',
    tenantId: 'Float',
  },
  ContentMasterStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    rootContentId: 'Float',
    tenantId: 'Float',
  },
  ContentMasterStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    rootContentId: 'Float',
    tenantId: 'Float',
  },
  ContentMasterSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    rootContentId: 'bigint',
    tenantId: 'bigint',
  },
  ContentMasterTags: {
    contentMaster: 'ContentMaster',
    contentMasterId: 'bigint',
    tag: 'Tag',
    tagId: 'bigint',
  },
  ContentMasterTagsAggregate: {
    aggregate: 'ContentMasterTagsAggregateFields',
    nodes: 'ContentMasterTags',
  },
  ContentMasterTagsAggregateFields: {
    avg: 'ContentMasterTagsAvgFields',
    count: 'Int',
    max: 'ContentMasterTagsMaxFields',
    min: 'ContentMasterTagsMinFields',
    stddev: 'ContentMasterTagsStddevFields',
    stddevPop: 'ContentMasterTagsStddevPopFields',
    stddevSamp: 'ContentMasterTagsStddevSampFields',
    sum: 'ContentMasterTagsSumFields',
    varPop: 'ContentMasterTagsVarPopFields',
    varSamp: 'ContentMasterTagsVarSampFields',
    variance: 'ContentMasterTagsVarianceFields',
  },
  ContentMasterTagsAvgFields: {
    contentMasterId: 'Float',
    tagId: 'Float',
  },
  ContentMasterTagsMaxFields: {
    contentMasterId: 'bigint',
    tagId: 'bigint',
  },
  ContentMasterTagsMinFields: {
    contentMasterId: 'bigint',
    tagId: 'bigint',
  },
  ContentMasterTagsMutationResponse: {
    affectedRows: 'Int',
    returning: 'ContentMasterTags',
  },
  ContentMasterTagsStddevFields: {
    contentMasterId: 'Float',
    tagId: 'Float',
  },
  ContentMasterTagsStddevPopFields: {
    contentMasterId: 'Float',
    tagId: 'Float',
  },
  ContentMasterTagsStddevSampFields: {
    contentMasterId: 'Float',
    tagId: 'Float',
  },
  ContentMasterTagsSumFields: {
    contentMasterId: 'bigint',
    tagId: 'bigint',
  },
  ContentMasterTagsVarianceFields: {
    contentMasterId: 'Float',
    tagId: 'Float',
  },
  ContentMasterTagsVarPopFields: {
    contentMasterId: 'Float',
    tagId: 'Float',
  },
  ContentMasterTagsVarSampFields: {
    contentMasterId: 'Float',
    tagId: 'Float',
  },
  ContentMasterVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    rootContentId: 'Float',
    tenantId: 'Float',
  },
  ContentMasterVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    rootContentId: 'Float',
    tenantId: 'Float',
  },
  ContentMasterVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    rootContentId: 'Float',
    tenantId: 'Float',
  },
  ContentMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    parentId: 'bigint',
    tenantId: 'bigint',
    text: 'String',
  },
  ContentMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    parentId: 'bigint',
    tenantId: 'bigint',
    text: 'String',
  },
  ContentMutationResponse: {
    affectedRows: 'Int',
    returning: 'Content',
  },
  ContentRepresentingTeams: {
    content: 'Content',
    contentId: 'bigint',
    team: 'Team',
    teamId: 'bigint',
  },
  ContentRepresentingTeamsAggregate: {
    aggregate: 'ContentRepresentingTeamsAggregateFields',
    nodes: 'ContentRepresentingTeams',
  },
  ContentRepresentingTeamsAggregateFields: {
    avg: 'ContentRepresentingTeamsAvgFields',
    count: 'Int',
    max: 'ContentRepresentingTeamsMaxFields',
    min: 'ContentRepresentingTeamsMinFields',
    stddev: 'ContentRepresentingTeamsStddevFields',
    stddevPop: 'ContentRepresentingTeamsStddevPopFields',
    stddevSamp: 'ContentRepresentingTeamsStddevSampFields',
    sum: 'ContentRepresentingTeamsSumFields',
    varPop: 'ContentRepresentingTeamsVarPopFields',
    varSamp: 'ContentRepresentingTeamsVarSampFields',
    variance: 'ContentRepresentingTeamsVarianceFields',
  },
  ContentRepresentingTeamsAvgFields: {
    contentId: 'Float',
    teamId: 'Float',
  },
  ContentRepresentingTeamsMaxFields: {
    contentId: 'bigint',
    teamId: 'bigint',
  },
  ContentRepresentingTeamsMinFields: {
    contentId: 'bigint',
    teamId: 'bigint',
  },
  ContentRepresentingTeamsMutationResponse: {
    affectedRows: 'Int',
    returning: 'ContentRepresentingTeams',
  },
  ContentRepresentingTeamsStddevFields: {
    contentId: 'Float',
    teamId: 'Float',
  },
  ContentRepresentingTeamsStddevPopFields: {
    contentId: 'Float',
    teamId: 'Float',
  },
  ContentRepresentingTeamsStddevSampFields: {
    contentId: 'Float',
    teamId: 'Float',
  },
  ContentRepresentingTeamsSumFields: {
    contentId: 'bigint',
    teamId: 'bigint',
  },
  ContentRepresentingTeamsVarianceFields: {
    contentId: 'Float',
    teamId: 'Float',
  },
  ContentRepresentingTeamsVarPopFields: {
    contentId: 'Float',
    teamId: 'Float',
  },
  ContentRepresentingTeamsVarSampFields: {
    contentId: 'Float',
    teamId: 'Float',
  },
  ContentStddevFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    parentId: 'Float',
    tenantId: 'Float',
  },
  ContentStddevPopFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    parentId: 'Float',
    tenantId: 'Float',
  },
  ContentStddevSampFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    parentId: 'Float',
    tenantId: 'Float',
  },
  ContentSumFields: {
    createdById: 'bigint',
    eventId: 'bigint',
    id: 'bigint',
    parentId: 'bigint',
    tenantId: 'bigint',
  },
  ContentVarianceFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    parentId: 'Float',
    tenantId: 'Float',
  },
  ContentVarPopFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    parentId: 'Float',
    tenantId: 'Float',
  },
  ContentVarSampFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    parentId: 'Float',
    tenantId: 'Float',
  },
  Document: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    documentEdits: 'DocumentEdit',
    documentEditsAggregate: 'DocumentEditAggregate',
    fileId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    name: 'String',
    subject: 'Subject',
    subjectId: 'bigint',
    team: 'Team',
    teamId: 'bigint',
    tenant: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
    upload: 'Upload',
    yearVersion: 'smallint',
  },
  DocumentAggregate: {
    aggregate: 'DocumentAggregateFields',
    nodes: 'Document',
  },
  DocumentAggregateFields: {
    avg: 'DocumentAvgFields',
    count: 'Int',
    max: 'DocumentMaxFields',
    min: 'DocumentMinFields',
    stddev: 'DocumentStddevFields',
    stddevPop: 'DocumentStddevPopFields',
    stddevSamp: 'DocumentStddevSampFields',
    sum: 'DocumentSumFields',
    varPop: 'DocumentVarPopFields',
    varSamp: 'DocumentVarSampFields',
    variance: 'DocumentVarianceFields',
  },
  DocumentAvgFields: {
    createdById: 'Float',
    fileId: 'Float',
    id: 'Float',
    subjectId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    yearVersion: 'Float',
  },
  DocumentEdit: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    document: 'Document',
    documentId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    newVersionId: 'bigint',
    tenant: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
    upload: 'Upload',
    yearVersion: 'smallint',
  },
  DocumentEditAggregate: {
    aggregate: 'DocumentEditAggregateFields',
    nodes: 'DocumentEdit',
  },
  DocumentEditAggregateFields: {
    avg: 'DocumentEditAvgFields',
    count: 'Int',
    max: 'DocumentEditMaxFields',
    min: 'DocumentEditMinFields',
    stddev: 'DocumentEditStddevFields',
    stddevPop: 'DocumentEditStddevPopFields',
    stddevSamp: 'DocumentEditStddevSampFields',
    sum: 'DocumentEditSumFields',
    varPop: 'DocumentEditVarPopFields',
    varSamp: 'DocumentEditVarSampFields',
    variance: 'DocumentEditVarianceFields',
  },
  DocumentEditAvgFields: {
    createdById: 'Float',
    documentId: 'Float',
    id: 'Float',
    newVersionId: 'Float',
    tenantId: 'Float',
    yearVersion: 'Float',
  },
  DocumentEditMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    documentId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    newVersionId: 'bigint',
    tenantId: 'bigint',
    type: 'String',
    yearVersion: 'smallint',
  },
  DocumentEditMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    documentId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    newVersionId: 'bigint',
    tenantId: 'bigint',
    type: 'String',
    yearVersion: 'smallint',
  },
  DocumentEditMutationResponse: {
    affectedRows: 'Int',
    returning: 'DocumentEdit',
  },
  DocumentEditStddevFields: {
    createdById: 'Float',
    documentId: 'Float',
    id: 'Float',
    newVersionId: 'Float',
    tenantId: 'Float',
    yearVersion: 'Float',
  },
  DocumentEditStddevPopFields: {
    createdById: 'Float',
    documentId: 'Float',
    id: 'Float',
    newVersionId: 'Float',
    tenantId: 'Float',
    yearVersion: 'Float',
  },
  DocumentEditStddevSampFields: {
    createdById: 'Float',
    documentId: 'Float',
    id: 'Float',
    newVersionId: 'Float',
    tenantId: 'Float',
    yearVersion: 'Float',
  },
  DocumentEditSumFields: {
    createdById: 'bigint',
    documentId: 'bigint',
    id: 'bigint',
    newVersionId: 'bigint',
    tenantId: 'bigint',
    yearVersion: 'smallint',
  },
  DocumentEditVarianceFields: {
    createdById: 'Float',
    documentId: 'Float',
    id: 'Float',
    newVersionId: 'Float',
    tenantId: 'Float',
    yearVersion: 'Float',
  },
  DocumentEditVarPopFields: {
    createdById: 'Float',
    documentId: 'Float',
    id: 'Float',
    newVersionId: 'Float',
    tenantId: 'Float',
    yearVersion: 'Float',
  },
  DocumentEditVarSampFields: {
    createdById: 'Float',
    documentId: 'Float',
    id: 'Float',
    newVersionId: 'Float',
    tenantId: 'Float',
    yearVersion: 'Float',
  },
  DocumentMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    fileId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    subjectId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    type: 'String',
    yearVersion: 'smallint',
  },
  DocumentMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    fileId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    subjectId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    type: 'String',
    yearVersion: 'smallint',
  },
  DocumentMutationResponse: {
    affectedRows: 'Int',
    returning: 'Document',
  },
  DocumentStddevFields: {
    createdById: 'Float',
    fileId: 'Float',
    id: 'Float',
    subjectId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    yearVersion: 'Float',
  },
  DocumentStddevPopFields: {
    createdById: 'Float',
    fileId: 'Float',
    id: 'Float',
    subjectId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    yearVersion: 'Float',
  },
  DocumentStddevSampFields: {
    createdById: 'Float',
    fileId: 'Float',
    id: 'Float',
    subjectId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    yearVersion: 'Float',
  },
  DocumentSumFields: {
    createdById: 'bigint',
    fileId: 'bigint',
    id: 'bigint',
    subjectId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
    yearVersion: 'smallint',
  },
  DocumentVarianceFields: {
    createdById: 'Float',
    fileId: 'Float',
    id: 'Float',
    subjectId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    yearVersion: 'Float',
  },
  DocumentVarPopFields: {
    createdById: 'Float',
    fileId: 'Float',
    id: 'Float',
    subjectId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    yearVersion: 'Float',
  },
  DocumentVarSampFields: {
    createdById: 'Float',
    fileId: 'Float',
    id: 'Float',
    subjectId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    yearVersion: 'Float',
  },
  Event: {
    actions: 'Action',
    actionsAggregate: 'ActionAggregate',
    actorAddress: 'ActorAddress',
    approvalSubmissionId: 'bigint',
    autoAcceptJoins: 'Boolean',
    contentId: 'bigint',
    contentMaster: 'ContentMaster',
    contents: 'Content',
    contentsAggregate: 'ContentAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    end: 'timestamptz',
    event: 'Event',
    eventApprovalStep: 'EventApprovalStep',
    eventApprovals: 'EventApproval',
    eventApprovalsAggregate: 'EventApprovalAggregate',
    eventJoins: 'EventJoin',
    eventJoinsAggregate: 'EventJoinAggregate',
    eventOrganisingTeams: 'EventOrganisingTeams',
    eventOrganisingTeamsAggregate: 'EventOrganisingTeamsAggregate',
    eventRoles: 'EventRole',
    eventRolesAggregate: 'EventRoleAggregate',
    eventTags: 'EventTags',
    eventTagsAggregate: 'EventTagsAggregate',
    eventTeams: 'EventTeams',
    eventTeamsAggregate: 'EventTeamsAggregate',
    events: 'Event',
    eventsAggregate: 'EventAggregate',
    form: 'Form',
    formSubmission: 'FormSubmission',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    individual: 'Individual',
    isPrivate: 'Boolean',
    joinFormId: 'bigint',
    lastEventApprovalStepId: 'bigint',
    locationId: 'bigint',
    meta: 'jsonb',
    price: 'Float',
    project: 'Project',
    projectId: 'bigint',
    regularEventId: 'bigint',
    regularEventInterval: 'String',
    slug: 'String',
    start: 'timestamptz',
    state: 'String',
    supervisorId: 'bigint',
    teamEvents: 'TeamEvents',
    teamEventsAggregate: 'TeamEventsAggregate',
    teamFinances: 'TeamFinance',
    teamFinancesAggregate: 'TeamFinanceAggregate',
    tenant: 'Tenant',
    tenantId: 'bigint',
    upload: 'Upload',
    userInfo: 'UserInfo',
  },
  EventAggregate: {
    aggregate: 'EventAggregateFields',
    nodes: 'Event',
  },
  EventAggregateFields: {
    avg: 'EventAvgFields',
    count: 'Int',
    max: 'EventMaxFields',
    min: 'EventMinFields',
    stddev: 'EventStddevFields',
    stddevPop: 'EventStddevPopFields',
    stddevSamp: 'EventStddevSampFields',
    sum: 'EventSumFields',
    varPop: 'EventVarPopFields',
    varSamp: 'EventVarSampFields',
    variance: 'EventVarianceFields',
  },
  EventApproval: {
    approved: 'Boolean',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    event: 'Event',
    eventApprovalStep: 'EventApprovalStep',
    eventId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    message: 'String',
    stepId: 'bigint',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  EventApprovalAggregate: {
    aggregate: 'EventApprovalAggregateFields',
    nodes: 'EventApproval',
  },
  EventApprovalAggregateFields: {
    avg: 'EventApprovalAvgFields',
    count: 'Int',
    max: 'EventApprovalMaxFields',
    min: 'EventApprovalMinFields',
    stddev: 'EventApprovalStddevFields',
    stddevPop: 'EventApprovalStddevPopFields',
    stddevSamp: 'EventApprovalStddevSampFields',
    sum: 'EventApprovalSumFields',
    varPop: 'EventApprovalVarPopFields',
    varSamp: 'EventApprovalVarSampFields',
    variance: 'EventApprovalVarianceFields',
  },
  EventApprovalAvgFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    stepId: 'Float',
    tenantId: 'Float',
  },
  EventApprovalMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    message: 'String',
    stepId: 'bigint',
    tenantId: 'bigint',
  },
  EventApprovalMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    message: 'String',
    stepId: 'bigint',
    tenantId: 'bigint',
  },
  EventApprovalMutationResponse: {
    affectedRows: 'Int',
    returning: 'EventApproval',
  },
  EventApprovalStddevFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    stepId: 'Float',
    tenantId: 'Float',
  },
  EventApprovalStddevPopFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    stepId: 'Float',
    tenantId: 'Float',
  },
  EventApprovalStddevSampFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    stepId: 'Float',
    tenantId: 'Float',
  },
  EventApprovalStep: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventApprovalStepNotifiees: 'EventApprovalStepNotifiees',
    eventApprovalStepNotifieesAggregate: 'EventApprovalStepNotifieesAggregate',
    eventApprovalStepValidators: 'EventApprovalStepValidators',
    eventApprovalStepValidatorsAggregate: 'EventApprovalStepValidatorsAggregate',
    eventApprovals: 'EventApproval',
    eventApprovalsAggregate: 'EventApprovalAggregate',
    events: 'Event',
    eventsAggregate: 'EventAggregate',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    name: 'String',
    stepOrder: 'Int',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  EventApprovalStepAggregate: {
    aggregate: 'EventApprovalStepAggregateFields',
    nodes: 'EventApprovalStep',
  },
  EventApprovalStepAggregateFields: {
    avg: 'EventApprovalStepAvgFields',
    count: 'Int',
    max: 'EventApprovalStepMaxFields',
    min: 'EventApprovalStepMinFields',
    stddev: 'EventApprovalStepStddevFields',
    stddevPop: 'EventApprovalStepStddevPopFields',
    stddevSamp: 'EventApprovalStepStddevSampFields',
    sum: 'EventApprovalStepSumFields',
    varPop: 'EventApprovalStepVarPopFields',
    varSamp: 'EventApprovalStepVarSampFields',
    variance: 'EventApprovalStepVarianceFields',
  },
  EventApprovalStepAvgFields: {
    createdById: 'Float',
    id: 'Float',
    stepOrder: 'Float',
    tenantId: 'Float',
  },
  EventApprovalStepMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    stepOrder: 'Int',
    tenantId: 'bigint',
  },
  EventApprovalStepMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    stepOrder: 'Int',
    tenantId: 'bigint',
  },
  EventApprovalStepMutationResponse: {
    affectedRows: 'Int',
    returning: 'EventApprovalStep',
  },
  EventApprovalStepNotifiees: {
    eventApprovalStep: 'EventApprovalStep',
    eventApprovalStepId: 'bigint',
    individual: 'Individual',
    individualId: 'bigint',
  },
  EventApprovalStepNotifieesAggregate: {
    aggregate: 'EventApprovalStepNotifieesAggregateFields',
    nodes: 'EventApprovalStepNotifiees',
  },
  EventApprovalStepNotifieesAggregateFields: {
    avg: 'EventApprovalStepNotifieesAvgFields',
    count: 'Int',
    max: 'EventApprovalStepNotifieesMaxFields',
    min: 'EventApprovalStepNotifieesMinFields',
    stddev: 'EventApprovalStepNotifieesStddevFields',
    stddevPop: 'EventApprovalStepNotifieesStddevPopFields',
    stddevSamp: 'EventApprovalStepNotifieesStddevSampFields',
    sum: 'EventApprovalStepNotifieesSumFields',
    varPop: 'EventApprovalStepNotifieesVarPopFields',
    varSamp: 'EventApprovalStepNotifieesVarSampFields',
    variance: 'EventApprovalStepNotifieesVarianceFields',
  },
  EventApprovalStepNotifieesAvgFields: {
    eventApprovalStepId: 'Float',
    individualId: 'Float',
  },
  EventApprovalStepNotifieesMaxFields: {
    eventApprovalStepId: 'bigint',
    individualId: 'bigint',
  },
  EventApprovalStepNotifieesMinFields: {
    eventApprovalStepId: 'bigint',
    individualId: 'bigint',
  },
  EventApprovalStepNotifieesMutationResponse: {
    affectedRows: 'Int',
    returning: 'EventApprovalStepNotifiees',
  },
  EventApprovalStepNotifieesStddevFields: {
    eventApprovalStepId: 'Float',
    individualId: 'Float',
  },
  EventApprovalStepNotifieesStddevPopFields: {
    eventApprovalStepId: 'Float',
    individualId: 'Float',
  },
  EventApprovalStepNotifieesStddevSampFields: {
    eventApprovalStepId: 'Float',
    individualId: 'Float',
  },
  EventApprovalStepNotifieesSumFields: {
    eventApprovalStepId: 'bigint',
    individualId: 'bigint',
  },
  EventApprovalStepNotifieesVarianceFields: {
    eventApprovalStepId: 'Float',
    individualId: 'Float',
  },
  EventApprovalStepNotifieesVarPopFields: {
    eventApprovalStepId: 'Float',
    individualId: 'Float',
  },
  EventApprovalStepNotifieesVarSampFields: {
    eventApprovalStepId: 'Float',
    individualId: 'Float',
  },
  EventApprovalStepStddevFields: {
    createdById: 'Float',
    id: 'Float',
    stepOrder: 'Float',
    tenantId: 'Float',
  },
  EventApprovalStepStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    stepOrder: 'Float',
    tenantId: 'Float',
  },
  EventApprovalStepStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    stepOrder: 'Float',
    tenantId: 'Float',
  },
  EventApprovalStepSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    stepOrder: 'Int',
    tenantId: 'bigint',
  },
  EventApprovalStepValidators: {
    eventApprovalStep: 'EventApprovalStep',
    eventApprovalStepId: 'bigint',
    individual: 'Individual',
    individualId: 'bigint',
  },
  EventApprovalStepValidatorsAggregate: {
    aggregate: 'EventApprovalStepValidatorsAggregateFields',
    nodes: 'EventApprovalStepValidators',
  },
  EventApprovalStepValidatorsAggregateFields: {
    avg: 'EventApprovalStepValidatorsAvgFields',
    count: 'Int',
    max: 'EventApprovalStepValidatorsMaxFields',
    min: 'EventApprovalStepValidatorsMinFields',
    stddev: 'EventApprovalStepValidatorsStddevFields',
    stddevPop: 'EventApprovalStepValidatorsStddevPopFields',
    stddevSamp: 'EventApprovalStepValidatorsStddevSampFields',
    sum: 'EventApprovalStepValidatorsSumFields',
    varPop: 'EventApprovalStepValidatorsVarPopFields',
    varSamp: 'EventApprovalStepValidatorsVarSampFields',
    variance: 'EventApprovalStepValidatorsVarianceFields',
  },
  EventApprovalStepValidatorsAvgFields: {
    eventApprovalStepId: 'Float',
    individualId: 'Float',
  },
  EventApprovalStepValidatorsMaxFields: {
    eventApprovalStepId: 'bigint',
    individualId: 'bigint',
  },
  EventApprovalStepValidatorsMinFields: {
    eventApprovalStepId: 'bigint',
    individualId: 'bigint',
  },
  EventApprovalStepValidatorsMutationResponse: {
    affectedRows: 'Int',
    returning: 'EventApprovalStepValidators',
  },
  EventApprovalStepValidatorsStddevFields: {
    eventApprovalStepId: 'Float',
    individualId: 'Float',
  },
  EventApprovalStepValidatorsStddevPopFields: {
    eventApprovalStepId: 'Float',
    individualId: 'Float',
  },
  EventApprovalStepValidatorsStddevSampFields: {
    eventApprovalStepId: 'Float',
    individualId: 'Float',
  },
  EventApprovalStepValidatorsSumFields: {
    eventApprovalStepId: 'bigint',
    individualId: 'bigint',
  },
  EventApprovalStepValidatorsVarianceFields: {
    eventApprovalStepId: 'Float',
    individualId: 'Float',
  },
  EventApprovalStepValidatorsVarPopFields: {
    eventApprovalStepId: 'Float',
    individualId: 'Float',
  },
  EventApprovalStepValidatorsVarSampFields: {
    eventApprovalStepId: 'Float',
    individualId: 'Float',
  },
  EventApprovalStepVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    stepOrder: 'Float',
    tenantId: 'Float',
  },
  EventApprovalStepVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    stepOrder: 'Float',
    tenantId: 'Float',
  },
  EventApprovalStepVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    stepOrder: 'Float',
    tenantId: 'Float',
  },
  EventApprovalSumFields: {
    createdById: 'bigint',
    eventId: 'bigint',
    id: 'bigint',
    stepId: 'bigint',
    tenantId: 'bigint',
  },
  EventApprovalVarianceFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    stepId: 'Float',
    tenantId: 'Float',
  },
  EventApprovalVarPopFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    stepId: 'Float',
    tenantId: 'Float',
  },
  EventApprovalVarSampFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    stepId: 'Float',
    tenantId: 'Float',
  },
  EventAvgFields: {
    approvalSubmissionId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    joinFormId: 'Float',
    lastEventApprovalStepId: 'Float',
    locationId: 'Float',
    price: 'Float',
    projectId: 'Float',
    regularEventId: 'Float',
    supervisorId: 'Float',
    tenantId: 'Float',
  },
  EventChangeRole: {
    accepted: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventJoin: 'EventJoin',
    eventRole: 'EventRole',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    note: 'String',
    receivedRoleId: 'bigint',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  EventChangeRoleAggregate: {
    aggregate: 'EventChangeRoleAggregateFields',
    nodes: 'EventChangeRole',
  },
  EventChangeRoleAggregateFields: {
    avg: 'EventChangeRoleAvgFields',
    count: 'Int',
    max: 'EventChangeRoleMaxFields',
    min: 'EventChangeRoleMinFields',
    stddev: 'EventChangeRoleStddevFields',
    stddevPop: 'EventChangeRoleStddevPopFields',
    stddevSamp: 'EventChangeRoleStddevSampFields',
    sum: 'EventChangeRoleSumFields',
    varPop: 'EventChangeRoleVarPopFields',
    varSamp: 'EventChangeRoleVarSampFields',
    variance: 'EventChangeRoleVarianceFields',
  },
  EventChangeRoleAvgFields: {
    createdById: 'Float',
    id: 'Float',
    receivedRoleId: 'Float',
    tenantId: 'Float',
  },
  EventChangeRoleMaxFields: {
    accepted: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    note: 'String',
    receivedRoleId: 'bigint',
    tenantId: 'bigint',
  },
  EventChangeRoleMinFields: {
    accepted: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    note: 'String',
    receivedRoleId: 'bigint',
    tenantId: 'bigint',
  },
  EventChangeRoleMutationResponse: {
    affectedRows: 'Int',
    returning: 'EventChangeRole',
  },
  EventChangeRoleStddevFields: {
    createdById: 'Float',
    id: 'Float',
    receivedRoleId: 'Float',
    tenantId: 'Float',
  },
  EventChangeRoleStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    receivedRoleId: 'Float',
    tenantId: 'Float',
  },
  EventChangeRoleStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    receivedRoleId: 'Float',
    tenantId: 'Float',
  },
  EventChangeRoleSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    receivedRoleId: 'bigint',
    tenantId: 'bigint',
  },
  EventChangeRoleVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    receivedRoleId: 'Float',
    tenantId: 'Float',
  },
  EventChangeRoleVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    receivedRoleId: 'Float',
    tenantId: 'Float',
  },
  EventChangeRoleVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    receivedRoleId: 'Float',
    tenantId: 'Float',
  },
  EventJoin: {
    action: 'Action',
    actionId: 'bigint',
    actions: 'Action',
    actionsAggregate: 'ActionAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    event: 'Event',
    eventChangeRole: 'EventChangeRole',
    eventChangeRoleId: 'bigint',
    eventId: 'bigint',
    eventRole: 'EventRole',
    eventRoleId: 'bigint',
    formSubmission: 'FormSubmission',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    joinerId: 'bigint',
    participated: 'Boolean',
    presenceStatus: 'String',
    state: 'String',
    tenant: 'Tenant',
    tenantId: 'bigint',
    userInfo: 'UserInfo',
  },
  EventJoinAggregate: {
    aggregate: 'EventJoinAggregateFields',
    nodes: 'EventJoin',
  },
  EventJoinAggregateFields: {
    avg: 'EventJoinAvgFields',
    count: 'Int',
    max: 'EventJoinMaxFields',
    min: 'EventJoinMinFields',
    stddev: 'EventJoinStddevFields',
    stddevPop: 'EventJoinStddevPopFields',
    stddevSamp: 'EventJoinStddevSampFields',
    sum: 'EventJoinSumFields',
    varPop: 'EventJoinVarPopFields',
    varSamp: 'EventJoinVarSampFields',
    variance: 'EventJoinVarianceFields',
  },
  EventJoinAvgFields: {
    actionId: 'Float',
    createdById: 'Float',
    eventChangeRoleId: 'Float',
    eventId: 'Float',
    eventRoleId: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    joinerId: 'Float',
    tenantId: 'Float',
  },
  EventJoinMaxFields: {
    actionId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventChangeRoleId: 'bigint',
    eventId: 'bigint',
    eventRoleId: 'bigint',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    joinerId: 'bigint',
    presenceStatus: 'String',
    state: 'String',
    tenantId: 'bigint',
  },
  EventJoinMinFields: {
    actionId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventChangeRoleId: 'bigint',
    eventId: 'bigint',
    eventRoleId: 'bigint',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    joinerId: 'bigint',
    presenceStatus: 'String',
    state: 'String',
    tenantId: 'bigint',
  },
  EventJoinMutationResponse: {
    affectedRows: 'Int',
    returning: 'EventJoin',
  },
  EventJoinStddevFields: {
    actionId: 'Float',
    createdById: 'Float',
    eventChangeRoleId: 'Float',
    eventId: 'Float',
    eventRoleId: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    joinerId: 'Float',
    tenantId: 'Float',
  },
  EventJoinStddevPopFields: {
    actionId: 'Float',
    createdById: 'Float',
    eventChangeRoleId: 'Float',
    eventId: 'Float',
    eventRoleId: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    joinerId: 'Float',
    tenantId: 'Float',
  },
  EventJoinStddevSampFields: {
    actionId: 'Float',
    createdById: 'Float',
    eventChangeRoleId: 'Float',
    eventId: 'Float',
    eventRoleId: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    joinerId: 'Float',
    tenantId: 'Float',
  },
  EventJoinSumFields: {
    actionId: 'bigint',
    createdById: 'bigint',
    eventChangeRoleId: 'bigint',
    eventId: 'bigint',
    eventRoleId: 'bigint',
    formSubmissionId: 'bigint',
    id: 'bigint',
    joinerId: 'bigint',
    tenantId: 'bigint',
  },
  EventJoinVarianceFields: {
    actionId: 'Float',
    createdById: 'Float',
    eventChangeRoleId: 'Float',
    eventId: 'Float',
    eventRoleId: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    joinerId: 'Float',
    tenantId: 'Float',
  },
  EventJoinVarPopFields: {
    actionId: 'Float',
    createdById: 'Float',
    eventChangeRoleId: 'Float',
    eventId: 'Float',
    eventRoleId: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    joinerId: 'Float',
    tenantId: 'Float',
  },
  EventJoinVarSampFields: {
    actionId: 'Float',
    createdById: 'Float',
    eventChangeRoleId: 'Float',
    eventId: 'Float',
    eventRoleId: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    joinerId: 'Float',
    tenantId: 'Float',
  },
  EventMaxFields: {
    approvalSubmissionId: 'bigint',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    end: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    joinFormId: 'bigint',
    lastEventApprovalStepId: 'bigint',
    locationId: 'bigint',
    price: 'Float',
    projectId: 'bigint',
    regularEventId: 'bigint',
    regularEventInterval: 'String',
    slug: 'String',
    start: 'timestamptz',
    state: 'String',
    supervisorId: 'bigint',
    tenantId: 'bigint',
  },
  EventMinFields: {
    approvalSubmissionId: 'bigint',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    end: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    joinFormId: 'bigint',
    lastEventApprovalStepId: 'bigint',
    locationId: 'bigint',
    price: 'Float',
    projectId: 'bigint',
    regularEventId: 'bigint',
    regularEventInterval: 'String',
    slug: 'String',
    start: 'timestamptz',
    state: 'String',
    supervisorId: 'bigint',
    tenantId: 'bigint',
  },
  EventMutationResponse: {
    affectedRows: 'Int',
    returning: 'Event',
  },
  EventOrganisingTeams: {
    event: 'Event',
    eventId: 'bigint',
    team: 'Team',
    teamId: 'bigint',
  },
  EventOrganisingTeamsAggregate: {
    aggregate: 'EventOrganisingTeamsAggregateFields',
    nodes: 'EventOrganisingTeams',
  },
  EventOrganisingTeamsAggregateFields: {
    avg: 'EventOrganisingTeamsAvgFields',
    count: 'Int',
    max: 'EventOrganisingTeamsMaxFields',
    min: 'EventOrganisingTeamsMinFields',
    stddev: 'EventOrganisingTeamsStddevFields',
    stddevPop: 'EventOrganisingTeamsStddevPopFields',
    stddevSamp: 'EventOrganisingTeamsStddevSampFields',
    sum: 'EventOrganisingTeamsSumFields',
    varPop: 'EventOrganisingTeamsVarPopFields',
    varSamp: 'EventOrganisingTeamsVarSampFields',
    variance: 'EventOrganisingTeamsVarianceFields',
  },
  EventOrganisingTeamsAvgFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  EventOrganisingTeamsMaxFields: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  EventOrganisingTeamsMinFields: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  EventOrganisingTeamsMutationResponse: {
    affectedRows: 'Int',
    returning: 'EventOrganisingTeams',
  },
  EventOrganisingTeamsStddevFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  EventOrganisingTeamsStddevPopFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  EventOrganisingTeamsStddevSampFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  EventOrganisingTeamsSumFields: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  EventOrganisingTeamsVarianceFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  EventOrganisingTeamsVarPopFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  EventOrganisingTeamsVarSampFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  EventRole: {
    autoAccept: 'Boolean',
    color: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    event: 'Event',
    eventChangeRoles: 'EventChangeRole',
    eventChangeRolesAggregate: 'EventChangeRoleAggregate',
    eventId: 'bigint',
    eventJoins: 'EventJoin',
    eventJoinsAggregate: 'EventJoinAggregate',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    name: 'String',
    projectRole: 'ProjectRole',
    projectRoleId: 'bigint',
    required: 'Boolean',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenant: 'Tenant',
    tenantId: 'bigint',
    userId: 'bigint',
    userInfo: 'UserInfo',
  },
  EventRoleAggregate: {
    aggregate: 'EventRoleAggregateFields',
    nodes: 'EventRole',
  },
  EventRoleAggregateFields: {
    avg: 'EventRoleAvgFields',
    count: 'Int',
    max: 'EventRoleMaxFields',
    min: 'EventRoleMinFields',
    stddev: 'EventRoleStddevFields',
    stddevPop: 'EventRoleStddevPopFields',
    stddevSamp: 'EventRoleStddevSampFields',
    sum: 'EventRoleSumFields',
    varPop: 'EventRoleVarPopFields',
    varSamp: 'EventRoleVarSampFields',
    variance: 'EventRoleVarianceFields',
  },
  EventRoleAvgFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    projectRoleId: 'Float',
    rewardMaximum: 'Float',
    rewardMinimum: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  EventRoleMaxFields: {
    color: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    eventId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    projectRoleId: 'bigint',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  EventRoleMinFields: {
    color: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    eventId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    projectRoleId: 'bigint',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  EventRoleMutationResponse: {
    affectedRows: 'Int',
    returning: 'EventRole',
  },
  EventRoleStddevFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    projectRoleId: 'Float',
    rewardMaximum: 'Float',
    rewardMinimum: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  EventRoleStddevPopFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    projectRoleId: 'Float',
    rewardMaximum: 'Float',
    rewardMinimum: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  EventRoleStddevSampFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    projectRoleId: 'Float',
    rewardMaximum: 'Float',
    rewardMinimum: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  EventRoleSumFields: {
    createdById: 'bigint',
    eventId: 'bigint',
    id: 'bigint',
    projectRoleId: 'bigint',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  EventRoleVarianceFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    projectRoleId: 'Float',
    rewardMaximum: 'Float',
    rewardMinimum: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  EventRoleVarPopFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    projectRoleId: 'Float',
    rewardMaximum: 'Float',
    rewardMinimum: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  EventRoleVarSampFields: {
    createdById: 'Float',
    eventId: 'Float',
    id: 'Float',
    projectRoleId: 'Float',
    rewardMaximum: 'Float',
    rewardMinimum: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  EventStddevFields: {
    approvalSubmissionId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    joinFormId: 'Float',
    lastEventApprovalStepId: 'Float',
    locationId: 'Float',
    price: 'Float',
    projectId: 'Float',
    regularEventId: 'Float',
    supervisorId: 'Float',
    tenantId: 'Float',
  },
  EventStddevPopFields: {
    approvalSubmissionId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    joinFormId: 'Float',
    lastEventApprovalStepId: 'Float',
    locationId: 'Float',
    price: 'Float',
    projectId: 'Float',
    regularEventId: 'Float',
    supervisorId: 'Float',
    tenantId: 'Float',
  },
  EventStddevSampFields: {
    approvalSubmissionId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    joinFormId: 'Float',
    lastEventApprovalStepId: 'Float',
    locationId: 'Float',
    price: 'Float',
    projectId: 'Float',
    regularEventId: 'Float',
    supervisorId: 'Float',
    tenantId: 'Float',
  },
  EventSumFields: {
    approvalSubmissionId: 'bigint',
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    imageId: 'bigint',
    joinFormId: 'bigint',
    lastEventApprovalStepId: 'bigint',
    locationId: 'bigint',
    price: 'Float',
    projectId: 'bigint',
    regularEventId: 'bigint',
    supervisorId: 'bigint',
    tenantId: 'bigint',
  },
  EventTags: {
    event: 'Event',
    eventId: 'bigint',
    tag: 'Tag',
    tagId: 'bigint',
  },
  EventTagsAggregate: {
    aggregate: 'EventTagsAggregateFields',
    nodes: 'EventTags',
  },
  EventTagsAggregateFields: {
    avg: 'EventTagsAvgFields',
    count: 'Int',
    max: 'EventTagsMaxFields',
    min: 'EventTagsMinFields',
    stddev: 'EventTagsStddevFields',
    stddevPop: 'EventTagsStddevPopFields',
    stddevSamp: 'EventTagsStddevSampFields',
    sum: 'EventTagsSumFields',
    varPop: 'EventTagsVarPopFields',
    varSamp: 'EventTagsVarSampFields',
    variance: 'EventTagsVarianceFields',
  },
  EventTagsAvgFields: {
    eventId: 'Float',
    tagId: 'Float',
  },
  EventTagsMaxFields: {
    eventId: 'bigint',
    tagId: 'bigint',
  },
  EventTagsMinFields: {
    eventId: 'bigint',
    tagId: 'bigint',
  },
  EventTagsMutationResponse: {
    affectedRows: 'Int',
    returning: 'EventTags',
  },
  EventTagsStddevFields: {
    eventId: 'Float',
    tagId: 'Float',
  },
  EventTagsStddevPopFields: {
    eventId: 'Float',
    tagId: 'Float',
  },
  EventTagsStddevSampFields: {
    eventId: 'Float',
    tagId: 'Float',
  },
  EventTagsSumFields: {
    eventId: 'bigint',
    tagId: 'bigint',
  },
  EventTagsVarianceFields: {
    eventId: 'Float',
    tagId: 'Float',
  },
  EventTagsVarPopFields: {
    eventId: 'Float',
    tagId: 'Float',
  },
  EventTagsVarSampFields: {
    eventId: 'Float',
    tagId: 'Float',
  },
  EventTeams: {
    event: 'Event',
    eventId: 'bigint',
    team: 'Team',
    teamId: 'bigint',
  },
  EventTeamsAggregate: {
    aggregate: 'EventTeamsAggregateFields',
    nodes: 'EventTeams',
  },
  EventTeamsAggregateFields: {
    avg: 'EventTeamsAvgFields',
    count: 'Int',
    max: 'EventTeamsMaxFields',
    min: 'EventTeamsMinFields',
    stddev: 'EventTeamsStddevFields',
    stddevPop: 'EventTeamsStddevPopFields',
    stddevSamp: 'EventTeamsStddevSampFields',
    sum: 'EventTeamsSumFields',
    varPop: 'EventTeamsVarPopFields',
    varSamp: 'EventTeamsVarSampFields',
    variance: 'EventTeamsVarianceFields',
  },
  EventTeamsAvgFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  EventTeamsMaxFields: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  EventTeamsMinFields: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  EventTeamsMutationResponse: {
    affectedRows: 'Int',
    returning: 'EventTeams',
  },
  EventTeamsStddevFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  EventTeamsStddevPopFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  EventTeamsStddevSampFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  EventTeamsSumFields: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  EventTeamsVarianceFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  EventTeamsVarPopFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  EventTeamsVarSampFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  EventVarianceFields: {
    approvalSubmissionId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    joinFormId: 'Float',
    lastEventApprovalStepId: 'Float',
    locationId: 'Float',
    price: 'Float',
    projectId: 'Float',
    regularEventId: 'Float',
    supervisorId: 'Float',
    tenantId: 'Float',
  },
  EventVarPopFields: {
    approvalSubmissionId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    joinFormId: 'Float',
    lastEventApprovalStepId: 'Float',
    locationId: 'Float',
    price: 'Float',
    projectId: 'Float',
    regularEventId: 'Float',
    supervisorId: 'Float',
    tenantId: 'Float',
  },
  EventVarSampFields: {
    approvalSubmissionId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    joinFormId: 'Float',
    lastEventApprovalStepId: 'Float',
    locationId: 'Float',
    price: 'Float',
    projectId: 'Float',
    regularEventId: 'Float',
    supervisorId: 'Float',
    tenantId: 'Float',
  },
  Expense: {
    actorBankInfo: 'ActorBankInfo',
    actorFinances: 'ActorFinance',
    actorFinancesAggregate: 'ActorFinanceAggregate',
    bankInfoId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    expenseReportId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    issue: 'Issue',
    issueId: 'bigint',
    state: 'String',
    teamFinance: 'TeamFinance',
    tenant: 'Tenant',
    tenantId: 'bigint',
    upload: 'Upload',
  },
  ExpenseAggregate: {
    aggregate: 'ExpenseAggregateFields',
    nodes: 'Expense',
  },
  ExpenseAggregateFields: {
    avg: 'ExpenseAvgFields',
    count: 'Int',
    max: 'ExpenseMaxFields',
    min: 'ExpenseMinFields',
    stddev: 'ExpenseStddevFields',
    stddevPop: 'ExpenseStddevPopFields',
    stddevSamp: 'ExpenseStddevSampFields',
    sum: 'ExpenseSumFields',
    varPop: 'ExpenseVarPopFields',
    varSamp: 'ExpenseVarSampFields',
    variance: 'ExpenseVarianceFields',
  },
  ExpenseAvgFields: {
    bankInfoId: 'Float',
    createdById: 'Float',
    expenseReportId: 'Float',
    id: 'Float',
    issueId: 'Float',
    tenantId: 'Float',
  },
  ExpenseMaxFields: {
    bankInfoId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    expenseReportId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    issueId: 'bigint',
    state: 'String',
    tenantId: 'bigint',
  },
  ExpenseMinFields: {
    bankInfoId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    expenseReportId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    issueId: 'bigint',
    state: 'String',
    tenantId: 'bigint',
  },
  ExpenseMutationResponse: {
    affectedRows: 'Int',
    returning: 'Expense',
  },
  ExpenseStddevFields: {
    bankInfoId: 'Float',
    createdById: 'Float',
    expenseReportId: 'Float',
    id: 'Float',
    issueId: 'Float',
    tenantId: 'Float',
  },
  ExpenseStddevPopFields: {
    bankInfoId: 'Float',
    createdById: 'Float',
    expenseReportId: 'Float',
    id: 'Float',
    issueId: 'Float',
    tenantId: 'Float',
  },
  ExpenseStddevSampFields: {
    bankInfoId: 'Float',
    createdById: 'Float',
    expenseReportId: 'Float',
    id: 'Float',
    issueId: 'Float',
    tenantId: 'Float',
  },
  ExpenseSumFields: {
    bankInfoId: 'bigint',
    createdById: 'bigint',
    expenseReportId: 'bigint',
    id: 'bigint',
    issueId: 'bigint',
    tenantId: 'bigint',
  },
  ExpenseVarianceFields: {
    bankInfoId: 'Float',
    createdById: 'Float',
    expenseReportId: 'Float',
    id: 'Float',
    issueId: 'Float',
    tenantId: 'Float',
  },
  ExpenseVarPopFields: {
    bankInfoId: 'Float',
    createdById: 'Float',
    expenseReportId: 'Float',
    id: 'Float',
    issueId: 'Float',
    tenantId: 'Float',
  },
  ExpenseVarSampFields: {
    bankInfoId: 'Float',
    createdById: 'Float',
    expenseReportId: 'Float',
    id: 'Float',
    issueId: 'Float',
    tenantId: 'Float',
  },
  Favorite: {
    actor: 'Actor',
    actorId: 'bigint',
    content: 'Content',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    lastActiveDate: 'timestamptz',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  FavoriteAggregate: {
    aggregate: 'FavoriteAggregateFields',
    nodes: 'Favorite',
  },
  FavoriteAggregateFields: {
    avg: 'FavoriteAvgFields',
    count: 'Int',
    max: 'FavoriteMaxFields',
    min: 'FavoriteMinFields',
    stddev: 'FavoriteStddevFields',
    stddevPop: 'FavoriteStddevPopFields',
    stddevSamp: 'FavoriteStddevSampFields',
    sum: 'FavoriteSumFields',
    varPop: 'FavoriteVarPopFields',
    varSamp: 'FavoriteVarSampFields',
    variance: 'FavoriteVarianceFields',
  },
  FavoriteAvgFields: {
    actorId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FavoriteMaxFields: {
    actorId: 'bigint',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
  },
  FavoriteMinFields: {
    actorId: 'bigint',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
  },
  FavoriteMutationResponse: {
    affectedRows: 'Int',
    returning: 'Favorite',
  },
  FavoriteStddevFields: {
    actorId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FavoriteStddevPopFields: {
    actorId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FavoriteStddevSampFields: {
    actorId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FavoriteSumFields: {
    actorId: 'bigint',
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FavoriteVarianceFields: {
    actorId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FavoriteVarPopFields: {
    actorId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FavoriteVarSampFields: {
    actorId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  Form: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    events: 'Event',
    eventsAggregate: 'EventAggregate',
    formEdits: 'FormEdit',
    formEditsAggregate: 'FormEditAggregate',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    isAllowingEditingAnswers: 'Boolean',
    isAllowingMultipleAnswers: 'Boolean',
    isEnabled: 'Boolean',
    isRequired: 'Boolean',
    isTemplate: 'Boolean',
    name: 'String',
    schema: 'jsonb',
    team: 'Team',
    tenant: 'Tenant',
    tenantById: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
  },
  FormAggregate: {
    aggregate: 'FormAggregateFields',
    nodes: 'Form',
  },
  FormAggregateFields: {
    avg: 'FormAvgFields',
    count: 'Int',
    max: 'FormMaxFields',
    min: 'FormMinFields',
    stddev: 'FormStddevFields',
    stddevPop: 'FormStddevPopFields',
    stddevSamp: 'FormStddevSampFields',
    sum: 'FormSumFields',
    varPop: 'FormVarPopFields',
    varSamp: 'FormVarSampFields',
    variance: 'FormVarianceFields',
  },
  FormAvgFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormEdit: {
    addedDiff: 'jsonb',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    form: 'Form',
    formId: 'bigint',
    formSubmissions: 'FormSubmission',
    formSubmissionsAggregate: 'FormSubmissionAggregate',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    newVersion: 'jsonb',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  FormEditAggregate: {
    aggregate: 'FormEditAggregateFields',
    nodes: 'FormEdit',
  },
  FormEditAggregateFields: {
    avg: 'FormEditAvgFields',
    count: 'Int',
    max: 'FormEditMaxFields',
    min: 'FormEditMinFields',
    stddev: 'FormEditStddevFields',
    stddevPop: 'FormEditStddevPopFields',
    stddevSamp: 'FormEditStddevSampFields',
    sum: 'FormEditSumFields',
    varPop: 'FormEditVarPopFields',
    varSamp: 'FormEditVarSampFields',
    variance: 'FormEditVarianceFields',
  },
  FormEditAvgFields: {
    createdById: 'Float',
    formId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormEditMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FormEditMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FormEditMutationResponse: {
    affectedRows: 'Int',
    returning: 'FormEdit',
  },
  FormEditStddevFields: {
    createdById: 'Float',
    formId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormEditStddevPopFields: {
    createdById: 'Float',
    formId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormEditStddevSampFields: {
    createdById: 'Float',
    formId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormEditSumFields: {
    createdById: 'bigint',
    formId: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FormEditVarianceFields: {
    createdById: 'Float',
    formId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormEditVarPopFields: {
    createdById: 'Float',
    formId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormEditVarSampFields: {
    createdById: 'Float',
    formId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    tenantId: 'bigint',
    type: 'String',
  },
  FormMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    tenantId: 'bigint',
    type: 'String',
  },
  FormMutationResponse: {
    affectedRows: 'Int',
    returning: 'Form',
  },
  FormStddevFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSubmission: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    event: 'Event',
    eventJoins: 'EventJoin',
    eventJoinsAggregate: 'EventJoinAggregate',
    formEdit: 'FormEdit',
    formEditId: 'bigint',
    formSubmissionEdits: 'FormSubmissionEdit',
    formSubmissionEditsAggregate: 'FormSubmissionEditAggregate',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    submission: 'jsonb',
    teamJoins: 'TeamJoin',
    teamJoinsAggregate: 'TeamJoinAggregate',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  FormSubmissionAggregate: {
    aggregate: 'FormSubmissionAggregateFields',
    nodes: 'FormSubmission',
  },
  FormSubmissionAggregateFields: {
    avg: 'FormSubmissionAvgFields',
    count: 'Int',
    max: 'FormSubmissionMaxFields',
    min: 'FormSubmissionMinFields',
    stddev: 'FormSubmissionStddevFields',
    stddevPop: 'FormSubmissionStddevPopFields',
    stddevSamp: 'FormSubmissionStddevSampFields',
    sum: 'FormSubmissionSumFields',
    varPop: 'FormSubmissionVarPopFields',
    varSamp: 'FormSubmissionVarSampFields',
    variance: 'FormSubmissionVarianceFields',
  },
  FormSubmissionAvgFields: {
    createdById: 'Float',
    formEditId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSubmissionEdit: {
    addedDiff: 'jsonb',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formSubmission: 'FormSubmission',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    newVersion: 'jsonb',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  FormSubmissionEditAggregate: {
    aggregate: 'FormSubmissionEditAggregateFields',
    nodes: 'FormSubmissionEdit',
  },
  FormSubmissionEditAggregateFields: {
    avg: 'FormSubmissionEditAvgFields',
    count: 'Int',
    max: 'FormSubmissionEditMaxFields',
    min: 'FormSubmissionEditMinFields',
    stddev: 'FormSubmissionEditStddevFields',
    stddevPop: 'FormSubmissionEditStddevPopFields',
    stddevSamp: 'FormSubmissionEditStddevSampFields',
    sum: 'FormSubmissionEditSumFields',
    varPop: 'FormSubmissionEditVarPopFields',
    varSamp: 'FormSubmissionEditVarSampFields',
    variance: 'FormSubmissionEditVarianceFields',
  },
  FormSubmissionEditAvgFields: {
    createdById: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSubmissionEditMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FormSubmissionEditMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FormSubmissionEditMutationResponse: {
    affectedRows: 'Int',
    returning: 'FormSubmissionEdit',
  },
  FormSubmissionEditStddevFields: {
    createdById: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSubmissionEditStddevPopFields: {
    createdById: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSubmissionEditStddevSampFields: {
    createdById: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSubmissionEditSumFields: {
    createdById: 'bigint',
    formSubmissionId: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FormSubmissionEditVarianceFields: {
    createdById: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSubmissionEditVarPopFields: {
    createdById: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSubmissionEditVarSampFields: {
    createdById: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSubmissionMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formEditId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FormSubmissionMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formEditId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FormSubmissionMutationResponse: {
    affectedRows: 'Int',
    returning: 'FormSubmission',
  },
  FormSubmissionStddevFields: {
    createdById: 'Float',
    formEditId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSubmissionStddevPopFields: {
    createdById: 'Float',
    formEditId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSubmissionStddevSampFields: {
    createdById: 'Float',
    formEditId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSubmissionSumFields: {
    createdById: 'bigint',
    formEditId: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FormSubmissionVarianceFields: {
    createdById: 'Float',
    formEditId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSubmissionVarPopFields: {
    createdById: 'Float',
    formEditId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSubmissionVarSampFields: {
    createdById: 'Float',
    formEditId: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  FormVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  FormVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  Individual: {
    actions: 'Action',
    actionsAggregate: 'ActionAggregate',
    actor: 'Actor',
    actorAddresses: 'ActorAddress',
    actorAddressesAggregate: 'ActorAddressAggregate',
    actorBankInfos: 'ActorBankInfo',
    actorBankInfosAggregate: 'ActorBankInfoAggregate',
    actorFinances: 'ActorFinance',
    actorFinancesAggregate: 'ActorFinanceAggregate',
    actorImages: 'ActorImage',
    actorImagesAggregate: 'ActorImageAggregate',
    actors: 'Actor',
    actorsAggregate: 'ActorAggregate',
    botId: 'bigint',
    botInfo: 'BotInfo',
    botInfos: 'BotInfo',
    botInfosAggregate: 'BotInfoAggregate',
    canteenFoods: 'CanteenFood',
    canteenFoodsAggregate: 'CanteenFoodAggregate',
    canteenMenus: 'CanteenMenu',
    canteenMenusAggregate: 'CanteenMenuAggregate',
    canteens: 'Canteen',
    canteensAggregate: 'CanteenAggregate',
    changeRoles: 'ChangeRole',
    changeRolesAggregate: 'ChangeRoleAggregate',
    classGroupTeachers: 'ClassGroupTeacher',
    classGroupTeachersAggregate: 'ClassGroupTeacherAggregate',
    classGroups: 'ClassGroup',
    classGroupsAggregate: 'ClassGroupAggregate',
    cohorts: 'Cohort',
    cohortsAggregate: 'CohortAggregate',
    contentEdits: 'ContentEdit',
    contentEditsAggregate: 'ContentEditAggregate',
    contentMasterContributors: 'ContentMasterContributors',
    contentMasterContributorsAggregate: 'ContentMasterContributorsAggregate',
    contentMasters: 'ContentMaster',
    contentMastersAggregate: 'ContentMasterAggregate',
    contents: 'Content',
    contentsAggregate: 'ContentAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    documentEdits: 'DocumentEdit',
    documentEditsAggregate: 'DocumentEditAggregate',
    documents: 'Document',
    documentsAggregate: 'DocumentAggregate',
    eventApprovalStepNotifiees: 'EventApprovalStepNotifiees',
    eventApprovalStepNotifieesAggregate: 'EventApprovalStepNotifieesAggregate',
    eventApprovalStepValidators: 'EventApprovalStepValidators',
    eventApprovalStepValidatorsAggregate: 'EventApprovalStepValidatorsAggregate',
    eventApprovalSteps: 'EventApprovalStep',
    eventApprovalStepsAggregate: 'EventApprovalStepAggregate',
    eventApprovals: 'EventApproval',
    eventApprovalsAggregate: 'EventApprovalAggregate',
    eventChangeRoles: 'EventChangeRole',
    eventChangeRolesAggregate: 'EventChangeRoleAggregate',
    eventJoins: 'EventJoin',
    eventJoinsAggregate: 'EventJoinAggregate',
    eventRoles: 'EventRole',
    eventRolesAggregate: 'EventRoleAggregate',
    events: 'Event',
    eventsAggregate: 'EventAggregate',
    expenses: 'Expense',
    expensesAggregate: 'ExpenseAggregate',
    favorites: 'Favorite',
    favoritesAggregate: 'FavoriteAggregate',
    formEdits: 'FormEdit',
    formEditsAggregate: 'FormEditAggregate',
    formSubmissionEdits: 'FormSubmissionEdit',
    formSubmissionEditsAggregate: 'FormSubmissionEditAggregate',
    formSubmissions: 'FormSubmission',
    formSubmissionsAggregate: 'FormSubmissionAggregate',
    forms: 'Form',
    formsAggregate: 'FormAggregate',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    individuals: 'Individual',
    individualsAggregate: 'IndividualAggregate',
    issues: 'Issue',
    issuesAggregate: 'IssueAggregate',
    passwordHash: 'String',
    poles: 'Pole',
    polesAggregate: 'PoleAggregate',
    projectRoles: 'ProjectRole',
    projectRolesAggregate: 'ProjectRoleAggregate',
    projects: 'Project',
    projectsAggregate: 'ProjectAggregate',
    reactions: 'Reaction',
    reactionsAggregate: 'ReactionAggregate',
    reports: 'Report',
    reportsAggregate: 'ReportAggregate',
    roles: 'Role',
    rolesAggregate: 'RoleAggregate',
    scopeRole: 'String',
    sessions: 'Session',
    sessionsAggregate: 'SessionAggregate',
    shortcuts: 'Shortcut',
    shortcutsAggregate: 'ShortcutAggregate',
    socials: 'Social',
    socialsAggregate: 'SocialAggregate',
    status: 'String',
    subjects: 'Subject',
    subjectsAggregate: 'SubjectAggregate',
    tags: 'Tag',
    tagsAggregate: 'TagAggregate',
    teamFinances: 'TeamFinance',
    teamFinancesAggregate: 'TeamFinanceAggregate',
    teamJoins: 'TeamJoin',
    teamJoinsAggregate: 'TeamJoinAggregate',
    teamMembers: 'TeamMember',
    teamMembersAggregate: 'TeamMemberAggregate',
    teamMetrics: 'TeamMetric',
    teamMetricsAggregate: 'TeamMetricAggregate',
    teams: 'Team',
    teamsAggregate: 'TeamAggregate',
    tenant: 'Tenant',
    tenantId: 'bigint',
    tenants: 'Tenant',
    tenantsAggregate: 'TenantAggregate',
    uploads: 'Upload',
    uploadsAggregate: 'UploadAggregate',
    userId: 'bigint',
    userInfo: 'UserInfo',
    userInfos: 'UserInfo',
    userInfosAggregate: 'UserInfoAggregate',
    validations: 'Validation',
    validationsAggregate: 'ValidationAggregate',
    votes: 'Vote',
    votesAggregate: 'VoteAggregate',
  },
  IndividualAggregate: {
    aggregate: 'IndividualAggregateFields',
    nodes: 'Individual',
  },
  IndividualAggregateFields: {
    avg: 'IndividualAvgFields',
    count: 'Int',
    max: 'IndividualMaxFields',
    min: 'IndividualMinFields',
    stddev: 'IndividualStddevFields',
    stddevPop: 'IndividualStddevPopFields',
    stddevSamp: 'IndividualStddevSampFields',
    sum: 'IndividualSumFields',
    varPop: 'IndividualVarPopFields',
    varSamp: 'IndividualVarSampFields',
    variance: 'IndividualVarianceFields',
  },
  IndividualAvgFields: {
    botId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  IndividualMaxFields: {
    botId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    passwordHash: 'String',
    scopeRole: 'String',
    status: 'String',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  IndividualMinFields: {
    botId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    passwordHash: 'String',
    scopeRole: 'String',
    status: 'String',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  IndividualMutationResponse: {
    affectedRows: 'Int',
    returning: 'Individual',
  },
  IndividualStddevFields: {
    botId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  IndividualStddevPopFields: {
    botId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  IndividualStddevSampFields: {
    botId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  IndividualSumFields: {
    botId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  IndividualVarianceFields: {
    botId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  IndividualVarPopFields: {
    botId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  IndividualVarSampFields: {
    botId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  Issue: {
    contentId: 'bigint',
    contentMaster: 'ContentMaster',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expenses: 'Expense',
    expensesAggregate: 'ExpenseAggregate',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  IssueAggregate: {
    aggregate: 'IssueAggregateFields',
    nodes: 'Issue',
  },
  IssueAggregateFields: {
    avg: 'IssueAvgFields',
    count: 'Int',
    max: 'IssueMaxFields',
    min: 'IssueMinFields',
    stddev: 'IssueStddevFields',
    stddevPop: 'IssueStddevPopFields',
    stddevSamp: 'IssueStddevSampFields',
    sum: 'IssueSumFields',
    varPop: 'IssueVarPopFields',
    varSamp: 'IssueVarSampFields',
    variance: 'IssueVarianceFields',
  },
  IssueAvgFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  IssueMaxFields: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  IssueMinFields: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
  },
  IssueMutationResponse: {
    affectedRows: 'Int',
    returning: 'Issue',
  },
  IssueStddevFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  IssueStddevPopFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  IssueStddevSampFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  IssueSumFields: {
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  IssueVarianceFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  IssueVarPopFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  IssueVarSampFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  jsonb: `scalar.jsonb` as const,
  MikroOrmMigrations: {
    executedAt: 'timestamptz',
    id: 'Int',
    name: 'String',
  },
  MikroOrmMigrationsAggregate: {
    aggregate: 'MikroOrmMigrationsAggregateFields',
    nodes: 'MikroOrmMigrations',
  },
  MikroOrmMigrationsAggregateFields: {
    avg: 'MikroOrmMigrationsAvgFields',
    count: 'Int',
    max: 'MikroOrmMigrationsMaxFields',
    min: 'MikroOrmMigrationsMinFields',
    stddev: 'MikroOrmMigrationsStddevFields',
    stddevPop: 'MikroOrmMigrationsStddevPopFields',
    stddevSamp: 'MikroOrmMigrationsStddevSampFields',
    sum: 'MikroOrmMigrationsSumFields',
    varPop: 'MikroOrmMigrationsVarPopFields',
    varSamp: 'MikroOrmMigrationsVarSampFields',
    variance: 'MikroOrmMigrationsVarianceFields',
  },
  MikroOrmMigrationsAvgFields: {
    id: 'Float',
  },
  MikroOrmMigrationsMaxFields: {
    executedAt: 'timestamptz',
    id: 'Int',
    name: 'String',
  },
  MikroOrmMigrationsMinFields: {
    executedAt: 'timestamptz',
    id: 'Int',
    name: 'String',
  },
  MikroOrmMigrationsMutationResponse: {
    affectedRows: 'Int',
    returning: 'MikroOrmMigrations',
  },
  MikroOrmMigrationsStddevFields: {
    id: 'Float',
  },
  MikroOrmMigrationsStddevPopFields: {
    id: 'Float',
  },
  MikroOrmMigrationsStddevSampFields: {
    id: 'Float',
  },
  MikroOrmMigrationsSumFields: {
    id: 'Int',
  },
  MikroOrmMigrationsVarianceFields: {
    id: 'Float',
  },
  MikroOrmMigrationsVarPopFields: {
    id: 'Float',
  },
  MikroOrmMigrationsVarSampFields: {
    id: 'Float',
  },
  Mutation: {
    deleteAction: 'ActionMutationResponse',
    deleteActionByPk: 'Action',
    deleteActor: 'ActorMutationResponse',
    deleteActorAddress: 'ActorAddressMutationResponse',
    deleteActorAddressByPk: 'ActorAddress',
    deleteActorBankInfo: 'ActorBankInfoMutationResponse',
    deleteActorBankInfoByPk: 'ActorBankInfo',
    deleteActorByPk: 'Actor',
    deleteActorFinance: 'ActorFinanceMutationResponse',
    deleteActorFinanceByPk: 'ActorFinance',
    deleteActorFinanceReceipts: 'ActorFinanceReceiptsMutationResponse',
    deleteActorFinanceReceiptsByPk: 'ActorFinanceReceipts',
    deleteActorImage: 'ActorImageMutationResponse',
    deleteActorImageByPk: 'ActorImage',
    deleteActorTags: 'ActorTagsMutationResponse',
    deleteActorTagsByPk: 'ActorTags',
    deleteBotInfo: 'BotInfoMutationResponse',
    deleteBotInfoByPk: 'BotInfo',
    deleteCanteen: 'CanteenMutationResponse',
    deleteCanteenByPk: 'Canteen',
    deleteCanteenFood: 'CanteenFoodMutationResponse',
    deleteCanteenFoodByPk: 'CanteenFood',
    deleteCanteenMenu: 'CanteenMenuMutationResponse',
    deleteCanteenMenuByPk: 'CanteenMenu',
    deleteChangeRole: 'ChangeRoleMutationResponse',
    deleteChangeRoleByPk: 'ChangeRole',
    deleteClassGroup: 'ClassGroupMutationResponse',
    deleteClassGroupByPk: 'ClassGroup',
    deleteClassGroupTeacher: 'ClassGroupTeacherMutationResponse',
    deleteClassGroupTeacherByPk: 'ClassGroupTeacher',
    deleteClassGroupTeacherSubject: 'ClassGroupTeacherSubjectMutationResponse',
    deleteClassGroupTeacherSubjectByPk: 'ClassGroupTeacherSubject',
    deleteCohort: 'CohortMutationResponse',
    deleteCohortByPk: 'Cohort',
    deleteContent: 'ContentMutationResponse',
    deleteContentAttachments: 'ContentAttachmentsMutationResponse',
    deleteContentAttachmentsByPk: 'ContentAttachments',
    deleteContentByPk: 'Content',
    deleteContentEdit: 'ContentEditMutationResponse',
    deleteContentEditByPk: 'ContentEdit',
    deleteContentMaster: 'ContentMasterMutationResponse',
    deleteContentMasterByPk: 'ContentMaster',
    deleteContentMasterContributors: 'ContentMasterContributorsMutationResponse',
    deleteContentMasterContributorsByPk: 'ContentMasterContributors',
    deleteContentMasterTags: 'ContentMasterTagsMutationResponse',
    deleteContentMasterTagsByPk: 'ContentMasterTags',
    deleteContentRepresentingTeams: 'ContentRepresentingTeamsMutationResponse',
    deleteContentRepresentingTeamsByPk: 'ContentRepresentingTeams',
    deleteDocument: 'DocumentMutationResponse',
    deleteDocumentByPk: 'Document',
    deleteDocumentEdit: 'DocumentEditMutationResponse',
    deleteDocumentEditByPk: 'DocumentEdit',
    deleteEvent: 'EventMutationResponse',
    deleteEventApproval: 'EventApprovalMutationResponse',
    deleteEventApprovalByPk: 'EventApproval',
    deleteEventApprovalStep: 'EventApprovalStepMutationResponse',
    deleteEventApprovalStepByPk: 'EventApprovalStep',
    deleteEventApprovalStepNotifiees: 'EventApprovalStepNotifieesMutationResponse',
    deleteEventApprovalStepNotifieesByPk: 'EventApprovalStepNotifiees',
    deleteEventApprovalStepValidators: 'EventApprovalStepValidatorsMutationResponse',
    deleteEventApprovalStepValidatorsByPk: 'EventApprovalStepValidators',
    deleteEventByPk: 'Event',
    deleteEventChangeRole: 'EventChangeRoleMutationResponse',
    deleteEventChangeRoleByPk: 'EventChangeRole',
    deleteEventJoin: 'EventJoinMutationResponse',
    deleteEventJoinByPk: 'EventJoin',
    deleteEventOrganisingTeams: 'EventOrganisingTeamsMutationResponse',
    deleteEventOrganisingTeamsByPk: 'EventOrganisingTeams',
    deleteEventRole: 'EventRoleMutationResponse',
    deleteEventRoleByPk: 'EventRole',
    deleteEventTags: 'EventTagsMutationResponse',
    deleteEventTagsByPk: 'EventTags',
    deleteEventTeams: 'EventTeamsMutationResponse',
    deleteEventTeamsByPk: 'EventTeams',
    deleteExpense: 'ExpenseMutationResponse',
    deleteExpenseByPk: 'Expense',
    deleteFavorite: 'FavoriteMutationResponse',
    deleteFavoriteByPk: 'Favorite',
    deleteForm: 'FormMutationResponse',
    deleteFormByPk: 'Form',
    deleteFormEdit: 'FormEditMutationResponse',
    deleteFormEditByPk: 'FormEdit',
    deleteFormSubmission: 'FormSubmissionMutationResponse',
    deleteFormSubmissionByPk: 'FormSubmission',
    deleteFormSubmissionEdit: 'FormSubmissionEditMutationResponse',
    deleteFormSubmissionEditByPk: 'FormSubmissionEdit',
    deleteIndividual: 'IndividualMutationResponse',
    deleteIndividualByPk: 'Individual',
    deleteIssue: 'IssueMutationResponse',
    deleteIssueByPk: 'Issue',
    deleteMikroOrmMigrations: 'MikroOrmMigrationsMutationResponse',
    deleteMikroOrmMigrationsByPk: 'MikroOrmMigrations',
    deletePole: 'PoleMutationResponse',
    deletePoleByPk: 'Pole',
    deleteProject: 'ProjectMutationResponse',
    deleteProjectByPk: 'Project',
    deleteProjectRole: 'ProjectRoleMutationResponse',
    deleteProjectRoleByPk: 'ProjectRole',
    deleteProjectSupervisors: 'ProjectSupervisorsMutationResponse',
    deleteProjectSupervisorsByPk: 'ProjectSupervisors',
    deleteProjectTags: 'ProjectTagsMutationResponse',
    deleteProjectTagsByPk: 'ProjectTags',
    deleteReaction: 'ReactionMutationResponse',
    deleteReactionByPk: 'Reaction',
    deleteReport: 'ReportMutationResponse',
    deleteReportByPk: 'Report',
    deleteRole: 'RoleMutationResponse',
    deleteRoleByPk: 'Role',
    deleteSession: 'SessionMutationResponse',
    deleteSessionByPk: 'Session',
    deleteShortcut: 'ShortcutMutationResponse',
    deleteShortcutByPk: 'Shortcut',
    deleteSocial: 'SocialMutationResponse',
    deleteSocialByPk: 'Social',
    deleteSubject: 'SubjectMutationResponse',
    deleteSubjectByPk: 'Subject',
    deleteSubjectClasses: 'SubjectClassesMutationResponse',
    deleteSubjectClassesByPk: 'SubjectClasses',
    deleteTag: 'TagMutationResponse',
    deleteTagByPk: 'Tag',
    deleteTeam: 'TeamMutationResponse',
    deleteTeamByPk: 'Team',
    deleteTeamCategories: 'TeamCategoriesMutationResponse',
    deleteTeamCategoriesByPk: 'TeamCategories',
    deleteTeamEvents: 'TeamEventsMutationResponse',
    deleteTeamEventsByPk: 'TeamEvents',
    deleteTeamFinance: 'TeamFinanceMutationResponse',
    deleteTeamFinanceByPk: 'TeamFinance',
    deleteTeamJoin: 'TeamJoinMutationResponse',
    deleteTeamJoinByPk: 'TeamJoin',
    deleteTeamMember: 'TeamMemberMutationResponse',
    deleteTeamMemberByPk: 'TeamMember',
    deleteTeamMemberRoles: 'TeamMemberRolesMutationResponse',
    deleteTeamMemberRolesByPk: 'TeamMemberRoles',
    deleteTeamMetric: 'TeamMetricMutationResponse',
    deleteTeamMetricByPk: 'TeamMetric',
    deleteTenant: 'TenantMutationResponse',
    deleteTenantByPk: 'Tenant',
    deleteUpload: 'UploadMutationResponse',
    deleteUploadByPk: 'Upload',
    deleteUserInfo: 'UserInfoMutationResponse',
    deleteUserInfoByPk: 'UserInfo',
    deleteValidation: 'ValidationMutationResponse',
    deleteValidationByPk: 'Validation',
    deleteVote: 'VoteMutationResponse',
    deleteVoteByPk: 'Vote',
    insertAction: 'ActionMutationResponse',
    insertActionOne: 'Action',
    insertActor: 'ActorMutationResponse',
    insertActorAddress: 'ActorAddressMutationResponse',
    insertActorAddressOne: 'ActorAddress',
    insertActorBankInfo: 'ActorBankInfoMutationResponse',
    insertActorBankInfoOne: 'ActorBankInfo',
    insertActorFinance: 'ActorFinanceMutationResponse',
    insertActorFinanceOne: 'ActorFinance',
    insertActorFinanceReceipts: 'ActorFinanceReceiptsMutationResponse',
    insertActorFinanceReceiptsOne: 'ActorFinanceReceipts',
    insertActorImage: 'ActorImageMutationResponse',
    insertActorImageOne: 'ActorImage',
    insertActorOne: 'Actor',
    insertActorTags: 'ActorTagsMutationResponse',
    insertActorTagsOne: 'ActorTags',
    insertBotInfo: 'BotInfoMutationResponse',
    insertBotInfoOne: 'BotInfo',
    insertCanteen: 'CanteenMutationResponse',
    insertCanteenFood: 'CanteenFoodMutationResponse',
    insertCanteenFoodOne: 'CanteenFood',
    insertCanteenMenu: 'CanteenMenuMutationResponse',
    insertCanteenMenuOne: 'CanteenMenu',
    insertCanteenOne: 'Canteen',
    insertChangeRole: 'ChangeRoleMutationResponse',
    insertChangeRoleOne: 'ChangeRole',
    insertClassGroup: 'ClassGroupMutationResponse',
    insertClassGroupOne: 'ClassGroup',
    insertClassGroupTeacher: 'ClassGroupTeacherMutationResponse',
    insertClassGroupTeacherOne: 'ClassGroupTeacher',
    insertClassGroupTeacherSubject: 'ClassGroupTeacherSubjectMutationResponse',
    insertClassGroupTeacherSubjectOne: 'ClassGroupTeacherSubject',
    insertCohort: 'CohortMutationResponse',
    insertCohortOne: 'Cohort',
    insertContent: 'ContentMutationResponse',
    insertContentAttachments: 'ContentAttachmentsMutationResponse',
    insertContentAttachmentsOne: 'ContentAttachments',
    insertContentEdit: 'ContentEditMutationResponse',
    insertContentEditOne: 'ContentEdit',
    insertContentMaster: 'ContentMasterMutationResponse',
    insertContentMasterContributors: 'ContentMasterContributorsMutationResponse',
    insertContentMasterContributorsOne: 'ContentMasterContributors',
    insertContentMasterOne: 'ContentMaster',
    insertContentMasterTags: 'ContentMasterTagsMutationResponse',
    insertContentMasterTagsOne: 'ContentMasterTags',
    insertContentOne: 'Content',
    insertContentRepresentingTeams: 'ContentRepresentingTeamsMutationResponse',
    insertContentRepresentingTeamsOne: 'ContentRepresentingTeams',
    insertDocument: 'DocumentMutationResponse',
    insertDocumentEdit: 'DocumentEditMutationResponse',
    insertDocumentEditOne: 'DocumentEdit',
    insertDocumentOne: 'Document',
    insertEvent: 'EventMutationResponse',
    insertEventApproval: 'EventApprovalMutationResponse',
    insertEventApprovalOne: 'EventApproval',
    insertEventApprovalStep: 'EventApprovalStepMutationResponse',
    insertEventApprovalStepNotifiees: 'EventApprovalStepNotifieesMutationResponse',
    insertEventApprovalStepNotifieesOne: 'EventApprovalStepNotifiees',
    insertEventApprovalStepOne: 'EventApprovalStep',
    insertEventApprovalStepValidators: 'EventApprovalStepValidatorsMutationResponse',
    insertEventApprovalStepValidatorsOne: 'EventApprovalStepValidators',
    insertEventChangeRole: 'EventChangeRoleMutationResponse',
    insertEventChangeRoleOne: 'EventChangeRole',
    insertEventJoin: 'EventJoinMutationResponse',
    insertEventJoinOne: 'EventJoin',
    insertEventOne: 'Event',
    insertEventOrganisingTeams: 'EventOrganisingTeamsMutationResponse',
    insertEventOrganisingTeamsOne: 'EventOrganisingTeams',
    insertEventRole: 'EventRoleMutationResponse',
    insertEventRoleOne: 'EventRole',
    insertEventTags: 'EventTagsMutationResponse',
    insertEventTagsOne: 'EventTags',
    insertEventTeams: 'EventTeamsMutationResponse',
    insertEventTeamsOne: 'EventTeams',
    insertExpense: 'ExpenseMutationResponse',
    insertExpenseOne: 'Expense',
    insertFavorite: 'FavoriteMutationResponse',
    insertFavoriteOne: 'Favorite',
    insertForm: 'FormMutationResponse',
    insertFormEdit: 'FormEditMutationResponse',
    insertFormEditOne: 'FormEdit',
    insertFormOne: 'Form',
    insertFormSubmission: 'FormSubmissionMutationResponse',
    insertFormSubmissionEdit: 'FormSubmissionEditMutationResponse',
    insertFormSubmissionEditOne: 'FormSubmissionEdit',
    insertFormSubmissionOne: 'FormSubmission',
    insertIndividual: 'IndividualMutationResponse',
    insertIndividualOne: 'Individual',
    insertIssue: 'IssueMutationResponse',
    insertIssueOne: 'Issue',
    insertMikroOrmMigrations: 'MikroOrmMigrationsMutationResponse',
    insertMikroOrmMigrationsOne: 'MikroOrmMigrations',
    insertPole: 'PoleMutationResponse',
    insertPoleOne: 'Pole',
    insertProject: 'ProjectMutationResponse',
    insertProjectOne: 'Project',
    insertProjectRole: 'ProjectRoleMutationResponse',
    insertProjectRoleOne: 'ProjectRole',
    insertProjectSupervisors: 'ProjectSupervisorsMutationResponse',
    insertProjectSupervisorsOne: 'ProjectSupervisors',
    insertProjectTags: 'ProjectTagsMutationResponse',
    insertProjectTagsOne: 'ProjectTags',
    insertReaction: 'ReactionMutationResponse',
    insertReactionOne: 'Reaction',
    insertReport: 'ReportMutationResponse',
    insertReportOne: 'Report',
    insertRole: 'RoleMutationResponse',
    insertRoleOne: 'Role',
    insertSession: 'SessionMutationResponse',
    insertSessionOne: 'Session',
    insertShortcut: 'ShortcutMutationResponse',
    insertShortcutOne: 'Shortcut',
    insertSocial: 'SocialMutationResponse',
    insertSocialOne: 'Social',
    insertSubject: 'SubjectMutationResponse',
    insertSubjectClasses: 'SubjectClassesMutationResponse',
    insertSubjectClassesOne: 'SubjectClasses',
    insertSubjectOne: 'Subject',
    insertTag: 'TagMutationResponse',
    insertTagOne: 'Tag',
    insertTeam: 'TeamMutationResponse',
    insertTeamCategories: 'TeamCategoriesMutationResponse',
    insertTeamCategoriesOne: 'TeamCategories',
    insertTeamEvents: 'TeamEventsMutationResponse',
    insertTeamEventsOne: 'TeamEvents',
    insertTeamFinance: 'TeamFinanceMutationResponse',
    insertTeamFinanceOne: 'TeamFinance',
    insertTeamJoin: 'TeamJoinMutationResponse',
    insertTeamJoinOne: 'TeamJoin',
    insertTeamMember: 'TeamMemberMutationResponse',
    insertTeamMemberOne: 'TeamMember',
    insertTeamMemberRoles: 'TeamMemberRolesMutationResponse',
    insertTeamMemberRolesOne: 'TeamMemberRoles',
    insertTeamMetric: 'TeamMetricMutationResponse',
    insertTeamMetricOne: 'TeamMetric',
    insertTeamOne: 'Team',
    insertTenant: 'TenantMutationResponse',
    insertTenantOne: 'Tenant',
    insertUpload: 'UploadMutationResponse',
    insertUploadOne: 'Upload',
    insertUserInfo: 'UserInfoMutationResponse',
    insertUserInfoOne: 'UserInfo',
    insertValidation: 'ValidationMutationResponse',
    insertValidationOne: 'Validation',
    insertVote: 'VoteMutationResponse',
    insertVoteOne: 'Vote',
    updateAction: 'ActionMutationResponse',
    updateActionByPk: 'Action',
    updateActionMany: 'ActionMutationResponse',
    updateActor: 'ActorMutationResponse',
    updateActorAddress: 'ActorAddressMutationResponse',
    updateActorAddressByPk: 'ActorAddress',
    updateActorAddressMany: 'ActorAddressMutationResponse',
    updateActorBankInfo: 'ActorBankInfoMutationResponse',
    updateActorBankInfoByPk: 'ActorBankInfo',
    updateActorBankInfoMany: 'ActorBankInfoMutationResponse',
    updateActorByPk: 'Actor',
    updateActorFinance: 'ActorFinanceMutationResponse',
    updateActorFinanceByPk: 'ActorFinance',
    updateActorFinanceMany: 'ActorFinanceMutationResponse',
    updateActorFinanceReceipts: 'ActorFinanceReceiptsMutationResponse',
    updateActorFinanceReceiptsByPk: 'ActorFinanceReceipts',
    updateActorFinanceReceiptsMany: 'ActorFinanceReceiptsMutationResponse',
    updateActorImage: 'ActorImageMutationResponse',
    updateActorImageByPk: 'ActorImage',
    updateActorImageMany: 'ActorImageMutationResponse',
    updateActorMany: 'ActorMutationResponse',
    updateActorTags: 'ActorTagsMutationResponse',
    updateActorTagsByPk: 'ActorTags',
    updateActorTagsMany: 'ActorTagsMutationResponse',
    updateBotInfo: 'BotInfoMutationResponse',
    updateBotInfoByPk: 'BotInfo',
    updateBotInfoMany: 'BotInfoMutationResponse',
    updateCanteen: 'CanteenMutationResponse',
    updateCanteenByPk: 'Canteen',
    updateCanteenFood: 'CanteenFoodMutationResponse',
    updateCanteenFoodByPk: 'CanteenFood',
    updateCanteenFoodMany: 'CanteenFoodMutationResponse',
    updateCanteenMany: 'CanteenMutationResponse',
    updateCanteenMenu: 'CanteenMenuMutationResponse',
    updateCanteenMenuByPk: 'CanteenMenu',
    updateCanteenMenuMany: 'CanteenMenuMutationResponse',
    updateChangeRole: 'ChangeRoleMutationResponse',
    updateChangeRoleByPk: 'ChangeRole',
    updateChangeRoleMany: 'ChangeRoleMutationResponse',
    updateClassGroup: 'ClassGroupMutationResponse',
    updateClassGroupByPk: 'ClassGroup',
    updateClassGroupMany: 'ClassGroupMutationResponse',
    updateClassGroupTeacher: 'ClassGroupTeacherMutationResponse',
    updateClassGroupTeacherByPk: 'ClassGroupTeacher',
    updateClassGroupTeacherMany: 'ClassGroupTeacherMutationResponse',
    updateClassGroupTeacherSubject: 'ClassGroupTeacherSubjectMutationResponse',
    updateClassGroupTeacherSubjectByPk: 'ClassGroupTeacherSubject',
    updateClassGroupTeacherSubjectMany: 'ClassGroupTeacherSubjectMutationResponse',
    updateCohort: 'CohortMutationResponse',
    updateCohortByPk: 'Cohort',
    updateCohortMany: 'CohortMutationResponse',
    updateContent: 'ContentMutationResponse',
    updateContentAttachments: 'ContentAttachmentsMutationResponse',
    updateContentAttachmentsByPk: 'ContentAttachments',
    updateContentAttachmentsMany: 'ContentAttachmentsMutationResponse',
    updateContentByPk: 'Content',
    updateContentEdit: 'ContentEditMutationResponse',
    updateContentEditByPk: 'ContentEdit',
    updateContentEditMany: 'ContentEditMutationResponse',
    updateContentMany: 'ContentMutationResponse',
    updateContentMaster: 'ContentMasterMutationResponse',
    updateContentMasterByPk: 'ContentMaster',
    updateContentMasterContributors: 'ContentMasterContributorsMutationResponse',
    updateContentMasterContributorsByPk: 'ContentMasterContributors',
    updateContentMasterContributorsMany: 'ContentMasterContributorsMutationResponse',
    updateContentMasterMany: 'ContentMasterMutationResponse',
    updateContentMasterTags: 'ContentMasterTagsMutationResponse',
    updateContentMasterTagsByPk: 'ContentMasterTags',
    updateContentMasterTagsMany: 'ContentMasterTagsMutationResponse',
    updateContentRepresentingTeams: 'ContentRepresentingTeamsMutationResponse',
    updateContentRepresentingTeamsByPk: 'ContentRepresentingTeams',
    updateContentRepresentingTeamsMany: 'ContentRepresentingTeamsMutationResponse',
    updateDocument: 'DocumentMutationResponse',
    updateDocumentByPk: 'Document',
    updateDocumentEdit: 'DocumentEditMutationResponse',
    updateDocumentEditByPk: 'DocumentEdit',
    updateDocumentEditMany: 'DocumentEditMutationResponse',
    updateDocumentMany: 'DocumentMutationResponse',
    updateEvent: 'EventMutationResponse',
    updateEventApproval: 'EventApprovalMutationResponse',
    updateEventApprovalByPk: 'EventApproval',
    updateEventApprovalMany: 'EventApprovalMutationResponse',
    updateEventApprovalStep: 'EventApprovalStepMutationResponse',
    updateEventApprovalStepByPk: 'EventApprovalStep',
    updateEventApprovalStepMany: 'EventApprovalStepMutationResponse',
    updateEventApprovalStepNotifiees: 'EventApprovalStepNotifieesMutationResponse',
    updateEventApprovalStepNotifieesByPk: 'EventApprovalStepNotifiees',
    updateEventApprovalStepNotifieesMany: 'EventApprovalStepNotifieesMutationResponse',
    updateEventApprovalStepValidators: 'EventApprovalStepValidatorsMutationResponse',
    updateEventApprovalStepValidatorsByPk: 'EventApprovalStepValidators',
    updateEventApprovalStepValidatorsMany: 'EventApprovalStepValidatorsMutationResponse',
    updateEventByPk: 'Event',
    updateEventChangeRole: 'EventChangeRoleMutationResponse',
    updateEventChangeRoleByPk: 'EventChangeRole',
    updateEventChangeRoleMany: 'EventChangeRoleMutationResponse',
    updateEventJoin: 'EventJoinMutationResponse',
    updateEventJoinByPk: 'EventJoin',
    updateEventJoinMany: 'EventJoinMutationResponse',
    updateEventMany: 'EventMutationResponse',
    updateEventOrganisingTeams: 'EventOrganisingTeamsMutationResponse',
    updateEventOrganisingTeamsByPk: 'EventOrganisingTeams',
    updateEventOrganisingTeamsMany: 'EventOrganisingTeamsMutationResponse',
    updateEventRole: 'EventRoleMutationResponse',
    updateEventRoleByPk: 'EventRole',
    updateEventRoleMany: 'EventRoleMutationResponse',
    updateEventTags: 'EventTagsMutationResponse',
    updateEventTagsByPk: 'EventTags',
    updateEventTagsMany: 'EventTagsMutationResponse',
    updateEventTeams: 'EventTeamsMutationResponse',
    updateEventTeamsByPk: 'EventTeams',
    updateEventTeamsMany: 'EventTeamsMutationResponse',
    updateExpense: 'ExpenseMutationResponse',
    updateExpenseByPk: 'Expense',
    updateExpenseMany: 'ExpenseMutationResponse',
    updateFavorite: 'FavoriteMutationResponse',
    updateFavoriteByPk: 'Favorite',
    updateFavoriteMany: 'FavoriteMutationResponse',
    updateForm: 'FormMutationResponse',
    updateFormByPk: 'Form',
    updateFormEdit: 'FormEditMutationResponse',
    updateFormEditByPk: 'FormEdit',
    updateFormEditMany: 'FormEditMutationResponse',
    updateFormMany: 'FormMutationResponse',
    updateFormSubmission: 'FormSubmissionMutationResponse',
    updateFormSubmissionByPk: 'FormSubmission',
    updateFormSubmissionEdit: 'FormSubmissionEditMutationResponse',
    updateFormSubmissionEditByPk: 'FormSubmissionEdit',
    updateFormSubmissionEditMany: 'FormSubmissionEditMutationResponse',
    updateFormSubmissionMany: 'FormSubmissionMutationResponse',
    updateIndividual: 'IndividualMutationResponse',
    updateIndividualByPk: 'Individual',
    updateIndividualMany: 'IndividualMutationResponse',
    updateIssue: 'IssueMutationResponse',
    updateIssueByPk: 'Issue',
    updateIssueMany: 'IssueMutationResponse',
    updateMikroOrmMigrations: 'MikroOrmMigrationsMutationResponse',
    updateMikroOrmMigrationsByPk: 'MikroOrmMigrations',
    updateMikroOrmMigrationsMany: 'MikroOrmMigrationsMutationResponse',
    updatePole: 'PoleMutationResponse',
    updatePoleByPk: 'Pole',
    updatePoleMany: 'PoleMutationResponse',
    updateProject: 'ProjectMutationResponse',
    updateProjectByPk: 'Project',
    updateProjectMany: 'ProjectMutationResponse',
    updateProjectRole: 'ProjectRoleMutationResponse',
    updateProjectRoleByPk: 'ProjectRole',
    updateProjectRoleMany: 'ProjectRoleMutationResponse',
    updateProjectSupervisors: 'ProjectSupervisorsMutationResponse',
    updateProjectSupervisorsByPk: 'ProjectSupervisors',
    updateProjectSupervisorsMany: 'ProjectSupervisorsMutationResponse',
    updateProjectTags: 'ProjectTagsMutationResponse',
    updateProjectTagsByPk: 'ProjectTags',
    updateProjectTagsMany: 'ProjectTagsMutationResponse',
    updateReaction: 'ReactionMutationResponse',
    updateReactionByPk: 'Reaction',
    updateReactionMany: 'ReactionMutationResponse',
    updateReport: 'ReportMutationResponse',
    updateReportByPk: 'Report',
    updateReportMany: 'ReportMutationResponse',
    updateRole: 'RoleMutationResponse',
    updateRoleByPk: 'Role',
    updateRoleMany: 'RoleMutationResponse',
    updateSession: 'SessionMutationResponse',
    updateSessionByPk: 'Session',
    updateSessionMany: 'SessionMutationResponse',
    updateShortcut: 'ShortcutMutationResponse',
    updateShortcutByPk: 'Shortcut',
    updateShortcutMany: 'ShortcutMutationResponse',
    updateSocial: 'SocialMutationResponse',
    updateSocialByPk: 'Social',
    updateSocialMany: 'SocialMutationResponse',
    updateSubject: 'SubjectMutationResponse',
    updateSubjectByPk: 'Subject',
    updateSubjectClasses: 'SubjectClassesMutationResponse',
    updateSubjectClassesByPk: 'SubjectClasses',
    updateSubjectClassesMany: 'SubjectClassesMutationResponse',
    updateSubjectMany: 'SubjectMutationResponse',
    updateTag: 'TagMutationResponse',
    updateTagByPk: 'Tag',
    updateTagMany: 'TagMutationResponse',
    updateTeam: 'TeamMutationResponse',
    updateTeamByPk: 'Team',
    updateTeamCategories: 'TeamCategoriesMutationResponse',
    updateTeamCategoriesByPk: 'TeamCategories',
    updateTeamCategoriesMany: 'TeamCategoriesMutationResponse',
    updateTeamEvents: 'TeamEventsMutationResponse',
    updateTeamEventsByPk: 'TeamEvents',
    updateTeamEventsMany: 'TeamEventsMutationResponse',
    updateTeamFinance: 'TeamFinanceMutationResponse',
    updateTeamFinanceByPk: 'TeamFinance',
    updateTeamFinanceMany: 'TeamFinanceMutationResponse',
    updateTeamJoin: 'TeamJoinMutationResponse',
    updateTeamJoinByPk: 'TeamJoin',
    updateTeamJoinMany: 'TeamJoinMutationResponse',
    updateTeamMany: 'TeamMutationResponse',
    updateTeamMember: 'TeamMemberMutationResponse',
    updateTeamMemberByPk: 'TeamMember',
    updateTeamMemberMany: 'TeamMemberMutationResponse',
    updateTeamMemberRoles: 'TeamMemberRolesMutationResponse',
    updateTeamMemberRolesByPk: 'TeamMemberRoles',
    updateTeamMemberRolesMany: 'TeamMemberRolesMutationResponse',
    updateTeamMetric: 'TeamMetricMutationResponse',
    updateTeamMetricByPk: 'TeamMetric',
    updateTeamMetricMany: 'TeamMetricMutationResponse',
    updateTenant: 'TenantMutationResponse',
    updateTenantByPk: 'Tenant',
    updateTenantMany: 'TenantMutationResponse',
    updateUpload: 'UploadMutationResponse',
    updateUploadByPk: 'Upload',
    updateUploadMany: 'UploadMutationResponse',
    updateUserInfo: 'UserInfoMutationResponse',
    updateUserInfoByPk: 'UserInfo',
    updateUserInfoMany: 'UserInfoMutationResponse',
    updateValidation: 'ValidationMutationResponse',
    updateValidationByPk: 'Validation',
    updateValidationMany: 'ValidationMutationResponse',
    updateVote: 'VoteMutationResponse',
    updateVoteByPk: 'Vote',
    updateVoteMany: 'VoteMutationResponse',
    login: 'UserInfo',
  },
  Pole: {
    category: 'String',
    changeRoles: 'ChangeRole',
    changeRolesAggregate: 'ChangeRoleAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    name: 'String',
    required: 'Boolean',
    team: 'Team',
    teamId: 'bigint',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  PoleAggregate: {
    aggregate: 'PoleAggregateFields',
    nodes: 'Pole',
  },
  PoleAggregateFields: {
    avg: 'PoleAvgFields',
    count: 'Int',
    max: 'PoleMaxFields',
    min: 'PoleMinFields',
    stddev: 'PoleStddevFields',
    stddevPop: 'PoleStddevPopFields',
    stddevSamp: 'PoleStddevSampFields',
    sum: 'PoleSumFields',
    varPop: 'PoleVarPopFields',
    varSamp: 'PoleVarSampFields',
    variance: 'PoleVarianceFields',
  },
  PoleAvgFields: {
    createdById: 'Float',
    id: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  PoleMaxFields: {
    category: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  PoleMinFields: {
    category: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  PoleMutationResponse: {
    affectedRows: 'Int',
    returning: 'Pole',
  },
  PoleStddevFields: {
    createdById: 'Float',
    id: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  PoleStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  PoleStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  PoleSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  PoleVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  PoleVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  PoleVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  Project: {
    actions: 'Action',
    actionsAggregate: 'ActionAggregate',
    actualBudget: 'Float',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    events: 'Event',
    eventsAggregate: 'EventAggregate',
    expectedBudget: 'Float',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    individual: 'Individual',
    isPrivate: 'Boolean',
    name: 'String',
    projectRoles: 'ProjectRole',
    projectRolesAggregate: 'ProjectRoleAggregate',
    projectSupervisors: 'ProjectSupervisors',
    projectSupervisorsAggregate: 'ProjectSupervisorsAggregate',
    projectTags: 'ProjectTags',
    projectTagsAggregate: 'ProjectTagsAggregate',
    slug: 'String',
    team: 'Team',
    teamFinances: 'TeamFinance',
    teamFinancesAggregate: 'TeamFinanceAggregate',
    teamId: 'bigint',
    tenant: 'Tenant',
    tenantId: 'bigint',
    upload: 'Upload',
  },
  ProjectAggregate: {
    aggregate: 'ProjectAggregateFields',
    nodes: 'Project',
  },
  ProjectAggregateFields: {
    avg: 'ProjectAvgFields',
    count: 'Int',
    max: 'ProjectMaxFields',
    min: 'ProjectMinFields',
    stddev: 'ProjectStddevFields',
    stddevPop: 'ProjectStddevPopFields',
    stddevSamp: 'ProjectStddevSampFields',
    sum: 'ProjectSumFields',
    varPop: 'ProjectVarPopFields',
    varSamp: 'ProjectVarSampFields',
    variance: 'ProjectVarianceFields',
  },
  ProjectAvgFields: {
    actualBudget: 'Float',
    createdById: 'Float',
    expectedBudget: 'Float',
    id: 'Float',
    imageId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  ProjectMaxFields: {
    actualBudget: 'Float',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    expectedBudget: 'Float',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    name: 'String',
    slug: 'String',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  ProjectMinFields: {
    actualBudget: 'Float',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    expectedBudget: 'Float',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    name: 'String',
    slug: 'String',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  ProjectMutationResponse: {
    affectedRows: 'Int',
    returning: 'Project',
  },
  ProjectRole: {
    autoAccept: 'Boolean',
    color: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    eventRoles: 'EventRole',
    eventRolesAggregate: 'EventRoleAggregate',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    name: 'String',
    project: 'Project',
    projectId: 'bigint',
    required: 'Boolean',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  ProjectRoleAggregate: {
    aggregate: 'ProjectRoleAggregateFields',
    nodes: 'ProjectRole',
  },
  ProjectRoleAggregateFields: {
    avg: 'ProjectRoleAvgFields',
    count: 'Int',
    max: 'ProjectRoleMaxFields',
    min: 'ProjectRoleMinFields',
    stddev: 'ProjectRoleStddevFields',
    stddevPop: 'ProjectRoleStddevPopFields',
    stddevSamp: 'ProjectRoleStddevSampFields',
    sum: 'ProjectRoleSumFields',
    varPop: 'ProjectRoleVarPopFields',
    varSamp: 'ProjectRoleVarSampFields',
    variance: 'ProjectRoleVarianceFields',
  },
  ProjectRoleAvgFields: {
    createdById: 'Float',
    id: 'Float',
    projectId: 'Float',
    rewardMaximum: 'Float',
    rewardMinimum: 'Float',
    tenantId: 'Float',
  },
  ProjectRoleMaxFields: {
    color: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    projectId: 'bigint',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenantId: 'bigint',
  },
  ProjectRoleMinFields: {
    color: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    projectId: 'bigint',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenantId: 'bigint',
  },
  ProjectRoleMutationResponse: {
    affectedRows: 'Int',
    returning: 'ProjectRole',
  },
  ProjectRoleStddevFields: {
    createdById: 'Float',
    id: 'Float',
    projectId: 'Float',
    rewardMaximum: 'Float',
    rewardMinimum: 'Float',
    tenantId: 'Float',
  },
  ProjectRoleStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    projectId: 'Float',
    rewardMaximum: 'Float',
    rewardMinimum: 'Float',
    tenantId: 'Float',
  },
  ProjectRoleStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    projectId: 'Float',
    rewardMaximum: 'Float',
    rewardMinimum: 'Float',
    tenantId: 'Float',
  },
  ProjectRoleSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    projectId: 'bigint',
    rewardMaximum: 'smallint',
    rewardMinimum: 'smallint',
    tenantId: 'bigint',
  },
  ProjectRoleVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    projectId: 'Float',
    rewardMaximum: 'Float',
    rewardMinimum: 'Float',
    tenantId: 'Float',
  },
  ProjectRoleVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    projectId: 'Float',
    rewardMaximum: 'Float',
    rewardMinimum: 'Float',
    tenantId: 'Float',
  },
  ProjectRoleVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    projectId: 'Float',
    rewardMaximum: 'Float',
    rewardMinimum: 'Float',
    tenantId: 'Float',
  },
  ProjectStddevFields: {
    actualBudget: 'Float',
    createdById: 'Float',
    expectedBudget: 'Float',
    id: 'Float',
    imageId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  ProjectStddevPopFields: {
    actualBudget: 'Float',
    createdById: 'Float',
    expectedBudget: 'Float',
    id: 'Float',
    imageId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  ProjectStddevSampFields: {
    actualBudget: 'Float',
    createdById: 'Float',
    expectedBudget: 'Float',
    id: 'Float',
    imageId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  ProjectSumFields: {
    actualBudget: 'Float',
    createdById: 'bigint',
    expectedBudget: 'Float',
    id: 'bigint',
    imageId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  ProjectSupervisors: {
    project: 'Project',
    projectId: 'bigint',
    teamMember: 'TeamMember',
    teamMemberId: 'bigint',
  },
  ProjectSupervisorsAggregate: {
    aggregate: 'ProjectSupervisorsAggregateFields',
    nodes: 'ProjectSupervisors',
  },
  ProjectSupervisorsAggregateFields: {
    avg: 'ProjectSupervisorsAvgFields',
    count: 'Int',
    max: 'ProjectSupervisorsMaxFields',
    min: 'ProjectSupervisorsMinFields',
    stddev: 'ProjectSupervisorsStddevFields',
    stddevPop: 'ProjectSupervisorsStddevPopFields',
    stddevSamp: 'ProjectSupervisorsStddevSampFields',
    sum: 'ProjectSupervisorsSumFields',
    varPop: 'ProjectSupervisorsVarPopFields',
    varSamp: 'ProjectSupervisorsVarSampFields',
    variance: 'ProjectSupervisorsVarianceFields',
  },
  ProjectSupervisorsAvgFields: {
    projectId: 'Float',
    teamMemberId: 'Float',
  },
  ProjectSupervisorsMaxFields: {
    projectId: 'bigint',
    teamMemberId: 'bigint',
  },
  ProjectSupervisorsMinFields: {
    projectId: 'bigint',
    teamMemberId: 'bigint',
  },
  ProjectSupervisorsMutationResponse: {
    affectedRows: 'Int',
    returning: 'ProjectSupervisors',
  },
  ProjectSupervisorsStddevFields: {
    projectId: 'Float',
    teamMemberId: 'Float',
  },
  ProjectSupervisorsStddevPopFields: {
    projectId: 'Float',
    teamMemberId: 'Float',
  },
  ProjectSupervisorsStddevSampFields: {
    projectId: 'Float',
    teamMemberId: 'Float',
  },
  ProjectSupervisorsSumFields: {
    projectId: 'bigint',
    teamMemberId: 'bigint',
  },
  ProjectSupervisorsVarianceFields: {
    projectId: 'Float',
    teamMemberId: 'Float',
  },
  ProjectSupervisorsVarPopFields: {
    projectId: 'Float',
    teamMemberId: 'Float',
  },
  ProjectSupervisorsVarSampFields: {
    projectId: 'Float',
    teamMemberId: 'Float',
  },
  ProjectTags: {
    project: 'Project',
    projectId: 'bigint',
    tag: 'Tag',
    tagId: 'bigint',
  },
  ProjectTagsAggregate: {
    aggregate: 'ProjectTagsAggregateFields',
    nodes: 'ProjectTags',
  },
  ProjectTagsAggregateFields: {
    avg: 'ProjectTagsAvgFields',
    count: 'Int',
    max: 'ProjectTagsMaxFields',
    min: 'ProjectTagsMinFields',
    stddev: 'ProjectTagsStddevFields',
    stddevPop: 'ProjectTagsStddevPopFields',
    stddevSamp: 'ProjectTagsStddevSampFields',
    sum: 'ProjectTagsSumFields',
    varPop: 'ProjectTagsVarPopFields',
    varSamp: 'ProjectTagsVarSampFields',
    variance: 'ProjectTagsVarianceFields',
  },
  ProjectTagsAvgFields: {
    projectId: 'Float',
    tagId: 'Float',
  },
  ProjectTagsMaxFields: {
    projectId: 'bigint',
    tagId: 'bigint',
  },
  ProjectTagsMinFields: {
    projectId: 'bigint',
    tagId: 'bigint',
  },
  ProjectTagsMutationResponse: {
    affectedRows: 'Int',
    returning: 'ProjectTags',
  },
  ProjectTagsStddevFields: {
    projectId: 'Float',
    tagId: 'Float',
  },
  ProjectTagsStddevPopFields: {
    projectId: 'Float',
    tagId: 'Float',
  },
  ProjectTagsStddevSampFields: {
    projectId: 'Float',
    tagId: 'Float',
  },
  ProjectTagsSumFields: {
    projectId: 'bigint',
    tagId: 'bigint',
  },
  ProjectTagsVarianceFields: {
    projectId: 'Float',
    tagId: 'Float',
  },
  ProjectTagsVarPopFields: {
    projectId: 'Float',
    tagId: 'Float',
  },
  ProjectTagsVarSampFields: {
    projectId: 'Float',
    tagId: 'Float',
  },
  ProjectVarianceFields: {
    actualBudget: 'Float',
    createdById: 'Float',
    expectedBudget: 'Float',
    id: 'Float',
    imageId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  ProjectVarPopFields: {
    actualBudget: 'Float',
    createdById: 'Float',
    expectedBudget: 'Float',
    id: 'Float',
    imageId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  ProjectVarSampFields: {
    actualBudget: 'Float',
    createdById: 'Float',
    expectedBudget: 'Float',
    id: 'Float',
    imageId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  Query: {
    action: 'Action',
    actionAggregate: 'ActionAggregate',
    actionByPk: 'Action',
    actor: 'Actor',
    actorAddress: 'ActorAddress',
    actorAddressAggregate: 'ActorAddressAggregate',
    actorAddressByPk: 'ActorAddress',
    actorAggregate: 'ActorAggregate',
    actorBankInfo: 'ActorBankInfo',
    actorBankInfoAggregate: 'ActorBankInfoAggregate',
    actorBankInfoByPk: 'ActorBankInfo',
    actorByPk: 'Actor',
    actorFinance: 'ActorFinance',
    actorFinanceAggregate: 'ActorFinanceAggregate',
    actorFinanceByPk: 'ActorFinance',
    actorFinanceReceipts: 'ActorFinanceReceipts',
    actorFinanceReceiptsAggregate: 'ActorFinanceReceiptsAggregate',
    actorFinanceReceiptsByPk: 'ActorFinanceReceipts',
    actorImage: 'ActorImage',
    actorImageAggregate: 'ActorImageAggregate',
    actorImageByPk: 'ActorImage',
    actorTags: 'ActorTags',
    actorTagsAggregate: 'ActorTagsAggregate',
    actorTagsByPk: 'ActorTags',
    botInfo: 'BotInfo',
    botInfoAggregate: 'BotInfoAggregate',
    botInfoByPk: 'BotInfo',
    canteen: 'Canteen',
    canteenAggregate: 'CanteenAggregate',
    canteenByPk: 'Canteen',
    canteenFood: 'CanteenFood',
    canteenFoodAggregate: 'CanteenFoodAggregate',
    canteenFoodByPk: 'CanteenFood',
    canteenMenu: 'CanteenMenu',
    canteenMenuAggregate: 'CanteenMenuAggregate',
    canteenMenuByPk: 'CanteenMenu',
    changeRole: 'ChangeRole',
    changeRoleAggregate: 'ChangeRoleAggregate',
    changeRoleByPk: 'ChangeRole',
    classGroup: 'ClassGroup',
    classGroupAggregate: 'ClassGroupAggregate',
    classGroupByPk: 'ClassGroup',
    classGroupTeacher: 'ClassGroupTeacher',
    classGroupTeacherAggregate: 'ClassGroupTeacherAggregate',
    classGroupTeacherByPk: 'ClassGroupTeacher',
    classGroupTeacherSubject: 'ClassGroupTeacherSubject',
    classGroupTeacherSubjectAggregate: 'ClassGroupTeacherSubjectAggregate',
    classGroupTeacherSubjectByPk: 'ClassGroupTeacherSubject',
    cohort: 'Cohort',
    cohortAggregate: 'CohortAggregate',
    cohortByPk: 'Cohort',
    content: 'Content',
    contentAggregate: 'ContentAggregate',
    contentAttachments: 'ContentAttachments',
    contentAttachmentsAggregate: 'ContentAttachmentsAggregate',
    contentAttachmentsByPk: 'ContentAttachments',
    contentByPk: 'Content',
    contentEdit: 'ContentEdit',
    contentEditAggregate: 'ContentEditAggregate',
    contentEditByPk: 'ContentEdit',
    contentMaster: 'ContentMaster',
    contentMasterAggregate: 'ContentMasterAggregate',
    contentMasterByPk: 'ContentMaster',
    contentMasterContributors: 'ContentMasterContributors',
    contentMasterContributorsAggregate: 'ContentMasterContributorsAggregate',
    contentMasterContributorsByPk: 'ContentMasterContributors',
    contentMasterTags: 'ContentMasterTags',
    contentMasterTagsAggregate: 'ContentMasterTagsAggregate',
    contentMasterTagsByPk: 'ContentMasterTags',
    contentRepresentingTeams: 'ContentRepresentingTeams',
    contentRepresentingTeamsAggregate: 'ContentRepresentingTeamsAggregate',
    contentRepresentingTeamsByPk: 'ContentRepresentingTeams',
    document: 'Document',
    documentAggregate: 'DocumentAggregate',
    documentByPk: 'Document',
    documentEdit: 'DocumentEdit',
    documentEditAggregate: 'DocumentEditAggregate',
    documentEditByPk: 'DocumentEdit',
    event: 'Event',
    eventAggregate: 'EventAggregate',
    eventApproval: 'EventApproval',
    eventApprovalAggregate: 'EventApprovalAggregate',
    eventApprovalByPk: 'EventApproval',
    eventApprovalStep: 'EventApprovalStep',
    eventApprovalStepAggregate: 'EventApprovalStepAggregate',
    eventApprovalStepByPk: 'EventApprovalStep',
    eventApprovalStepNotifiees: 'EventApprovalStepNotifiees',
    eventApprovalStepNotifieesAggregate: 'EventApprovalStepNotifieesAggregate',
    eventApprovalStepNotifieesByPk: 'EventApprovalStepNotifiees',
    eventApprovalStepValidators: 'EventApprovalStepValidators',
    eventApprovalStepValidatorsAggregate: 'EventApprovalStepValidatorsAggregate',
    eventApprovalStepValidatorsByPk: 'EventApprovalStepValidators',
    eventByPk: 'Event',
    eventChangeRole: 'EventChangeRole',
    eventChangeRoleAggregate: 'EventChangeRoleAggregate',
    eventChangeRoleByPk: 'EventChangeRole',
    eventJoin: 'EventJoin',
    eventJoinAggregate: 'EventJoinAggregate',
    eventJoinByPk: 'EventJoin',
    eventOrganisingTeams: 'EventOrganisingTeams',
    eventOrganisingTeamsAggregate: 'EventOrganisingTeamsAggregate',
    eventOrganisingTeamsByPk: 'EventOrganisingTeams',
    eventRole: 'EventRole',
    eventRoleAggregate: 'EventRoleAggregate',
    eventRoleByPk: 'EventRole',
    eventTags: 'EventTags',
    eventTagsAggregate: 'EventTagsAggregate',
    eventTagsByPk: 'EventTags',
    eventTeams: 'EventTeams',
    eventTeamsAggregate: 'EventTeamsAggregate',
    eventTeamsByPk: 'EventTeams',
    expense: 'Expense',
    expenseAggregate: 'ExpenseAggregate',
    expenseByPk: 'Expense',
    favorite: 'Favorite',
    favoriteAggregate: 'FavoriteAggregate',
    favoriteByPk: 'Favorite',
    form: 'Form',
    formAggregate: 'FormAggregate',
    formByPk: 'Form',
    formEdit: 'FormEdit',
    formEditAggregate: 'FormEditAggregate',
    formEditByPk: 'FormEdit',
    formSubmission: 'FormSubmission',
    formSubmissionAggregate: 'FormSubmissionAggregate',
    formSubmissionByPk: 'FormSubmission',
    formSubmissionEdit: 'FormSubmissionEdit',
    formSubmissionEditAggregate: 'FormSubmissionEditAggregate',
    formSubmissionEditByPk: 'FormSubmissionEdit',
    individual: 'Individual',
    individualAggregate: 'IndividualAggregate',
    individualByPk: 'Individual',
    issue: 'Issue',
    issueAggregate: 'IssueAggregate',
    issueByPk: 'Issue',
    mikroOrmMigrations: 'MikroOrmMigrations',
    mikroOrmMigrationsAggregate: 'MikroOrmMigrationsAggregate',
    mikroOrmMigrationsByPk: 'MikroOrmMigrations',
    pole: 'Pole',
    poleAggregate: 'PoleAggregate',
    poleByPk: 'Pole',
    project: 'Project',
    projectAggregate: 'ProjectAggregate',
    projectByPk: 'Project',
    projectRole: 'ProjectRole',
    projectRoleAggregate: 'ProjectRoleAggregate',
    projectRoleByPk: 'ProjectRole',
    projectSupervisors: 'ProjectSupervisors',
    projectSupervisorsAggregate: 'ProjectSupervisorsAggregate',
    projectSupervisorsByPk: 'ProjectSupervisors',
    projectTags: 'ProjectTags',
    projectTagsAggregate: 'ProjectTagsAggregate',
    projectTagsByPk: 'ProjectTags',
    reaction: 'Reaction',
    reactionAggregate: 'ReactionAggregate',
    reactionByPk: 'Reaction',
    report: 'Report',
    reportAggregate: 'ReportAggregate',
    reportByPk: 'Report',
    role: 'Role',
    roleAggregate: 'RoleAggregate',
    roleByPk: 'Role',
    session: 'Session',
    sessionAggregate: 'SessionAggregate',
    sessionByPk: 'Session',
    shortcut: 'Shortcut',
    shortcutAggregate: 'ShortcutAggregate',
    shortcutByPk: 'Shortcut',
    social: 'Social',
    socialAggregate: 'SocialAggregate',
    socialByPk: 'Social',
    subject: 'Subject',
    subjectAggregate: 'SubjectAggregate',
    subjectByPk: 'Subject',
    subjectClasses: 'SubjectClasses',
    subjectClassesAggregate: 'SubjectClassesAggregate',
    subjectClassesByPk: 'SubjectClasses',
    tag: 'Tag',
    tagAggregate: 'TagAggregate',
    tagByPk: 'Tag',
    team: 'Team',
    teamAggregate: 'TeamAggregate',
    teamByPk: 'Team',
    teamCategories: 'TeamCategories',
    teamCategoriesAggregate: 'TeamCategoriesAggregate',
    teamCategoriesByPk: 'TeamCategories',
    teamEvents: 'TeamEvents',
    teamEventsAggregate: 'TeamEventsAggregate',
    teamEventsByPk: 'TeamEvents',
    teamFinance: 'TeamFinance',
    teamFinanceAggregate: 'TeamFinanceAggregate',
    teamFinanceByPk: 'TeamFinance',
    teamJoin: 'TeamJoin',
    teamJoinAggregate: 'TeamJoinAggregate',
    teamJoinByPk: 'TeamJoin',
    teamMember: 'TeamMember',
    teamMemberAggregate: 'TeamMemberAggregate',
    teamMemberByPk: 'TeamMember',
    teamMemberRoles: 'TeamMemberRoles',
    teamMemberRolesAggregate: 'TeamMemberRolesAggregate',
    teamMemberRolesByPk: 'TeamMemberRoles',
    teamMetric: 'TeamMetric',
    teamMetricAggregate: 'TeamMetricAggregate',
    teamMetricByPk: 'TeamMetric',
    tenant: 'Tenant',
    tenantAggregate: 'TenantAggregate',
    tenantByPk: 'Tenant',
    upload: 'Upload',
    uploadAggregate: 'UploadAggregate',
    uploadByPk: 'Upload',
    userInfo: 'UserInfo',
    userInfoAggregate: 'UserInfoAggregate',
    userInfoByPk: 'UserInfo',
    validation: 'Validation',
    validationAggregate: 'ValidationAggregate',
    validationByPk: 'Validation',
    vote: 'Vote',
    voteAggregate: 'VoteAggregate',
    voteByPk: 'Vote',
    me: 'UserInfo',
  },
  Reaction: {
    content: 'Content',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    lastActiveDate: 'timestamptz',
    reactionType: 'String',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  ReactionAggregate: {
    aggregate: 'ReactionAggregateFields',
    nodes: 'Reaction',
  },
  ReactionAggregateFields: {
    avg: 'ReactionAvgFields',
    count: 'Int',
    max: 'ReactionMaxFields',
    min: 'ReactionMinFields',
    stddev: 'ReactionStddevFields',
    stddevPop: 'ReactionStddevPopFields',
    stddevSamp: 'ReactionStddevSampFields',
    sum: 'ReactionSumFields',
    varPop: 'ReactionVarPopFields',
    varSamp: 'ReactionVarSampFields',
    variance: 'ReactionVarianceFields',
  },
  ReactionAvgFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ReactionMaxFields: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    reactionType: 'String',
    tenantId: 'bigint',
  },
  ReactionMinFields: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    reactionType: 'String',
    tenantId: 'bigint',
  },
  ReactionMutationResponse: {
    affectedRows: 'Int',
    returning: 'Reaction',
  },
  ReactionStddevFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ReactionStddevPopFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ReactionStddevSampFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ReactionSumFields: {
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ReactionVarianceFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ReactionVarPopFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ReactionVarSampFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  Report: {
    actor: 'Actor',
    actorId: 'bigint',
    content: 'Content',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    lastActiveDate: 'timestamptz',
    reason: 'String',
    tenant: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
  },
  ReportAggregate: {
    aggregate: 'ReportAggregateFields',
    nodes: 'Report',
  },
  ReportAggregateFields: {
    avg: 'ReportAvgFields',
    count: 'Int',
    max: 'ReportMaxFields',
    min: 'ReportMinFields',
    stddev: 'ReportStddevFields',
    stddevPop: 'ReportStddevPopFields',
    stddevSamp: 'ReportStddevSampFields',
    sum: 'ReportSumFields',
    varPop: 'ReportVarPopFields',
    varSamp: 'ReportVarSampFields',
    variance: 'ReportVarianceFields',
  },
  ReportAvgFields: {
    actorId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ReportMaxFields: {
    actorId: 'bigint',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    reason: 'String',
    tenantId: 'bigint',
    type: 'String',
  },
  ReportMinFields: {
    actorId: 'bigint',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    reason: 'String',
    tenantId: 'bigint',
    type: 'String',
  },
  ReportMutationResponse: {
    affectedRows: 'Int',
    returning: 'Report',
  },
  ReportStddevFields: {
    actorId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ReportStddevPopFields: {
    actorId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ReportStddevSampFields: {
    actorId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ReportSumFields: {
    actorId: 'bigint',
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ReportVarianceFields: {
    actorId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ReportVarPopFields: {
    actorId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ReportVarSampFields: {
    actorId: 'Float',
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  Role: {
    category: 'String',
    changeRoles: 'ChangeRole',
    changeRolesAggregate: 'ChangeRoleAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    isRequired: 'Boolean',
    name: 'String',
    permissions: 'Int',
    team: 'Team',
    teamId: 'bigint',
    teamJoins: 'TeamJoin',
    teamJoinsAggregate: 'TeamJoinAggregate',
    teamMemberRoles: 'TeamMemberRoles',
    teamMemberRolesAggregate: 'TeamMemberRolesAggregate',
    tenant: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
  },
  RoleAggregate: {
    aggregate: 'RoleAggregateFields',
    nodes: 'Role',
  },
  RoleAggregateFields: {
    avg: 'RoleAvgFields',
    count: 'Int',
    max: 'RoleMaxFields',
    min: 'RoleMinFields',
    stddev: 'RoleStddevFields',
    stddevPop: 'RoleStddevPopFields',
    stddevSamp: 'RoleStddevSampFields',
    sum: 'RoleSumFields',
    varPop: 'RoleVarPopFields',
    varSamp: 'RoleVarSampFields',
    variance: 'RoleVarianceFields',
  },
  RoleAvgFields: {
    createdById: 'Float',
    id: 'Float',
    permissions: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  RoleMaxFields: {
    category: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    permissions: 'Int',
    teamId: 'bigint',
    tenantId: 'bigint',
    type: 'String',
  },
  RoleMinFields: {
    category: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    name: 'String',
    permissions: 'Int',
    teamId: 'bigint',
    tenantId: 'bigint',
    type: 'String',
  },
  RoleMutationResponse: {
    affectedRows: 'Int',
    returning: 'Role',
  },
  RoleStddevFields: {
    createdById: 'Float',
    id: 'Float',
    permissions: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  RoleStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    permissions: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  RoleStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    permissions: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  RoleSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    permissions: 'Int',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  RoleVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    permissions: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  RoleVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    permissions: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  RoleVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    permissions: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  Session: {
    clientType: 'String',
    country: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expiredAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    ip: 'String',
    lastActivityAt: 'timestamptz',
    lastIssuedAt: 'timestamptz',
    refreshTokenHash: 'String',
    revokedAt: 'timestamptz',
    tenant: 'Tenant',
    tenantId: 'bigint',
    tokenFamily: 'String',
    userAgent: 'jsonb',
    userId: 'bigint',
    userInfo: 'UserInfo',
  },
  SessionAggregate: {
    aggregate: 'SessionAggregateFields',
    nodes: 'Session',
  },
  SessionAggregateFields: {
    avg: 'SessionAvgFields',
    count: 'Int',
    max: 'SessionMaxFields',
    min: 'SessionMinFields',
    stddev: 'SessionStddevFields',
    stddevPop: 'SessionStddevPopFields',
    stddevSamp: 'SessionStddevSampFields',
    sum: 'SessionSumFields',
    varPop: 'SessionVarPopFields',
    varSamp: 'SessionVarSampFields',
    variance: 'SessionVarianceFields',
  },
  SessionAvgFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  SessionMaxFields: {
    clientType: 'String',
    country: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expiredAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    ip: 'String',
    lastActivityAt: 'timestamptz',
    lastIssuedAt: 'timestamptz',
    refreshTokenHash: 'String',
    revokedAt: 'timestamptz',
    tenantId: 'bigint',
    tokenFamily: 'String',
    userId: 'bigint',
  },
  SessionMinFields: {
    clientType: 'String',
    country: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    expiredAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    ip: 'String',
    lastActivityAt: 'timestamptz',
    lastIssuedAt: 'timestamptz',
    refreshTokenHash: 'String',
    revokedAt: 'timestamptz',
    tenantId: 'bigint',
    tokenFamily: 'String',
    userId: 'bigint',
  },
  SessionMutationResponse: {
    affectedRows: 'Int',
    returning: 'Session',
  },
  SessionStddevFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  SessionStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  SessionStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  SessionSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  SessionVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  SessionVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  SessionVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  Shortcut: {
    actor: 'Actor',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    targetActorId: 'bigint',
    tenant: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
    userId: 'bigint',
    userInfo: 'UserInfo',
  },
  ShortcutAggregate: {
    aggregate: 'ShortcutAggregateFields',
    nodes: 'Shortcut',
  },
  ShortcutAggregateFields: {
    avg: 'ShortcutAvgFields',
    count: 'Int',
    max: 'ShortcutMaxFields',
    min: 'ShortcutMinFields',
    stddev: 'ShortcutStddevFields',
    stddevPop: 'ShortcutStddevPopFields',
    stddevSamp: 'ShortcutStddevSampFields',
    sum: 'ShortcutSumFields',
    varPop: 'ShortcutVarPopFields',
    varSamp: 'ShortcutVarSampFields',
    variance: 'ShortcutVarianceFields',
  },
  ShortcutAvgFields: {
    createdById: 'Float',
    id: 'Float',
    targetActorId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ShortcutMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    targetActorId: 'bigint',
    tenantId: 'bigint',
    type: 'String',
    userId: 'bigint',
  },
  ShortcutMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    targetActorId: 'bigint',
    tenantId: 'bigint',
    type: 'String',
    userId: 'bigint',
  },
  ShortcutMutationResponse: {
    affectedRows: 'Int',
    returning: 'Shortcut',
  },
  ShortcutStddevFields: {
    createdById: 'Float',
    id: 'Float',
    targetActorId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ShortcutStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    targetActorId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ShortcutStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    targetActorId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ShortcutSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    targetActorId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  ShortcutVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    targetActorId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ShortcutVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    targetActorId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  ShortcutVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    targetActorId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  smallint: `scalar.smallint` as const,
  Social: {
    actor: 'Actor',
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    pseudo: 'String',
    tenant: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
    url: 'String',
  },
  SocialAggregate: {
    aggregate: 'SocialAggregateFields',
    nodes: 'Social',
  },
  SocialAggregateFields: {
    avg: 'SocialAvgFields',
    count: 'Int',
    max: 'SocialMaxFields',
    min: 'SocialMinFields',
    stddev: 'SocialStddevFields',
    stddevPop: 'SocialStddevPopFields',
    stddevSamp: 'SocialStddevSampFields',
    sum: 'SocialSumFields',
    varPop: 'SocialVarPopFields',
    varSamp: 'SocialVarSampFields',
    variance: 'SocialVarianceFields',
  },
  SocialAvgFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  SocialMaxFields: {
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    pseudo: 'String',
    tenantId: 'bigint',
    type: 'String',
    url: 'String',
  },
  SocialMinFields: {
    actorId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    pseudo: 'String',
    tenantId: 'bigint',
    type: 'String',
    url: 'String',
  },
  SocialMutationResponse: {
    affectedRows: 'Int',
    returning: 'Social',
  },
  SocialStddevFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  SocialStddevPopFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  SocialStddevSampFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  SocialSumFields: {
    actorId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  SocialVarianceFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  SocialVarPopFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  SocialVarSampFields: {
    actorId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  Subject: {
    classGroupTeacherSubjects: 'ClassGroupTeacherSubject',
    classGroupTeacherSubjectsAggregate: 'ClassGroupTeacherSubjectAggregate',
    code: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    documents: 'Document',
    documentsAggregate: 'DocumentAggregate',
    englishName: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    lastActiveDate: 'timestamptz',
    name: 'String',
    subjectClasses: 'SubjectClasses',
    subjectClassesAggregate: 'SubjectClassesAggregate',
    tenant: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
  },
  SubjectAggregate: {
    aggregate: 'SubjectAggregateFields',
    nodes: 'Subject',
  },
  SubjectAggregateFields: {
    avg: 'SubjectAvgFields',
    count: 'Int',
    max: 'SubjectMaxFields',
    min: 'SubjectMinFields',
    stddev: 'SubjectStddevFields',
    stddevPop: 'SubjectStddevPopFields',
    stddevSamp: 'SubjectStddevSampFields',
    sum: 'SubjectSumFields',
    varPop: 'SubjectVarPopFields',
    varSamp: 'SubjectVarSampFields',
    variance: 'SubjectVarianceFields',
  },
  SubjectAvgFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  SubjectClasses: {
    classGroup: 'ClassGroup',
    classGroupId: 'bigint',
    subject: 'Subject',
    subjectId: 'bigint',
  },
  SubjectClassesAggregate: {
    aggregate: 'SubjectClassesAggregateFields',
    nodes: 'SubjectClasses',
  },
  SubjectClassesAggregateFields: {
    avg: 'SubjectClassesAvgFields',
    count: 'Int',
    max: 'SubjectClassesMaxFields',
    min: 'SubjectClassesMinFields',
    stddev: 'SubjectClassesStddevFields',
    stddevPop: 'SubjectClassesStddevPopFields',
    stddevSamp: 'SubjectClassesStddevSampFields',
    sum: 'SubjectClassesSumFields',
    varPop: 'SubjectClassesVarPopFields',
    varSamp: 'SubjectClassesVarSampFields',
    variance: 'SubjectClassesVarianceFields',
  },
  SubjectClassesAvgFields: {
    classGroupId: 'Float',
    subjectId: 'Float',
  },
  SubjectClassesMaxFields: {
    classGroupId: 'bigint',
    subjectId: 'bigint',
  },
  SubjectClassesMinFields: {
    classGroupId: 'bigint',
    subjectId: 'bigint',
  },
  SubjectClassesMutationResponse: {
    affectedRows: 'Int',
    returning: 'SubjectClasses',
  },
  SubjectClassesStddevFields: {
    classGroupId: 'Float',
    subjectId: 'Float',
  },
  SubjectClassesStddevPopFields: {
    classGroupId: 'Float',
    subjectId: 'Float',
  },
  SubjectClassesStddevSampFields: {
    classGroupId: 'Float',
    subjectId: 'Float',
  },
  SubjectClassesSumFields: {
    classGroupId: 'bigint',
    subjectId: 'bigint',
  },
  SubjectClassesVarianceFields: {
    classGroupId: 'Float',
    subjectId: 'Float',
  },
  SubjectClassesVarPopFields: {
    classGroupId: 'Float',
    subjectId: 'Float',
  },
  SubjectClassesVarSampFields: {
    classGroupId: 'Float',
    subjectId: 'Float',
  },
  SubjectMaxFields: {
    code: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    englishName: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    name: 'String',
    tenantId: 'bigint',
    type: 'String',
  },
  SubjectMinFields: {
    code: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    englishName: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    name: 'String',
    tenantId: 'bigint',
    type: 'String',
  },
  SubjectMutationResponse: {
    affectedRows: 'Int',
    returning: 'Subject',
  },
  SubjectStddevFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  SubjectStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  SubjectStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  SubjectSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  SubjectVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  SubjectVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  SubjectVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  Subscription: {
    action: 'Action',
    actionAggregate: 'ActionAggregate',
    actionByPk: 'Action',
    actionStream: 'Action',
    actor: 'Actor',
    actorAddress: 'ActorAddress',
    actorAddressAggregate: 'ActorAddressAggregate',
    actorAddressByPk: 'ActorAddress',
    actorAddressStream: 'ActorAddress',
    actorAggregate: 'ActorAggregate',
    actorBankInfo: 'ActorBankInfo',
    actorBankInfoAggregate: 'ActorBankInfoAggregate',
    actorBankInfoByPk: 'ActorBankInfo',
    actorBankInfoStream: 'ActorBankInfo',
    actorByPk: 'Actor',
    actorFinance: 'ActorFinance',
    actorFinanceAggregate: 'ActorFinanceAggregate',
    actorFinanceByPk: 'ActorFinance',
    actorFinanceReceipts: 'ActorFinanceReceipts',
    actorFinanceReceiptsAggregate: 'ActorFinanceReceiptsAggregate',
    actorFinanceReceiptsByPk: 'ActorFinanceReceipts',
    actorFinanceReceiptsStream: 'ActorFinanceReceipts',
    actorFinanceStream: 'ActorFinance',
    actorImage: 'ActorImage',
    actorImageAggregate: 'ActorImageAggregate',
    actorImageByPk: 'ActorImage',
    actorImageStream: 'ActorImage',
    actorStream: 'Actor',
    actorTags: 'ActorTags',
    actorTagsAggregate: 'ActorTagsAggregate',
    actorTagsByPk: 'ActorTags',
    actorTagsStream: 'ActorTags',
    botInfo: 'BotInfo',
    botInfoAggregate: 'BotInfoAggregate',
    botInfoByPk: 'BotInfo',
    botInfoStream: 'BotInfo',
    canteen: 'Canteen',
    canteenAggregate: 'CanteenAggregate',
    canteenByPk: 'Canteen',
    canteenFood: 'CanteenFood',
    canteenFoodAggregate: 'CanteenFoodAggregate',
    canteenFoodByPk: 'CanteenFood',
    canteenFoodStream: 'CanteenFood',
    canteenMenu: 'CanteenMenu',
    canteenMenuAggregate: 'CanteenMenuAggregate',
    canteenMenuByPk: 'CanteenMenu',
    canteenMenuStream: 'CanteenMenu',
    canteenStream: 'Canteen',
    changeRole: 'ChangeRole',
    changeRoleAggregate: 'ChangeRoleAggregate',
    changeRoleByPk: 'ChangeRole',
    changeRoleStream: 'ChangeRole',
    classGroup: 'ClassGroup',
    classGroupAggregate: 'ClassGroupAggregate',
    classGroupByPk: 'ClassGroup',
    classGroupStream: 'ClassGroup',
    classGroupTeacher: 'ClassGroupTeacher',
    classGroupTeacherAggregate: 'ClassGroupTeacherAggregate',
    classGroupTeacherByPk: 'ClassGroupTeacher',
    classGroupTeacherStream: 'ClassGroupTeacher',
    classGroupTeacherSubject: 'ClassGroupTeacherSubject',
    classGroupTeacherSubjectAggregate: 'ClassGroupTeacherSubjectAggregate',
    classGroupTeacherSubjectByPk: 'ClassGroupTeacherSubject',
    classGroupTeacherSubjectStream: 'ClassGroupTeacherSubject',
    cohort: 'Cohort',
    cohortAggregate: 'CohortAggregate',
    cohortByPk: 'Cohort',
    cohortStream: 'Cohort',
    content: 'Content',
    contentAggregate: 'ContentAggregate',
    contentAttachments: 'ContentAttachments',
    contentAttachmentsAggregate: 'ContentAttachmentsAggregate',
    contentAttachmentsByPk: 'ContentAttachments',
    contentAttachmentsStream: 'ContentAttachments',
    contentByPk: 'Content',
    contentEdit: 'ContentEdit',
    contentEditAggregate: 'ContentEditAggregate',
    contentEditByPk: 'ContentEdit',
    contentEditStream: 'ContentEdit',
    contentMaster: 'ContentMaster',
    contentMasterAggregate: 'ContentMasterAggregate',
    contentMasterByPk: 'ContentMaster',
    contentMasterContributors: 'ContentMasterContributors',
    contentMasterContributorsAggregate: 'ContentMasterContributorsAggregate',
    contentMasterContributorsByPk: 'ContentMasterContributors',
    contentMasterContributorsStream: 'ContentMasterContributors',
    contentMasterStream: 'ContentMaster',
    contentMasterTags: 'ContentMasterTags',
    contentMasterTagsAggregate: 'ContentMasterTagsAggregate',
    contentMasterTagsByPk: 'ContentMasterTags',
    contentMasterTagsStream: 'ContentMasterTags',
    contentRepresentingTeams: 'ContentRepresentingTeams',
    contentRepresentingTeamsAggregate: 'ContentRepresentingTeamsAggregate',
    contentRepresentingTeamsByPk: 'ContentRepresentingTeams',
    contentRepresentingTeamsStream: 'ContentRepresentingTeams',
    contentStream: 'Content',
    document: 'Document',
    documentAggregate: 'DocumentAggregate',
    documentByPk: 'Document',
    documentEdit: 'DocumentEdit',
    documentEditAggregate: 'DocumentEditAggregate',
    documentEditByPk: 'DocumentEdit',
    documentEditStream: 'DocumentEdit',
    documentStream: 'Document',
    event: 'Event',
    eventAggregate: 'EventAggregate',
    eventApproval: 'EventApproval',
    eventApprovalAggregate: 'EventApprovalAggregate',
    eventApprovalByPk: 'EventApproval',
    eventApprovalStep: 'EventApprovalStep',
    eventApprovalStepAggregate: 'EventApprovalStepAggregate',
    eventApprovalStepByPk: 'EventApprovalStep',
    eventApprovalStepNotifiees: 'EventApprovalStepNotifiees',
    eventApprovalStepNotifieesAggregate: 'EventApprovalStepNotifieesAggregate',
    eventApprovalStepNotifieesByPk: 'EventApprovalStepNotifiees',
    eventApprovalStepNotifieesStream: 'EventApprovalStepNotifiees',
    eventApprovalStepStream: 'EventApprovalStep',
    eventApprovalStepValidators: 'EventApprovalStepValidators',
    eventApprovalStepValidatorsAggregate: 'EventApprovalStepValidatorsAggregate',
    eventApprovalStepValidatorsByPk: 'EventApprovalStepValidators',
    eventApprovalStepValidatorsStream: 'EventApprovalStepValidators',
    eventApprovalStream: 'EventApproval',
    eventByPk: 'Event',
    eventChangeRole: 'EventChangeRole',
    eventChangeRoleAggregate: 'EventChangeRoleAggregate',
    eventChangeRoleByPk: 'EventChangeRole',
    eventChangeRoleStream: 'EventChangeRole',
    eventJoin: 'EventJoin',
    eventJoinAggregate: 'EventJoinAggregate',
    eventJoinByPk: 'EventJoin',
    eventJoinStream: 'EventJoin',
    eventOrganisingTeams: 'EventOrganisingTeams',
    eventOrganisingTeamsAggregate: 'EventOrganisingTeamsAggregate',
    eventOrganisingTeamsByPk: 'EventOrganisingTeams',
    eventOrganisingTeamsStream: 'EventOrganisingTeams',
    eventRole: 'EventRole',
    eventRoleAggregate: 'EventRoleAggregate',
    eventRoleByPk: 'EventRole',
    eventRoleStream: 'EventRole',
    eventStream: 'Event',
    eventTags: 'EventTags',
    eventTagsAggregate: 'EventTagsAggregate',
    eventTagsByPk: 'EventTags',
    eventTagsStream: 'EventTags',
    eventTeams: 'EventTeams',
    eventTeamsAggregate: 'EventTeamsAggregate',
    eventTeamsByPk: 'EventTeams',
    eventTeamsStream: 'EventTeams',
    expense: 'Expense',
    expenseAggregate: 'ExpenseAggregate',
    expenseByPk: 'Expense',
    expenseStream: 'Expense',
    favorite: 'Favorite',
    favoriteAggregate: 'FavoriteAggregate',
    favoriteByPk: 'Favorite',
    favoriteStream: 'Favorite',
    form: 'Form',
    formAggregate: 'FormAggregate',
    formByPk: 'Form',
    formEdit: 'FormEdit',
    formEditAggregate: 'FormEditAggregate',
    formEditByPk: 'FormEdit',
    formEditStream: 'FormEdit',
    formStream: 'Form',
    formSubmission: 'FormSubmission',
    formSubmissionAggregate: 'FormSubmissionAggregate',
    formSubmissionByPk: 'FormSubmission',
    formSubmissionEdit: 'FormSubmissionEdit',
    formSubmissionEditAggregate: 'FormSubmissionEditAggregate',
    formSubmissionEditByPk: 'FormSubmissionEdit',
    formSubmissionEditStream: 'FormSubmissionEdit',
    formSubmissionStream: 'FormSubmission',
    individual: 'Individual',
    individualAggregate: 'IndividualAggregate',
    individualByPk: 'Individual',
    individualStream: 'Individual',
    issue: 'Issue',
    issueAggregate: 'IssueAggregate',
    issueByPk: 'Issue',
    issueStream: 'Issue',
    mikroOrmMigrations: 'MikroOrmMigrations',
    mikroOrmMigrationsAggregate: 'MikroOrmMigrationsAggregate',
    mikroOrmMigrationsByPk: 'MikroOrmMigrations',
    mikroOrmMigrationsStream: 'MikroOrmMigrations',
    pole: 'Pole',
    poleAggregate: 'PoleAggregate',
    poleByPk: 'Pole',
    poleStream: 'Pole',
    project: 'Project',
    projectAggregate: 'ProjectAggregate',
    projectByPk: 'Project',
    projectRole: 'ProjectRole',
    projectRoleAggregate: 'ProjectRoleAggregate',
    projectRoleByPk: 'ProjectRole',
    projectRoleStream: 'ProjectRole',
    projectStream: 'Project',
    projectSupervisors: 'ProjectSupervisors',
    projectSupervisorsAggregate: 'ProjectSupervisorsAggregate',
    projectSupervisorsByPk: 'ProjectSupervisors',
    projectSupervisorsStream: 'ProjectSupervisors',
    projectTags: 'ProjectTags',
    projectTagsAggregate: 'ProjectTagsAggregate',
    projectTagsByPk: 'ProjectTags',
    projectTagsStream: 'ProjectTags',
    reaction: 'Reaction',
    reactionAggregate: 'ReactionAggregate',
    reactionByPk: 'Reaction',
    reactionStream: 'Reaction',
    report: 'Report',
    reportAggregate: 'ReportAggregate',
    reportByPk: 'Report',
    reportStream: 'Report',
    role: 'Role',
    roleAggregate: 'RoleAggregate',
    roleByPk: 'Role',
    roleStream: 'Role',
    session: 'Session',
    sessionAggregate: 'SessionAggregate',
    sessionByPk: 'Session',
    sessionStream: 'Session',
    shortcut: 'Shortcut',
    shortcutAggregate: 'ShortcutAggregate',
    shortcutByPk: 'Shortcut',
    shortcutStream: 'Shortcut',
    social: 'Social',
    socialAggregate: 'SocialAggregate',
    socialByPk: 'Social',
    socialStream: 'Social',
    subject: 'Subject',
    subjectAggregate: 'SubjectAggregate',
    subjectByPk: 'Subject',
    subjectClasses: 'SubjectClasses',
    subjectClassesAggregate: 'SubjectClassesAggregate',
    subjectClassesByPk: 'SubjectClasses',
    subjectClassesStream: 'SubjectClasses',
    subjectStream: 'Subject',
    tag: 'Tag',
    tagAggregate: 'TagAggregate',
    tagByPk: 'Tag',
    tagStream: 'Tag',
    team: 'Team',
    teamAggregate: 'TeamAggregate',
    teamByPk: 'Team',
    teamCategories: 'TeamCategories',
    teamCategoriesAggregate: 'TeamCategoriesAggregate',
    teamCategoriesByPk: 'TeamCategories',
    teamCategoriesStream: 'TeamCategories',
    teamEvents: 'TeamEvents',
    teamEventsAggregate: 'TeamEventsAggregate',
    teamEventsByPk: 'TeamEvents',
    teamEventsStream: 'TeamEvents',
    teamFinance: 'TeamFinance',
    teamFinanceAggregate: 'TeamFinanceAggregate',
    teamFinanceByPk: 'TeamFinance',
    teamFinanceStream: 'TeamFinance',
    teamJoin: 'TeamJoin',
    teamJoinAggregate: 'TeamJoinAggregate',
    teamJoinByPk: 'TeamJoin',
    teamJoinStream: 'TeamJoin',
    teamMember: 'TeamMember',
    teamMemberAggregate: 'TeamMemberAggregate',
    teamMemberByPk: 'TeamMember',
    teamMemberRoles: 'TeamMemberRoles',
    teamMemberRolesAggregate: 'TeamMemberRolesAggregate',
    teamMemberRolesByPk: 'TeamMemberRoles',
    teamMemberRolesStream: 'TeamMemberRoles',
    teamMemberStream: 'TeamMember',
    teamMetric: 'TeamMetric',
    teamMetricAggregate: 'TeamMetricAggregate',
    teamMetricByPk: 'TeamMetric',
    teamMetricStream: 'TeamMetric',
    teamStream: 'Team',
    tenant: 'Tenant',
    tenantAggregate: 'TenantAggregate',
    tenantByPk: 'Tenant',
    tenantStream: 'Tenant',
    upload: 'Upload',
    uploadAggregate: 'UploadAggregate',
    uploadByPk: 'Upload',
    uploadStream: 'Upload',
    userInfo: 'UserInfo',
    userInfoAggregate: 'UserInfoAggregate',
    userInfoByPk: 'UserInfo',
    userInfoStream: 'UserInfo',
    validation: 'Validation',
    validationAggregate: 'ValidationAggregate',
    validationByPk: 'Validation',
    validationStream: 'Validation',
    vote: 'Vote',
    voteAggregate: 'VoteAggregate',
    voteByPk: 'Vote',
    voteStream: 'Vote',
  },
  Tag: {
    actorTags: 'ActorTags',
    actorTagsAggregate: 'ActorTagsAggregate',
    color: 'String',
    contentMasterTags: 'ContentMasterTags',
    contentMasterTagsAggregate: 'ContentMasterTagsAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    eventTags: 'EventTags',
    eventTagsAggregate: 'EventTagsAggregate',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    individual: 'Individual',
    name: 'String',
    projectTags: 'ProjectTags',
    projectTagsAggregate: 'ProjectTagsAggregate',
    slug: 'String',
    teamCategories: 'TeamCategories',
    teamCategoriesAggregate: 'TeamCategoriesAggregate',
    tenant: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
    upload: 'Upload',
  },
  TagAggregate: {
    aggregate: 'TagAggregateFields',
    nodes: 'Tag',
  },
  TagAggregateFields: {
    avg: 'TagAvgFields',
    count: 'Int',
    max: 'TagMaxFields',
    min: 'TagMinFields',
    stddev: 'TagStddevFields',
    stddevPop: 'TagStddevPopFields',
    stddevSamp: 'TagStddevSampFields',
    sum: 'TagSumFields',
    varPop: 'TagVarPopFields',
    varSamp: 'TagVarSampFields',
    variance: 'TagVarianceFields',
  },
  TagAvgFields: {
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    tenantId: 'Float',
  },
  TagMaxFields: {
    color: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    name: 'String',
    slug: 'String',
    tenantId: 'bigint',
    type: 'String',
  },
  TagMinFields: {
    color: 'String',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    description: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    imageId: 'bigint',
    name: 'String',
    slug: 'String',
    tenantId: 'bigint',
    type: 'String',
  },
  TagMutationResponse: {
    affectedRows: 'Int',
    returning: 'Tag',
  },
  TagStddevFields: {
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    tenantId: 'Float',
  },
  TagStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    tenantId: 'Float',
  },
  TagStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    tenantId: 'Float',
  },
  TagSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    imageId: 'bigint',
    tenantId: 'bigint',
  },
  TagVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    tenantId: 'Float',
  },
  TagVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    tenantId: 'Float',
  },
  TagVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    imageId: 'Float',
    tenantId: 'Float',
  },
  Team: {
    actions: 'Action',
    actionsAggregate: 'ActionAggregate',
    actor: 'Actor',
    canteen: 'Canteen',
    canteenId: 'bigint',
    changeRoles: 'ChangeRole',
    changeRolesAggregate: 'ChangeRoleAggregate',
    classGroup: 'ClassGroup',
    classGroupId: 'bigint',
    cohort: 'Cohort',
    cohortId: 'bigint',
    contentRepresentingTeams: 'ContentRepresentingTeams',
    contentRepresentingTeamsAggregate: 'ContentRepresentingTeamsAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    currentFinance: 'Int',
    deletedAt: 'timestamptz',
    directorsCategoryName: 'String',
    documents: 'Document',
    documentsAggregate: 'DocumentAggregate',
    eventOrganisingTeams: 'EventOrganisingTeams',
    eventOrganisingTeamsAggregate: 'EventOrganisingTeamsAggregate',
    eventTeams: 'EventTeams',
    eventTeamsAggregate: 'EventTeamsAggregate',
    form: 'Form',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    joinFormId: 'bigint',
    managersCategoryName: 'String',
    membersCategoryName: 'String',
    membershipFees: 'Int',
    parentId: 'bigint',
    poles: 'Pole',
    polesAggregate: 'PoleAggregate',
    projects: 'Project',
    projectsAggregate: 'ProjectAggregate',
    roles: 'Role',
    rolesAggregate: 'RoleAggregate',
    tagline: 'String',
    team: 'Team',
    teamCategories: 'TeamCategories',
    teamCategoriesAggregate: 'TeamCategoriesAggregate',
    teamEvents: 'TeamEvents',
    teamEventsAggregate: 'TeamEventsAggregate',
    teamFinances: 'TeamFinance',
    teamFinancesAggregate: 'TeamFinanceAggregate',
    teamJoins: 'TeamJoin',
    teamJoinsAggregate: 'TeamJoinAggregate',
    teamMembers: 'TeamMember',
    teamMembersAggregate: 'TeamMemberAggregate',
    teams: 'Team',
    teamsAggregate: 'TeamAggregate',
    tenant: 'Tenant',
    tenantById: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
    upload: 'Upload',
    videoId: 'bigint',
  },
  TeamAggregate: {
    aggregate: 'TeamAggregateFields',
    nodes: 'Team',
  },
  TeamAggregateFields: {
    avg: 'TeamAvgFields',
    count: 'Int',
    max: 'TeamMaxFields',
    min: 'TeamMinFields',
    stddev: 'TeamStddevFields',
    stddevPop: 'TeamStddevPopFields',
    stddevSamp: 'TeamStddevSampFields',
    sum: 'TeamSumFields',
    varPop: 'TeamVarPopFields',
    varSamp: 'TeamVarSampFields',
    variance: 'TeamVarianceFields',
  },
  TeamAvgFields: {
    canteenId: 'Float',
    classGroupId: 'Float',
    cohortId: 'Float',
    createdById: 'Float',
    currentFinance: 'Float',
    id: 'Float',
    joinFormId: 'Float',
    membershipFees: 'Float',
    parentId: 'Float',
    tenantId: 'Float',
    videoId: 'Float',
  },
  TeamCategories: {
    tag: 'Tag',
    tagId: 'bigint',
    team: 'Team',
    teamId: 'bigint',
  },
  TeamCategoriesAggregate: {
    aggregate: 'TeamCategoriesAggregateFields',
    nodes: 'TeamCategories',
  },
  TeamCategoriesAggregateFields: {
    avg: 'TeamCategoriesAvgFields',
    count: 'Int',
    max: 'TeamCategoriesMaxFields',
    min: 'TeamCategoriesMinFields',
    stddev: 'TeamCategoriesStddevFields',
    stddevPop: 'TeamCategoriesStddevPopFields',
    stddevSamp: 'TeamCategoriesStddevSampFields',
    sum: 'TeamCategoriesSumFields',
    varPop: 'TeamCategoriesVarPopFields',
    varSamp: 'TeamCategoriesVarSampFields',
    variance: 'TeamCategoriesVarianceFields',
  },
  TeamCategoriesAvgFields: {
    tagId: 'Float',
    teamId: 'Float',
  },
  TeamCategoriesMaxFields: {
    tagId: 'bigint',
    teamId: 'bigint',
  },
  TeamCategoriesMinFields: {
    tagId: 'bigint',
    teamId: 'bigint',
  },
  TeamCategoriesMutationResponse: {
    affectedRows: 'Int',
    returning: 'TeamCategories',
  },
  TeamCategoriesStddevFields: {
    tagId: 'Float',
    teamId: 'Float',
  },
  TeamCategoriesStddevPopFields: {
    tagId: 'Float',
    teamId: 'Float',
  },
  TeamCategoriesStddevSampFields: {
    tagId: 'Float',
    teamId: 'Float',
  },
  TeamCategoriesSumFields: {
    tagId: 'bigint',
    teamId: 'bigint',
  },
  TeamCategoriesVarianceFields: {
    tagId: 'Float',
    teamId: 'Float',
  },
  TeamCategoriesVarPopFields: {
    tagId: 'Float',
    teamId: 'Float',
  },
  TeamCategoriesVarSampFields: {
    tagId: 'Float',
    teamId: 'Float',
  },
  TeamEvents: {
    event: 'Event',
    eventId: 'bigint',
    team: 'Team',
    teamId: 'bigint',
  },
  TeamEventsAggregate: {
    aggregate: 'TeamEventsAggregateFields',
    nodes: 'TeamEvents',
  },
  TeamEventsAggregateFields: {
    avg: 'TeamEventsAvgFields',
    count: 'Int',
    max: 'TeamEventsMaxFields',
    min: 'TeamEventsMinFields',
    stddev: 'TeamEventsStddevFields',
    stddevPop: 'TeamEventsStddevPopFields',
    stddevSamp: 'TeamEventsStddevSampFields',
    sum: 'TeamEventsSumFields',
    varPop: 'TeamEventsVarPopFields',
    varSamp: 'TeamEventsVarSampFields',
    variance: 'TeamEventsVarianceFields',
  },
  TeamEventsAvgFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  TeamEventsMaxFields: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  TeamEventsMinFields: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  TeamEventsMutationResponse: {
    affectedRows: 'Int',
    returning: 'TeamEvents',
  },
  TeamEventsStddevFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  TeamEventsStddevPopFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  TeamEventsStddevSampFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  TeamEventsSumFields: {
    eventId: 'bigint',
    teamId: 'bigint',
  },
  TeamEventsVarianceFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  TeamEventsVarPopFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  TeamEventsVarSampFields: {
    eventId: 'Float',
    teamId: 'Float',
  },
  TeamFinance: {
    actorFinance: 'ActorFinance',
    actorFinanceId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    event: 'Event',
    eventId: 'bigint',
    expense: 'Expense',
    expenseId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    method: 'String',
    payedByType: 'String',
    project: 'Project',
    projectId: 'bigint',
    state: 'String',
    team: 'Team',
    teamId: 'bigint',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  TeamFinanceAggregate: {
    aggregate: 'TeamFinanceAggregateFields',
    nodes: 'TeamFinance',
  },
  TeamFinanceAggregateFields: {
    avg: 'TeamFinanceAvgFields',
    count: 'Int',
    max: 'TeamFinanceMaxFields',
    min: 'TeamFinanceMinFields',
    stddev: 'TeamFinanceStddevFields',
    stddevPop: 'TeamFinanceStddevPopFields',
    stddevSamp: 'TeamFinanceStddevSampFields',
    sum: 'TeamFinanceSumFields',
    varPop: 'TeamFinanceVarPopFields',
    varSamp: 'TeamFinanceVarSampFields',
    variance: 'TeamFinanceVarianceFields',
  },
  TeamFinanceAvgFields: {
    actorFinanceId: 'Float',
    createdById: 'Float',
    eventId: 'Float',
    expenseId: 'Float',
    id: 'Float',
    projectId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  TeamFinanceMaxFields: {
    actorFinanceId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    expenseId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    method: 'String',
    payedByType: 'String',
    projectId: 'bigint',
    state: 'String',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  TeamFinanceMinFields: {
    actorFinanceId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    eventId: 'bigint',
    expenseId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    method: 'String',
    payedByType: 'String',
    projectId: 'bigint',
    state: 'String',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  TeamFinanceMutationResponse: {
    affectedRows: 'Int',
    returning: 'TeamFinance',
  },
  TeamFinanceStddevFields: {
    actorFinanceId: 'Float',
    createdById: 'Float',
    eventId: 'Float',
    expenseId: 'Float',
    id: 'Float',
    projectId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  TeamFinanceStddevPopFields: {
    actorFinanceId: 'Float',
    createdById: 'Float',
    eventId: 'Float',
    expenseId: 'Float',
    id: 'Float',
    projectId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  TeamFinanceStddevSampFields: {
    actorFinanceId: 'Float',
    createdById: 'Float',
    eventId: 'Float',
    expenseId: 'Float',
    id: 'Float',
    projectId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  TeamFinanceSumFields: {
    actorFinanceId: 'bigint',
    createdById: 'bigint',
    eventId: 'bigint',
    expenseId: 'bigint',
    id: 'bigint',
    projectId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  TeamFinanceVarianceFields: {
    actorFinanceId: 'Float',
    createdById: 'Float',
    eventId: 'Float',
    expenseId: 'Float',
    id: 'Float',
    projectId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  TeamFinanceVarPopFields: {
    actorFinanceId: 'Float',
    createdById: 'Float',
    eventId: 'Float',
    expenseId: 'Float',
    id: 'Float',
    projectId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  TeamFinanceVarSampFields: {
    actorFinanceId: 'Float',
    createdById: 'Float',
    eventId: 'Float',
    expenseId: 'Float',
    id: 'Float',
    projectId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  TeamJoin: {
    askedRoleId: 'bigint',
    changeRole: 'ChangeRole',
    changeRoleId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formSubmission: 'FormSubmission',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    joinerId: 'bigint',
    role: 'Role',
    state: 'String',
    team: 'Team',
    teamId: 'bigint',
    tenant: 'Tenant',
    tenantId: 'bigint',
    userInfo: 'UserInfo',
  },
  TeamJoinAggregate: {
    aggregate: 'TeamJoinAggregateFields',
    nodes: 'TeamJoin',
  },
  TeamJoinAggregateFields: {
    avg: 'TeamJoinAvgFields',
    count: 'Int',
    max: 'TeamJoinMaxFields',
    min: 'TeamJoinMinFields',
    stddev: 'TeamJoinStddevFields',
    stddevPop: 'TeamJoinStddevPopFields',
    stddevSamp: 'TeamJoinStddevSampFields',
    sum: 'TeamJoinSumFields',
    varPop: 'TeamJoinVarPopFields',
    varSamp: 'TeamJoinVarSampFields',
    variance: 'TeamJoinVarianceFields',
  },
  TeamJoinAvgFields: {
    askedRoleId: 'Float',
    changeRoleId: 'Float',
    createdById: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    joinerId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  TeamJoinMaxFields: {
    askedRoleId: 'bigint',
    changeRoleId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    joinerId: 'bigint',
    state: 'String',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  TeamJoinMinFields: {
    askedRoleId: 'bigint',
    changeRoleId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    formSubmissionId: 'bigint',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    joinerId: 'bigint',
    state: 'String',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  TeamJoinMutationResponse: {
    affectedRows: 'Int',
    returning: 'TeamJoin',
  },
  TeamJoinStddevFields: {
    askedRoleId: 'Float',
    changeRoleId: 'Float',
    createdById: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    joinerId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  TeamJoinStddevPopFields: {
    askedRoleId: 'Float',
    changeRoleId: 'Float',
    createdById: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    joinerId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  TeamJoinStddevSampFields: {
    askedRoleId: 'Float',
    changeRoleId: 'Float',
    createdById: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    joinerId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  TeamJoinSumFields: {
    askedRoleId: 'bigint',
    changeRoleId: 'bigint',
    createdById: 'bigint',
    formSubmissionId: 'bigint',
    id: 'bigint',
    joinerId: 'bigint',
    teamId: 'bigint',
    tenantId: 'bigint',
  },
  TeamJoinVarianceFields: {
    askedRoleId: 'Float',
    changeRoleId: 'Float',
    createdById: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    joinerId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  TeamJoinVarPopFields: {
    askedRoleId: 'Float',
    changeRoleId: 'Float',
    createdById: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    joinerId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  TeamJoinVarSampFields: {
    askedRoleId: 'Float',
    changeRoleId: 'Float',
    createdById: 'Float',
    formSubmissionId: 'Float',
    id: 'Float',
    joinerId: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
  },
  TeamMaxFields: {
    canteenId: 'bigint',
    classGroupId: 'bigint',
    cohortId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    currentFinance: 'Int',
    deletedAt: 'timestamptz',
    directorsCategoryName: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    joinFormId: 'bigint',
    managersCategoryName: 'String',
    membersCategoryName: 'String',
    membershipFees: 'Int',
    parentId: 'bigint',
    tagline: 'String',
    tenantId: 'bigint',
    type: 'String',
    videoId: 'bigint',
  },
  TeamMember: {
    actions: 'Action',
    actionsAggregate: 'ActionAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    endDate: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    permissions: 'Int',
    projectSupervisors: 'ProjectSupervisors',
    projectSupervisorsAggregate: 'ProjectSupervisorsAggregate',
    startDate: 'timestamptz',
    team: 'Team',
    teamId: 'bigint',
    teamMemberRoles: 'TeamMemberRoles',
    teamMemberRolesAggregate: 'TeamMemberRolesAggregate',
    tenant: 'Tenant',
    tenantId: 'bigint',
    userId: 'bigint',
    userInfo: 'UserInfo',
  },
  TeamMemberAggregate: {
    aggregate: 'TeamMemberAggregateFields',
    nodes: 'TeamMember',
  },
  TeamMemberAggregateFields: {
    avg: 'TeamMemberAvgFields',
    count: 'Int',
    max: 'TeamMemberMaxFields',
    min: 'TeamMemberMinFields',
    stddev: 'TeamMemberStddevFields',
    stddevPop: 'TeamMemberStddevPopFields',
    stddevSamp: 'TeamMemberStddevSampFields',
    sum: 'TeamMemberSumFields',
    varPop: 'TeamMemberVarPopFields',
    varSamp: 'TeamMemberVarSampFields',
    variance: 'TeamMemberVarianceFields',
  },
  TeamMemberAvgFields: {
    createdById: 'Float',
    id: 'Float',
    permissions: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  TeamMemberMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    endDate: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    permissions: 'Int',
    startDate: 'timestamptz',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  TeamMemberMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    endDate: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    permissions: 'Int',
    startDate: 'timestamptz',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  TeamMemberMutationResponse: {
    affectedRows: 'Int',
    returning: 'TeamMember',
  },
  TeamMemberRoles: {
    role: 'Role',
    roleId: 'bigint',
    teamMember: 'TeamMember',
    teamMemberId: 'bigint',
  },
  TeamMemberRolesAggregate: {
    aggregate: 'TeamMemberRolesAggregateFields',
    nodes: 'TeamMemberRoles',
  },
  TeamMemberRolesAggregateFields: {
    avg: 'TeamMemberRolesAvgFields',
    count: 'Int',
    max: 'TeamMemberRolesMaxFields',
    min: 'TeamMemberRolesMinFields',
    stddev: 'TeamMemberRolesStddevFields',
    stddevPop: 'TeamMemberRolesStddevPopFields',
    stddevSamp: 'TeamMemberRolesStddevSampFields',
    sum: 'TeamMemberRolesSumFields',
    varPop: 'TeamMemberRolesVarPopFields',
    varSamp: 'TeamMemberRolesVarSampFields',
    variance: 'TeamMemberRolesVarianceFields',
  },
  TeamMemberRolesAvgFields: {
    roleId: 'Float',
    teamMemberId: 'Float',
  },
  TeamMemberRolesMaxFields: {
    roleId: 'bigint',
    teamMemberId: 'bigint',
  },
  TeamMemberRolesMinFields: {
    roleId: 'bigint',
    teamMemberId: 'bigint',
  },
  TeamMemberRolesMutationResponse: {
    affectedRows: 'Int',
    returning: 'TeamMemberRoles',
  },
  TeamMemberRolesStddevFields: {
    roleId: 'Float',
    teamMemberId: 'Float',
  },
  TeamMemberRolesStddevPopFields: {
    roleId: 'Float',
    teamMemberId: 'Float',
  },
  TeamMemberRolesStddevSampFields: {
    roleId: 'Float',
    teamMemberId: 'Float',
  },
  TeamMemberRolesSumFields: {
    roleId: 'bigint',
    teamMemberId: 'bigint',
  },
  TeamMemberRolesVarianceFields: {
    roleId: 'Float',
    teamMemberId: 'Float',
  },
  TeamMemberRolesVarPopFields: {
    roleId: 'Float',
    teamMemberId: 'Float',
  },
  TeamMemberRolesVarSampFields: {
    roleId: 'Float',
    teamMemberId: 'Float',
  },
  TeamMemberStddevFields: {
    createdById: 'Float',
    id: 'Float',
    permissions: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  TeamMemberStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    permissions: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  TeamMemberStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    permissions: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  TeamMemberSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    permissions: 'Int',
    teamId: 'bigint',
    tenantId: 'bigint',
    userId: 'bigint',
  },
  TeamMemberVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    permissions: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  TeamMemberVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    permissions: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  TeamMemberVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    permissions: 'Float',
    teamId: 'Float',
    tenantId: 'Float',
    userId: 'Float',
  },
  TeamMetric: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    tenant: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
    value: 'String',
  },
  TeamMetricAggregate: {
    aggregate: 'TeamMetricAggregateFields',
    nodes: 'TeamMetric',
  },
  TeamMetricAggregateFields: {
    avg: 'TeamMetricAvgFields',
    count: 'Int',
    max: 'TeamMetricMaxFields',
    min: 'TeamMetricMinFields',
    stddev: 'TeamMetricStddevFields',
    stddevPop: 'TeamMetricStddevPopFields',
    stddevSamp: 'TeamMetricStddevSampFields',
    sum: 'TeamMetricSumFields',
    varPop: 'TeamMetricVarPopFields',
    varSamp: 'TeamMetricVarSampFields',
    variance: 'TeamMetricVarianceFields',
  },
  TeamMetricAvgFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  TeamMetricMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
    type: 'String',
    value: 'String',
  },
  TeamMetricMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    tenantId: 'bigint',
    type: 'String',
    value: 'String',
  },
  TeamMetricMutationResponse: {
    affectedRows: 'Int',
    returning: 'TeamMetric',
  },
  TeamMetricStddevFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  TeamMetricStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  TeamMetricStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  TeamMetricSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  TeamMetricVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  TeamMetricVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  TeamMetricVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  TeamMinFields: {
    canteenId: 'bigint',
    classGroupId: 'bigint',
    cohortId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    currentFinance: 'Int',
    deletedAt: 'timestamptz',
    directorsCategoryName: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    joinFormId: 'bigint',
    managersCategoryName: 'String',
    membersCategoryName: 'String',
    membershipFees: 'Int',
    parentId: 'bigint',
    tagline: 'String',
    tenantId: 'bigint',
    type: 'String',
    videoId: 'bigint',
  },
  TeamMutationResponse: {
    affectedRows: 'Int',
    returning: 'Team',
  },
  TeamStddevFields: {
    canteenId: 'Float',
    classGroupId: 'Float',
    cohortId: 'Float',
    createdById: 'Float',
    currentFinance: 'Float',
    id: 'Float',
    joinFormId: 'Float',
    membershipFees: 'Float',
    parentId: 'Float',
    tenantId: 'Float',
    videoId: 'Float',
  },
  TeamStddevPopFields: {
    canteenId: 'Float',
    classGroupId: 'Float',
    cohortId: 'Float',
    createdById: 'Float',
    currentFinance: 'Float',
    id: 'Float',
    joinFormId: 'Float',
    membershipFees: 'Float',
    parentId: 'Float',
    tenantId: 'Float',
    videoId: 'Float',
  },
  TeamStddevSampFields: {
    canteenId: 'Float',
    classGroupId: 'Float',
    cohortId: 'Float',
    createdById: 'Float',
    currentFinance: 'Float',
    id: 'Float',
    joinFormId: 'Float',
    membershipFees: 'Float',
    parentId: 'Float',
    tenantId: 'Float',
    videoId: 'Float',
  },
  TeamSumFields: {
    canteenId: 'bigint',
    classGroupId: 'bigint',
    cohortId: 'bigint',
    createdById: 'bigint',
    currentFinance: 'Int',
    id: 'bigint',
    joinFormId: 'bigint',
    membershipFees: 'Int',
    parentId: 'bigint',
    tenantId: 'bigint',
    videoId: 'bigint',
  },
  TeamVarianceFields: {
    canteenId: 'Float',
    classGroupId: 'Float',
    cohortId: 'Float',
    createdById: 'Float',
    currentFinance: 'Float',
    id: 'Float',
    joinFormId: 'Float',
    membershipFees: 'Float',
    parentId: 'Float',
    tenantId: 'Float',
    videoId: 'Float',
  },
  TeamVarPopFields: {
    canteenId: 'Float',
    classGroupId: 'Float',
    cohortId: 'Float',
    createdById: 'Float',
    currentFinance: 'Float',
    id: 'Float',
    joinFormId: 'Float',
    membershipFees: 'Float',
    parentId: 'Float',
    tenantId: 'Float',
    videoId: 'Float',
  },
  TeamVarSampFields: {
    canteenId: 'Float',
    classGroupId: 'Float',
    cohortId: 'Float',
    createdById: 'Float',
    currentFinance: 'Float',
    id: 'Float',
    joinFormId: 'Float',
    membershipFees: 'Float',
    parentId: 'Float',
    tenantId: 'Float',
    videoId: 'Float',
  },
  Tenant: {
    actions: 'Action',
    actionsAggregate: 'ActionAggregate',
    actorAddresses: 'ActorAddress',
    actorAddressesAggregate: 'ActorAddressAggregate',
    actorBankInfos: 'ActorBankInfo',
    actorBankInfosAggregate: 'ActorBankInfoAggregate',
    actorFinances: 'ActorFinance',
    actorFinancesAggregate: 'ActorFinanceAggregate',
    actorImages: 'ActorImage',
    actorImagesAggregate: 'ActorImageAggregate',
    actors: 'Actor',
    actorsAggregate: 'ActorAggregate',
    botInfos: 'BotInfo',
    botInfosAggregate: 'BotInfoAggregate',
    canteenFoods: 'CanteenFood',
    canteenFoodsAggregate: 'CanteenFoodAggregate',
    canteenMenus: 'CanteenMenu',
    canteenMenusAggregate: 'CanteenMenuAggregate',
    canteens: 'Canteen',
    canteensAggregate: 'CanteenAggregate',
    changeRoles: 'ChangeRole',
    changeRolesAggregate: 'ChangeRoleAggregate',
    classGroupTeachers: 'ClassGroupTeacher',
    classGroupTeachersAggregate: 'ClassGroupTeacherAggregate',
    classGroups: 'ClassGroup',
    classGroupsAggregate: 'ClassGroupAggregate',
    cohorts: 'Cohort',
    cohortsAggregate: 'CohortAggregate',
    contentEdits: 'ContentEdit',
    contentEditsAggregate: 'ContentEditAggregate',
    contentMasters: 'ContentMaster',
    contentMastersAggregate: 'ContentMasterAggregate',
    contents: 'Content',
    contentsAggregate: 'ContentAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    documentEdits: 'DocumentEdit',
    documentEditsAggregate: 'DocumentEditAggregate',
    documents: 'Document',
    documentsAggregate: 'DocumentAggregate',
    domain: 'String',
    eventApprovalSteps: 'EventApprovalStep',
    eventApprovalStepsAggregate: 'EventApprovalStepAggregate',
    eventApprovals: 'EventApproval',
    eventApprovalsAggregate: 'EventApprovalAggregate',
    eventChangeRoles: 'EventChangeRole',
    eventChangeRolesAggregate: 'EventChangeRoleAggregate',
    eventJoins: 'EventJoin',
    eventJoinsAggregate: 'EventJoinAggregate',
    eventRoles: 'EventRole',
    eventRolesAggregate: 'EventRoleAggregate',
    eventValidationFormId: 'bigint',
    events: 'Event',
    eventsAggregate: 'EventAggregate',
    expenses: 'Expense',
    expensesAggregate: 'ExpenseAggregate',
    favorites: 'Favorite',
    favoritesAggregate: 'FavoriteAggregate',
    form: 'Form',
    formEdits: 'FormEdit',
    formEditsAggregate: 'FormEditAggregate',
    formSubmissionEdits: 'FormSubmissionEdit',
    formSubmissionEditsAggregate: 'FormSubmissionEditAggregate',
    formSubmissions: 'FormSubmission',
    formSubmissionsAggregate: 'FormSubmissionAggregate',
    forms: 'Form',
    formsAggregate: 'FormAggregate',
    id: 'bigint',
    individual: 'Individual',
    individuals: 'Individual',
    individualsAggregate: 'IndividualAggregate',
    issues: 'Issue',
    issuesAggregate: 'IssueAggregate',
    logoId: 'bigint',
    name: 'String',
    oidcInfoOidcCallbackUri: 'String',
    oidcInfoOidcClientId: 'String',
    oidcInfoOidcClientSecret: 'String',
    oidcInfoOidcDiscoveryUrl: 'String',
    oidcInfoOidcEnabled: 'Boolean',
    oidcInfoOidcName: 'String',
    oidcInfoOidcScopes: 'String',
    poles: 'Pole',
    polesAggregate: 'PoleAggregate',
    projectRoles: 'ProjectRole',
    projectRolesAggregate: 'ProjectRoleAggregate',
    projects: 'Project',
    projectsAggregate: 'ProjectAggregate',
    reactions: 'Reaction',
    reactionsAggregate: 'ReactionAggregate',
    reports: 'Report',
    reportsAggregate: 'ReportAggregate',
    roles: 'Role',
    rolesAggregate: 'RoleAggregate',
    sessions: 'Session',
    sessionsAggregate: 'SessionAggregate',
    shortcuts: 'Shortcut',
    shortcutsAggregate: 'ShortcutAggregate',
    socials: 'Social',
    socialsAggregate: 'SocialAggregate',
    subjects: 'Subject',
    subjectsAggregate: 'SubjectAggregate',
    tags: 'Tag',
    tagsAggregate: 'TagAggregate',
    team: 'Team',
    teamFinances: 'TeamFinance',
    teamFinancesAggregate: 'TeamFinanceAggregate',
    teamId: 'bigint',
    teamJoins: 'TeamJoin',
    teamJoinsAggregate: 'TeamJoinAggregate',
    teamMembers: 'TeamMember',
    teamMembersAggregate: 'TeamMemberAggregate',
    teamMetrics: 'TeamMetric',
    teamMetricsAggregate: 'TeamMetricAggregate',
    teams: 'Team',
    teamsAggregate: 'TeamAggregate',
    upload: 'Upload',
    uploads: 'Upload',
    uploadsAggregate: 'UploadAggregate',
    userInfos: 'UserInfo',
    userInfosAggregate: 'UserInfoAggregate',
    validations: 'Validation',
    validationsAggregate: 'ValidationAggregate',
    votes: 'Vote',
    votesAggregate: 'VoteAggregate',
  },
  TenantAggregate: {
    aggregate: 'TenantAggregateFields',
    nodes: 'Tenant',
  },
  TenantAggregateFields: {
    avg: 'TenantAvgFields',
    count: 'Int',
    max: 'TenantMaxFields',
    min: 'TenantMinFields',
    stddev: 'TenantStddevFields',
    stddevPop: 'TenantStddevPopFields',
    stddevSamp: 'TenantStddevSampFields',
    sum: 'TenantSumFields',
    varPop: 'TenantVarPopFields',
    varSamp: 'TenantVarSampFields',
    variance: 'TenantVarianceFields',
  },
  TenantAvgFields: {
    createdById: 'Float',
    eventValidationFormId: 'Float',
    id: 'Float',
    logoId: 'Float',
    teamId: 'Float',
  },
  TenantMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    domain: 'String',
    eventValidationFormId: 'bigint',
    id: 'bigint',
    logoId: 'bigint',
    name: 'String',
    oidcInfoOidcCallbackUri: 'String',
    oidcInfoOidcClientId: 'String',
    oidcInfoOidcClientSecret: 'String',
    oidcInfoOidcDiscoveryUrl: 'String',
    oidcInfoOidcName: 'String',
    oidcInfoOidcScopes: 'String',
    teamId: 'bigint',
  },
  TenantMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    domain: 'String',
    eventValidationFormId: 'bigint',
    id: 'bigint',
    logoId: 'bigint',
    name: 'String',
    oidcInfoOidcCallbackUri: 'String',
    oidcInfoOidcClientId: 'String',
    oidcInfoOidcClientSecret: 'String',
    oidcInfoOidcDiscoveryUrl: 'String',
    oidcInfoOidcName: 'String',
    oidcInfoOidcScopes: 'String',
    teamId: 'bigint',
  },
  TenantMutationResponse: {
    affectedRows: 'Int',
    returning: 'Tenant',
  },
  TenantStddevFields: {
    createdById: 'Float',
    eventValidationFormId: 'Float',
    id: 'Float',
    logoId: 'Float',
    teamId: 'Float',
  },
  TenantStddevPopFields: {
    createdById: 'Float',
    eventValidationFormId: 'Float',
    id: 'Float',
    logoId: 'Float',
    teamId: 'Float',
  },
  TenantStddevSampFields: {
    createdById: 'Float',
    eventValidationFormId: 'Float',
    id: 'Float',
    logoId: 'Float',
    teamId: 'Float',
  },
  TenantSumFields: {
    createdById: 'bigint',
    eventValidationFormId: 'bigint',
    id: 'bigint',
    logoId: 'bigint',
    teamId: 'bigint',
  },
  TenantVarianceFields: {
    createdById: 'Float',
    eventValidationFormId: 'Float',
    id: 'Float',
    logoId: 'Float',
    teamId: 'Float',
  },
  TenantVarPopFields: {
    createdById: 'Float',
    eventValidationFormId: 'Float',
    id: 'Float',
    logoId: 'Float',
    teamId: 'Float',
  },
  TenantVarSampFields: {
    createdById: 'Float',
    eventValidationFormId: 'Float',
    id: 'Float',
    logoId: 'Float',
    teamId: 'Float',
  },
  timestamptz: `scalar.timestamptz` as const,
  Upload: {
    actorAddress: 'ActorAddress',
    actorFinanceReceipts: 'ActorFinanceReceipts',
    actorFinanceReceiptsAggregate: 'ActorFinanceReceiptsAggregate',
    actorImage: 'ActorImage',
    contentAttachments: 'ContentAttachments',
    contentAttachmentsAggregate: 'ContentAttachmentsAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    document: 'Document',
    documentEdits: 'DocumentEdit',
    documentEditsAggregate: 'DocumentEditAggregate',
    events: 'Event',
    eventsAggregate: 'EventAggregate',
    expenses: 'Expense',
    expensesAggregate: 'ExpenseAggregate',
    fileLastModifiedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    mime: 'String',
    name: 'String',
    projects: 'Project',
    projectsAggregate: 'ProjectAggregate',
    size: 'Int',
    tags: 'Tag',
    tagsAggregate: 'TagAggregate',
    teams: 'Team',
    teamsAggregate: 'TeamAggregate',
    tenant: 'Tenant',
    tenantId: 'bigint',
    tenants: 'Tenant',
    tenantsAggregate: 'TenantAggregate',
    url: 'String',
  },
  UploadAggregate: {
    aggregate: 'UploadAggregateFields',
    nodes: 'Upload',
  },
  UploadAggregateFields: {
    avg: 'UploadAvgFields',
    count: 'Int',
    max: 'UploadMaxFields',
    min: 'UploadMinFields',
    stddev: 'UploadStddevFields',
    stddevPop: 'UploadStddevPopFields',
    stddevSamp: 'UploadStddevSampFields',
    sum: 'UploadSumFields',
    varPop: 'UploadVarPopFields',
    varSamp: 'UploadVarSampFields',
    variance: 'UploadVarianceFields',
  },
  UploadAvgFields: {
    createdById: 'Float',
    id: 'Float',
    size: 'Float',
    tenantId: 'Float',
  },
  UploadMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    fileLastModifiedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    mime: 'String',
    name: 'String',
    size: 'Int',
    tenantId: 'bigint',
    url: 'String',
  },
  UploadMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    fileLastModifiedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    mime: 'String',
    name: 'String',
    size: 'Int',
    tenantId: 'bigint',
    url: 'String',
  },
  UploadMutationResponse: {
    affectedRows: 'Int',
    returning: 'Upload',
  },
  UploadStddevFields: {
    createdById: 'Float',
    id: 'Float',
    size: 'Float',
    tenantId: 'Float',
  },
  UploadStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    size: 'Float',
    tenantId: 'Float',
  },
  UploadStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    size: 'Float',
    tenantId: 'Float',
  },
  UploadSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    size: 'Int',
    tenantId: 'bigint',
  },
  UploadVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    size: 'Float',
    tenantId: 'Float',
  },
  UploadVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    size: 'Float',
    tenantId: 'Float',
  },
  UploadVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    size: 'Float',
    tenantId: 'Float',
  },
  UserInfo: {
    actions: 'Action',
    actionsAggregate: 'ActionAggregate',
    changeRoles: 'ChangeRole',
    changeRolesAggregate: 'ChangeRoleAggregate',
    classGroupTeachers: 'ClassGroupTeacher',
    classGroupTeachersAggregate: 'ClassGroupTeacherAggregate',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    customizationColor: 'String',
    customizationSignature: 'String',
    deletedAt: 'timestamptz',
    eventJoins: 'EventJoin',
    eventJoinsAggregate: 'EventJoinAggregate',
    eventRoles: 'EventRole',
    eventRolesAggregate: 'EventRoleAggregate',
    events: 'Event',
    eventsAggregate: 'EventAggregate',
    finishedIntroduction: 'Boolean',
    finishedOnboarding: 'Boolean',
    firstName: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    individualById: 'Individual',
    lastName: 'String',
    middleNames: '_text',
    notificationSettingsAdminEventValidationApproved: 'smallint',
    notificationSettingsAdminEventValidationRejected: 'smallint',
    notificationSettingsAdminEventValidationStarted: 'smallint',
    notificationSettingsAdminEventValidationStep: 'smallint',
    notificationSettingsAdminReportCreated: 'smallint',
    notificationSettingsAdminRoleUpdated: 'smallint',
    notificationSettingsAdminTeamLegalFileUpdated: 'smallint',
    notificationSettingsAdminTeamSocialUpdated: 'smallint',
    notificationSettingsAdminThreadAssigned: 'smallint',
    notificationSettingsAdminThreadAssignedStale: 'smallint',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'Int',
    notificationSettingsAdminThreadStale: 'smallint',
    notificationSettingsAdminThreadStaleThreshold: 'Int',
    notificationSettingsBadgeUnlocked: 'smallint',
    notificationSettingsBlogSubscribedUpdated: 'smallint',
    notificationSettingsContentRemoved: 'smallint',
    notificationSettingsEventCreated: 'smallint',
    notificationSettingsEventManagedApproved: 'smallint',
    notificationSettingsEventManagedRegistrationCreated: 'smallint',
    notificationSettingsEventManagedRejected: 'smallint',
    notificationSettingsEventSubscribedUpdated: 'smallint',
    notificationSettingsMentionned: 'smallint',
    notificationSettingsRoleUpdated: 'smallint',
    notificationSettingsTeamManagedEventUpdated: 'smallint',
    notificationSettingsTeamManagedFormUpdated: 'smallint',
    notificationSettingsTeamManagedMemberRoleUpdated: 'smallint',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'smallint',
    notificationSettingsTeamSubscribedEventCreated: 'smallint',
    notificationSettingsThreadSubscribedAnswered: 'smallint',
    notificationSettingsThreadSubscribedUpdated: 'smallint',
    sessions: 'Session',
    sessionsAggregate: 'SessionAggregate',
    settingsDarkModeActivated: 'Boolean',
    settingsGdprEndOfLifeAnonymize: 'Boolean',
    settingsGdprEndOfLifeExport: 'Boolean',
    shortcuts: 'Shortcut',
    shortcutsAggregate: 'ShortcutAggregate',
    statsActionStreak: 'smallint',
    statsCommentCount: 'smallint',
    statsLastActionAt: 'timestamptz',
    statsLastComment: 'timestamptz',
    statsLastPostAt: 'timestamptz',
    statsLastReplyAt: 'timestamptz',
    statsPoints: 'Int',
    statsPostCount: 'smallint',
    statsPostStreak: 'smallint',
    statsReplyCount: 'smallint',
    statsReplyStreak: 'smallint',
    statsUploadCount: 'smallint',
    teamJoins: 'TeamJoin',
    teamJoinsAggregate: 'TeamJoinAggregate',
    teamMembers: 'TeamMember',
    teamMembersAggregate: 'TeamMemberAggregate',
    tenant: 'Tenant',
    tenantId: 'bigint',
  },
  UserInfoAggregate: {
    aggregate: 'UserInfoAggregateFields',
    nodes: 'UserInfo',
  },
  UserInfoAggregateFields: {
    avg: 'UserInfoAvgFields',
    count: 'Int',
    max: 'UserInfoMaxFields',
    min: 'UserInfoMinFields',
    stddev: 'UserInfoStddevFields',
    stddevPop: 'UserInfoStddevPopFields',
    stddevSamp: 'UserInfoStddevSampFields',
    sum: 'UserInfoSumFields',
    varPop: 'UserInfoVarPopFields',
    varSamp: 'UserInfoVarSampFields',
    variance: 'UserInfoVarianceFields',
  },
  UserInfoAvgFields: {
    createdById: 'Float',
    id: 'Float',
    notificationSettingsAdminEventValidationApproved: 'Float',
    notificationSettingsAdminEventValidationRejected: 'Float',
    notificationSettingsAdminEventValidationStarted: 'Float',
    notificationSettingsAdminEventValidationStep: 'Float',
    notificationSettingsAdminReportCreated: 'Float',
    notificationSettingsAdminRoleUpdated: 'Float',
    notificationSettingsAdminTeamLegalFileUpdated: 'Float',
    notificationSettingsAdminTeamSocialUpdated: 'Float',
    notificationSettingsAdminThreadAssigned: 'Float',
    notificationSettingsAdminThreadAssignedStale: 'Float',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'Float',
    notificationSettingsAdminThreadStale: 'Float',
    notificationSettingsAdminThreadStaleThreshold: 'Float',
    notificationSettingsBadgeUnlocked: 'Float',
    notificationSettingsBlogSubscribedUpdated: 'Float',
    notificationSettingsContentRemoved: 'Float',
    notificationSettingsEventCreated: 'Float',
    notificationSettingsEventManagedApproved: 'Float',
    notificationSettingsEventManagedRegistrationCreated: 'Float',
    notificationSettingsEventManagedRejected: 'Float',
    notificationSettingsEventSubscribedUpdated: 'Float',
    notificationSettingsMentionned: 'Float',
    notificationSettingsRoleUpdated: 'Float',
    notificationSettingsTeamManagedEventUpdated: 'Float',
    notificationSettingsTeamManagedFormUpdated: 'Float',
    notificationSettingsTeamManagedMemberRoleUpdated: 'Float',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'Float',
    notificationSettingsTeamSubscribedEventCreated: 'Float',
    notificationSettingsThreadSubscribedAnswered: 'Float',
    notificationSettingsThreadSubscribedUpdated: 'Float',
    statsActionStreak: 'Float',
    statsCommentCount: 'Float',
    statsPoints: 'Float',
    statsPostCount: 'Float',
    statsPostStreak: 'Float',
    statsReplyCount: 'Float',
    statsReplyStreak: 'Float',
    statsUploadCount: 'Float',
    tenantId: 'Float',
  },
  UserInfoMaxFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    customizationColor: 'String',
    customizationSignature: 'String',
    deletedAt: 'timestamptz',
    firstName: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastName: 'String',
    notificationSettingsAdminEventValidationApproved: 'smallint',
    notificationSettingsAdminEventValidationRejected: 'smallint',
    notificationSettingsAdminEventValidationStarted: 'smallint',
    notificationSettingsAdminEventValidationStep: 'smallint',
    notificationSettingsAdminReportCreated: 'smallint',
    notificationSettingsAdminRoleUpdated: 'smallint',
    notificationSettingsAdminTeamLegalFileUpdated: 'smallint',
    notificationSettingsAdminTeamSocialUpdated: 'smallint',
    notificationSettingsAdminThreadAssigned: 'smallint',
    notificationSettingsAdminThreadAssignedStale: 'smallint',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'Int',
    notificationSettingsAdminThreadStale: 'smallint',
    notificationSettingsAdminThreadStaleThreshold: 'Int',
    notificationSettingsBadgeUnlocked: 'smallint',
    notificationSettingsBlogSubscribedUpdated: 'smallint',
    notificationSettingsContentRemoved: 'smallint',
    notificationSettingsEventCreated: 'smallint',
    notificationSettingsEventManagedApproved: 'smallint',
    notificationSettingsEventManagedRegistrationCreated: 'smallint',
    notificationSettingsEventManagedRejected: 'smallint',
    notificationSettingsEventSubscribedUpdated: 'smallint',
    notificationSettingsMentionned: 'smallint',
    notificationSettingsRoleUpdated: 'smallint',
    notificationSettingsTeamManagedEventUpdated: 'smallint',
    notificationSettingsTeamManagedFormUpdated: 'smallint',
    notificationSettingsTeamManagedMemberRoleUpdated: 'smallint',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'smallint',
    notificationSettingsTeamSubscribedEventCreated: 'smallint',
    notificationSettingsThreadSubscribedAnswered: 'smallint',
    notificationSettingsThreadSubscribedUpdated: 'smallint',
    statsActionStreak: 'smallint',
    statsCommentCount: 'smallint',
    statsLastActionAt: 'timestamptz',
    statsLastComment: 'timestamptz',
    statsLastPostAt: 'timestamptz',
    statsLastReplyAt: 'timestamptz',
    statsPoints: 'Int',
    statsPostCount: 'smallint',
    statsPostStreak: 'smallint',
    statsReplyCount: 'smallint',
    statsReplyStreak: 'smallint',
    statsUploadCount: 'smallint',
    tenantId: 'bigint',
  },
  UserInfoMinFields: {
    createdAt: 'timestamptz',
    createdById: 'bigint',
    customizationColor: 'String',
    customizationSignature: 'String',
    deletedAt: 'timestamptz',
    firstName: 'String',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastName: 'String',
    notificationSettingsAdminEventValidationApproved: 'smallint',
    notificationSettingsAdminEventValidationRejected: 'smallint',
    notificationSettingsAdminEventValidationStarted: 'smallint',
    notificationSettingsAdminEventValidationStep: 'smallint',
    notificationSettingsAdminReportCreated: 'smallint',
    notificationSettingsAdminRoleUpdated: 'smallint',
    notificationSettingsAdminTeamLegalFileUpdated: 'smallint',
    notificationSettingsAdminTeamSocialUpdated: 'smallint',
    notificationSettingsAdminThreadAssigned: 'smallint',
    notificationSettingsAdminThreadAssignedStale: 'smallint',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'Int',
    notificationSettingsAdminThreadStale: 'smallint',
    notificationSettingsAdminThreadStaleThreshold: 'Int',
    notificationSettingsBadgeUnlocked: 'smallint',
    notificationSettingsBlogSubscribedUpdated: 'smallint',
    notificationSettingsContentRemoved: 'smallint',
    notificationSettingsEventCreated: 'smallint',
    notificationSettingsEventManagedApproved: 'smallint',
    notificationSettingsEventManagedRegistrationCreated: 'smallint',
    notificationSettingsEventManagedRejected: 'smallint',
    notificationSettingsEventSubscribedUpdated: 'smallint',
    notificationSettingsMentionned: 'smallint',
    notificationSettingsRoleUpdated: 'smallint',
    notificationSettingsTeamManagedEventUpdated: 'smallint',
    notificationSettingsTeamManagedFormUpdated: 'smallint',
    notificationSettingsTeamManagedMemberRoleUpdated: 'smallint',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'smallint',
    notificationSettingsTeamSubscribedEventCreated: 'smallint',
    notificationSettingsThreadSubscribedAnswered: 'smallint',
    notificationSettingsThreadSubscribedUpdated: 'smallint',
    statsActionStreak: 'smallint',
    statsCommentCount: 'smallint',
    statsLastActionAt: 'timestamptz',
    statsLastComment: 'timestamptz',
    statsLastPostAt: 'timestamptz',
    statsLastReplyAt: 'timestamptz',
    statsPoints: 'Int',
    statsPostCount: 'smallint',
    statsPostStreak: 'smallint',
    statsReplyCount: 'smallint',
    statsReplyStreak: 'smallint',
    statsUploadCount: 'smallint',
    tenantId: 'bigint',
  },
  UserInfoMutationResponse: {
    affectedRows: 'Int',
    returning: 'UserInfo',
  },
  UserInfoStddevFields: {
    createdById: 'Float',
    id: 'Float',
    notificationSettingsAdminEventValidationApproved: 'Float',
    notificationSettingsAdminEventValidationRejected: 'Float',
    notificationSettingsAdminEventValidationStarted: 'Float',
    notificationSettingsAdminEventValidationStep: 'Float',
    notificationSettingsAdminReportCreated: 'Float',
    notificationSettingsAdminRoleUpdated: 'Float',
    notificationSettingsAdminTeamLegalFileUpdated: 'Float',
    notificationSettingsAdminTeamSocialUpdated: 'Float',
    notificationSettingsAdminThreadAssigned: 'Float',
    notificationSettingsAdminThreadAssignedStale: 'Float',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'Float',
    notificationSettingsAdminThreadStale: 'Float',
    notificationSettingsAdminThreadStaleThreshold: 'Float',
    notificationSettingsBadgeUnlocked: 'Float',
    notificationSettingsBlogSubscribedUpdated: 'Float',
    notificationSettingsContentRemoved: 'Float',
    notificationSettingsEventCreated: 'Float',
    notificationSettingsEventManagedApproved: 'Float',
    notificationSettingsEventManagedRegistrationCreated: 'Float',
    notificationSettingsEventManagedRejected: 'Float',
    notificationSettingsEventSubscribedUpdated: 'Float',
    notificationSettingsMentionned: 'Float',
    notificationSettingsRoleUpdated: 'Float',
    notificationSettingsTeamManagedEventUpdated: 'Float',
    notificationSettingsTeamManagedFormUpdated: 'Float',
    notificationSettingsTeamManagedMemberRoleUpdated: 'Float',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'Float',
    notificationSettingsTeamSubscribedEventCreated: 'Float',
    notificationSettingsThreadSubscribedAnswered: 'Float',
    notificationSettingsThreadSubscribedUpdated: 'Float',
    statsActionStreak: 'Float',
    statsCommentCount: 'Float',
    statsPoints: 'Float',
    statsPostCount: 'Float',
    statsPostStreak: 'Float',
    statsReplyCount: 'Float',
    statsReplyStreak: 'Float',
    statsUploadCount: 'Float',
    tenantId: 'Float',
  },
  UserInfoStddevPopFields: {
    createdById: 'Float',
    id: 'Float',
    notificationSettingsAdminEventValidationApproved: 'Float',
    notificationSettingsAdminEventValidationRejected: 'Float',
    notificationSettingsAdminEventValidationStarted: 'Float',
    notificationSettingsAdminEventValidationStep: 'Float',
    notificationSettingsAdminReportCreated: 'Float',
    notificationSettingsAdminRoleUpdated: 'Float',
    notificationSettingsAdminTeamLegalFileUpdated: 'Float',
    notificationSettingsAdminTeamSocialUpdated: 'Float',
    notificationSettingsAdminThreadAssigned: 'Float',
    notificationSettingsAdminThreadAssignedStale: 'Float',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'Float',
    notificationSettingsAdminThreadStale: 'Float',
    notificationSettingsAdminThreadStaleThreshold: 'Float',
    notificationSettingsBadgeUnlocked: 'Float',
    notificationSettingsBlogSubscribedUpdated: 'Float',
    notificationSettingsContentRemoved: 'Float',
    notificationSettingsEventCreated: 'Float',
    notificationSettingsEventManagedApproved: 'Float',
    notificationSettingsEventManagedRegistrationCreated: 'Float',
    notificationSettingsEventManagedRejected: 'Float',
    notificationSettingsEventSubscribedUpdated: 'Float',
    notificationSettingsMentionned: 'Float',
    notificationSettingsRoleUpdated: 'Float',
    notificationSettingsTeamManagedEventUpdated: 'Float',
    notificationSettingsTeamManagedFormUpdated: 'Float',
    notificationSettingsTeamManagedMemberRoleUpdated: 'Float',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'Float',
    notificationSettingsTeamSubscribedEventCreated: 'Float',
    notificationSettingsThreadSubscribedAnswered: 'Float',
    notificationSettingsThreadSubscribedUpdated: 'Float',
    statsActionStreak: 'Float',
    statsCommentCount: 'Float',
    statsPoints: 'Float',
    statsPostCount: 'Float',
    statsPostStreak: 'Float',
    statsReplyCount: 'Float',
    statsReplyStreak: 'Float',
    statsUploadCount: 'Float',
    tenantId: 'Float',
  },
  UserInfoStddevSampFields: {
    createdById: 'Float',
    id: 'Float',
    notificationSettingsAdminEventValidationApproved: 'Float',
    notificationSettingsAdminEventValidationRejected: 'Float',
    notificationSettingsAdminEventValidationStarted: 'Float',
    notificationSettingsAdminEventValidationStep: 'Float',
    notificationSettingsAdminReportCreated: 'Float',
    notificationSettingsAdminRoleUpdated: 'Float',
    notificationSettingsAdminTeamLegalFileUpdated: 'Float',
    notificationSettingsAdminTeamSocialUpdated: 'Float',
    notificationSettingsAdminThreadAssigned: 'Float',
    notificationSettingsAdminThreadAssignedStale: 'Float',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'Float',
    notificationSettingsAdminThreadStale: 'Float',
    notificationSettingsAdminThreadStaleThreshold: 'Float',
    notificationSettingsBadgeUnlocked: 'Float',
    notificationSettingsBlogSubscribedUpdated: 'Float',
    notificationSettingsContentRemoved: 'Float',
    notificationSettingsEventCreated: 'Float',
    notificationSettingsEventManagedApproved: 'Float',
    notificationSettingsEventManagedRegistrationCreated: 'Float',
    notificationSettingsEventManagedRejected: 'Float',
    notificationSettingsEventSubscribedUpdated: 'Float',
    notificationSettingsMentionned: 'Float',
    notificationSettingsRoleUpdated: 'Float',
    notificationSettingsTeamManagedEventUpdated: 'Float',
    notificationSettingsTeamManagedFormUpdated: 'Float',
    notificationSettingsTeamManagedMemberRoleUpdated: 'Float',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'Float',
    notificationSettingsTeamSubscribedEventCreated: 'Float',
    notificationSettingsThreadSubscribedAnswered: 'Float',
    notificationSettingsThreadSubscribedUpdated: 'Float',
    statsActionStreak: 'Float',
    statsCommentCount: 'Float',
    statsPoints: 'Float',
    statsPostCount: 'Float',
    statsPostStreak: 'Float',
    statsReplyCount: 'Float',
    statsReplyStreak: 'Float',
    statsUploadCount: 'Float',
    tenantId: 'Float',
  },
  UserInfoSumFields: {
    createdById: 'bigint',
    id: 'bigint',
    notificationSettingsAdminEventValidationApproved: 'smallint',
    notificationSettingsAdminEventValidationRejected: 'smallint',
    notificationSettingsAdminEventValidationStarted: 'smallint',
    notificationSettingsAdminEventValidationStep: 'smallint',
    notificationSettingsAdminReportCreated: 'smallint',
    notificationSettingsAdminRoleUpdated: 'smallint',
    notificationSettingsAdminTeamLegalFileUpdated: 'smallint',
    notificationSettingsAdminTeamSocialUpdated: 'smallint',
    notificationSettingsAdminThreadAssigned: 'smallint',
    notificationSettingsAdminThreadAssignedStale: 'smallint',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'Int',
    notificationSettingsAdminThreadStale: 'smallint',
    notificationSettingsAdminThreadStaleThreshold: 'Int',
    notificationSettingsBadgeUnlocked: 'smallint',
    notificationSettingsBlogSubscribedUpdated: 'smallint',
    notificationSettingsContentRemoved: 'smallint',
    notificationSettingsEventCreated: 'smallint',
    notificationSettingsEventManagedApproved: 'smallint',
    notificationSettingsEventManagedRegistrationCreated: 'smallint',
    notificationSettingsEventManagedRejected: 'smallint',
    notificationSettingsEventSubscribedUpdated: 'smallint',
    notificationSettingsMentionned: 'smallint',
    notificationSettingsRoleUpdated: 'smallint',
    notificationSettingsTeamManagedEventUpdated: 'smallint',
    notificationSettingsTeamManagedFormUpdated: 'smallint',
    notificationSettingsTeamManagedMemberRoleUpdated: 'smallint',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'smallint',
    notificationSettingsTeamSubscribedEventCreated: 'smallint',
    notificationSettingsThreadSubscribedAnswered: 'smallint',
    notificationSettingsThreadSubscribedUpdated: 'smallint',
    statsActionStreak: 'smallint',
    statsCommentCount: 'smallint',
    statsPoints: 'Int',
    statsPostCount: 'smallint',
    statsPostStreak: 'smallint',
    statsReplyCount: 'smallint',
    statsReplyStreak: 'smallint',
    statsUploadCount: 'smallint',
    tenantId: 'bigint',
  },
  UserInfoVarianceFields: {
    createdById: 'Float',
    id: 'Float',
    notificationSettingsAdminEventValidationApproved: 'Float',
    notificationSettingsAdminEventValidationRejected: 'Float',
    notificationSettingsAdminEventValidationStarted: 'Float',
    notificationSettingsAdminEventValidationStep: 'Float',
    notificationSettingsAdminReportCreated: 'Float',
    notificationSettingsAdminRoleUpdated: 'Float',
    notificationSettingsAdminTeamLegalFileUpdated: 'Float',
    notificationSettingsAdminTeamSocialUpdated: 'Float',
    notificationSettingsAdminThreadAssigned: 'Float',
    notificationSettingsAdminThreadAssignedStale: 'Float',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'Float',
    notificationSettingsAdminThreadStale: 'Float',
    notificationSettingsAdminThreadStaleThreshold: 'Float',
    notificationSettingsBadgeUnlocked: 'Float',
    notificationSettingsBlogSubscribedUpdated: 'Float',
    notificationSettingsContentRemoved: 'Float',
    notificationSettingsEventCreated: 'Float',
    notificationSettingsEventManagedApproved: 'Float',
    notificationSettingsEventManagedRegistrationCreated: 'Float',
    notificationSettingsEventManagedRejected: 'Float',
    notificationSettingsEventSubscribedUpdated: 'Float',
    notificationSettingsMentionned: 'Float',
    notificationSettingsRoleUpdated: 'Float',
    notificationSettingsTeamManagedEventUpdated: 'Float',
    notificationSettingsTeamManagedFormUpdated: 'Float',
    notificationSettingsTeamManagedMemberRoleUpdated: 'Float',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'Float',
    notificationSettingsTeamSubscribedEventCreated: 'Float',
    notificationSettingsThreadSubscribedAnswered: 'Float',
    notificationSettingsThreadSubscribedUpdated: 'Float',
    statsActionStreak: 'Float',
    statsCommentCount: 'Float',
    statsPoints: 'Float',
    statsPostCount: 'Float',
    statsPostStreak: 'Float',
    statsReplyCount: 'Float',
    statsReplyStreak: 'Float',
    statsUploadCount: 'Float',
    tenantId: 'Float',
  },
  UserInfoVarPopFields: {
    createdById: 'Float',
    id: 'Float',
    notificationSettingsAdminEventValidationApproved: 'Float',
    notificationSettingsAdminEventValidationRejected: 'Float',
    notificationSettingsAdminEventValidationStarted: 'Float',
    notificationSettingsAdminEventValidationStep: 'Float',
    notificationSettingsAdminReportCreated: 'Float',
    notificationSettingsAdminRoleUpdated: 'Float',
    notificationSettingsAdminTeamLegalFileUpdated: 'Float',
    notificationSettingsAdminTeamSocialUpdated: 'Float',
    notificationSettingsAdminThreadAssigned: 'Float',
    notificationSettingsAdminThreadAssignedStale: 'Float',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'Float',
    notificationSettingsAdminThreadStale: 'Float',
    notificationSettingsAdminThreadStaleThreshold: 'Float',
    notificationSettingsBadgeUnlocked: 'Float',
    notificationSettingsBlogSubscribedUpdated: 'Float',
    notificationSettingsContentRemoved: 'Float',
    notificationSettingsEventCreated: 'Float',
    notificationSettingsEventManagedApproved: 'Float',
    notificationSettingsEventManagedRegistrationCreated: 'Float',
    notificationSettingsEventManagedRejected: 'Float',
    notificationSettingsEventSubscribedUpdated: 'Float',
    notificationSettingsMentionned: 'Float',
    notificationSettingsRoleUpdated: 'Float',
    notificationSettingsTeamManagedEventUpdated: 'Float',
    notificationSettingsTeamManagedFormUpdated: 'Float',
    notificationSettingsTeamManagedMemberRoleUpdated: 'Float',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'Float',
    notificationSettingsTeamSubscribedEventCreated: 'Float',
    notificationSettingsThreadSubscribedAnswered: 'Float',
    notificationSettingsThreadSubscribedUpdated: 'Float',
    statsActionStreak: 'Float',
    statsCommentCount: 'Float',
    statsPoints: 'Float',
    statsPostCount: 'Float',
    statsPostStreak: 'Float',
    statsReplyCount: 'Float',
    statsReplyStreak: 'Float',
    statsUploadCount: 'Float',
    tenantId: 'Float',
  },
  UserInfoVarSampFields: {
    createdById: 'Float',
    id: 'Float',
    notificationSettingsAdminEventValidationApproved: 'Float',
    notificationSettingsAdminEventValidationRejected: 'Float',
    notificationSettingsAdminEventValidationStarted: 'Float',
    notificationSettingsAdminEventValidationStep: 'Float',
    notificationSettingsAdminReportCreated: 'Float',
    notificationSettingsAdminRoleUpdated: 'Float',
    notificationSettingsAdminTeamLegalFileUpdated: 'Float',
    notificationSettingsAdminTeamSocialUpdated: 'Float',
    notificationSettingsAdminThreadAssigned: 'Float',
    notificationSettingsAdminThreadAssignedStale: 'Float',
    notificationSettingsAdminThreadAssignedStaleThreshold: 'Float',
    notificationSettingsAdminThreadStale: 'Float',
    notificationSettingsAdminThreadStaleThreshold: 'Float',
    notificationSettingsBadgeUnlocked: 'Float',
    notificationSettingsBlogSubscribedUpdated: 'Float',
    notificationSettingsContentRemoved: 'Float',
    notificationSettingsEventCreated: 'Float',
    notificationSettingsEventManagedApproved: 'Float',
    notificationSettingsEventManagedRegistrationCreated: 'Float',
    notificationSettingsEventManagedRejected: 'Float',
    notificationSettingsEventSubscribedUpdated: 'Float',
    notificationSettingsMentionned: 'Float',
    notificationSettingsRoleUpdated: 'Float',
    notificationSettingsTeamManagedEventUpdated: 'Float',
    notificationSettingsTeamManagedFormUpdated: 'Float',
    notificationSettingsTeamManagedMemberRoleUpdated: 'Float',
    notificationSettingsTeamManagedMembershipRequestUpdated: 'Float',
    notificationSettingsTeamSubscribedEventCreated: 'Float',
    notificationSettingsThreadSubscribedAnswered: 'Float',
    notificationSettingsThreadSubscribedUpdated: 'Float',
    statsActionStreak: 'Float',
    statsCommentCount: 'Float',
    statsPoints: 'Float',
    statsPostCount: 'Float',
    statsPostStreak: 'Float',
    statsReplyCount: 'Float',
    statsReplyStreak: 'Float',
    statsUploadCount: 'Float',
    tenantId: 'Float',
  },
  Validation: {
    content: 'Content',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    lastActiveDate: 'timestamptz',
    tenant: 'Tenant',
    tenantId: 'bigint',
    type: 'String',
  },
  ValidationAggregate: {
    aggregate: 'ValidationAggregateFields',
    nodes: 'Validation',
  },
  ValidationAggregateFields: {
    avg: 'ValidationAvgFields',
    count: 'Int',
    max: 'ValidationMaxFields',
    min: 'ValidationMinFields',
    stddev: 'ValidationStddevFields',
    stddevPop: 'ValidationStddevPopFields',
    stddevSamp: 'ValidationStddevSampFields',
    sum: 'ValidationSumFields',
    varPop: 'ValidationVarPopFields',
    varSamp: 'ValidationVarSampFields',
    variance: 'ValidationVarianceFields',
  },
  ValidationAvgFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ValidationMaxFields: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
    type: 'String',
  },
  ValidationMinFields: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
    type: 'String',
  },
  ValidationMutationResponse: {
    affectedRows: 'Int',
    returning: 'Validation',
  },
  ValidationStddevFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ValidationStddevPopFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ValidationStddevSampFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ValidationSumFields: {
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
  },
  ValidationVarianceFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ValidationVarPopFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  ValidationVarSampFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
  },
  Vote: {
    content: 'Content',
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    individual: 'Individual',
    lastActiveDate: 'timestamptz',
    tenant: 'Tenant',
    tenantId: 'bigint',
    value: 'smallint',
  },
  VoteAggregate: {
    aggregate: 'VoteAggregateFields',
    nodes: 'Vote',
  },
  VoteAggregateFields: {
    avg: 'VoteAvgFields',
    count: 'Int',
    max: 'VoteMaxFields',
    min: 'VoteMinFields',
    stddev: 'VoteStddevFields',
    stddevPop: 'VoteStddevPopFields',
    stddevSamp: 'VoteStddevSampFields',
    sum: 'VoteSumFields',
    varPop: 'VoteVarPopFields',
    varSamp: 'VoteVarSampFields',
    variance: 'VoteVarianceFields',
  },
  VoteAvgFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    value: 'Float',
  },
  VoteMaxFields: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
    value: 'smallint',
  },
  VoteMinFields: {
    contentId: 'bigint',
    createdAt: 'timestamptz',
    createdById: 'bigint',
    deletedAt: 'timestamptz',
    hiddenAt: 'timestamptz',
    id: 'bigint',
    lastActiveDate: 'timestamptz',
    tenantId: 'bigint',
    value: 'smallint',
  },
  VoteMutationResponse: {
    affectedRows: 'Int',
    returning: 'Vote',
  },
  VoteStddevFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    value: 'Float',
  },
  VoteStddevPopFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    value: 'Float',
  },
  VoteStddevSampFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    value: 'Float',
  },
  VoteSumFields: {
    contentId: 'bigint',
    createdById: 'bigint',
    id: 'bigint',
    tenantId: 'bigint',
    value: 'smallint',
  },
  VoteVarianceFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    value: 'Float',
  },
  VoteVarPopFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    value: 'Float',
  },
  VoteVarSampFields: {
    contentId: 'Float',
    createdById: 'Float',
    id: 'Float',
    tenantId: 'Float',
    value: 'Float',
  },
};

export const Ops = {
  mutation: 'Mutation' as const,
  query: 'Query' as const,
  subscription: 'Subscription' as const,
};
