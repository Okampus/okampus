@use 'sass:string';
@use 'sass:list';

$logo-light-url: url('@/assets/img/logos/logo_light.png');
$logo-dark-url: url('@/assets/img/logos/logo_dark.png');

@mixin tailwind-color($tailwind-property, $name: '', $tailwind-property-count: 6) {
    @if $name == '' {
        $name: $tailwind-property;
    }

    $tailwind-property-list: null;

    @for $i from 0 through $tailwind-property-count {
        $tailwind-property-value: #{$tailwind-property}-#{$i};

        .#{$name}-#{$i} {
            @apply #{$tailwind-property-value}-light dark:#{$tailwind-property-value}-dark;
        }

        .#{$name}-#{$i}-alt {
            @apply #{$tailwind-property-value}-dark dark:#{$tailwind-property-value}-light;
        }

        $tailwind-property-list: list.append(
            $tailwind-property-list,
            string.unquote('.#{$tailwind-property-value}'),
            comma
        );
        $tailwind-property-list: list.append(
            $tailwind-property-list,
            string.unquote('.#{$tailwind-property-value}-alt'),
            comma
        );
    }
}

@include tailwind-color('bg');
@include tailwind-color('text');
@include tailwind-color('divide', 'divide-color', 1);
@include tailwind-color('from', '', 2);
@include tailwind-color('to', '', 2);

.logo {
    background: $logo-light-url no-repeat 0 0;
    background-size: 100%;

    .dark &[allow-dark],
    &[dark] {
        background: $logo-dark-url no-repeat 0 0;
        background-size: 100%;
    }
}

.ratio-square {
    position: relative;

    & > div {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
    }

    &.centered > div {
        @apply text-center;

        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
}

.ratio-square::before {
    display: block;
    padding-top: 100%; /* initial ratio of 1:1 */
    content: '';
}

.symmetry-x {
    transform: scale(-1, 1);
}
