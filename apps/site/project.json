{
  "name": "site",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/site",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@nx/next:build",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "production",
      "options": {
        "root": "apps/site",
        "outputPath": "dist/apps/site"
      },
      "configurations": {
        "development": {
          "outputPath": "apps/site"
        },
        "production": {}
      }
    },
    "bundle-analyzer": {
      "executor": "nx:run-commands",
      "options": {
        "command": "ANALYZE=true nx build site --prod"
      }
    },
    "serve": {
      "executor": "@nx/next:server",
      "defaultConfiguration": "development",
      "options": {
        "buildTarget": "site:build",
        "dev": true,
        "port": 3000
      },
      "configurations": {
        "development": {
          "buildTarget": "site:build:development",
          "dev": true
        },
        "production": {
          "buildTarget": "site:build:production",
          "dev": false
        }
      }
    },
    "hasura:schema": {
      "command": "get-graphql-schema --header X-Hasura-Admin-Secret=${HASURA_GRAPHQL_ADMIN_SECRET} \"http://localhost:8080/v1/graphql\" | sed -e '1,6d' -e \"s/query_root/Query/\" -e \"s/mutation_root/Mutation/\" -e \"s/subscription_root/Subscription/\" > apps/site/database/hasura/schema.gql"
    },
    "hasura:metadata:apply": {
      "command": "cd apps/site/database/hasura && hasura metadata apply --skip-update-check"
    },
    "hasura:metadata:export": {
      "command": "cd apps/site/database/hasura && hasura metadata export"
    },
    "graphql:merge": {
      "dependsOn": ["hasura:schema"],
      "command": "node tools/scripts/graphql-merge.mjs"
    },
    "export": {
      "executor": "@nx/next:export",
      "options": {
        "buildTarget": "site:build:production"
      }
    },
    "lint": {
      "executor": "nx:run-commands",
      "options": {
        "color": true,
        "commands": [
          "nx run site:ts-check",
          "nx run site:ts-check-spec",
          "nx run site:eslint",
          "nx run site:prettier",
          "nx run site:stylelint"
        ]
      }
    },
    "lint:fix": {
      "executor": "nx:run-commands",
      "options": {
        "color": true,
        "commands": ["nx run site:eslint --fix", "prettier --write apps/site", "nx run site:stylelint --fix"],
        "parallel": false
      }
    },
    "ts-check": {
      "command": "tsc --pretty --noEmit -p apps/site/tsconfig.app.json"
    },
    "ts-check-spec": {
      "command": "tsc --pretty --noEmit -p apps/site/tsconfig.spec.json"
    },
    "eslint": {
      "command": "eslint apps/site --ext .ts,.tsx --cache --cache-location node_modules/.cache/.eslintcache"
    },
    "prettier": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["prettier --check apps/site"]
      }
    },
    "stylelint": {
      "command": "stylelint apps/site/**/*.{css,scss} --cache --cache-location node_modules/.cache/.stylelintcache --allow-empty-input"
    }
  },
  "tags": ["scope:site", "type:app"]
}
